node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 448
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 448
          }
          dim {
            size: 55
          }
        }
        tensor_content: "?{\252\274I\272\327\275\037k\3049^\376e\275\025\'\321\274\002\365:\275\346V\"\275\251\363\243\274X\256\332\275\344>\033\275>\234\212=\213\351\322=\210K\252=S\360b\275\266 \265\275\215\250s\274\260\316\242=5\035\002;\302B=:\036?\201<\306l\266=,\031I<\335\351\322\274\345\305\177\275B\232\220\275H\232(\2732\370\310<x+q=\262\356\336\272k?\320\275\327?:<L\345^\275x,\177\274\371c\333\275\263\035\275=\277\247\206=\033\007\312=%\230\037<\255u\257\275\314\322\276=\314\204\205<\320\334\236=j\263\206\275\315\231\001\275\321\3358\275\315T\\=\341\274\331=\024\216\212=\202\017\334\275\373jI=\2147\247\275\3564\200=,\360r\275\256n\262\274\266\023\321=\215<\375\273\364V>\274\0148\327\274\360Ve=\215@\334=\205\320\255=\204\243\243\275\264T$<\214\026\247=\200\317F\274O\351\277\273\270\225\373;\224\262\242\2758\334^=8H\262\275\363U\035=\000\354\374<\212Fn=\325\021\367;\013\263\302\275H\266\252=o,\271=\222\326\266;\226\021\306\275\222\267\233\275\360xT<\322\324\331=\265\206{=\375\003\333\275\374\372\021\275^\207\207=\300C\327\275 \205O\275\207\025\306\275P\177\270<\341\221\311=z\301\231=W0\307\274\017op\2755\371\271\2752~P\275\006\233\240\273K&t=qF\241\275d\366\300<\'[|=\"_\026\274\216@Z\275,\331\232<\242F\257=\036\322\316\275\336\354Z\275f\016\235\275\370\216J=\303s\'=-\320\033\272\300i\000<\332\366\326=No\221\274\2216D\275r\020d\275\302\362\300\274\023B\002=\301a\031\275,U^=:\r\210\275m\"\242=\350+7=\024y*<G\010\n\275\363\203\363\274}\354\226;\231\274\244=\270\274M=\315qm=\177<\244\275\034\r =\360\243\333=\240\014\001=b\215\230=\367?\020\275(d$\275>TG<\026\340\014=\024\333\326=>p\246\275\347]\331\275\303\317\232\2756h\337\275\237\276\007\275K\344\031\2746\357\306\275\257i\020\274\357\366b\275\364\017\233=u\365\313=7\001\372\273\277h<\274\335`o\275\276\334\014\275\212\024\206\272X\3345=;\270\373\274\266\270\262=\213\306i\275\314D\323\274\306\007\245\275+x\304=\005\\==wM\223\273\027\034.\275\331$\303\275\223\303O\275\360\300y=n\277\247\2753\\p;\010\315\256=\031r\275\275\333\200\262=\353\241\255=\246\035\244=\177\305-=\001\250\251\275\342\n\336=\245c9=W\374\027=\377\274\300\275\013\021\210\275\236\321l\275\013\016\035\275[*\027\275\004\343p<S\346\035=\314\261\321\275{\303\320\275<p\271=\303*Y=CF1\2750\334\204\275\313\370\325=\311\233\276\273I[\031\273c\245\256=\274}\211={\251\007\275\271\251\333<\360q\272\275\023\014\275<\216A\253=\013\246\367<\363\303\330=\235s\332=\241c\235\275UqF=SW\307\275\374b\277=\235\204\360<\351F/=A\315\'\275\000\206\333=\230\234\274=\tT\345\273\257\027(=\225\266\214=\2326Q9\317\330\340\274T\333R=\375\274)\275=\237:\274\373\351\316=\001\371\214\275\225\326F=\3178\221\275=v{=\364|\323=\246=\235\275\006\257\242\2751\374\032= \226\275<\275\213\200=\037\r\222\272\351\t;\275\276Y\026\275\322C\330=\311\225\261<\255S\t=\257\370\217<\375C\252=\367=\334\274\271\202y=o\220\324\275\336\220j\275\337\364s\275\265$\223\275\363ds\275q\365\307\274\2269\270=ez\021<g\264\247=i6\023\275\255\277\266=\200@\237\273K\030\376\272\257\257\035=\3576$=\023J\324\275\320\331\313<\035\326\276\275\377\321\317=T\217\304\275\377 \355<\025\361>\275\204q\210\275~je<!\252\225\275N\237\266=\306\006\207\274+\244\246\274\351#(<\233\332\233\275\230b\364\274@r\245=v1\205=\277R\005:\216\236\032\275&\025\005=\270\230\236\275\367Z!=W\315\303=\342\300\026=\272x\317=0\243\034\275\005\016\236=\014\361\300=C8\005<oY\275\275\244\344\345<\217\266(=\"\345\206\275\344y`=\342\300\265=\214\333\264=\030m\233=\214\244f=n\001\215<\263\035\255\274\225o\247=~TR=,\377\206<7#\014\275\020+\336\275\301\247\241=\361\356]:\341\341\270=)\247<=\253\226\306\275\371\037\275=f]i\275\226|\303\275L\022\277\275\000\344}=\236\275/\275\334C\013=\273\213\276\275\235\3176\275\224\347\354;+\372\220=\226D\036;\246S\013\275(\232\013\274\236\037\027\275\3741\335\275o\037,\275W\342\205\275\344\266u\275Z\271\221=\n[&=A\326\204\272\347\351.\275\036\264\225;\254\205:\274\235\327/\274\320s \275\212^\337;\251A6=\265q =\225TE=\224\266\335=\002\336\t=\\7\306=\2350\307=\013\007\304=\036\370@<#\336\277<BU\275\275\004o,<\234\0207=M\353b=)\263\252=;\306\320\273u\372\332\2747\263K=\306\026\250<T\224\204\275\235\250\226=g\')=?hG\275cU\205\275\020\213\244=\375\355\305;\257\223s\275\355\004\304\2756\007\034<\333\200\303\275}\220-=2n\311\275\3260c\275\333\031\304=\212C\327<\025,\301=6\023\227\275\252\270N=!\344\350\274}\251\272\275\177\004\267\275\\iF\274\334\211\347\274b\374\262=\250!\304\275\013W\300=\232I\317\275\370+~=\003\241\324<\3507p\275\014\322\005\275Cy\222\275 |\213=A\224\214<b\322\311\275\317\020\217\275I\242\276<\013\301\263=\305\220\262\275E\317f=\250)d\274h\226j=\032\342\360\274CA\263\275\257`S\275mxM\275\325\007&=\325[q<\262\313\331\275\257g\226\275\356\330o<uY\217\275i\022\304\275\263\346=<\326\277\264\275Vc\031=\301\026\202=:\333\251=\235\"h\272g\314\330\274/\351\023\274\217\227\204;\257\366\220<]!<\275d\364\334\274\271\301\257=\212\313\323\275(&\033\275\207\002\273=\250\304\226;\"\241\210\275\007<\371<[\367\200<a \246=\341\254X\275\250a#=x\2565=\345\2563=QCw\275^\251\247=\3149R\275)\216\251=\000a\376<\341\277u=DA\034;\316Js\275\316L\234=\263\t\333={\242\303\274\2758\314<\037\334\003=R\353O9c\335\244\271\207\206\200=\213a\223=3vt=\326\004\300\274\271\276G=\276@\203=j\334\241<tSE\275\'\266\227\275+\nV\275\206\016\302\274\001\314\316\275\237\230X=\321\177\275=\303\021\345<G\325\212\2750\236\222=M\013B\275\251\351o\275\034\'\334=\247\333\260\275\031`g\274\210\213X\275l\234\004\275]TD\274\315\027\272=\017r\337\275Y\205\321<S\326\013=2\342\215<@\301Z=\377m\013\275y\277\263\275\027c\236=\271:g\272\036V\252=\241\267\231=S\2351\271D\352\003<f\232 \272\331\303\333\274\3421\303=\345\010\013\275\035\302\225=\355\243M\275\265\210\025\275l\345\211\275o\030\266=?\237&=\334\3308=B\314U\275\021X\251\275\221\021\234\275aM\017\275\262\375`=\352\342\223=\334\024\275=\253r\200\27591>\275\276/\213\275\337?\3649\214y\037<:\240\t<\001\305F<\252\342\252=\000%&\275\337\320\320\275X\323\037\275\211by<c\376\300=\226Y]\2754\\\212\275\352\246\234\275\3632S\274\315\236\260\275>g&=\351>6=\322\227\377:\352\325\036<\001\261\360<\347Z\203<\227V\265\273t\033D<\027\204T=/\352\313\275\260d\262=\360\001n\275\237\253\230\275\3520\333=n)\245=k>\311\274Q\340\332\275\017\373\254\275\253y\033=\357Y\323\275\232/\263\275\324L\326\275\252u\263\275\240\256\301;\004\225\337\275X\275\315=\270\345y=\327\231\233;\331\321\234=\336\370\321=\374c\232=\313\265\031=\213\323\260\275\240\241\022\275\376\265\241\272y\325\262=#\014\312\275`\313\315\274\312\343\005\275U\370\215=\311\362|=\304\267L\275s\237\313=bw#=\032$m=V\312\267\274s\275\200\275\311[\245\275&e\205<\035\200\030=i0\305=\331\352\266\274\316\016\330=\311\340\275\275Xb\001=kl9=\2029\351:W\347y\274\261V\211=92D\274\240h\210<\301\217\365:+\367$<D\']\275\341\342\326\275a\025\312=\210E\315\275\2707\276\275\315\n\246\274\213!\312=\307\n\321=\202I\333<cY\320\275\305\031\255=\207\257\200\275\377zJ\275K}\224\275)\341\236\275)\311\206=+g\300=9\257\202=\264Z+\274\031%n=7\357\325=#v\336=^\216j\275E\324E\2755\354\030\275\255\306\246\274\270\272p\275P\2656\275H\262?\273\211\306b\274\3567\305=*On\275\257l\'=\376J:=\246-\217\275]\240\205\273\253\376\362<X*B\275\261\225\255\275L\314\216\275\007\006\353<\270\204b\275gf\301=n\263.<\274$\202=RQ\344<\0144\223=\205O\237\274\315\361\333\275\322\262\357\274\304\204\223\275\241t^\275\367\036\260\2756\003B=\354\262\314=Bg\271\275\205R\316=a\373\033;\003\374\371<\271\217m\275)5\263=\372\360\035\275\207#\251=\205I\000=A\323)\274\305\257\245\274\027h;\272\312\007:\275~p\204\275u0\230=\030\363%\275\330\027\305=\036\225\211\275\'\311\"\275\221\230\314\275\013\020#=\204?&\274g<\274\275\0223B\275\275|*\275@e\020=\221\224f\275\207\303N\274\330\323\313\274\206\002\313\275\232\213\333\275\316K\301\275\205\013\225\275\335\\\246\275\342\370\264\275C\320\023:\001\374\320\275\336\235l\275\261\253\225=\310K\254<\327.|<\347\204Q\275\3530\034\275@\230\333=\276\\\207<C&h=o\334\305\275\321\376o=\037\232\322=m\001r\275?\275z<\000\010\331=6\013\220\275\277\265\036\275\004\002\222=\027\272\277=\3616\263\275\211NL\275\2708\310\275zv\271\275\217\362\027=\256\202\335<\026K\326\275\234\221\260=*\331\264\274M0\310\275JD\264;\310\305\336:<\006\312<\303\216\034=K(\266\275\250\226\004\2759\353\202=\247-2\275w\221\277\275\316\377\312=\240Y\264\275j\342\260<@\234\250<\266K\217=f\311\240\275\365{V=\366g\275<\353\377J\272\337y\362\273\202\312\303<m\302\355<\016\231\252=_\326\t\275G)\252=!\244C\275Q\324\335=\2006\002<<\t\206\275\271s\372<\323#u=\273\030\241=\313\005\256\275\023Pr=\347y@={\341\301\275\375\243\002\274y\234\253\275\010\363B=!\007\212=\242\314\233\275\035\254\336\274\324\001s\275\211\004G\275\006uJ=\265\365(=/\213\323=A\234X\275\t \270\275\030?T\275\2079\320\274\206\257\335=\236U\201\274\203D\000;\001\207\231\275\261\300\245\275=$H\275\3218<=+#J<\004{\265\275\272\240\273\275E4\250=\020^Z\275,\331\331\275\362,E\275\037\252F\273\2667\201=\0367\220\275\235\3450<\3540\251<\310\363\270<\021\200Y;x$L=11;=z\021\337\275\340nG<\371\372D=\226\300\207\275\r\227\331<\211R\032\275\266\035j<\334\264\021\275E=\277\275\271\241?\275\276c\335\275\347\243]\274\372\361\022=\221\014\301;\374Ay\275JP\221\275\341\'\217<k\027\324=\302\331w\275\244\031G=\233\203\263\275\366|\027=\240%\232=\334G\334=\360|\303\2754\300F=\2161\212<\277\212e=\314\324S\275\342m\257\275\236\261*=\324r\262=a\220\241\275\031\337\210\275&\306\257\275!\216\t\273r&\302=,@\220=\244\316<\275\224\227\273\275Nq0<\366~\260=\320\363\202\275\nc\264=F\021\277=e\330\310=\272l\241;\025\237G\2759\245\305\275+0\255\2753\355\245=3 h;9\260\244\275\250$\245\274\263}\024=\212\336\246\275\nc\206=^\234\326=\323\035\267=\243%\226=o\365\257=\326\215\232=\346\265/\2755\002\316<\303\024<\2752\214?\274\264*\226\274.7\"\273R\302\257=\255Z\272\275\2235O\275\023`\004\275\366\361E=\350\321\236=\021\003w\275\234\321\000\275\024\021\257\275V\025\276\275*/\227;\014\220D\275]\264\212=\222\037\271\275\214\344\270=-:/=ZLz;j\007{\275\206;\273\275d3\302\274h\'K=\252\256==\264#\324=2\344\205=-\315\003=\004\351\354<\267\027\310<\273\004\331\274&\020\326\275\321g\310\275\316b\276<\224&|\275MN\250=\357\223p<\273\027\266\275\025L\316=\243\003F\275e\216\177\275\214\003\215=g\371\211\274\307%\231\275\234>\304\275\261\227\246<~\257 <\rx\223=\360\324\260=\322\331b\274Z\363\323\275M\324\014\275Y\230\326\274\276\365\376\274\203Q\252=_\356\244<Z\270s=;-w=\226\242\264=\311\327\'=\356Q\335=\360\212[=D\360D=\237\311E=\361\027\272\275\305\240\230<\200\304\327\2756\013~\275\310\000\003<dU\275=\021\227\253<hh\221\275\377VU\275\335\354\245\275\361\230{=0#\253=\333_b\275y\244\333\275\250\0347\275\022\003\267=\332UE=\250Th\275\302\251(<\251\241\"\275\005\306\300\275\325p\220\275g\342\246\275\263\303\232;c\365\221\2752w\025=d\341\207;H\0277\275;\304~=\211v\013=\344\235\335\275\361\247\237\274o>\300\275\360}\232=:\026\021\275]\335\236\275\250VQ\275\315\361\231\275\240\n\244;_\215\206=5j\251;\023Z\244=\230\026\246=\321\327\266\275\362\236\035\274\031c\214\274\021QD=\201k\222<\017#\243=_8 <\306AT<R~\346\274m\223\304\275p\010\271<r\2737=M\320d\274\340\371\230\275\235\211\324\271\223\327F\275c%\325=\256\224x\275\342\300\241\2751\335\201=\220-\221\275\272!\363\274\3027\251\275\022R\001\273n\221r=\3707\212=Fp\224=~\232\006;[\372y=[h9;\207s\341\274\013\253\266=$\344\016\275\244\300|=/\202\275\275Q\377\265=\272n\255<.U\337\275\356\314+=\213\2265\273u\006y\274\022\327\275=\373\206\332=\346M\235\275\272\225\242=c\377\212;D\355\254\274#C\013;sH\213\275\325\004w=\333\232\310\275-\036\266\274\273\033\232\275\270\257s\275\\\220Q\274fvY\275\324\227\333=@\327\210=\366\346J<\006\316\244=\346\222s\275(\267(;I\200\331\275\311\331\334\274\225\247]=\321\362\231=h\217&\275\316\014\251=\267\275\305\275I\035\313\275\202`\313\274\210\263?\275u_\212\275i0\325\275\365\277\271<6lh=\030\343\004\275\273Pz=\213\241\336=\2432\001\274\233\313\222\274V\220\331=\177\320\t=C\270\215=\223\314\223:\276\317.=\013O\030\275\226\307\314\275\3449\313=\247\340\266\275\344B\210=\211\027i=\210\354;=\332\030\314;L\260\007\275\2102n=\206\347\234\275\337\237\317=X\245\256=\212\207\221=\2046\020\274\016\355\261\275\317\245\252<\326\220M\273U\031\336\275\252\331\335=\300,E\274-%9\275\334\030\377<\345\317\312=<_\323\275tZ\325=\322\377\304\275!0\304\275\265\214\242\275\005\250b=\246\244\001\274\373\345.=G\305\264=\225|\217=b\236\300={V\274=J!\224<MLH\274\225s&=K\273\372<\340\023_\275R\200y\275^\313\020\273\361\222.=\242>\321\275\347f4=\n\337\310<\277\331\262\275\215,Y=c\201\312<\022dk\275\225\365\331=\370y\277;\000\026\304=\242\276`\275l\264\036\275\3621\204\2756\002\271\274\034\242\310\275\233\207\203\275\226x\320=\347\226\202\275\234\253\255=\353\370\t7\'\375q=3f\222=,\034\253\275.m\007\274IB\270\275\362\351[\275\301\342\027=\304\232\266\274k\217\333\275P\225\246=\372\014\002=\005\206w\274\340\343\241=\312\224\336=\250\370D=\315\'\200\275\322$&<\215\246\013;\230FI=7z\325\274\031\213\212\275\223\311\177\272*\302V\275*\262\010<;d\014\275\3330\215=n\271\007\274\320N\\\275\026h\353<I\2416<\3277\245=\205u\320\274\226\003\205\274\310\337\270\275\315\314%\275\333\221^\275\252\317\261\275\037\243}\274L\236\371\274\035]\237\275\273\351\237<\010\325\203\275\347J\355;\266N\210<\253\245)\275\345\325\343\273\320l\330=\n\031\305<\326U\225=\221\266\005\275\3409h=\010\213\227\275\246\371\320<\254\262-\275\334\020\224\275M\330\360\274\rk\";\244\226\252\275\030\211\206=\244t\021=\341\341\031\275\217?2\275\037h\344\274\266\026\023=\216?u;My#\275\216R\216=\000\2325=0\024\t\275\014\272\243\275\342X`\275\377\350y\275k\317N\275\221\262\263\270O\024\014=\373\255\'=\227\307n\275rD\234=\327\035y=\211\220/\273$\342$<\261\3032\275\364\021\020\275\3342:\274\350\"\322=\352C\361;\203\314\205\275@h\023\275=\200\273=\027\251\257\275\177\366\271\275\377\342\237=\262\'\214\275\035T\200;\020\003\202\275\275Hv<\202\024\326=t\275V;r\371W\275\210\237F=p\213\271=\005@\254\275H2@\273\327}\314=\245^\254\275\232\301+\275&\237\355\272\240D2=tF\317==+\000=\265A\004\274R\320b\275m\001\313\273\001\324\027\275\335v\330\275\346\370\325\274\251\321\204=\251\375\322=d\364C=\367\245O\275\271\247\263=\'\\\332\275\005G8=\310\254\370\274E\315N=\016\030\242\274\252\013\314\2750<a=V\r\312=v\307y\275JR_=\237V\235<\254\025\242=v\327\301\273\272\316\265=\002\311\325\275\254~.\275\242o\"<\337\215}=\023\322d=\274\325\t:\265\n\230<\\t\243\275\261\375\267\274~\024\231=\205\372\372\2745\255\216=\223\004\202=\014\351\217\273\350E)<P\030r=\347zh=\347Aw\275\316iL\2758\342*=#\004X\275\374\270\201\275c\225(=}^\301\274\323v\244\274\303\300\226\275\260NW\275\r%\277<\346&O=R:~\275\301\206\306\275\216\212n\275\024\223I=\304E_=\240\033\330=\251\362M=\314\272\233<\375\336\302\274\245\2324:A\265\251=\2737T=\207\t\206\275\270z\320\275\206X\207\275\333\025\266=\213(0\275\3644Q=\377\306\257=\324\257\362;?\353\030\275E\004/<#\n\227=\017\336\325=\030k-=\322uK\275\225\036\320=\325\032\024=\364\313\360\274z\246\177=\227]\235\275f\273\327=NW\201=;\017e\275\302\340}=\352\251\017\275\351\356:<5J\200\274\027,\311\274X#\203<\226\310\256\273\277j\326=\315\233\327=~\226\274=\332\"\177=\241\215\374\272\233\352i\273\331\031\317\275\033\036\273=_\r\023=;\364\330\2752\236\225=B\210B\274UD\226\275\372\342\270;6\274\335=?\324\304\275\347:\245\275\263z\321\275%)~=\025GT\275\022\270\251\275\013zx=T\325\206=C\024\202\275\246a5\275|/\301=\246(}=\3218\260=\330nR\275J\372\236\275i\353\307\270\260=M=\343$\204=E\352\273\275\352\242\265=\n\252\206\274i7\220\275\253\302;=Ff\246\274\224\254\352:-\313\235<sh\235=\026\242\214\275\244<\237\273\027\201\010<k\034\351<\203\316\222\2756\252\210=j\274\n=\007*R\271\252\007\275\274\337\222m\275\203\330\216=\223i\335=\336\236_\275\313LD\275\247%\277\275\007\010\344<\026uP=\313\220\257<\2445j=\243&\232\275\022\322\206\275\2566<\275;\304W<\315\344\212={\344\236\275>\333\212=\346\261\017\274{\307\375<Q\244\256\275\016\327\004\275\264\270\034\275wx\314\275\227\264w\275\341\3068\275\242\212\241\275\360J\322=\356\377\037\274\033\t_=\335&\031\275\025X\256=6\240\221\274a\010\302\275m(\003=\t\333\024=\013\250\016\275+3r\2757\257\270=M3w\273\025H\215<\203\217\266:\372\372\311=\'<)\275b\346\244=\3463\333\275\025\265\262=\235\353\372<\023\265\242=\001\312\214\274T\372\222\274E\216\245=\347R\212=p1\013<\034\267\264\275\001\353\267\275|\323\006=T\347\275\273\332\253\304\274Gm\273=]( <\357\005\376\274\251\331\357\2746}\034=\375B\262=\005m\252=V(e\275I\317\224=\020^F=D\2270=\033\nW\273\355.\264\274\341u9=\243\377\254=\336t,<\300\223\336=\024\316\305\275z=h\275\261\336\220\275\317\341\263\275\242u\363<\242\256\r\275\003\t\236\275\315\216\211\275\334\035K\275\203\324\313\275\325I9\275|Ll\273\265\317\367;\226\274\274\275\320\374l\274\305\001\246=\004\321\272\272M\372\261\274\250\006\031=y\023\271\2759\325\235<\013\205\313\275\247\243\177\275\247/\276\275\233\264^\274\240\025G=\277~\t;\023v\017<\3214\001;\331\230\212\275\254\263\005\275#l\013=\t>`\275\323J\303\2743\014@\275B\232\337=\000\257J\275\3372\221\275\250\007e<kPb\275d\312\206\275\374q\307\275!-\301=m\206\306\274#\364\315\275\245j%\274\230t\216=\311\337\021=\362E\251\275\236\013r=\261\013|;\323\3652=M\024\222=\322\351g\273\313\210]=\266\346\257\274\023k\244\275\t\330-=\371\330g=\332\375\t\274\304\335z<\225fM\275\336\326\211\275\252\364\312\275z\026\242=\013\036\321\2750<\005=0\230^\275_\375\313=\353\371\252\275\357\263\200\274\212\312*<T\013\270=\210\252\314\275O#A\275\242Q\366;\300\363\n=\367\312\330\275\375\213\326\2742\354\377<\334V\035=c^\305=\322\206\327=\344?}=9\330t=\350%.<ClI\273\276mZ=X\212\330=9E\204=\215D\330=wT\226=\201\237\225=\207\250\206\275\to\320\275Ye~<\365\3765=}\344\311=\220\336\033\275\352D\344<x7\247\275.\026\212\274\210\372\177=\357\231\322=\224\367\001\275\3524-=\031kf<\320\232j\2759?\013;[\000\323\275\264[\337=\230%G<av\325=\312\204\372\272\337`.=/\017\262=c\223C;R\351\234=0X\300\275A\335\322;\212=k\273\244\245\304=\247:\234=\256$p<pCK=:\0377=\250\232/=\237\226e\275\244\314Z\275\223U\200\275\316\306K=\2476|=\213\337!=5\271\327=\235\177\201=}U\335<\036\032\205\275b/y=\330\222Q\273\"0\002<d\354\031\275\312Y(<\340\017\233=x~\203=\363\307\265\273\342\264\210=8(O=X\362\230=\262\240n=I\201\332\275\016p\230\275\371T>\275\322\331(\275\003x\220=\024\335\006\275\204]\333=\232H\213<ty\302\275\r\202\251\275<^\317\275n)L\275\000`\370\274\273\227\245=\341/\337;\335\376\206\273S;\324\275\234\344q\274\022e\216\275JX\315\275\367|\217\2757\374\314=3:\333\270\347O\342\274\223\335\236=!n\333=\375\004\320=\220\224\255\275\242Q\365\274%\262`=j\374t\274}\002}\275&\n\254=\251:h=\177\375\232=8\032\177=(\212\t\275\352\302\256=\264\214l\275\022n$\275\215\331\t=\312\373\335\275\265*(\275\000.L<[v\031\274\253\'W=\243\201\031\275\334\000\025\275k\310\204\275\037\361M=-\232 <)\231\337= \030\201\275\032T\016\274k?D\275\266\3664\275w\372k\273\262\372X<%a\316=R\013\277=l\277\270=\300\277\220=\366\231)\275\232R\275\275\211\226(=\340@\252<x\3534=\277{\257<tU\267\275\311\016-\275\231\225\277=\333\362+=\024\315\232=\025m\337=\376p]=D\372\277<\377w\333\275\312\306\224\274\212\275\025=\271\271\221<\267\362;=`|\270=\234\274\003=z[`=\373\037C=qP\270;\266S\314\275(<\225=pl\263\275\244\242\205=\370\177\246=O\336\304=\t\347\202\275\027\032\232\275@e*=\216n!\275U\274Z=\230\365\242\275\266\334\213=\370\025_<9\\\n\275Wd\\\275\025vo\275\036\215A\275\370@J=z\247\250\274\275 \213=7\034\222=\373\206\245\275\360\234{\275^\323`=\226\312\026=\253\034\222=\311\030\021=T7\t;\233Q\254\275V\013y<\336\331\010\272\304\246\307\275V/\371\274\255\361\266\275\346\340\205=U\035\251\275,\3138\273I\333\226=\032\3708=x\224\316=\264\232\324\275\316\037y=we\244\274\034Fn\275\334z1\275\312J\037=7\006@<E\220\231\275\320FM\275\313;f=#\351\\=\034\365\305=$^w=\251\355\314\275\3115\314\275I\331P=\237;\r\274+%\212=\335\322\024=n\240\257\275vKW\274\315\264\336\275\'\342\207\274=n\365\274U\225\257=\300\314\222\275\352\304/=f\266N=\370\200\022\275_\n\332\275\240\353Y\275\202\373X\275\307\374\250=\372\317\304=7\375w<\226\276\017\275qi\321=\020\322\332\275\234\303\202=g\313\220\275\261\024?=\305*\016=\002K\035=\211\357\325=\204\252\t<\025\206\277=\240\367\263=\2251\035;\315\2512=)\234\341<\312.\310\275U\260\216=\201\\\306\275\002\336\304\274\341\371\330\275\005L\317<\037\377\246\275\344?\362<\036\356\324=\302l\241=\311\312]\275\217\343\232\275\253N\271\275\007\256\323={\316\231=D\345\206=\275\222\007\274\246y\023\275?\2441=b\253P=\2626\223=\301\374\205\275\024\001\301\275\373\312\035=\341`<\274P|\326=\364\304_<\006&\242\275\234\001\273\2753\311><\310\223\207=\023\324\n=\270N\232=\362\030|=\305\271\216\275\2033\255=1f\212=\271V\332\273\267\266\366\273\205Dw\274\020\303\335\275\371\270==l\354}\274\223\0240<\350\374W<\364\034\201;$U\030=\325\343T\275\277@\314=D\026\313=\320p\353\274\276\r\325=y\244\216<Wy\231=\377\330\230=*\244\214=43\214\275:\022\322=\362\016\242=\266\270\274=\211\373\305\273\313e\277=\007\335~\275B\246\223<\221J\300\275H\325p=\3260\025\275\022\252\'\275\2704\246=#g\247\275\302\007\332=tL\005=\034\025\000=\300\201q\275\203!`\274\014\206\200\275\364\230f\275,Z\323=\221\363.8\377\312V\275\206\035\010<nFE<Y\212\332\275*\307\211;\241+\326=r\216\327<\302\351\311=\234j\010\275\312;\357;G\354\t=\t \336=\320;\252=\242\205\311\275\240)\313\275\035\023K<\274 \310\275`\320\027\275\023\002\277\275\236\214\273=\277s\030=T\\4\275+FT=\207B\257={\014\232=[\242\321=\273\r\010=\276\264\024\275\346\013\246\275\033\315\301\27344\327=\315\274\034\275\020\230\331\275\272\013e=\223(g\275\002\3641=\337\241\206<\334\016\322=5\3048;\226\241T\275\342\234\254=}\026\203<\271\t\200\275D\203t\273z\004\265=\231=\256\275\034\221\314=qM\303=\006r\376\274\316C\230=\361T\202=M\357,=bd\337=\2179\304\274n\212\201<\005\221\215\274\227[\323\275\334A\302=\317\r\250\275\312\272\200=a\250\255\275\247a\002\274\273\270y=\372Ve\274\0358s\275\203\032\244\275\'P\257\275\003\027\212<f\221\273\275j\221\247\275\213P\214;!er\275\246\300\324<\214\n|=\201E\254\275c\344\021;\272\031\257=\330\337\323\274S\005\361\272\241\3621=5U\254=\350Z\315=}\240\256\272E\370\351\274K\'\243\275\273bX\275/\307\001<\376\250\221=h\032U\275>]y=\200\360\310<\354F7\275Gz\226\275\340\330\312\275m8\265\274i3\003<\3143.=`\017\252\274z\025]\2752P\035\275\303id\275 B\247\275q\264@=\207\310\225\275\362\324\236<\222\260\311\274GPr=\375\'\020=\272d\275\275\"=\330=\013/\237\274\313\356\225\275Y\320\267\274\023Eb=Yk\241\275p\277q\274ka\226=6\014\315\275e|,=\276=\005\275\347m\256\275\033\274\245\275d\306\260=\265N\223<\\? =7PH\273F\225\254\275c:\306=\003\337\315\273`\317\225=\270l\306\275\316\324\352\271\035q\002\273\022\224\005=\225u\235<\327\204\215=\222\031\336\275\303f\322<7\275\246\275\305\034\025=\376\327\227\275G\027\213\274y\354\260=C7K\275\210\315\330<\262_v\275\370\216m\275\2750\265=\204\2726\275bO\225=\300,\277\275ax\215=5\'\032<\312l\330=\020\034\276=#\222\036\275\356\317\033=\335l\325\275\204mT\275\027u\246\275\2571\210=\033]\256\275\306;\215=H\273\213=\3379\343<Z\032\312\275\000;\235=c2\224;\005\270\302\27441\335=!o\253=\301\212\256=^\0368\275V\263\007\275\024\010\300\273\325\325G\274\265\005\223={i\226<q\242\300\275\231\374U=\3372\220=\237iV\275\327\351\307\272\207s\253\275\255\316\245\274\342MZ=5\227D=\301\002e\275\2726\306\275\n\030.\275\232\030y\275\363\005\266=\002\370\220=\254\205T=\266\256\340<h\021\343\274a\325\001\275\261U\303=z\202\332=\346,\217\275\310f\305\275\220s\307\273q\323\244<\352\t\222\275\236k==\000\353E=|OK\275^\312\216\273\224\353\262=,\2202=\022\026\014\275\371{\314\275\276\251\240=r:\252\273U\310\245=1H\241<X\223\215=S`6=\177\222R=\322~\263\272$V\246=\204\253q\272z\237v=\265\"W\275\300\307H<=\305\267<?,\373<X\343\375;Q\243\246=Za\316\2742\356\335\274\346_\226\275\216\250\357\274\003#\221\274S\321\006\275y\255\002;lk\313<I\301%=\304\225\275;z\\\336\275>s\267<\020x*\274k\326\311\275[\177\226\275w\007\000\275\r\3233=\014\0105=\335\3566=\304\231\030\275\301\373 :\007\277\003=\350\230~\275B\332\267\274-\234\372<\027\n\337=\314\377\214=7B\236=\347%O:\t\241\206;\002\326d<\003\220\313=\272\267r\275\013\260 \27489;<\322\200\033<q\266\263=WO\243=\366\330\207\275\035=\206\275\003N6\275\323c\365\274e\177\337<\203G\235<\375\343\225\2755\364!\274N-\331\275\232\343\307=9vu:\233\003\243=U\253\227=s\230\303=BC#=\304\315\334=\355,\352<3\313@=\2330\320=\236\235=\275JX\315=a\326B=\326\234\300<A\373\216\275\030\201\005=\022\237\344\274U\210\231\274\014 t<\233v\010\275\357\345\241\274\311\207\203\275\363\336\220=5\203\n=\014\224\270=\341m\223\272\214[!\275Z\214\212=\254\025\343\272`\216\001=\021\366\331<\252`\327=AGN\275\021e\030\271\257\237\331\275\017P\246=\370\330\230=\317\334/=\324\006\027\275n3\307=\377\301d\275\006\267\334=6v5=f\021\250\275\303\337~\275\232y\002<|\033\330\275 S\245=\"!\312=\032\020\246<\235?\231=\021\223@=\336\033\200=\002\224\004=\366\271\t\275\322\321s=}Z\331=\350 \271=\252\342\267\275T\006\245=\310\303\234\275\263\030\247=\2235s=\254\210\341<\254\032\244\275-Iz<4L#\274\313\225\306;\2036\242=<`\241\275TW\264\275\335\271x\275\027\346j\275\035\253,< \002\240=\271_\\=\202\232\363\274\301\332\256\2758U \275\324<\273\275-1#=U\320\321\275\3174u\275\364\266\021<\353\241\236\275\204|c\274\356\277\031\275G\341B=\212\304\231=s\007\213={\315\311\275P\367\324\275\262(\207;\252_g\275`\361\022\275xN\215\274Q6\222;\2457\235=\r\355\257;\307hV<\211\310\201=\222)\244<\343\342\245\274\265\344\245\275w\001\347<~\365\022\2758\323\236=!=\353<\177/9<\222\257_=R\270\200\275\307\243\236<\034C\315=a\245\320=\257g\330<I\325\200\275+\315\377<9\313\177\273\007)\r\2740\336\201=2b=;\341\321b\275\215f;=\317\216\255\275P\324\343\273\324\224\264\273\326L\020\275#\nv\275\377\260V\275\213|\237=\305\225\342;\373\243\307=\2038\316\2732T\331=m\263\366:\014&\312\275\200\300\321=\234\372\341;\333\3753\275T\365\306\275\327`\241=\022\335\242\275Y\315\365\274\007\336\311=Q1\326=\177\315\234\275om\255==B\224=$U\023\275i\270\214=\374z\205\275e\032\234=\323\376\214\275\022\320h=\240\r\350<\371n\324=\007H\231\275=\232\330<\223\357\330\274\035=\326\275\224=E\275\372\351C\2757eD<\220\302H\274\302\004\314\275\277\n\263=\366M\271\275,\223\275\274\002\232\237\273Ay/;\354!\255=\264\274\013\274\200G@=\220\037)\275\221\262\231=\270I\306\275\3074\204\275\316V\323<\322\247\023=Q\313\010=\316\357\207\275\356\2302\275K\364\212\275\334\000\321\274\204\373\257=\265|>=P\246\214\275O\027q=\335}\341<K\237\310=4|X=\313\222e=L\n\267=\301\006I<L\211(=\327~\262\274t\254\274\275\002\336Y\275\310\356\213\275/\205\234\275K\253#=\n\315\307\2755Gd=\0349\210\274\000\201\327\275\016\224\353<\232\017\307\275[`\254\275\205\'\021\275\317Ih=~=\033=7\005\207<\332\315\335=\020K5\274\\\2629=\227\231\275\275v\351H\275\372\343$=]\314S\275\0068q\275i\377\033\275O\361\225=\256B0=\275m\035\274\013L\322=\244-Y\275\260\232E<\337\000\233=\024\233\241=\005\235\273\275\363(\306=\311\306\206=\325i\231\275{\333\331=i7a\275\261\340\272\274\301\205\276\273\"|\214=]x\232=Q\210\200\275\237\260$\270\253+\206\275\351\343\250=\016\217\340<\232\023\214<\317X\024\275\2517\261=\273f\254\275u\265\350\272\023\266\253\275\203\375\251\270\214\000\311\275;\241\277=vmG= >[=\376&\363\274N\344\200=\026\345R=\347\272\210<\307.\032\275\254\366\306=\217zK=\3733\244\273\331\3601;\361\013\230\275\372 \332<+\222k\275\244\005\225\275>\034V\273\r\227\200=\257\335\274\275X\372A=$e\211\275\003\247\027=\021\302\220\274\340\333\373\273\276{M=\215\335\327\274\307+\336\275\027H\326=\003\000\252=6\"C\275-\357\204=\264\275\300=\372\306\235\275k\255\327\274\265\027\275=}\344\241=%\327\304\275\212\005\371<\322\3738=\346\032\232\2744\251E\275-\244\216\275P\257\317\275\254x\334\275\350\265\'=\352\003\336=\003\250\210<$q\250\274\231\301\243=\235\300\263\274\006\215\277=\017\333\205\274\005\004\037\275\241\026\206\275)\326Z\275\361D+\273\217\210y=\004\035\250\275\220\277\255=u\036a\274KN\255=D\021\327\275f*\033=\315\177\212<A\027h\275\250g\265=\320\207\317=N\261\257=\024\337\220<0\274\200=y\037\222\275\360+\004\275q\335J=\026\276\227\274\352\260\331=\2773\300\275\201\001w\275!\362l\275^\256\257\275q}O=\323\037q\275`\2375\275/\310E=9Y\014;ds\233\275!\303\262<]N9=\346\324\330\275\232\030\242\275\223\033\021\275\264k\277=;\214\245\275&\311\376\273\277\014\005\275\260\023X\275+\335\207\275it%\275\247\362\311<\357h\216\275T\316v=+\255\202;\342\304\237=+\310;<\246\314\216=q\022\241=\374\343\256\274\233t2\275\000[\324<gPl\274\2255\375\2734\000+\275~\274\332\275a~\007\275\244\016B=\236\226>\275\364\373\320=!\265\221\275\375T\220\275\256\376\004<J7\225\2750\316g\275o\360\201\275e\001\213\275\341\200\204=\215\315a=\014\001\271=\'_\215\275\014\215\341\274\244\304A=\270\035\020=\373\271\"=o\322\267\274\022\376\273\274m\274\r=[\366\221\274\333If=\037\226\316=\304\311\322\275_\365\205\275\302\300\224\275\305\004L\275\375\325\204<\234\314\036=\021\240\204;\315w\351<\364<\310=\037g\250=\217\244\336=\226H\207\275\215\007\026=K\345O=\000>\244<\330\262\r\275\356O\251<\314 \307<u\333\325=\177\017\307\275\236e_=\010N\021=}\233\022=\277[d\275\340\004\016=:\000\303<\322\021\336\275\236\211\242=\014.\244=\307\353\261=\376\027\200:\216\177\220=\005\274R=\2744\211\2751\rw\275\206\201\215=\370\334<\275\025s(\275u\200\212:\260\002\225=\305\332\271\274\213V\223=]\320\335=\313\0030\275\341z\250\2748`\312\275\312R\212=J\262\315=/*1=\232>\256<u\303M=\214\3637\275_t\260\275A\217\277=\347K;=\0323\333=}\031\323<\025\261\030=\273l.=\251\005F=\370\024\325=yu\201\272eb\254\275,\037\327=u\235\r\274\363\257O\275\376\207\310=\232\300C=\375VQ= j\326\275\203/X\273\341\013\350<\344e\205\275\337\217\254\274G\373\275\274<\315p=\367\375\020=\224\024\220\274\220\345\'\275;\256,=*\322;\275\007\016>;\033\254\217\275FK\252=\237\323\036\275G\340\277=\232^}=\212\306\260\275)%\213;\322]A=\313\301\310=\360\220h\275\002\313\223<\246\';\275\221\346|<\330\234\222=\213IH\273y\305U\275\344\346\030\275\276R\220=M\365\307<*,\035\274\356\224\310\275\313U\324=\375_\031=\225\370\322\274c\324\260\274\303|i\275\262j\256\275j\223\310=-\243\241=\203r\276\275p9\'=\365\007E=\017E\210\275\037\206=\275\030\250\371\274\tN\222=X\036\032\275\032i\345\274O\344\244\275\215N\227=\027\362\274\275:!z<\237\336\250=\213\000\005\274\0201\253\273\321\251\200=_\257\232=\255\006\260=\276\t\275=]\333\365\2740K\250\275X\002\272\274kI\213=/y\300<\377\335\007\274c/\301\275,D/\275aB\202\274Ii\261\274-\365(\274IN\263=R]\277==e\232<\224\347\324=\213\331\244=vP\341\273\223\306\006=\340a\243\275\"\261\241\274\003\252B=\3142\355;\022\366g\275\215\332<=\022iX=J\251\223<\342cv\275}\274\372\274q\352\326=\355\365\303<J\203\201=?\371\241<u\301\356\274\322\360\257\273\303\260\205\2756%V\273#\303\212=\371\367\253=}\rQ<\366\350l\274\'\337]\275\334\374N=x^\315\275W\3631=\204\367\251\273\305&\225=J\022\025\275*\335\\\274\216\240\231=@\033\315\275xM\247=\343\230j<\273wK<\260\271\333\274\020=\203=\275N\277<\201|\031\272\007\344\252=\330%\020\275jh\212\274\223a\323=&s~<Q\243\247=\002\265$=\213\317\247=\236\022\000\275\021I\326\275\221\223\210\274\347\004\000=\024%:\275\377\365B=\230)\317\275@\033\010=wb\345<\014L\322\274=]\274<\305\210\303\275\273\204\377<S7m\275\314)\314\274 \242\237<\005\032\234=\262`%\275\222`m\274\306\244\337=\332\013+< o\301\275km\360\274\360DW\274=l\367;l\271)\275\263\267\217\275\245\270\216=\337q\305<\206.O=W\021C\274R\204\302\275 ~\022\275\005\371\002\275FM\212\275:Gm<*\033\221=Ta\017=/\242\246\274\357\363\243<P2\201\275J$\317<d\354v\275C!H\274\333\353\304=\302\036\253<Y\346\306<\037A\013=c&\222\2755\212\334=\313\247\206=\237o\307<l\3559\274\215\032\320\274!D\315\275\235O\006\2740\031\304=!@D\272\010G\363\274\307\220\270<Zwm=\241\203=\2758Gq\274\024\007\324\274\251p\006\275\205\263d\274Pd\211\275C\366\311\275Al\014\275\334\210\223\275\215\017o\275\372\357\243<\262\374\306=\303\002\253=Aa\331\275\177\331\327\275\256\373\245\275\336\037\253\275L\007\036=\243E\262;\225~\027\274\273\276}=t\237m=\207\226\303\275M\367%\275yM\267\275\261\366\261\275\314\240W=1\377\322\275\226A\263=y?\202\275\227n\225\275\220d\200=\005f\263\275\331|\334\275\376<\227\275\177\026a\274\237\034\305=\367\3728\275\267\210.\275\250\360\177=N\004\244=\277<\235=\365\224\243\275\013\342\250;MI\254=5`\304=\342\002\216;\247\320\225\2752\0379\275\366\370\207\275\250F\234=\354\250X\274.5\307\2742\364\234;#\276\234=\216@\376<9x\272=h\326\017;E\3310=\227\224\304\274?R\221=m\266\211=\031\2769\274^?\242=\264x\207\274\247\273\264\275K0t=\225\273\232\275\257\226U\275>\274\212\275\215&\223=N\264\327=\227K\177\275\273G\237\275#X&\274eB\232\275g\021\234=\264\017\267<\034F/=B\003\350<)\202m\275\307\n\037<ca\254=\024\n\217\273L\257~\274T\334\230=\020\034+=EhD\275\316R\030=\201\323@=B\026I<\216\335F=\023fU\273\255\251\267\274\243d\214=\023YL<\035Z~=\027\313J\275\205\212\207<\244\237\242\274\312\315-\274\275\230\324\275V\267K= *j=\370\304\255\275\177\023u\275\226\374\241=\372}u=D\371\341\274\001\244E=\214$\204\275\3136S\274@\"\267=\'\023d=P\354C=\205\334\014\274\355\345\206=[\252\234\2752\236\271:\241\245\303\275,I\227=\034\205\327\275E\0013<\232\025\036=\264z\255=_\342\262\275\017M\330\275}\202\010\275\357 \304=\205\020\361<\205.\223\275ks\232\275o!\326\274\336m\310<k-\023=\375\3640=\215\343u\275\210\222\035<\202\3608;\251\\\212\274\222!\241\275u\322S=\200\331\327=*\342.=A\234&\275^\217\031\275p\371\024\275Ue\300\275\324):=\327,\360<\323\031^\275,W]=:\307\277=C\227\304<\224\347Z\274p\200T=n\005\262\275\217\343I=\303\006\223=\"9\301\274\017\'\245\275\237\232\225={\"\241\275\351@\304\274\240\002>=1~\226\275\351\315\257=\333\016\301\275\343\000\303=\025\025\005\275\256\215\272\274\371o\003\275:X\220\275\346<\302=\307\n\304\271\031tS=\332\364\332=pW\214\275^\333\222=\256\363\224\275o\352\224\275\206 |\275\033j\331\2758\340\300\275\206p\000\274Uh\256\275\302\262}\275\200\036\254=\240:k\275\036\035\214=Y\326q=\027\034h\275\372<H=I\230\022\272\305~\300=\224\205\344<S\305\252\274\023\311\246=k\236\321=\264\215\335<Q\213!=\214\234\235<\302\024\334<\260\006\305=%\215+\274\256\020\220\275\224OQ=u\276t=c\321\306\274\t\321w<\'\273\251\275\344\265\211\275NB\222=m\314p\275 \345\320=\202\244\224\275\212\214\325\275\206\365X\275\236\034\312\275f\301E\275W\314i\275\3310d=\306C\315=\201{\224\275!\300\034\275\3408j<\373\273\212\275o\270\262=#\212K=N\0278\274N\267\t=yKF\275\240!\312\275>~\205==\266\270\275d\202\307\272\177\216\'=S\335\244=p\250\3529\204<m\275\330\226b=(\207\236;Ow\014\275\030\257\212;\030\343\311<\014\230\330;\202\'\372\273\373\210\201\273\312\215\206=\307eS=\230\347\221\275\t\260W\275\332\016\\=.\237\270<\235P\201=[\341r=\023\016\013=\303\352T=\210p\304=gR\305\275\232F,=\276\335\231=\3163~;\022a\003\275\214\037Q<\221\252\266\275\247\025C=i\276\023=\004\325\330:[\224v\275\221\3333\275>\313\245\275J\346\244\275\237\362\036\275\313\030\363;\027\366\241\275\027\033\255\275\216+\272=\364~\'=\243\256\253\274\2520\332\275H=\261\275B\237\311\275)\033\363\274\203\271\270\275\226^K<\366\244\017\275\3761\023\274\003\221\207=\325D\327=\022\025\253<\027\323\316\275\311e\235\275T\273\241;\354\364\244;\033\354\022<\240\255\201:|!\222\275\003X\261\274?\305\236\275\317\337\331=I\214\275\275\325\212\272\272\327\024\255\275$m\205\275o5\260=:b\215\275YmN\273\003\361\373\274\276\375\225=IV\216\274\375\232\313=R\rA<\271\211\233\274)a\261=;#\216=\211\373\207\275\024\242)=81\330<x\306\032\273\207[D\273S:\335=QFT=\267\022\207=\356\275\312=J\214\032=}\010\216=\336\"[\275\rQ\215=ouY<5\037\372<\371.p=\377%m\275\252\230\007=I\203\255\274{ZK\275\231\274\203=\211\316d<Q\220\337=\033w:=\331t\022\274\211\277\261=@\355\006=\034\224\"\2730\\j=\302H\232=\022\307\261\275E\235C:\333v\275=\345\236\007=Ey\221=xi\017=\005\025\313=%\034\207<U\262p\275\266\266\322=\254M\274\275\2004:\275\221]\237=\216\024\336=\243\353\301=\325\3107\275\017\230\311=\244\215\275\275\307z\346<Y\314\264=\226\035\260\275\231\333\312\275\336\301K\275\223\306\314\274\3411==\232_\315=\333\251\335=\242\303\177<JB\254=mE\263=\217;\324\275b\365\325=@}{\274\201D\004\275\351\2363=0\007{\275\350\037\223\275\347\233{=?h\006<\346]\305\274\231\013\233<M\253\003=\320.\t=[\350w<Ty\205\275\257\353\302<\034\031\326\275\\\317\201=[\305\006=\003\342\275<^\302\311\275C\350\206\275\271\261u=\031\275\250\275\303 \315\275\177\2654\275\233\240\206=dO4=\376\2223=\013\312\241<\030:\264\2756!\216\275\260fx\274S\356u\275\330\254\321=\270 \224<\365\307\323\275\231h!\275\360\304\255\274\252oO\274\250\017\215=s.\253;\357O =\334\2250=\325\374\264\275\021}\333\275o\336\266\275@0\'\275\251\367\250<\365X\226\275\035\363\005=\213\366\300=v:_=\214\031f=\244\312m=.\266\035\2750t\326\275L\346E\275ye>\275\262\257\303=\226\237\232\275\227\2321\2759\244\207=\240U.<H\024\257=v\375N\2752\205\256=\325\203\271\275V\350\331\275/\026\200\275\312\350\307\274\264\217\310\275O\225s=\336zy=\001\246R=Y\3509\275\t*U\275\241\224\227=>\002\373\274\001\314\367<\374\032\277\274j\303C\275\264=\3669R\\\224=\210\254\202=\2211\022=i\233\333\275\024C\025=\255\373\277<$f\252=\311>\244=G\2538<\360v\314\275\033\335\305=\232\024\331\275\370(0\273\261\332\016=\'\203i\275\372\372\255\275\303\340\212;\223\217\200\275.?=<\002V\237=\036\314\004\275,h\016\275\206i\277\275\217\271\263\275\251\363\271<\375\277\271=\231\372/\274\310\264\027\275\002!\277\275\312*R=GQ2\275\006o9=\021\0076\275\354\360Y\274\241\005>=\362|\306<p\234\231\275\241\201#\275\360\356\025\275F\002\211==\'\236=\240\220o\274\250\255x\274\213\342_=4\303o\274!\377\302\274\221e\370\274\260\305\206=\242y\330=\336w\205<;\226\236<\374vN=p\3323=\361b\326\274\207WY=\256\177\322=\310p\314=\324\215\212\274G\262\221\271\t\255\3079\235\013&=\335l\335<p,\024\275\2639\336=#o\002=q\202/=\212\216\235=\255\255M\275\251\306\251\274C\230\315={\327<=U\002\014=\321\001\322\275\26077\275\366\033\207\275\337-\304=SS^\275\363\r\237:1\030\333\275\346\005\310\275\324\356\265<\211T\300\275\"\203C=F\367b=Q\t\020=\347(\225\273V0\247=\321\271,\275\270\260\210=\371\211}\274\306#\254=\334\035\322\275>q\234<ul\203=\325O\222\275-g\326<&\322v=\333\020D=\201\331\372:\010\375\304\275\347*\016\275\375!\210\275P\002\n=\262\324g\275$\226\030<\310\327\220=\346~\227<\214_\204\275g\337x\275\273\330\204\275\373_p\275\341v\215\275\322\205\271\275Z\310\267=n\332Z\274m\216A\274\311\3338\274\267)\002=\255\370\202<7PG=ld[\275\352\301\326\274\\l\r\273\205\362\215\274W({=\365\367\256\273Y\213\031=v\014.\27524r=\257\356=<\367\342\013=\213\220\211<\007\350\t<-\367\337\274\366\313\317\275\340^\242<\341\035\220=\367e\224=\001\363o\275\231\272\201\274\'\232?\275\371\324Q\275\212~\202=\241\271\243\275\033e\301\273\027GM<8\006+=\246Q\260=\244\307\256=\210F\264;;\365\202\273\320\277\255=2\347\275\274\337\223\275\275\273n\216\275\003\326\022=\347\300\354\274\033c\343\273l\n\310\274SRM\275\376\257\255\275\2732\236=X6\326=\215\331}\2759\223I\275\320\363\203\275dF\225\274\023>\352\274\0318\331\275mL\333=\207\007\244\274\007\274\220\275\251\366\227=\251O\304=\350\340V<\345\301E\275.\233s=c\326^\2758\n\211<\331gj<\321+\334=\032\227\243=\261\224r=\032\'\322\275\313\300[\2757U\254=\333\245\327<\325 \226\275\2368\334=;\204\324=\347\362o=\336\246_=\327\235k=\317/^\274\250\263\002\275\003\005\315\2755%\237=\017\3332<\243\032Z\275\225z\240=$\204\300=\362U\200\275V>.\275}n\371<\206\023\004\275S\022\330=\020jd=C\202Y=\321;J\275E>\330<@.\253=\216\030v\275\337\256\034=\215t!=\213T\022\275l\177\211=\343{\252\275\026\243P\275\272\377/=\005R\331=\356<\021\275!\376\313=\267\242\001=\336\224\376\274\235\247\313\275\214mQ=\345rg\275\2334[=j\203\201\274\246bZ\2759m\321\272\331\223\335\275\320\027\017\275\274\201\220=\371X\321\274\250b\023=\033\321E\274\030\203\213\275\343\254\033\274\227\320\220\275]\027|\274\036\277\215\275F\255\314<\340P\241\275t\342\312=\364\263\037:\320\235\273\275\242\243x=\256k\305\275\375I\224\275\020A\307\275\t\037k=;\222\266\275\374\214\320\275\002j\207<?\360M\275\302q\234<Y:\317\275K\334\330=\313\005\273=|[O\275\221\365\310=u\222\333\275\276\302\324=\277p\235=\251\260\332=\026\033\310\275\211_\335=\024 \226\275\"\2761\275N<\330=R\227>=\361\034\271\275\211w3=\262\177\246;W\027\325=sH\216\275\217\367\205\275V\004\274\274\306\020-\275\277\323\000\275\343\352O=\253\211\336=\252+(=H+\324\275\345\315\326=\306\002\314\275c\352\034\273\245\214\310=\003\274\321\275\305\005\370\274MkI=\361\354d<A\271\266\275\325\306\223\2752)\300\275\351\216\205\275\352\255S=\030X\241\273\001Y\204\275\313r\223<\256\343\227=\276~\336=\350\265\013=E\315G=r\304q<\206\236q=\336/s<;\233\240=\3664\260\275\022\037P=\341\223\017=\252\377\332\274\250\356\272=\035\273^=8\336\302\275\371\035\212=s\023L\274~\243\325=\203\177\334\275\332b\267\275\252\313R\275\025\301l\275\306\320\270\274\345\034\307=W\020\252\275\272\226v\275\357\277V=hk\232\275\211\232\266\274\335I^\275\304\032\216\275z\202\324\274 Q\325\275\364\245\261\275\003gy=H\344\212=\020\t\265\275n\302\033=\337\225\275\274\316{Y=\260\000\254<\312\023\213\275\272\312y\274;\362\206\275\346\236\224=\237\304B\275\234D@;\270\377\257\2759\337\222=6R\235\275\340\266\307\275E\221x=\255\026\232\275$j0<y1V\275\361\006\202\275D{>=\237;\241\275\310\363y\273[R\222=\347s\331={\373u\275Z3\243\275^\317\301\2756\260)=\243\202\262=\362\375\206=\234\246\315=\267y\220=\346\332\331\275\310;\252=p[\251\275\235\370\204=\223%\215\275j\225\201\275#8\233\274M\030\203=m\246\r<\320\353\306\274\327\360\314\275I\332\242\275*\017\020;/\347x=\335\334z\275\342\000\255\275>\232\374\273\256\231\321\275\014\266\207\275F\325\263=\211 \2109\332b]\275\026E\307=\253LA\274:\273\332;\013\311\274=\000[\243\275\233\025\311\275\007`3;\253\233==$\354\021\274?\356-=&MO\275\3727\010\274n&\242\275\247>+=X,!=\375O\260<9\016Z<\007\345\326= \001\215;|B/=S!\225=\201\0143=/\023\302<\017\014\201<\261\265\251\2743U\327=\340\334\334\274\301\251\333=Z}X\275!r\373<\022\363\020\274n\2562\275\254L\301=\004Zv:\022\334\316\274\0042\370\2730\255\236;_\240\275\275)\310\235=\317\006,=\345\3722\275\276>\244=\270\305\300\275b/\234=\215\013\245\275\272|,=\253\025u\274w\\\276\275\314\217\321\275\257>1\275\237\270\301\2759\346s<\323s\020\275\212f\300\274pO\270=g\244L\274)\r\022\275+\227\036=(\032\202=\327\257\205\275\306\304\036\275)\231\026=-R\213<\r\203K=\335\374\025=\"\026\034\275S\315\270=\001@\343<\244\342\245=\002\240\266=h\236\271=q\016\223\275\343\377#\275\207|\264\273t\241\200\275Nu\264\275\034\330\241\275\200\374\226\273\033P\205<\262\017\231<\005\324\322\274 >t=\277\364[\275\035\361D<\tE\275=mBa\275L\251.\275\001\247\330\274\2539\304=\035\257\272\275H\331G=c\371\225=\017\345\301\275\353\247P\273\200P.=\314F\017<7\3342=\213\031_\275\263\275\212\275\377]%=Mf\275=\037\360&<\037\356\336=\367y\304\275\365\320\313=\033$\311=Z\207\227\275}\324::*\324J\275\221x\224=xr>=\250D\303\274B\207k\275\013\270\221=\032_\241<\034x\375<\000\020O\275\343\357;=\232\264\n\274\356\346\226<5\r\230=\252\263\026=2\205_=\372\r0=\357\243\360<\333\347\243=\005+\325=k\306\274=\237\374\327\275\033+\317<~\034G=\366\374\262\273\021rd\275\277\362\272<\357\320\272=]^X\275\367\3310<5\345d\274\366\266\231\275b\2727\275\341\203\227\2745\215\305<\000!\264=\210\241\252=\035\230\224=\374\000X=\376\346\270=\0367\240=\226\364\336=`a\277\275\261\241P=\263\032+=\3238\353\273A\340\261=\277\025\020\275\0328\246=!(\222\274\306u\267\274\'j\246\275/\334\232\275\363D\324=N\022s\275\343R\313=2\316/\274\001\272(\275\302\234\007\275\r\370N=;v@\275_/~;\236=+\275\335.R<M\302g;\307\301\265\275\344\222\303<\375\333\213\275\023\227m\275\204\347i\274\220\233\265=\331\027\277\273\200J\364\2743\027\031\275wU\275=\314\017\010=\003o\333<\262\340\323=\000G\254\275F\274\343<\361\310\275\273b\315\337;*E\245=\000j\352\274s\025\314<\r!\364<\322\320\255=O\313~\275\235)\336\275FL\355;\334\326\236\275\201R\221=\013\271\255=x\350\315\275#\272\255\275\273B\322\275Mv_\274\377\337\222\275\223\300C\275\314\355\314\274l\001T\275bTB\275x\342{\275\343\370\333;\013\275C=\t\346\255\275\306\235\257\275\343\265\217\275\273\320\002\275\\\205\004<\335\021l\275\224\226\260=\377EC<$\330p\275.\3532\275\233 x\273~\354\037\275|\241c\271)\221\321=\215\221\350\274^\334j=\030\032\264=\211|c\275\315\203\306\275\230\256\262<%\300\233=\026\222\211\274\337\002\223\274U\250\260\274O\257\330\274\207/h\274\300\355/\273\2539\010\275\341\341\267<\016\266\231=\311\311\312=d\362\370<\251y\241=+\353\323\275\346J\334=\377U\250=\207J\240<ma\017\275\010\267\246=ALF<E\325x\274\215O =\2275\205=\242\204\312\275f.\203\275\r\333\265\274\007\321\243=\230H\213=\2543n\275\376\202\226=\030\026\004=\254\036\331;\203\325\246\275\274\214\273=\363\245W\2741w4=\235\033\302= ~\250=\031\200\026\275\374>\252<\226\356\213<\223\226\013=X$h<L\324\\=h\215\213\275\3056,\275\333\032\212=\307\204\306\275G\364n=\247\233T=+Q\251=\202A\252=Q\231O\274\336\250\207\275\241\360\364<wE\257<=\372\257=d\334\236<`\340\320\275>\227u=T\364\326=\006\177\026=O0\272=a\355\335=\313\357>=9\'\243=\354]\260\273{\206\334;\217\230*<\357\235\372:\265W\330=\304 \211\275S\375\322\275G\273\301\275\203\214\326\275\016W\000\275\245\265\225\275\325I\254=\327,\207\275\007\361\215\2759)\316\275\016M\247=\"\374\360\272\"3\301\275\362_\250=\227_v\275\'\037\021\275\316\224\233<x\306\325\275\257x@=Q\273\327\275o\276\234<5|e:\307\3708=l\326\253<\365\267\332:\002\220\311\275Y\271\376\272H\365\275=\246\035:\274\177N\251\275\024\034\232\2758\036\300=\210N\017\275\276\315:\275\255\036V=\\$g<\256\370p==\360@;\323\362O\275\0246?\275\261\261\002\274\334@r\275\324T\265=\302.a=\326r\233<\257;\344\273\242\330\261=\253\214\264<\246M\360\274\335\251\201=uL\323=L\252\234\274\365\310\t\275\361\275P=#Q*=\026\003U=\372\324\n<\035\276\234\275\000NS\274 \037\351<Y\240\334=m7\325=q\342\207\275g\2329\272B\233\217=~\346\251=\177\362;=BB\321=\004A\220\275\301\217\362<\307\253\356\273 \030\305\275\234i`\275\242\203\310\275\311\017]=~\342\245\273\013\021N\275\324K\216==\275\224==\361\277\273\211\334\275=\243K<=\\\273\265=\346\2122\275F\237\311\275\202\367\005\275\3646\254=\027\300\217\275\311^\302\2756[\312\275\023\205\332\275\tos\275Gcb=\327\037\217=\244\227\244=\375U\312<\331\264\010=]\245\256=|\241s=\360\200\201\275\370\201I=t\242\312=]t=\274\336\226\205\274\254\264h\275\006va=\355\033\253=`cJ\273\261\217\250\275\303\r\243\275p\270\023=\0323\031\275\003\332\t=\331\235\251\275n\255d=\242\363\275<Y\207\022\275JS\325=\220\277\235\275w\300\253\275\300\330\264<q\026\317=\342\005\241;\254r\361<[\334\211=\023\005\223\275_^\274<:\375Q=\3021\260\275\000D\332<\360\261\336\275Wcs\275\322\352\031=\204X\272=Z\203\215\275\306v\276=\343\204\305=\332\367\250\274\307z\010=\246^\210\275\267x\025\275!O\252\275Tm]\275\351\321\350\273\206 \026\275\322`\220\275_)\316\275\326<\237=\242\257\322=D]4\275G\241f=\325\326I\2757\nn=\254\3222\275Q\1778\275\272\030\271\275{W\336\275\021R\240<-\032\306\27563\207<\300\205\217\275\002\220\033\274E\274\320=z\312\243\274\322\233\337=\241{\324=|\"b=\332\003\250=@7\203<\214(\275\275\006\265j\274\302\366\301\275_n\334\275\231\2460\274\262\242\013=\235\360+=\241\364D\275\tC\251\275\022\031\'\274\363\3113\274\302\343\233=\201u\305=\006\027.\275L\202\226\275\211+\267=\007\331\306\275\324t\372<r\267\256\275\210\3371<\332\214\005=\332Tw\274\374g\272=\364\211\000<\213\330\031\275%@\224\275\347?\273\275\234\302\256\274b\033\220\275\033\033l=.\226\234\275\251\263\226\273\301\304\026=\366\240\202\274Z\273\025\275\231v\212=\253\204\223<\334\320\264==\244\210\274\367\020\223\275\307\263T<\244\254G\274/#\264<\277S\242<n\345\205=\262\r\336=\215\324\340;\271\335\231;\335\376\010=\303\325\264\275wm\002\275\260\354\277<pk\225\275\335Q\356\274$9k\275\354\335>\275*y\274\275N\np<RS\301=:\364H\275\230\226G==\026\336=\227\347\220=Tx\334\275\221\314\246;^\306S=.Kv=!\264\207\275=t]\274\013i\316= \340_=RO=\275|\222\250<*|\216=\354\352\212\275,\273\251\275mE\201=\351S\335=\311YI=\304\204\360\2745&O\274\214\262\246=!\376-\275\025G2\275\252KM=\325xu=\252c\307\275\361 \210\275\216\002\327=\314\252\206=r#\256\275</\240\2745\251\200\273GH\216\275\247\211`=\270D\311<\217\273\023<L\027\n\275A3\001=\024{\220\275\255\233\335\275\246\273\230\274\321\271\363\273\267\253)=\r\213u=l\034\'\275\267h(\275\221\346R=|\307%=;\301\244=t\023p\274\241S^=X6 \275\r>\276=A\322\201=a\254\256\275\243\235l=\245\252\264=\250\233\177\274N\314\007\275\324D\324\275G\331\320\275\346p\232<4\225O\275\002f\242=\303\230k=\347^\204=*\223\263\275\324\017\235=\336\224\325=\000d\232\275\025\031\273<r\303\\=\234\230\242\275\224\253\024\275c\320\253=R\232\232<\022\260\207\275R$\200=\321:\237<\235\037\014\275\003\361\326\275\266\337\337\274\016\233\261\2751H\227\274n&\362\273yA\020\274\367\204L\275\013\316t\275\273\023\255=\003]\266=\017\010)=\302\236\245=\353\234\335=t-\325\275\252}\327\275{\310\233\275Z,\'\275\365G\213<kD^\275\253K[\275\261\371\220\275\022\n\270\275)|4<\0273\001\275\366b2:\034\275\233\273\262}\356<\020;\235=\276\204\026=\353\033\345<\237!\223\275\226\370\232=\325\256\267<\230\215\320=\327\033\272<\'\260\214\275^1K\275\331\370\330\275f7Y;j1\263<I:\325=\263\304\021<\261\037\034\275@\004\254=\004\252N=\002\2330=\336p\007\274\230\025\212\274\216\323\216\274&\306\303=L\007k\275\3202\314=zV\204\275q\024\206\275Rz\236=]\220k<\2022\313\275\006\026\212\275\251\031@\275\033\302\327=\024\035~=\275\033\362\274\237\315\220\275=\322E\275\367lu:\352\025S\275\n\025\342<\243\323\320=\3464o=u#8\275\004d\337=\002\262\323=\231\237\204=3\006}=\177`\220=\014SG=\002/\232\275\013\242\203<W\241\223\275\273j\330\275\020H\203\275}\2540<\222\230\233\274\332\233\311<\202\200]=\363J@=\2136R\275\362\211{=6\3045\275\315\337\240=\027\376*=\266\314\270\275\326\373\311=\037\301g=\030n\013\275\361O\001=.\257\216=u\253?=\222\227\276\275[\022\204\275_\027\031\275\3325\201=\3542)=U\036z\274\244\270\247\275\226\316\204\275\272\247\014\275m\340\334=\376\r\344\274\227j \275\372D\330<\037:\357\2741\267\034\274\213\345\271=\034\020r\275i\275\323<Z\337$;\006\002\212\275_8\226=\030\261D=\033\220==\201\224?\275\260\361d=^\032\316\275\337a\303\274\r\373p\275D\233\217\274Q\322\306=\350Q/=S\236\331\2758H\216\2755\335\030<3[t=\235M!\275O\003\220=j4\357<0\tX\275\002\177\224=eT\260=U\024\306\275\353C\275=c\\\226\275\262B\336\273B\236\017=\033\325\246\275\260\360\'=\304\241\205=\331w\222<\337\261\205=\230\351\005\275\216\005C\275\307\201\007=\013\301O=\323p\033=\340(\243\275\0375\254\275\001\305\276\275\204\265\213==\317\001;un\210=\'\306\212\275\231\264y\275\334\361\304\275r~\317;\335\320\302<Q\266\324=o\335\333;\314B+\275\322\201\231\275\252lx\273\213\353\202\275H%\023=\347]\030=\013\t\264\275[\2116\275\023\244-=\322{\215=3\335\203=\035\256\323\275\007^\260=GZ[=\362\201\330=t\326\334\273\036\207\217\274\312\016C\274\215\362\224=\032\215\252\274\360\032\302=\217\212W=:\204\317\275\254\327D\275\235\310\274=,k\016<d\210\243\275\353\354\204<Ar\322={\365V=A\362\266\274%\006\000=\036\333\313\273\017\270\231=\342\340x\273\252\004\272\273\275M\311\275n\320\206\275\316kW\275>F\022=\004\030\333\275m]\311<\003\333\214\274\336\272\276\275\022\315\211=x\336J\273)\254\317\275\021<\247\275\223\026\310=\233\367 \275\220\260\202\275\301\342\262\275c\357R;=\265\211=Wiz\274\356LJ=-\233*=p\026\267\275L\177\255=N\234\256=\331C`\274\025\203\260<\323\376\372<\300\321\323<$\310`={]\254<\223\322\322\275;4\331=h\365(=\345\034\205\274a\270\247<&\363\253\275\330\303\212<\256\302K\274\020\247t=l\026\267=\276\261\202\275\3533\025\274\177H?\275_\'a\274 \232h\274\205D\313\275\364w\204\275m\315\216=\253#p\274\361\353}<\261\303\206\275\220\204\327=\036y\244=M\346\256=\320p\301\275\316\352\234\275\277\351Z\274u:!=\221(\037=\263\334J=\027\024\016\273,\262\217\275\215\332\261\275\206\232r=\340\001\252\275\246p\236\275\336J\306=\206\272\277\274\302i\226\275;\365u<\1771r\275\352\342\214\275\217\262\361<T\314\307=\361\n\333=1>\210\275\246\241\231<[W\234=\305:\247=\365\310\212\275\026\030\033=\001\274k\275\275A+:\213\203f<\250\232\031=\251\253\003\275\311\242\215\273\230\317\224=\004\250r=\305\240[\275fr?=xKa\275\023\373\266\275\\u\243\275\031S\226<\273f+\275\001U\336\274@7\336=\346\267\227=\255\004\222\275\234\034\272\275\0278x\274\364\230\256\275\221\265w\2748\360m=|\321\275=\367\226\312=M\210\305\275av`\275\215\211\216\275\233\235\304=f\240\302=\006\222\317=?\300y=\211\337\212=(F==\320\360;\274\002\021\265\275xz\306\274\353J\207\275`\310==\346\262\245==v\226<\001\0226\275\352*5<\355&\306\275\251\317(</\020\225=\232\033\263\275\255\233\207=\254\367\004=\306 \220=\020\245\262<\227\013\215\275L\274\211=OZY\274\'\273J\274/\343\313\275*\241B=\023\357p\275\003j9=1O\235=\213\007\231=M\234\264\275RW\211\273\314\216\337\275l\357J=\322n\331\275\376C7=yw\204\275o\t\275<\232\034\256;\234\372e<\3147(\274\366\225\323\275\202\323\254\274t\323\327\275\343\333\201=\300^w\275%\244\223=\315\235\316\275K\351\356<?;\237\274\222m\333=kI\376<(\242\014\274\320Sy=\006RK\275\353p\265=(\335\310\275\357a\306;#\251\311<\034\261\240\275x\346O=v\324\324<\375!\321;z<\251=\377\362\224:\226:\262\275SR\341<+\200\242\275\240\205c\274\360&A=\235B\305\275\010\225\035\275*Z>\274>x\323<\225\326\315<V\322\276=Ol\333:\301\210X\275M\275\254=\360\031\262=\312\200\211\275\233\335\243\275\217L\314=\375\321)\274\262\260\275=-\273E<\377\274t\275y\362+=B[\311=\024z\214<fL\'=zi\214=\0024\260=\233\232L\275=\325\256<&\336\246=\033\324\375\272Y+}\275U>\266\275\013\236\217=\260\330C<-p\310=\306\270\224=0vc\272\254/l;\232\226\332=?\212v\275K\016\371<\025\332q=;U\246=\252\230\326<\264\333\026<\214\177,\275\347\t\220\275\355\363\224\274{\235\263<\232\025\025\275\374L\214=,\r\346</E\275\275\253\230P\275H\346\234\275\016\014\240\273L\255\313\275,`\312\274;\3710\275 \005\r\275_\r\320;6\244$=ZO\216=\232\027\350<\260\3444\275\200\211I\275-k\222\275\376\263\236\275\200z\335=\340\254o=S\315\241\275\036\212\240=\350\274<<\306X\224<\346\312\324\275s\013\231\274\255d6=\037\023\235\275t\203\"\275\220p\315\275d\315\241<\363\330\226\275W;\205=aI5\275\374q\246\275g\302<\275\277]\237;$\004\006\275\3334\317=\364V\343\273\373\374\322=\367\325\262\275\351\031\221=\001D\021\275\337\320a\274Oj\335\274\311\0361\275Iz\373<\222`+\2756x\274\275Yp\344\274\272\267\305\275\253R\332\275\300\245W=\210\321\241\275$\347i=Fk\225\273\234\257\331=\265\371\255=\006-\013\275\364\357X\275]L\332\275\360\264H=\277h\212=44\220;db\255\275R^\231\275)\262 \275\017o=\275\023\312]\274V\317\326\274v\207<\275@i\220\275\316\t\217<\"\272\276<\375\350\036\275\375\365\215<\0073\315=\033\341\332\275\346\362\267\275\303a\263\275\237\265y\273\035z\252<\t\244\245=\354\235\244\275\006>\227\275L\030\216<\030\007\334\275+\226\027\275\n\324D\275\204\212H\274\241l\304\275\000n\233=\350\376U\274\276\201\177\275\260`\240<J!\262\274\346\237\271=\002\366\302=\312/\313=#N\215=}\266\311\275W\265}=\242]\022=D\200\242=P\357\273=`$\267=\222]U\275>\371`=w\241\331\274\335sE\275:H\246\274\273\240\263<\026\313\202=^\224>\275\240\365\313\275c/\227<9\261\007=\010\2411\275_\212\003\275\2755\334\275\330\361>\275\246Q?\273\3535\037<\022*\276\273\335p\031\275\025\272\310=\017v\'\275\342w\251\275\027\010\261=3P[=\242\261#\275\215=\262=\363-\212=A\216\235<(\277d\274ax\337\274\224\241\267\273\2619\322\275\254\340\361\274\307z\000\275\375\337\256=\370\365\312;\207\213\266;\221\360\273\274\2000H\274Q\273\001\275\221\342e=T\254\326\274c!\243\272\254\227\307\273\260(\255=h|\330\275Wk\240=\360\370\025\275\366\025\331\273]\300M\275x\214!=t\262\336\275\033rk=\034\376\301\275@\337\027\275\265\020<\275Qt\025=G\307\007\275\277\236\331=\255\224\217=?\277+=\007|]=_D==J\241\233\274\316\245\233\275\331iz\273\331T\276\275\035\351\376\274\031d==LL7=\347b\274<\300\345\246=\203\035z\275=\343\205\274J}\200=\341\347\314:\375\364`\275$\316\270=/\264\200\272$\254\201=,\373[=\316H\227\275\3612:=\353E5\275\347\213C=\370\366J;\\!!=?h\220\275$\303\301\273\337\265\206=\266)\304\275r6\n=\255\245K<\366\221\335\275\350\326j\275\312\006\202;\364l\270\274\367\001\'=\301\261\313\275\354\334S=\017\315O\275\362\207q\275y\004\216\275\313jn;\004&r\274a\210\332\275\240%\211=\t\020\313<\t\301k\275\224\3320\274\216X\016\275\031\257\304=\266\263\016\275 \231#\275F\350\327=i\331\226=\361\253\005=\305\224\273\275~\221n<\244S\333\274\330x\253\27211\225\275[y\240\274\343\236\300=\301S\313\275\233>\367\272\241\332~\27584E\275\210]\335\275P_\253=!\252\241\274\257\211\300=\373k\010\274\032\360\221\274G52=\225K\277=\244\205\364\274\341f\313=\321\377\306\275z\337}\275\336\254]=\0358\201=)p.=r8\225\274y\350\352\273@\005\207\275{d\'\275\233\370\"<\t\n\316\275\005\317\005\273\211^[\275.K\337=H\026J\275\373\321\252\275\005h\n=\024\n\021=*4\256=\242\244\213=\307\250 =\224\373\241=\243\007\374\274?\352\340<\312\256S=\372dc=\245n\245;N|\324\275\337\241\231=\213H\226\275\275\303\'<!\031\003=`\222e=,S\275<\021\240\353\273p<\271<]h\206\273\031X!\275\301\374\203=h\210\317\275\3138\275=\361\257\265\275\204\025\326\275\033\246\277\275\241\325]\274\253\362\242\275\330\346b=u\002\020=c{\003\275\n\203\247\273\013W\277\275\214\030Q\275\274\274\360<\310\014\030\274\337_\315\275\002\t\022=e\214\304=\200\036\223\275svY:4\336\314=v\032\300\275\014a\031\275\231\244\037<\006\203\200\275\270\323\300=#h\025=\347P\245=\022\327\325\275\367\360\006\275\326\316w\275\272\236\223\275:\356\313\275]\231\325<\311\367\315\275\204\346\240<\002 \213\275_5\306\274?\323\311\275\234\310\266\275t\306\314=\005\022P=\355\365\325=s-\272\274\372d(<cL\312=\023\373\\\275\300-\201=h0\311\267p>W\2755\326\200\274\202\374\006\2733\010f=W\231\207=\232\264F\275\304~5\275\327\237Q=\243\273\274=n\354\231=_\r\225<\353\305\234\275\221\'C\2755N\316\275\235\205\035\273\305F\275=\337\301\226=W\020\201=\"\021}\274\252{\205\275t|\232=`\027\235\275\321\210$=T$\362\274\335P\231\275\304_\314\275qr\001\275\001\273\265\275\343\036\350;\024_\330\275\303\215\321=\2013\331\275F\360\252<\240a\006=\374\340\222;3\3649\275 \212\"=\231\021L\275[\232:=\335\024\311=\013\"\364\274F\034\233\275M\271I\275\027\241\356<\\\275\251\274d\321\t=*\362\222\275\0145\260=\222U\037\275)\r\233=\232L\261=\224Q\256=\375jP\275\333\366k\275\335\265=\275\212\377]=\205\334q\275\0170\303\274\024\\w\275\003\371\211\275\257\330\270\274\010\035\337=w\215\245\273<\245u\274B\311\263<%\206\244\274\246\255\003\275\373\345\n\275mM\300\275\273\\\266<\251\322\201==\227\274=\215\264\212\275 \311\017;\316\276\205\275q\342r<\313\253\266\275\024\304\200\275\310\262\320=\353\256\231=\314\263\205=\203k\313<\243\224\334\275n\257\266\274\226\231\217\275nA\223<\253\355\234=\222&\273\275\016\352\322\275S\241\212\275z\227g=\220\037\337<#?a<q\202$<\256N\254=\342\374\313:\022\221\232\275\272\335\300=\205\317\204=5\214\357\2743g\356<\234\272~=\027\217p<\200\224\255\275\305\323\301=\244\332\010\274\250;\033\273\363\201\337<\257\313\303;\251\2159=6f\241;UWg=M\210\027<i\031\217<M[G\274,\004\2509\n\007\304=\304q\272=\341 \233\275\007ci=\332\353~\275\221Ql=|S\270\274yg\316<\n\"\204\274\261B\277<9\237\332\275\021\342\270<q\002\271=lP\001\274\321\274@=\264\t\266\274M[m=\230\373\254\273\032\2777\274s\356\210;M\301\272\275\177\367\306\275\230\274d:\235\204\261\275\017\323\246\275\361\315\030\275\206M\336\275\223\030\243\275L\354\304;\220\313\026\275\3360Z\274\323\302\261=\260\217\337=HkC\275\300\364\256\275Z\006\267=\205\374c\275s0\004=\202\"_=\210\262\313\275m\347\370\274\372\3258<>J\334\275u\020\226\275\214\250\237\275\246\316\006<\201\263\210\275\006\255\325=\3775\325\2755.&<\352\203\353\274t\343\240<[\213t\274\354\317\216<g\003\302<0\346\300\275&\211\254=\016c\207;\377\371\316=\354\317\351<\234\335\321\275;_t\274\037\235e\275u\010\247<\364\343i=\024\347u<\2160\333\275U\242\334\273\"\354\252\274\260]\177\2751\305\001=\035\331\331\275a\351\315=\206\022o=\226q\226=*t\025=i\355\212=.F\321;\215sx=\002\2616\275\3344\232=\201S\205\274\215i\313<\246K\232:P\222\264<\305o\206\274D\267r=O}\274=\261\033k<\265\017\r={\253\024=(D\274;\340f4\275\311\203\343\274\370B\327\273KG^\274\003$p\275\375x\254=Cz\225\275\304\3366\275T\220\252\275, \270=e\240L=Z\262\312\275\306\262\255\275U,\203=\3419\203\275\2201\221=,\216<\275\016oz\275\031]\241=\255\212?<\350\242\273=\254\034\240=\026\201\233<\362l\212\2757\014\337\275\320r\230\275;\345\276=\206\350f\2755\317\216\275\226ia\274\346a\"\274\321c\330\274_\256\204\275\017\253\261\275\247\'\255\273,D <\035\014K\275{\230\276\275*\365\265==\205C=\235\335\254\275\220\323s=\345\223\256=\232\361}<\324\373\224\275b\337W\275:@\245\275\003A\025:\305\271|<\246\222\227=X9\213\275\213\2132\275\377\200\264<)6\202=\353Q\324\275L\355\232<,\263\215=\226k\200\273\323\0369=`\254\206\275<\370\002=\226\245?=\320g\221= \202W\274D\353\364\274\027\037\312<wJ\275\273m\224B=\2767\337\274\354\345\221=*M\261=F^\337=-\027\217\274I\236\217=\372\317\036\273W2\321=\306u\243\275C\214\206\275\357\r`=\225E\273=\337\253\020=\344\256\212=b\022\336\274\tj\277=\301mx<\324\234=\275\3434\267;w2W\275\316\314\256=\331\023n;UW\350<H\035X<D\207\250\275\215\"\253=\357h\035<\273}\250\275\032\005\213=\261\373\342;\007\347\216=\346X\213=\216\235p<,\270\037\275\030\374\230==N\327=^\236/=\257C\200\275(h\254\275\323\370\220=\271\306\257=\000\273\265\275a\217\261\2758\242\234=\007\312A;\335N\327\275\302\207\222=\272\307\213=n\211\240\274\345\234\316=\237\\f\275\204>\302==\310\016<#\300]\275\324C\322\275\316Q\374<\304\200\263\275\246\310\246=c9.=\025,\221=\010i`=\310>\325=\240\205\212\275\035\270#<\223\\\304=\262\264\266\275\036\262&=`\304a\2750\001\341<\372Pa=%\n\344<}\224\330;\266\302\327\275\245\247Q=e[\335<\201\246\216<\022\\\020= \032r=m\334\232=\351.\326\275\273l\212=\347\237\304\275\222h\255\274\317\'\320\275\037\310\274\275J\0059=T)\005\275\303\025\213\274\351\372\252\275C\342v\275\302\273\304\275q55=\032\325\273\275\021\232j\275r\324\020\275& \312\274\232\322\314\275\203\322\300<\252e\317;\217\303|\275Ylm\275\213t\221\275\2209\252=\323I\326\275?\262\235=\247\306\r;\177\225\344<\201\214\232=\365\301\276;\202%\250<\3077\337\275\244\2328\275\235\215\331=\"\262\332=s\027\010=\230\231P\275\340\222\014\274\335;\222=\277\234\207=\200\000\313=c\000\'\273S\252\207\272\247\350\317\275\031\027\265=2\357\343;\027\300\037=N\0108<\371\014!;\022\027\267\275\356p\214\275\0072W=\276M\323=\330\352\263:F\273\212=\033\233\226<\320\241\246=\261UX=\313\0004=\".\031=\006\200\261<\320\006\253\275\345Ta=\310\312\244\275`p\225=\206 \220\272\r\276D=\361\311\215\273\373\2120\275\200\266\376\274\317x(\275#@\204=\271\372I\275\236\345\351<\317s2<Q\342\225\275\310\377\224=\017qN\275\030\335x=X\271\272=\320\220\317<v\220\302\275\367P\301\274\271W\275<d\351\250\275\266\263\233\275W\027\216\273=%\374\274\023\215\257\2757|\314=@\251[\275\'\3779\275CN\337=\202\254\335=X\225G=\031\321\361\274\205\302\356;\253F\201\275\216s\006=}R&\275\345\302\327\275\377\221a\275\246\216\312\274\222\363\016=\327\343\214;\0241\325\275s\262\246;\334\370\310\275\213\210\222=\334\007%<fb\206=b\033:;\201\340W\275\347\323\263=\357+n=\007\220\001\275\262*\261=\263\3521=\300\370\322;Z\224N\275\223\344\211=\313l\320\275\310\366+=\315qq\275%\314\255\275\232\272P\274{-1\275m\254L\275\336@\242=\267\2177=\204{;\275\3216\263<XC\372\271\020\371>=\336FC=\343\333\232:\317\002\020\275\037\273\220\275\201\206\354;\364y\310=\010\002S=\250\354:\274\275j\324<K\357\263\274\"\225\213\274\020\020\320=w^\236=\206\246\235\274\343\265r\274\325\231B\274\263K\233\275\214\331\312=\277H*=/\204\300\275\267\353q==\267o\275\3648\250\274+\246M=\033\031\325\275\370\302`\274\221\251\334=\'42=\330\361d<\324\013\301<}\260\273=\212\237\250=\346_\202=\333\025\210\275\242a)\275\035%\n=\004\007%\274\224\365\026<\237\313\303\275`\303$\274\202\375\332\275Z\266\354<\324F\257=7t\211\275*\355\242=d\276\230\274\332\355\003<\274\341g\274\036\255\227<\370\357\235\272\202\203\334\275\335\301\230\275r\031\337\274n\356\331=\376a\016\274\223\357w\275E\372\311\275\226\242\n\275w\356\313=\245\203\244\275\225\300\267=\025\350N=Ii@=\241\245\324=3~t<q\210\377;3\017\234=u\373e=\255Y\246\275\006HC=\000\363\264=,\356\231=z\255\245\275\310Q\027\273\301h\014\275\357\316\016=\351\031M\275\023\234\033=Xd\336\275\375#\303=g\243\240\274\324\341d\275\256\316O\275?\247 \273\\\023\300=\017\245\204=j\215\304\275\260\'y=\275\010t\274T\366\264\275\357\226\325=\355\353:=<]\315\275\016\322@\274\n%\202=Z\272\227<#\244&=\317\260\026<\360\215\310=\317\222\237\275\202\234@<\303\002\236=h\225J\275\240\363I\275\277\265\271=\226\347\257=\277\200\272=\014\235}<\006\271\272\275\245\267P\275M\316\246\275\322.\350\274\020\372u\275?\361\024=\355\361\303=-\t\326<\004\\\336<\002[g=EL\334=\234\214\003\275\221\274\001<+\275\227=\025f\254=%Tu\275\331\210\022<.\261\305=\033B\335\274\334a\265\275\251\346\274=\352X\324=\352\262\031\275\351}O=\261\213\002\274\351\200\324<D\201,=j9\235\275\221\335\257=\333\304q\275\357\014\304\275b\325\207\275Sl==~&\272=\344\312\010\275\305\014\005=\216;\225=\226\356\206\275\210\354\033\274\307(\233\2757\344\306\275\270\026\235\275\260\n\321\275\244n\336\274\351\230\204=\242r8=\031\032\027\274\375.\267=\340\226\334\275Kk\210\2757\3760<\343\245\257<\030a;\275Jh\235\275\014\245\207;\356\364V:q\'\334=\031\343\327\275\277Np<G\211\253\275\005\004\023=\214H\247=\005\275o=\t\242\333\275\324\222\315\274FvW\275N\245j\275-\316\263\275\227r\254\275*\233\204\275\260\274\330=-\360\277<=G\233=b\375\336\275(f\265=~\365.\275Y\007\322\275\325[\213=\313\"\247<\'\333\262\275\346\320\210\275Yl\001=\266Ut\274{\366\326:\233|\241\275Z\\\267=\000J\202\2759A\204=\216u\024=\006\313\201<n\203\307\275\334\364\002<\360FL=\317\226\336\275\342x\316:\322\030\210=\231\235\327;\033\314\226\275>.]=)\220\'\275C\305\325<\373Qc=;\223\036\275\263\001\253\275\006j\253=n*\242\275\325e\332\274\305`\270=W,S\275p<\270\274\t\315\243=\201>\036=c\377\230=\243\262==\003\330\205\275\266\253p=\257\035#\275\224\236\323=\361\307\005=\245\3327\275\202\207S=\2655\235=\217\254\351<\210\234\322\274\207\226\335\275\360$\223=H\327\217=I\004\003=\005#K\275\224\244\310\275/\357\250\267\211\345\304=\307\r\276\275\035\320\320=?\n\226\275\002\332\333=_Z\272\275s\263L\274\214P\333\275+W4\275\245\005\201\275\353\371\226=\340\353I\275\017XX=}E2\275\351\312\267<\232v\206;\345\276\014<\231\306\220=\004\2036\27427\335=\024:\345\274*7h=P\204\256\275\231W\333\274\305\323\267\275\301b\231=\266\233\221\275\3441\324=\271\377/=\372\214g\275\274\014\253\274\005j`\275\220\340\363<\035\211\252=\242E<\275\254\224\251\275\240\377\331\275?\304}\275\321\345\247\275\250\241\311=\254\003)=\234\334^=Y\352u;\224C\221=\254A\313\275y\'\230\274\2638S<\373\\\273\275TX\256=<\247\312\275\022\352\373<\215;\221<h%\270=\201\2509\275\375d\303\275\261\310\326=\266p!=\337\245\211=\254DQ\275\321\222\317\275B\304b<1\371\321=G\245\222\274\353\021F=g\310%=\345\024\205=\303w\332\275\261\322\005=o\330\206=Q\211\243=\223\255\265=$\223\260<4\232\375\273\003\037\254<\241\213\274\275\273\264\235\275\265\217\373\274\340\371Q\275L\214\333<\310\214\264<\0242\030=\020\022\027=Qw\014=\353&\306\275\025\215\314\274\271\356@=\243\366\263=\220\301&\275\363\350\177;V\003A=\212\220h\273\205O\332\275\001\221\263\275A\213\216\274,\020\004\274\336\264f=\316\1773=s\236\311\275\242\221O\275\230MB;\230b\204\275E\350+\273\234\355\317\2746\354\307\275\240&\177=\356!\017\275\272o\332\275e\343\273\275\267\227\276\275M\033\353\274\013\022\024\275\t\322\031=\243&\230\275^\220Y\275\254[\307\274\021\351z\275\200\236\227=\245\247\201\275\352\306\010\275q\204_\275x\252+\275\337\254\005\275\244\365\002\275\342&\220=\033\334);\315\215\230\2755k\375\274\244)\022\275\231Q\211\275\266/j=gQ\257\275T\340\301\274\243H\246\273\210\343\035;\373\027\236\275\326\214\265<\217\355\030=*R\275=|\004\241\275\247\201\264\275\320E\277\272 \205\263<\221\274b\275\203\204\317=:P\362<\245\334\230\274\037\315~=\0210\266<!%\257\274C\t)=@X\000=\260\251\343;\353\222\205;\203\321\315=\364\302\333\275\371\241x<\301\202;=\261\357\014<;\327h\275\212\'\204\275X9\022\275\340\303\206\274w\270\261\275\277\355\323=\353t\232=Nt\204\275\026(\215\275y\017X=\252\332\317\274\326\241\204\275\262\251\270=G\214\205=H\232\020=\323\24599m\315\004\275\274\357D\275\356i\354<sA\241\275\326d\263=mC\276=\'\333\320\275\242l\264\274+>O\274N\326\256=)\221\260=\003\005\311\275\343\336E\274\377u\324\275\336\265\217:.\212\261\274\336\277\202<\234\323\215=SE\013\275\372\022F=-\343~=\251\t\237\274\305Dl\275\237]\217<^\271\266=\324\001\213=\020\245\270\275\270L\203=i\036\370;\027\250\327\275\215\021C=zY\232\275\264\016\340\273?\352\346<IcB\275\256\007\030=\3429=\275\327\310\213=d\3777<\253\2653<\264\301j=N\276\200=h\370W\275\271\315\030=q\316\211=&\202\270\275\332>\247\275\245$\241\275\006 \330:\207(\223=m\363\206\275\033\324\204=\310\325\253=\230/\241\275N\243h=\233\t\241<:\177+\274d\370\321=i\300\256=\240\347|=[9\213\275\tF\320\275Ed\261=zk\206\275\016\036A\275Wv\325;\337=m=\351\030\032\275\363\036\261\274\013\316\307;;\313e=O\2677=\301\277\256\275V\361\232\275T\021\002\274\270T\326\275\205\346\324\273\277\217\027\275\343;P=\303\202\361<\224\244N=-Zg=\310\343\215\275\\\234\227=\263\256Q\275 \036s\275{\327(\275\325\2032\275\017$\307;\307\352\275=\024\350\202\275*\024{\275l\3337=~\227\277\275\013\003{\275W#\000=\203W\\\275\304@`=t\250\261<\0053|\275\255\374%\274Kj\267=v\311\227\275{\317\206\275\253\262\005\275]\362_=\206?\222=\003\253\017=\274\242\327\275\324\343T\275R\334\271=\265\250\337\275\354\\x<W\370{\275[\313\274=-\257\256\2758\"\026\274\2470\246\275Af\034<J\025\207\275\334.Y=\273\346\n\274\002$\003;2G\320\275\027x.;\210\203\204\275\207\266\243\275\327\324\200=\3419\236\275\370\330\022=y\235\271=\233\024\t=\204\370y=\224L\204\2744\334\202=#c\270=f\375\336==\371\306\275\201c\277\275J\217\331=\231\312\204\275\325\244[=|+$\275\235\322\245=9<\262=\026\203\260=\027\000?=\322{H\275-lL<I\023\253<\351N\236\275a\273\217\275\274\t\317=c\325\240=\265\273~\275\257l\245=\034\347z=\240\231><7@\215\275B\007\230\275\351s\207\275\235\000,=C\220\257\275\002\031\004=\000){=\374S\331=\306K\366\274\024\232\316=\325\324\014=\305,B\274\267_>=\316\266\242\2756\211\331\275/\240\035=#\275\305=\375G\337\273\263\026\276=-\207]\2728\274?\275\003A\243=\0007\324\275H\275\250=\235\257\214=;\032\370<\265\350\224\274\"A\234\275NB\025\274tX\202=\372\356\257\275i\214%\275\351\243\216=\357[\320\275~Jp\274x\001i\275MT\301\275\037uz=F\221\266=\236\224\232:f\351D\275\036\036\273=\331t\010\275\th9\275\036\246z=\356hP\275x\313y\274\262W\240=\312qD=G\270\321=\224B\312\274\355\273\204\273\207\013\255\273\242~L\275\333N\\\275\357\252\377<\234\333\267\275\316\250\250\2753y;\275H\205!=]xn\275]\334P=\334\304o\275\275\313\240\2758\266\021<\237f\315\275\274\223F\274](\243\273C\213\177\275&\315\354<\336\005W\275\")\326\275T\236\211\275A^m<\207H\313\273\254\310\261=<\330\322\275\270\030\304=\001fU\275\236\367\033=\027\210\361\274]=\325\275\230t\234=\275\217\330=\240v\310\274(\006N\274h\303T\274J\246\332=\336\362\r\275\014\214\261=\326(\244\275=\013\223\275b\330\242\275.3\213=s)\207\275\254\344\304=\350SD<\037\350\217=)\207\326=8j\232\275czO\275\236,Q\274\266P\211=C\243\256=\303Nh=\001M\035\275m7\224\274\265w\242=\3221\311=\323\035\262=HbC\275l\215\017\275\255|\224=\3279*=\306\304\250\274\035\374\034=\306\206\217;\2118^\275d\017\300\275f\202\260\275\317\225\335<\314\357\311=>/\301:1\200\267<\020m\206=M\316-:\212\232\245\275|\tj=\204\311\205<\331\035_\275\274E\363<UZ\020=\373\334\235=\032\202\327;\261\326*\275[c\324\2758\302\335=\324\033\223=\305\032\315\2742\325\025=\341\260\253=\246P\251=w\324/=\266i\254\275^\270\203\2746\306\016\273\366]\205=\371\266q=\004\250a=\305c\200\273\r~8\275\005Et=&+)=fI/=\210\321\232=\374\203\020\274@L==\264\226^=\030\362\240<\267\310\201=\220l\002\275\303\023<\275\367\304\303\275\001\214\206<\270\204\315\275\274\255k\275Jt~\275l\331\223=t\217\306<i.\017\275O\275\310\275\030\341>\275pX\222=#Z\317\275\\U{=\235\250\276\275B\346w=b\213\302\275\315\362\225=\202V\253=\262\2115\275\263\'\326=8\341i\275\317\271\243=\233\023\003=\005\304\341<\\\033!\274L\0231<h\316\317\275\207\'\232\275\210B\224\275\373C\335=\205\220\241\275c-\234=\2250\202\274\224\000\263\274\3624\303=\267\202k=C\006\220=\266\200\233<\332\223\344\274\336K\271=\313v\326\2752p\371<\203\341^\2751z\246\275\000\020\301=\004c\215=\260A\230<\336\006\300=\214h\261\275\362li\275\332\031\030\275\036g\265\274v\2754\272N\246c\275&\005L\275\340\362R=Z&\022\275\025l)<^\035\330=t\350><la\312=s=;<\217\352\250\275(}\277=n\316\217=D\242o\275 \234\230=\n\310\315\275\343\270\314=\323\376\313\275\032\320\261\275\261\240\260=\010\\\230=mr\312=\230t\300=\226ay=o\316\342<\342f\305\275\274\357\222=U\010\350\273\0308\254<d\n\314=B\266\277\275\206\232\211<\336\206\225<]!x\275\035\231\311:e\030!=G\225\022=H\343!\275f\004\232\273\230g\273\275\244\022\227=Kb\213=\270N\353<\350\327\305\274\253+I\275\034\246\225=\002\252\256=\335}\215\275E\014\240\274\275\252\270\275\025\347\303\275R\324d\274\317\033q=\000\241\275=\347\325\032;S\347\022=\253\206:\274\313|\236=\344\362u=\337th\275\0163\025=\037\243\007\275X\235\020=H\016\214\2757\013X\275N\223\250=O\213\004=^a\357<3\027\273\275\270\007\031=\'Q\266\275*\237o\274]\007\257=|\017B=\321o\226=v,\021\275\t\276\273\274\354\025\316<\027\n\303=r\276\323\275\037N\322\275\342\356\226<\231\274\275\275\203\266\223<KU\232\274`\253\230<\307\"\372<U\231\276\275!!\037\275\260\271\270=\201\330\243<\311\267\266\275\366\203D<\n)A=\2164\324\275\301\\\367\273\315\337\255=\221~0=\236p\261=\343c\203=\350=\271<`C\274=e\312\206\275<\330\301\275\364\264\256\275\004\0053=m\304x=3\226\243;M\005[=\201\234\335\275\021\352\326<\314\244\037\275\220\344\324\275\247\322\274;\225\3007\275ES\223\275\002=\217=\367\270\210=\010~\253=p\n\227<\034r9=\375\254\274\274\302#j=S\260\216\275Sm\013\275\033\365\262=\261t\200=h\312\251=f<\243\271%\223\301=\207)$=\342\264\256\275\241\255a\275\237c\260=\251\020;=\024Ap\275\335\344x\275\260\213\230\274\261\2132=(45<\242,\204\274:\331\262\2757t\303\275\264\272\241\274\237\316P=)R\016\272\210\371\247\275\001\254\260=\225\204\257\275\026\022\314\275i\366\336=zC\314=\241\216\201\275b$\337\275\2442T=\361D6\275j\271\311<;\245\274=^\320\235=\311\252\r\275\262\203\010\275\2065P=^\263\253\275\223<\r\275\3030\334\273\377\337\255\275\246\001\006=U%(\2750\242\210=\207\352\324\275\2442\327=Xh\255=|\311\242=\006\243\205\275\347\007\262;\206\306\255<x\021\240\273\337\033\245=l\254\010\275\235\2626\275*\t\204\275$\311\261\275\326N\221\275\251H\003\275\251\212\212\274\266\021\267=\236Am\275\374{]\274\307\327Q\274Xb\324\274F\372\334\273\211\312\261\275\205v\204\275&\017\352<\022\264\274=t\266\303\275\302Gj=\255p\267<k!T\275\"X\216\275\020\307O\273It\335=4\265\213;\231\357\244<\2158y=[\225L\275\007\235\263\275\007\016\250\275\310\361\273\275\231\241\270\275A\004\254\275\023%b=\360\213\212<A\252\201\275\005\271\312\275\221)\326\275\036=\267\275\032\256\333\275\332\207^=\350\372\217\274+\320\272\275Y\001\312=\027\377\266=\224\317\313=-\210\177\274\222dK=q\033\333=\271\032\265<\340\233u\275~$\240=\325\371\201\275o\377R\274.\213h\274\001\220\302\275\276\025\343\274\355\351\220=\205f\002\275\0302\207=r\002q\275ud<=\006T\353\274\274\361\244\275\274\234\336\273\365\271\212<\3405\363\274\304\036\036\273|\300\235:\374@>=o\210\001=\302\031\221\274Q\327\336=\302]\007={\276\261<\312\313f=x\261\324=\376\224\217\275pH\264\273\245\034\'=\356C\246=\247\370\010=\032\302*<,\312\201\2758H\036<WD\350\274\375\210u\275\341\262\272\275\376\222\252=\rD\207<u\250&<\024\030\247=\rLL=\235\321\265<n$@\275C+\226\275\2632f=\2343\226\275\010\212C=\r^\321\273\223\355\367<\225\212\205\275\323\364T\275\231|\234=\316\217~\275\214\263\224\275I\230i\275\321\205\022\275\304\334\331\275\225{\252\275%|\221=\225\221b=L\002K\275n\271\322=W2\021=\002*\007\275R1\242=\227M\024</{\302\275\n\214\016=\r\232\327=I\310\251=5\333\227\275\243\\\021\275Z\216\307={e\274\275\362\036\030\275+Y/\2756\254|\275\344\021\322<J\321a<\231?\023=\020\025\206\274\334\311\336=R\014\215\275O\224m\275\262\350\256=2\307;=Y\312\310=\335\3313\275\255\276\306\275\223e\263\275S3\233\275\224C\263\274\363\246\221\274;[\367<\270\244\311\2753\254\305\275\252xe<\270\343\000=ti\306\275\272(\267\273r\021\233\274z\342*\274\361LK=)K\323\271\001BI<.\357\025=\035\306\244=\322\343\212\275n\271\266<R\016\233=R\254\024\275w\200\262=\216V\232<\331\327\231<\247\355*\275\377\303a\275\361\302\016\273m:\003=\231\374\223=Xo\364<lM\205<W\337c=\177m\255\275\246,\241\2755\275\026\275D8\217=\"\376\225=v_\274\274\014\371\210;8yj\275\277\211\276\275\330\261\352\274I`0\275!\273\235\274\311\302\207<H\243`\275\244\353\277=j\370g\275\313\027\354<f\017\305=\276p\207=K\264\202=E\374\220<D\\\240\275C\235\333\273W\231\303=z\223\245\275A\"}=\353k\033=\342\235\311\275\202i\243=\3206\322=\365\021\227=#\377\230\275\321\026\225\275\371\322\031\272\277\037o\275\277\305\204<H\200\270=m~\322;\370\343]=\3174\334:\017\010\260=\027w\323\275A\241\213=\245\016\302\275\265N\241\275\234q\235\275\341\232\272=\224\312G<\"H#\275,\216\301\274.S\257=\265v\203= N\034=\304I+\275\354\337-<\274u`=\0147\331=\275\240\363\274}\374\215\275E\030\026\274&\216\310=\250\004i\275P\366\026\274\276\025:\275\262\336\200\275}\201\312=\311\302\253\275\252Y\231=`\303\273\275\020N\025<D\364\031=?l}\272[\314\237<s\206\246=}\264\240\275O?\306\274\230\240\251=q\256Y=\352\360\375\274*dz=2\336\304\275+vO<\036\'.\275F\205\366\274\264xY=S \321\274\327\rk<\353E\273<Lj\274\275\341\303#<\377\341@<)P\261=[\240\332<[F\033\275~\353\215\275\336v<=\234\036\223\275\006%\205<\243l\324\274\346p\311\2753\333\263\275k(\214\275M\276h=\002\230\223:\220\241\322=\000\342\264\275\023\\\023=\257\364\232=\255HX\275t\252T=h\244\331\273=\350\250=\007\004J= \304\335\275I\366s=|\254\031=\322\360f<\352\335\304\275\000\213\273\272EV\023=8\037\253=\373\256\255\274r\020\277=\341\000\242=\227\254\306\275`\360|\275\371\347\010\275\230\326a\275\031\257\252=\374\367\006=8S\312\2746E\002\275\311\345\002=dA\215=\034?\257=\224\333\263\275S\362\014<a\216\241=bW\326\274\321}\204=\205\361\271=% \306\275\'\357\217;$\201\230\275\217\031\022\275\302\035\275=.\024\275=\226@\372\274n\214\021\2751\373\226=o:\213=\037\363\345\274\237!\007\275\322!\304=\323\325\217<\232\255O<4\344\326\275\355\321\276\275\2556\266\274U|[=yn\231=\027V\035<\370@\307\275\2235\217\275}\'\335\275\245\232\236\275\224\241\204\275\214\374\274\275\371\034\036=[z\177\275\023\315\265\275\330\216\312=\226\325\245\273\207\027T=`\025\224\274\007\320\334=#H\236<u\321X=\313^\t=\220\316\335\275\231nO=\350\346&;Sm\217=Pe\306\274U\242\312\275<\214\357;\010\330\242\275T\373\270=)\037\325\275ww\026\273\277*\203\273X\030\251\275\037\357\006\275\013\243X\275\236z\253\275`2\305==\355\277\275k\232\341\272IC\266=\322\022\271\275IH\321;\274|2<\361\026\237=\347\023\312=\367\200s\275\363\203\321\275\246\265\004\275\250n6\275\001>\203\273\245S\006=1{\"=z3-9\237r\206<\362U\332\275\037\257\251\275\033\261\215\275\225\371\206\274\335t3=\320\024\177\273\266C\022\275\030\2565\275\270\342j\274>\311\331\275\243\207^<U\337\207\275[\334\266\275i\365\203\275\225Zu\275\030\242\360<\\\331\013\275\227\252\372<\026P\340\273S~J=o\200\245=b\244\224\273\217;\271\274h\271\223<[\036\335\275\342\255\313=\267RK=C\372\317=\344\375\261;\360\203\\=\005\014\260<\271\206\322<\233\274\306=a)\277<\022F\305\275/\004\244\275\324\337\263\275\333\236\247\274\343)\323=?\005\247\274\327\335\253\275m\2270\275\\#\305\275G\375J<\303 \201<T\331\255= q\215\274\226\tp=\027\266\236=\021\370\316<`\352\025\275\243\005\240<\023\250\264<\266\016\311=\275A\325\274O)\251\275\016-\337<;\342\342\273\353\010\010\275\313t\316<~\367c=\357\245-\275\370g\323\275\005\347-=\177\242\220\275\022<\224;\373\253\323\273\014\376*<\246+\306<#\350\301=\013\230\331=\224\351\212=\316\340\330=\270\006\322\275\017,\001=(\270\317\2739\264<=]<F\275\215\272T\274g\t\265\275\'\004\207\275\006\227\205\273\244\322\221=\314\273\231<_\033\301=\024\201m=\2632Y=[\276\262=v(\232\275\231s\307\275\356\017\342\274\310\016U=\021\253\207;k\376\333\275k\014\236<\332m\337=!\206\226\2759%\263\275\346$$<5*\025\275e\205\000=\241W\234\275\335\272n=\264<\026=]\301\241<\363+k\275\264\227:\275<\346\224=|\354\310\275C!\001=\333|=\275{\026\000\274\366A.\275\001m\317\275\2221\216\274\315\344\260<\357\245\305\275^\232\330=\023Y\265=\000n\327\274<\327\235=\204\037 =FV\216=\001\321A\275} \361\274\301\236\262=\367\006:\275D/\337\275\250z\\\275\\\221\307<Su\273=\310\365@\275]\2164\275\322\205\035;\255Q\215\2757Z\200=`\006\204\275\313;\274=8\374\022<\030\367\270=\317z\253=|z\242<\007\343\250\2747\234\216=P\246\304<\301\230\243=\2362\360<\034\330=;\264\265+\275\362?&=\010\251\233\274/\207\233=^d=\275t\257\000\275\234\337\033\275f\223\203=\017AR\275\333\202$\275 \362\220=S\344P=\233\226)<9\022\316\275T\275U=\352\312\260<\317z\354\274\243\264\305\275r<\264<\002\326\257\274\016\236\336=\223\330\316<\242\2111=\337^\266=\357}\322\275Fy\326=\211\272`\275YL\374<\324\021\323\275\345\201\244\275\241\232\200\274\362EI\275\366\014\013\273\345T\034=!\003\330=\\\016\256\274\300\030\203=\026\177}\275!\201m\275\022r\033= \261\177\275\324\202\277=.\251\321\275)\266\324=\262i\236\275\"\3768=\210\205\037=\323\306i=H\375\322=\343\374\333=\235j\242=?g\034\274/\367\372\274y;\331\275F\211\037\2755fv\275\033\361\235\275\203\310\203=\210Z0=\371#\352\273\027G\201<%\355\212<81{\275\204\370\255\275\\\023\327=\360\250\331=e\224e=\354V\342<j\332$\275\003\377v\275/\327K;3q\t=\221\247k\273\363\331\201\275\236\246\246\275\347\032\272\275\030\320$=\245\336,=\201\355\300\2756\273\270=\316\310W=\204=\324\275\344\364\221=\256\365=\274\346\334\256\273(\303q<\210\220\221=t\340\032\275\331G\300\275yD\302=\223\356T\274\252*#\275\342\006\225\275Q\006\330\274\312!\365\274SD\316=\226\0317\274?K\245<\235\022\352:\013\317\020=\340\313\323=\241\021\022=|p\202\275\315\352\336=\247\357\266=\334\035\210\275\246\224\334\275Q\251b<3b\237<\204\216\017=\324\212\025\275G\331\\=\367\211;=w\014$\275\320AH<\254%a\275v\204\t=\t\370a=O\242\310:\t\2554=\207\363\270\275\337\370\244\274\362\315\206\275r\335\213\274j\r\224\275?\343\251\275\336\277\216<\252%\221\275\t\004W\275^\027\224<\017\022\345\2735P\233\275\330\347\t\275K\237k\275e\314J<e-\222\274\303\320.\274x\"\266\275h~\201=\253}\226\275\031\230\021=@\032\210=\000\321\322<:\377\017\275\313\226!=_\256\327\275\003f/=\243\257n=`\323U\275\337\016\036\275\322\272\021=n\332a\275\244\315\032\275l\377\201=\306\2506\275V\344\201=F\262\253\275\242\263\004=\030\325\300\274\272\276h\274>\371\276\275\256\025\001\274\233\365\304\274\344\273\007=^jF\274\203\035r=wBM<k}\215\275\033\263!\274\317};=\353\251>\275I\2101=\036\324,=-Uy=\231s\270\275LM\343<\375\324\257\275\335hw=\250\377\274\275Fz\r\274\310\361\321\275\302\301\022\275\025d\320=Dh\302\275\312\337\235\273\030!\351\274\246\353\301\275\335\315\200\275{\331\310\275[\360\263;*\326!=\360\024]\275\237C\206=\235\303t=\377\236_\275\325\300\267\275\330\216\274<5\215n\275$\216\n\275<\211\213=jg\215=}\260\263\274\271\351U\275\340\377E<\363\321\326\275\313&\257<\020\357H\275R/\260=T(\211=\316\241\350\274Ld\205=\316\334\220\275\353\033U\275y\214\"\275B\221\254<\277\357p=\264d\326=RB\214<T)\306\275zm\266\275\223MC\274\345\213\341\274*\256F=]\366\303=%\241\336=\214\351\023=\215E\332\275\351\224\266=\331\255\376:1\006\345\274\263\316\036=\345\211\302\274O\370\214\275\236r\277\273\000\021\302\274\031\233\331\274\251}*\275\350\333\222=b\370\276=\032S\266=S\003\246\275\307}h\275n\324\t\274\200L\316=0\373\314\275R\222|;\032#4\274\026o\020\275\365\224\374\274\270\255\313=W\330\241\275Q\236\363<n\207\004\275\342\204c\274\016\034\312\2732Y\274<x\340\300\275\0028\"=\356\0075\2746HA=H?\212=\235n1=\347\250d\274\277\362d<\036\232\314\275\326\225?=\332\035B\275o_Y\27592\'=\364P\364:\356B\022\275m\206=\275\270\335\224<n*\000=\356\353d\2749\234f\274\302F\247=qk\301\275|>\271\275\237\036\201\275\t\313\353<\277\251N\275\233\335&\275\231\342\320=\240L\236\275\334\250\200\274\322\325\333=\245\266\000\275LK\027=\304\227\253\275%\3571=\313(c=\367Y\233=\030\021G\274\343\334\022=p\227\'\275\3503\256=\270\335\252<\265l\215=G\210\233\275\232\253\203\275 \360o=\235\307N=G\030t=\253!\257\275\t\036\201\274\346\251\250\274a\372\265=Tg;<\330h\207\275\315\223k=#\234L=`U\001\274\313\253\237=\240\031\242\275\362~$\274S\334\240\275\235S\332=\211\200o=\240\276[\274X_\327\275hV\215=\035\354\304=v\2105\275\001\376\033=G\3120\274\323\205Y=\234\350|\274\036\006\276\274\022\310?\275|\351\334<QFd=\327\371\312=\223}\222;\265\300\332\274\225l\246=j\357\302<\334\331\004=\350\\\242=Q\357\320\275\215\244[\275\360\213\036\274B\031\226=\314\220/<e\232\335=\016w8\275\024[\024\274K_\304=\204\311\210\275\265d\260\275~\231\263=-\230\223\275\334\376p\275\322\263?=\362\322\213=M\370\374\274\262\313\324=\310\026\340\273*\246\232;m\312\376<\236NR\274\000X\233\275=\302&=\364?\201\275\307\321\357<\216\024\316=\177\243\231=\237\357\256=\'?\333\275\030\014\210<D\357\353;\360`\274=\351\005\250\275\257\323Q=\33554=?\004\317\275\336!\231=\360\364$\273\323A\241\275/EX=\013*\010<z\030\227=7d\207;\355k0=\202\235\237=\371\262\013\274\025$~=\213\243\335\2759\020\373\274\226Q\211\275\232\341\225=\2774\001=d\252G;b\245\240\274\257\034\277=4&\237\275\201\334\246\271\317M&=\371^+=\316\3616=\3776\003=\3663\360\274\037\323\242=\005 m=m\340!\275\2434\274=h\366\336\275\332-\326\275\335\014V<.\305j<\237#\340\274\331\"\300\274`\332\350\274\241}\327=h\364\272=v\256\334\275\256\202\314=\345N\027=\004s\302\275o\374\363<m\021\"\272\364`\311<u\364\267=\357]6\275\275]b=\300\377\030\275\3734\354\273\250\033w=r\274y=\342\002\000\275\244\345m\274\262\220\236=\361Z\301\275\333Up\274rM\021=\021\310[=:K\215=2O\216\274%\230e\274\306\352C\275\211b\237=\027\373\312=\314\034\270=\'|M\275\347\261\226\275.\"\243\274l\377z\275)\311\234\2751\253\300=\374\266X\275\344]\204=\326\214\273=$\263\345<\275\235+=\334\360\274=\233[\200=3\311b=\305;\332=\361\301\334=\352Kr\275\233\010\307\275O\025\313\275\322u\232\275\004\231\330=oT\177\274m\311\340<m\277\007=\315\334\255=\311\272\205<\335\'\300=\366\231!:\345\235i=3|\224=oT\001\274x\275\316=]\206T\274\027*T=\360X\337=D3\304=\262\375q\275HAz\275\016\374\303<\007d\323=\037t\263=\227~\276\275\021*j\275C\010\'\275fv\324=15\214=\302\323|\275\203\275\315=\234\240i\275_0\022<B\371X<Y\020\302\275VaZ\275\342\356\246\275\032w\006=\021.\223\275\322\331\220\275]\251\251;\250\227\210=^S\023\273B\010O=\335\235\374<*\325C<F\265\224\275J\325\207\275\0045\204=\222^\234:\265\354\202<`\007\261=\223lJ\275\335\346\261=$\005\320\275T\240\216=\017\335\307=\346q\326=W\022\021=\"2\340\274\375\303x;%\356\347\274h,_=\037\010\377<\261\236\374\274\3175\263\275S\017\310\275\333\013p\274\367\336\226<\365\0225\275\374\354\246=a\206\306\274\354\300\243\275\2245\037\275w\235\037\274\017\233\324=\034e\227\274\221\256\274=Nh\300\275\261\240\313=iY(\275gbl\275mM\224\275\002\377\252;\342\256\232=\331+\215\274\230\245\177<\224\221j=L\365\344<Kf\376\274\220f\326=hS0\274R\026\246\275\371\222\214\275\303p\315\275\3244\326\275\277\215\217<\303\205\331\275Ico=\374\310\367<mV\272=\0340r\275\244\016\235<\327\227\313=\352\211\270=DA\271\275\226\237\241\275\244@\270\275\003\373\202=\272\261\223=7\036K\275\344\206\267<\247\236}=\010\217\242\274V^~\275@]\243\275\t\006\324=S\245\326=\320\023\322\275\246\246\231;\203i\203=\350\344\331=a\334\352\274\214M1\275c\314\266\275\006\014\203=\232\360&\274\247\246\017<\005\276\343;\324\300r\275\2049\307\275\256\365\216=X(\324\275w>\007\275A\234j=\371\014\026\274\365\320\366<7\270}=\376\003o\274+P\324\275\035\234\330=\273\023\331\274L\357\342<\351\312f=%\354\234=\350\206\240=n\013\2409\231j\227\274fG\267\275\356\255,\275\262}\317=]Za\275\376x\313=q\030\322\275~\224\013=\000\034C=\007\022\214<\307\3240\275\3244U\273\320\'1\275:\r\375<p\320o=EW\312=\237,\016<f<\300\275*\327\324\275`e\335<(\237\032\275-`\214\275\341W\014=!\374\233\275\220n\302<\360\300\327=\365a\"\275\202\2074\274\222\236\336=\372\270\311=LM\277\275\346d\251=n\345\375\274 C\002\275S\007\276\275>\036\204=\300\032S\275\346\001\275=j\237\267\275\311\333\272\275i<\231=\315\266\327\275\345S\257\274\261P0\275\333\201\257\275\370\247\323\2759\344\260=+\340\224=\376\360\253=\217\236\223=e\231\321\275\3129y\274\220G\263\275\330w\203<\301\023\271=J/a=zZ\"=Go\271=\004\277_\275\010\027\236=t;b\275\261\271\335=Q\277\232=\000\332$=\204\236\200=\n\231\346;`o\232=\236\245\213\275[\322!=\337P\203\275\312k\212\275\262\317\331\275p\323w\275d\232\301\275M\205^=\261\273\256\275\215u\214\275\311\321$\275\023\014\'=\334\275{=c\374<=\243:\240\275\\D\272\274\337&\217\274\355^W=\272Rd\275[j\247=\002\034\226=\331f\225=\3514\272\275F\255\330\275tJ\375<\266~\216=i\317\033\275\303U\215=\344\367\374;\221\200\325\274\343\014\224=\246\364\266\275\377\032\241\275\211\377\003=35\317\275\323\256\311\275\033|\205<%\257\221=s%\210\275\232\355a\275\225\300\313\273U\263\226<\263\037\030\274P\362\311\275\346\334X\273\220\260\001\275\017\001\253=\215\3164=\253/\243=`\215\266=\227\366\255\275\221\030a\275\310T\201=\263$\232\275I\2640\275\305V\200=\267R+\275\202\026\206\275\205\320\247=4\212\244\275\231\364\005=m\335\270<\271T\310\275r\335\307=\255VB=\003`Z<Xz|<\346\224\327\275\231\313\232=@)s=Qo\310=\373\'\224=;\263\252\275\032s\313=\370\250\261\275\024\362)=0\307\363\273\000V]\275\021\271\253\275\340\324\334<\030\261\241=\367\r\302\275\345\317\267<\326\031\271=\264n\261=3\332\245=\340,m=\007\207{\2758Yf=\333\247\217\275\2454\202<\376\351O\275\307\227Q\275\027|\014\274l6\263\275\276T\332<\236\006\200\2752\267\315\2757\026\025=:\013:\275\274\374\207=s\"\177\274n\373\263;\344}\206=*\362\244\273\035\240\331<\262\266\274\274Q\306\363\274\357\315\314=\343\3368\275\235\374\240=\362g\237\275\016\373\334\275\231\024\332<\337\320\'=2^\244=S02\275\375\312\233=\373\207\255=\017\005y\275\201\302\232\275 \312\227\275\306\360\253\274t\203\331<O\276Q\273\233\323@\275 \333\253<\247\227\013;\\3\264\275\234q\250\275\241u\205=\201L\220=\247\214\267\275OLa\275\357\251\240\275,}+\275\026\215\322\2743\205k=dW\221=\2464\010\275\231f?\271\237\204\325<T\354\030=}&\231=\025\314\213\275&\332^\275+z\227\275\364\215\232=O\335\257\275b\240y\275\003\356\215;Q\275\332<\344\234\216<v/\302\275\314/\226==\013\256\275\023\347F\275\226{j\275\351X(\275\347\374Z=\010o\026<\036\027\315\275\022l\254\275\250\273<<\223\254\200=C\2440=\370\367\217\2755@\237=\340\033\313\275\333\355\254=\334\226g\274<=\206\2758\351!\275T\213\217\274\236\337\213=j\026\272=;\210\245=*\364\034\275Q\276\244\275\354\326\263\275\306\242\r\275G+\224\275\017\273\277=\303W\310\275X\247\275\275\317d\353\274Lq\362<4\252j<\377\221\200=9\223\212\275\305\027c=\361\341\323\275\341\243\3719d\233\243=\263*J<\200rA\275\370\t\200\275\272\242\307<\262\311\233\275o3\244=d\244)\275\373\240\225\275a\374}=\255n]=\246Rf=\226\230\300\275\206\342\224\274\361\346\345\272\005\204|\275k\226\222\274\034\243\225=\373\343\225=\013\261\333\274\261\256\355<&=\272\2757Z\200=O\037`=B \"\275\247\360\221\275\331\253X\275\207\367&\275\"\032\313=q5\300=$\n\023\275\227\264e\2755\232\225<jQ\203\275\232\257{\275\305\366\260\275\n\253\205=\333XH=N\365\237\275\340\212\333\275\263\336e=\324\224g\275\315\323\332\275\323C\316=kK\037\275A\210\263\274P<\272\275\233z\222=\362\375\267<\223\005\333\275\026\004V=\026\2310\275\266\341\201=&QJ=\222\260\257\273\316k\037\275&\204)=\212\004\310\274\326\252\216<\220\254\235<6\357\036=t\026\022\275\271lA\274\227\336\276=\362 t\274(\263T9\243\213\265\275\272\021w=\255\377\275\275pY\245=\010!E\273\353\200e\274\376g\226\274X\226];\306\213\013\275\370\"\214\275RV\203\273\304\036\337=L\027\"=\324S\242=\202YL\275LL\354\274\\g.\275\270c\311\275\220^\\\275\326\262\305\275\322\210\364<\004\021\364\274\266\324\226=\310\254\244=\340\237\252<\212\323\226\275\027k\225=WG\242=V\223\300\274PYV<>\315Z=B\374\314\275>Y\372<j\326H=\017j\236=\t\237\231=\036F\"\275E\'\026=t\214\262\275\251\217\317\275\2728\342<\267\333\342<\002=E\275Kl\213\272\323\tU\275N\310(\275\301c\341\274\0179\r\275\321\215\203\275\344=\267<\037\326\261\274\342\016!\2754`[=\2474\274\275\226\300\247\275\227\3375=\362\312=\275>\306\217\275\203\243\271\275_Q,=\027\004\247=\350_\232=F\031\214\275\335\207\307\274\\+\212\275\3241\024=\350g\334=\234\020\010=k\353x=\310\356C=\260h\207=t\022\242\275c\313\221\275\332\304\243\274\220*\313;\026J\003=\356p\334=\024\177\336\275n\210\315\273\245\004S\275\262\307\303\275\340\265\013\275vC\377\274\004\310\242<\233)x=\355\277\272=g\022:\275\275\t\276<\032\325\237=\277\265&=\300\177\220=*\330\220\275`;\364\273\2341\232\275\260\373\302=\226\310{\2748)\342\274\265\333\254\275lT6\275<\'\300:Wb\301:\270:F=C\013\333=\355\204v\275\364N%\275\320w\267\274X3\310=[\216\310\2758_\236\275\326\214\251\275\317e\335\275y\231\216<\217Ou=\256-\225=\n\340\033=Yxv\275\205\246\315\274\245q\272=\216\256+\275c\247\"=M\365,\275\344\301\305=\006\033P\275\213_\271=\251B\311=\310\260#\275\224v-\275\272\214\251\275\023V\276\273\212\225\204\274`\013\007\275\272\351\310<W\234\310\274\335+\000=\233\352\215=\3355\251\2747j\331;K)\302=\232\271\023<\010w\256\274v\035!=\276#i\275D>\234=\273\245\226\275\n\275\252\275\344\022\352<\323\334\305\275\245\300\360\274\272\315\262\274\010#\242\275H\357\313\273\t\215\000=\366x\250=\007]o=\007=\302\275A\354|\274\'\245\352<\014]9\275\"x\323\275G\220l\274!RI=\034|\257=\331\303c\275\371[\010=\3570\257=\274M\'\275\376R\334\275\272\0302=)\032\250\275\306\252U\275%\214*=\366K\360\274\216\017\200=\362\374\006=\2206\301\2755\035c=r\276\371\274\216^\217\275\262\320j\275\211\361\366<y\266=\274-\345\226<q\201\327\275\226\240l<\2341^\275\312\207I\275`\'i\275\243^\255\275\227\344\212\275\000\235\032=_\250/=\370%+\272\201\275\'=\332X\327\274\317\305==G\362:\275\326:\226\274\243\303\272=\252\251.<N\2379=\031\331\317=\177?\235\274!z\252\275\"\364\323\275\346\265\320\274\007\215\204\2753>\024<\356\346\262:C/\373\274_\371Y\275\274\'=;\204\262\365\274\222\222\303\275\321\000m\275\357l\277\274\3078[;^N\301\275\301\300r=\222\377A=\234\211\243=bR\217\275\311F.\275\307\276\301\275\0302-\275<\317\230=??\324\275\222\362>\275\332!I=\033,\312=\013\246v\275h\361\277\274\315\205\326\275\350\325 \275\347\254L=P\252z\275\342\206\254=p\346W\275\270A\231=\206q\225=dk\316=\010\367\230\275/}\373\274\201\277\231=\211C\256=\344\336\035\275\226\343\253=]k\200=\251Z~\275\231\214M<\373\372\231\275+\300\204\274\320\313\366\274\243\2114=\005q`\275\0361\013\275\276z\222=\371\214\304=\027\300\340<M\273\214\274\223\000\325=~\307\215=\247\315\033\274\235\257\225\275\311\363\010\2751h\223\275SS\237\275\226\021@\275e\031\334\275)Q\212=?\265C=\206\n\256\275J>+=\'_z\274\316V\276\275#\207\026\274\365t\002\275K\333\225< J\330\274Z|\366\273K\255\'=\325r`\273*\311\357\274\327\025\312=\025\214\223=;1\362\274\365\374\001\275\364\031c=\272O\221\274\364\276\271=N\326[\274\232\3179\275G\027\224=\212\317e=&\002,=\233,r\275\023\263\257<\246>\005=\255u\315=:\360\237<\034|\036\275oj\201=0\030\313\275\014\335M\273\211C8\274\201Ge\275b\261\235=\021\\\310\274\244\303\226\275w\335\267=$\3332=\\Z\336\274$E\030\275\302<\243\274\237\250\332\275\001\343\202=U\363\322\275\013e\245<\276\374\212=P\024\253;\377\342\301\272\302?\224=\324y\314=\316\217\025=q.1\275\352\367\247< G\335\275\357\321\243=\031{\261<[\267\246<\343\223\031\275\013\005\237\275\016v\333<N6\215=\"\233\262\275\334@\\=\021\276Y\275\333\306\317\275H\030\240\275\377\217 =\374\245T\274\307\367\343\274\302T\"=Z,\007;\247p\321\274g\005\013\274\357\363_\273T\333\223\275\032\024\273\275\033|\332\271\024Z\267\275\360\r\233\275\r\354\267=\226_\211\275}\252\310\275)\240\223=j\365\330=Hi\305\275\\\346\300\275\341C\260=r]e\275\005\034\210=\327\376|\275\344X\336={\377q\274\r\344\315\275\330.\312\275&\026\037\275JE?=u3\214=3\252\337=E@\275=\260\2471<\250\334\324\275\354r\240=\354R\n\275\275\221\212\274\241\313B\275i\032\264=&3o=`G\325=\207\300\242\274\301\321I=.\231\232\275\215\032\203=\0316\026=\014>o\275b_\237<&Q\277\275\231X\203\275dw5=\341s\225<\246\202\251\275m\344\240=\373\035\337\275:\361\325=\366z\302\275\027:\026=\0055!\275p{\301=[p\223\275\2779+\275\214\205\361<\022B\322=!bb;&\317\316\275\021b\001=aR\330\274{1g=\352\355\233=\263\214#\274\"\276\254\275\036l3=N\365|=\017\325S=\370\234\305\275J\253\263\275\276\314\317\2750P\315=\224H\'=Lk\376<b[v=2x\312=\300)_<=\265\311\275S\362\201;t\270(\275\024\313\326\275Kq\326=\035\376 =G\211\356\274\247\227x;\016\224T\273\376\017\257\275\247\355\255=\363\364>\275\270;\237=\303\254)\275h\031\361\274J\257\331=/\270\177\2745O\352<\033\206\212=5\245\360;\204f\276\275G\031\337\275\322\267\230\275\376Q\325=\017\370><x\274\302\275\376\033\265=\266\"\232\275\337\361\260\275[\001\037=\271\007\253=\360\244\222\274\362\216\252;\000\r\022\275\353g\225=\003\177\306\275\377\221\313\275\355\234E\275\267\245\230=\263;\220\275\372\226\203\275{$1< C\273\275b\\\233=\224\275\314=\320\304\215\275;F\\\275NC\270=/\322\311\275_\224\257<\n\222\265<\322\266\250\274G\345\243=-m\256<\213Z\n=4\010{\275!&\332<\336\304!=/MU=\367\314a:\376F\230=\266\240\201\275`%\001\275\273[\331<\021\007Y\275\216\315\211\275t\312\005\275\025\331\307\2746nQ=g\206\347<\352^\336=\265\350B=GJ\375\274\'#\212\275\276\234\222=e\214\032;\373\3005=\317!\217=\n\317\267=\314h\306<h\232\331\275\353\324\331\274\346\226\035=I\233\270=\2720y=\317\374\017\274\233\336w\275\222\007\244<\324\024U<*\013:=\334\346\000;Q\026\206\2759\343^=\000;\304=\204\003\213\274\266\320T=\300\351\230\275&\310<\274\211\033I\275\301\211\216=\006E\211\2738Z\035=\317L\323<\3629m=\246$\303\275\361\250\253=w1\221\275$L\234\275\376\200\334=\001[\215;\373\256\316=\212\3726\275\352\007\342\274\302X\302=\326\336\301\275L\213\332\2755\230\254\274\203\033\273\274\217\243\221\275\237I\220=\242y\210\275\231d\331=\243M\343\274\"\331\340<7\226\221\274\n\t\020=\021\226\304\2758/\203\275b(\305\275tJ\027\2759\362\317\275[\374\276=\037t\253\275\372\351\220\275\270\004\310<\220\306?\275$\362\007<Y\257*<\\\323\\\275\330h\244\275\275\272x=\231\243,\275\266\210\205\275\221\273\234=\205KC=M\265\225=?An\275\246^\017=\346\310\212\274m\333d=k\332\332=e\216\316<{,o<\260\343\222=\361K\220\275\016\326>\275H\373\211\275\274a\216<\323\001^;d\030u\275T\277\235=!\035\216<\206\340H:\333e\216\275\365U\374\271\365+-\275\253\236\301\274\217&\274=\'\021h\275\275:\314=\177fW<\275\313\256=[`z\275o\267n\275R*\322\275\243\3716\275Hc_=\004O!=\005(\321=\037b+=FF\267=Yx\026=o\361\217\275\341\031\221\273\303\351\037=\322qf=\026\340\252=\326\\\275=\212H\350:`\203\031\275\030g\233=^\013E=\276\206\237<\231}J\275\326\270\n=\273\254\207<\227x\241\275\375\221\253=\n\317V\275{\202`=\237\310\202\275p#\177\275\"|\262=\261r3=\363\236T\275\232n@\274\350~\211\275 &q;\033\033\252=\315\337\236\275*p\301<@\002\215=w\263\202\275\372\2417\273\351kr=4.\333\275I\007\035\275J\336m\275n/\331\275P\225s=-pk=\321@\200\275+4\241=RuY\275h\335\221=\333f\306\275w%\310=\374\320\261=r*l=\343\177\336\274\353M\033<Bl\224=\202\330r=\254\203\016\275\365\271\321=`x\212\275\303E\336=\034M\300=\327\3069=Z\276\204\275\372g3=\375.\022=\207C0=\257h\247=Lq\335\275\375\257\014=\221B\005\275\333\010<\275Y\031\231<\301\221M\275\330\2718=\207\324\312=\314%\257\275\227\025\230=\"1\303:\3136\013\2752\336\254=\013\036)=U\226\220=\204a\275\275\345l\035=\376\241\266<\003D\'\274\266\326\320\275\317K,\275\003 \256\275o\022\256\274S\344\204<\343O\257\275\313\304\314=\014\341\237;\241\270\227\275[\3532=\200\010X=\250@c=\274\022\221\275G\001==\252M\235\2747\233J=l\260\226=H\327R=\027\001\221\275\336\372)<8\022\246\274\374\271\020\275\\X,\274]S\216\272\243\227\237==\355\223\271\347na\275\353\237\254=\177~\310=bN\237\275\253!\274\274\327\010\226=\314\217\317\275N\344\322\275%e\026\275\343\002\206=Y\031=\275\327F\335=h\277\330\275U\214w\275\360^x\275\272Y\334=6\273\336\274\241\371\271<\240,,\273\350/\232=\221\273\224\274\001<\214=\216\207\273\275\301`\240=\225\014\326=r)\304\275\261[\272<J\252\267\275\274\036\375<\245i\256\275\002\245\306\272\307\204\245=\263\005\260\275\270K\237\275\315\3209<\371\276\322=u\020\254=\233\347\310\275[z%\275m\312q\275\200\200\247\274.\2174\2753\275\221\274\t\024\301\275\232|\233\275\322\017\231<\316\226y=\023\234\310=\334\300\306=n\336\014=cT\273=@\374\222=\326\003\306;\210\2207=~{:\275\rG\273<u\250A\274+\222\005\275m\266P=\317\265\325\274\255$\241:n%\201\275a!\332<\206\332\312=^\216Z<\377\331\304\2759j\303=\222\212\356\274n|\246=\234\375/\275\243\235\235=^\"\246\273\314.\215<Z\224\246\275\206BH\275H@\256=p\201\265\273\'\251\321\274jA\325\275gsz=qp\026<z\313\331\275\346\216v=\312\010r\275\317\2469\274\000\200\334<D\3021={;l=\233\223\261\275\262W\221=\213\211>\275\251z(\274W\355\376< \240\213\275\3704g=\355\'\016\275HT\326\275y\304)\275\3715\266=\302\224%<y\302\321=\235\026\323\274Qd\236<\nk\034=\006\344>\275\\\034)<VC\022\2753\367\177\275\231\204`\2748a5\275[\226\002=\037f\003\275O\371\327=k\225\213=pO\274\275\254\325\234\275]\313f\275\327\206u\275\022\275g<\305k\026\275<\362+\275\352\254\245=\"\263\313\275\030\247\376<H\016\325=df\240=\312\243S\2755\253p\275:\265\275=h?\'\274|\373\375<\375\205w=\235\272\212=\216|\257<\230\266\276\275\337\221\300=\322\334\257;S\254\323=\223\351\273\275\370S\243=\3137\375<A9\371<\367Q/=\3442\376\274\333\261%\274\002`\225\2755h\306\275\2316\031;\315b\255\275O\323=\275\365! \275S\'\304\275l7p\275g\177P\275(a\273=v\271\331\275\307h\303\274\304\263\261=5\016\035\275p\305\277\274x\032\254\275\215\273!\275\236\326\303=\307]\214\275B\251|\275\023\232\271=\006>R\275riW=o(\235\275\352\215\365\273\344K\337\274\006.\326\274>\356\356\274\376\r\'=\351$u=\201\346h=\214\n\327=\366J\314\275a x\275\252\375\224=v\233{;\306\267\266\275Yr\016=G\276\327=\021&\004<[\034f<\305p\300=\035\006V\275\366\n8=\363>\311=\204\304\2719z\225l=(\320,\275\375\313h<\272\244\205=\2718\260<U\242\230\275Sy\267\275\337\334\227\275G\330\241=\0177S\275\250\257\373\274\330\344\213\2755\366\303\275S,\205\274\t\311\235\275F.\333=\314e\215\274\216=\205\275\000T\274\273V\211\277\274~\333\027=\225W\266<C\007\230=f\335\225=P\224\324\275\350\3355=\341R\010\275\001\354\343\274f\351\363\274\315\360\306\274\207\334\327\2730\245\260=!#\365\274\021\206\217=h\2556=\241\267\260\274TI6\275|\353\277<}\232\264=h@\233=\360*{\275\253\315\375<\230\202t\274\247\244\217\275\242\230I=\355\037\277\275r\226l\275\303\217\261<n]i<-0t\275\325\351\023:\307\310Z=\353z\337<\347\346\205<\312F\023\273L\314\254\275\001\321\217=\216\020\013\275\355\355\315\275\236::<\346\220\246\275n\272\313\275<^\267\275\036m$;\202\212B=n\375\033\275I\004\265=\031\374\207=\027z\301=\222\374\306=\207\026\202\275\275\333\025=XW6=\274\027\350<\264\236\335\275.\214\017<O\210\323\275T\324\307<\304y\314=\007\201\256\275\021\013\314=\024\2452\274r\311D=YF\215=\036\363\343;\005j\307=2\016\220\275V\232\000=\367\346(=\270=\311\274\311<\261=\244v\241<\335||\2755*\253\275\244\032\240\275#\020k\274TaU\274\227\323\200=\024R\024;\227\242$=\241\212\032=\313\231\004=\010\005\271=\256\214\'<\267b\227\275\270L\333\275\365\331\227;\253\364\312<\\|j<b\366b<\017B\037<,\032\261\275\002\204\311=\262\245\311\275\014F\301\275y\0012\274\221\245\215\274\363\204\230\274\002\331\214=\345\374\365<L\265\322<\257\205\r\275b\",\275{~6=N\2575\275\002l\325=\215LR\274\331\'m\275[)\270=d\366\277=\014\231U\275\224\321\246=Y\204q\275\216\271\341\274\316qm\274\352\017\212<\251C\211\275\265\242\240=e\013\302\275\211M[\275:\256\251=\316\021\304=\260dl\275\212\004\033\275\021\362\271<`\3718=\246\336\232\271\273h\304\275&\247e\270\265\177P\275\212t&\275\344UH\273F\340\200=!\307\352\274\257\224E=\370\216j=\013Z\314\275J\323a\275\365\252\000\273\227\367\224=\006Wp=\275\303\235=\356\325\353\274\014\016\261=6g\331=\006\005\236=\030\n\206=\200\"\025\275yuq=\376\251\001=#\035\273\275:\027k=i\211\007\272:\262\243<`u\313=#\234\222\275\226\346\224=n\027Z;T\025>\275;\006\325=\177\215\035\275\005hE\271M\370Z<\000h\205=\032\317\022\275(L6<m{\"=h~\264=\201X\334\275.\277\222=\302\016\254=\200\226\243\274\315X\237<v\327\246<\317\016\246\273\214\036\264\2743\013\270\273\035`2\272vj\332\275\327\353\306=\360\246\210=\351\261;\275\005\241\243\275\3636\005=\023\360\275=\263#\304\275\274 .<\205\016C;\257\"\304=\241\374\267=\356\210\257\275*\363\016=\375\223\224<\rt\313:Q\024\373<\361\263==GH\323<y\304\323\275\t9\245=w\216\271=\204\204n\273{\257\313=\251\375\3569\342&\222=x(\030<t\355,\275\225\361m\275\314A\273;\331\243\332=\307\322T\275\3758\345<%\346\304=\301T\256=\302G\223\2757\316\320=f(\262\275Z(\276\275\rx\343\273\266\261\327\275\003V\272\274\322\225\225=\271Dp=\016@\310=\372c5=t\'\277=\252\247E\275\001\350\332=l\024\314=\374\374\304\274\024 \234=\321v\312=\256\r!=\350\223\336=u>\337=\352\036\331\274\276\336\233\275\021\3131\275W\025+\275\236\311e=\231cw\275z8O\275\2544\307=\247\006\334=\235v\305=\357\364|=\026\301\333\275\013\235\025\275\251\366\253<\374\273\231\2753\324\361<\r\n\245\275\033\020\320:~\366B=\242\332\255\275\255w\235=\2370e\275ja1=\246\310\323\275\024\227\022\271\316\206J=\353\246\300\275a\270\265<\037\222\323\273\355W\271\275<\313\254=\254\200\251\274\300;,=~B\273=,\333\031<\"\016;\275\246\244\374<\020;\2379\273\221\264=T`P\275\270,\253<t\222!=\246\3523\275\020\2658\275\234\262C=_I\235\275d/\242\275\227\026\260\275\024\330\213\275g]r\273\262\\|=\201\266\257=_)\276<F\347~\275H\253\227\2740\021\305\275B\367\307\275x\303M=\217\223[=\312\023i<\r\233\030\275\233x\212=\245\337\333\275\326\342\365\274\251&\210\275Z|\241=0\265\000<\324\207=\275\321\334_=\314\303\270=P\320*\275\352y\022=\242\310\274\274\216\315\335\271O\265\276\275\t\347\250=\262\223\323\2737\227U=vtY\275*A\300;\246V\253\275\276\372\204\275\000I\232\275\364\307\273=\230v\251=\275eK==Xm\274Bf\033\275Wl\020\275\301\313\010\272<\275\210=\316\325\034\274\351D\324\275j\362\021\275\233\205\332=dP2<IP\304\275\363e\276\273(\221n=\227[\224<\333\262><\374\271\230=D*\341<\247-\346\273\342\343e=3\366\322\274\302\022\375\274\003\214\247=z\355\253\274\361\356\313=5\245J\274\237\242\216=\036\336\316=3?\270\275l\275\241\275\310l4=\013(\225=\321\357\274=\275e\374<M\373\021=\022\262d=\375\nk<\035\325!\275\013W\263=\224\324,8XfK<\035\024\276<2t\251\274\300y\326=\2112\377\274\245\316\034\274(d\247<sa0\275=aH\275e#\226\275\262I\335=M\010Q=Jk\014\275\004\007\325;b\214 \275\312P\322=\306q\307<q\232\272\275\365\037@\274\000ri\272\342\207\270\275\255\010\221=uH3=\177\361\226=h\244\320=q\201\312\274*\326\216\275\265\353x=\003G\257\275\316iq\275C%\003=2\033\241=\377!\341\274\016<\320\275P!\302=f\312\223=\373\354\021\275\2308\227\275\277\362\202\275\324P$\275\224\347f\275\370\036\001\273\320\031\235\272\200T\335\275*\207\221=,\375\245:\227w\267=\205\"\260;\004S\005=\341\335\"=\336yp\273\036\322\022=\301\301d\274\301w\275<y/1==\333\313\273rsO\275\034p\004\275y\316\233=\267\277\331\274vPc<\037%\326\275;\372C\275\317\202\234=\010J5\271\267\005\213=49\307=>\363\r\275B\263\232\275\341l\306\274\365\317\036\275\032\264<=\203\250\262=\307\250\250\275*\231\331=\336m\202\275\327|\033\275C\273\307\275\033\200\200<\335X\241\275\313\036\'\275e;\302<\202\214\313\275d\007B=zh\312\274\276PT<8\016\345\274\361Cp=\207\177\240\275g\326\246\275\313MB<T\000\257\275\372\023\324\274\321\304\013<\327?\214<\004\254\377<\203,\250=vWD=\347#i=x\212\243\275\331\330\240=t\217\221\275\374\233J<\377\220\244\275\206\033\304=gA\273\274\371;\205\275\353Y\325=3\000\223\275\362+X=.\252\275<\275\252\240\275\355\343\235\275\222\364Z\275\313\264J\275(\345\265;MpB=\323\t\t=fi<\275\216\223\360\274\026!\300\275\234\3370\275\372q\316\275;O\267\275\235\250B\275]\377\372<\346\353`\274\263\341\307\275\"\234\301\275\263w\213=\016\322\235=\305\322\345;\374\314\177=\017m\337<na\273=~c\325\274\341\372\273=\324S\216\275\025\366\371<\007~z\275\357\255\256=\215-\231<G\3145=\265\345V\275y\346\217\2721x\301=\002\204\013<\024N\263\275=No\275\361\217\177\274>7\264\275\347\032u=\3118[\275\2365\240=\317\264\325\275\364\252\204=\024c\300=,\246\331;9s\r\275\310\351\220\275\327i\226=\216\220V\275k\242\245\275\305g~=\350\325\215<\005\270\271\275\201\206\220\275\0271O=\203\211\372<\274\331\323=\006\340\367<a\350\001=sHb\275\310\245&\2742\267\200\275\377$\276\275\016\343\213=\001\353\276\275\332\215\242\275u\032\033\274\211~2\275\256!v\274\0232-\274~\277\276\275\025\353\312<\021\3146=}\311~\275\356\034\236\275\232E\333=~\257\206\275\254^\223\274\303\312\n=\310\213\214\275\036\001\022=\341.\023\274\266 _\275h\260\322<\262\275\316=\231\t\263\274\274\367\273\275\300\366\241\273\034\243\332;\326p\322=\265H\037\275\305@\256<\224\330\2279\334\177\223\275\306R\202\275\r\277\343\274;\004\272\275r\376\264\275\243\014\244=\322\244.=\322\'\366\273\207\252t\275\226\370\n=\0248>\274\204\236_\274\252\301\033\275IKf\275\220&\262\274\221h\036<l\301\244=\017}\221=+\231G=W\002\272:F\216\301=\332}2\275\033\226\310\275bH\211=G\026\1779F\037\t\274BE\034=\236\307\267=U~\315\274\304\250\275=\336\307s\274\332.\260=Fl\271\274\266\230U=\"\247\240\275K\340\250=\263\334\317\275\256\"#\275\367\351n\275\276\017\000=\324.\303\275\372\206\243\275h\331\314<\303\356Q<6\326j\274\346\332>\27550\304\275\357l\334\275j\355\302\275n\232B\2736\272h=\001\024\313=\230\271\224=\314\030>\274\225\010\303\272\306\324:\275H\267\206\275\342\2153=\227\317-\275\217<\014=j\361\220\275\020h\020;\256w\252\275\366\245\001=\363\032\025\274r\332\241=\255\n\255\274@_\225<4\322\251<\303\033\030=\272t\030=\322\010l<\354\217l\275/\034\226\275\252\272\350;\250\255\323\2755\341\336\273k\343\272=1\331\230\275\202v\301=\322>\301=\364v==\215\024\237\274l!\001<`Mv\275i\230\213\274\333\340\351<\204\312\014\275GfO\275\032xl\275[\275y\275\\\216l\275\350z\271\273\273R\223<FmK\275#\014\276\275\2247\310<\257\204R\275j=\365\274\265\337\345<`/\017=\307\303\263\274\223\370\270=\262d\222;\315l2<\237/6=p8\252=\227\350\037=;\307\347<\300\342\230=\353~\224=W\264:\2758\216\322=O\205a=}z\301=\226>\257\272\026\210\265\275\345\032\301\275Z\200\327\275\214r\036=\365\244w\274\371{\330=\2278I=\335B?\275\323M\217\274\026{\007\275\261\260\326=_\320\221\275)\r[\275(g\307<\311\372\200\275\020\270\035\275\035)\302<}\311\235\274VP\301\275\n\032s\275\352\316\251\275Wb\245\275!7X\275\342Zk\275?(\250\275\003\212\014\275\302\367$=Z\271v\274E\256\220<\024\226\331<\332\351\r=\270\230m=v&\200\275\277h\226\275\r4\027<\354\037\277\2752\351\206\274\252\267:;\270\303{=Ur@=\316\032\331<\362`\257=T\211\022=>\253\216\275\001\331\246\275\332\305\302<\376\201\330<\003\206\212\274\311\324\336\275\277\341\314=\236n\017=\303~2=$\261\273\275\311\371\332\275\320g\230\275\3537\203=&\325\265\275\001Q\336=\211S\343<_=\211=\256\257-\275\007$\271=\332K1<\342o\217\275F\204\356<\256\370\233\275\343<\262=\257_\r\275\033\260\2029\005\34548\355k\220=\210\223\244=\026\235\240\275\364\037B\275D;W\275s\347\253\275\002\004c=6\233\237<\210\363\350<_\363\226=L\3570\275/oe=\030Br=i>\227:\354\346\252<aJT\273\177u\324\275\271\354\215\275\332\315\326=y\024\267\275\214\'0=\025\242u\275V\264(=i\341\316\273\310\263j\273\360\220\276=\024\036\033\274\346\306\240\275w\307\035=\362\207\t=\234\266\275\275\347\226x\275\215DW\275\016\367\031=\332\307\271</\355\036=/\310$=\316+\272\275\317\342\311\274=\032\013\275\354\244\202=\237\311\243=\265;\325\275Z\244q\2741\273m=_\265R\275t\3574<VbF\273\371Lu\275\370\372\242=:\334\326\275\343d\302<\035\310\306=\244g\\=\266\006\037;\310r\331=,\036\335=\374\362}=\375\265S\275\331s\032=\246\211\232\275Zw\212=x\215\004\273R\365\225\275\232Z\264\275\245\300_:\337;X=\272\235\242=\365\023S\275k\334\226\274y\313\265<\177\223\323\275\200\335\'\275\204RQ\274\375\010\210\275\375\224?=\357\276 \2748j\223\274\254\304!\274H\275\304=C\227\257\275\003\351\220=\021-\264=\022\250\242=\255\216\327=\230\220\236\271I\352-\274\010\303j\272\r\274\222\274\361lF<\305\226\377<\030q\330=\2523]\275Yk\240\275Xk\204\274b\200\377\2745\237\235\275\300\364\307=\364\321\000=\224\253\244\273q\303\245\275\022\325\307=\350|\341<\245:\217=\315+U\275F\200\211<2\245\030=\"\317\016<I\324\006\275\215f\'\275\272hx=)\006\251=\361kL\275\262\327\206\275y8!=`\341\217\275\300v}\275<\210\300=\240\001\311\275\024\276\220=\213c\272=+7\331=m\363\265\275\342|\036\275f\370\311\275\\l_=\362V\203=\353|p=\205O\221\275K>\203\274\206\0263=\240\272\266= \360\274=U-a\275\0036\232\273\271-\247\274ZP@=2\235\022\274\352K[<7e\271\275\\\033\213=[^\334=\344\\\207\274\321]L<6X\226\275+\241\240=S\271\260=\241Z$\274cJ\004\275\032\341\"\275Ku\235\275H3\t=\200l\253=\245%)\275\336\253\200\273\203}\200=\211\334\241\275\004\306\323<^\342\360\274\202M\231=\312Wh\275\272\202\306\275\351\315\303\274\023WB\275\237\341i\275\217\246\300\275\200\277\300<\204\346v;d1\263<%+\322\275\310\267\214\275\261\005T\275\222A\231\275\373\247\306\274Q\317&;\305\344\030\274\355\256\245=\336\212(\275\214\306P=i\233\315\274\321y =\255\302\232\273\000\246%=\232\336\331\275\000F\010<A{\246\275\351\312\231\275\364\024B\274\315\310\246\275kfN\274\037\254\326=\233\327,=\247)\356<\265\3316;d\372\237=\014\033o\275\307|\325\274c\264\301\275\265J\246=\254\273\215\275R\223\301=\013\344D<\006\256,=j8B=\207\234Y=\trc=\014v\n\274\031%.\275\r2\215=\037\220\215\275\\;\315\275 \342t\274*\255x\274N\323\253\275B(Y=\215\2431\275\\!\302\275|C\246=\224>\230\275\215U\'\275\275\365\253\274\3508\240=v\367\203=c\336\261=\340\204\337=o\324\316\275!a\016=b\021\222<oY\255\275\206\337\261\275\3127\346<\005\r\252=_\335\366<\250\0002\275\303\0244=\333\246s\275^o\273=\3224\205=\331\004\372;\361\330\260=<\216A=i\377\201=>\212\233=\374\302\273=\325\220\264=7\272\313\275\223\327\241\275D1\372\274\031\306\207\275f\376\312\274\216\235\321\275\306+\362\273{\333\255=\244uL\275+\020\210\274\177\tb=\255\003\203=4\3359<\363\224\306=\204L\225=\314=l\274\371\315\257\2756\2713\275&&\203\275o4\301<p`\230<\242\211\270=mW\254\275g\010\271\275\"a2\275u\210\305\275\002\231\276;8\337\244\275\240\365z\274\343\244x=M\010\257\275b\356\356;e\377\301=H\233(\275J\210\311\275\233\252N\275F@\242=\352\210r=\'\306e\2743\\\244=\364\216t;\242Y\001<o\2059=\357\232\250<\314\333M\275\000\3760=\325\320\274\275\335\303%\274AV\310\275hM\256=\215Ee\274\354\032\224\274\263\350\376;?]\221\275\206\300Y\275\253\206\254\275\356a\266=\000\215D=o\302\n\275\226\356\247=\314c\023=b\336\236;\312Q\2338\t\322\334\275\374\262\241\275\245\231\240=\257k\303\275\337,J\273\300\242\212=\244W\030;u\367\202\275\361\326j\274\262\016\244=!\262:\274\211\037\211=\351\356\222<L\326\202<\302:j\275\245CK<q\253\313\275\320\361\321\275/\210\200\275T\362\212=u\\#=/\331\330\275\264>\031\275\305\235d\275\007\374\365<\007\260a\275\223\324\305=^\241}\274\264\020\274=`\3415\275v#\310=\025\261\220<|\266}\274\217\326\013=\221.\260\273\354\025\277=\000\026\220\275\030,X=\202u\315=\311\256\301\275;:\177<\267l\274<27`=\003\021\235=\372=Y=\'1\302\275JDP=\210b\244\274[\240z;o\233x\271\002\271.\274I\035\364\274$\020\255=\034\231x\275<\020\233\274k\347%\275\343[x\275\260\023\253=/\235\333\274\211HQ=\346@*\275\034\300 \275\351\371}\275yh\202\275\266\3539=\007\233S=\037\006\362<=\324\374\274\205?y;`\354\231\275\256\312\256\275\261\034y\275E\277\210=\317\327-=\227r\263=\250\221\300<\217=R\275S\032.\275d\302\230\2747\312+=\302v\207=\240\2122=/\034\211\275\347\273\374<\032\004\225\275(\263-\275\221V\314=\364\201\227=\007Z\352;\002\356X\274\266<P=\032\353H\275\024\344?\275(\005\264=\277\237\335\275\345\213\261<D\"\205<\267\330\002\2751lQ\275\310\232\203\275\330\241\311\275\317\304\253<\002\336\177=\262\225\306\275\360\320l=L\256\240\275\236\311k\274P ~\275\300\003\324\275pF\261=\007\222\003=\335\260n\275\345Qv\274\311\246\323\272\304>f\274h\347\311\2753\377\324=\364\327\r=u\275C<V\324g\275\335\255\246;\250\254\036=\250\254?=-\311\254\2740\321\376\274\251\226\034\274\rv\312=\\\273\210\275n0j\275\037d\323\275n\201\332\274\211\210U=\260\211\016\275\237\263\226\275\003\233\260=\226d~\274@\253\235=\007\322\237\275\201\034\032\275\321\2578\275\370\035L\275\030\026:\274\035\372\214\271\311\335\324\274\255\311\301\275B}\226<\365\333\"=0*\317\275\327\270\031\275\"\274\353<Nc\241\275\t/l=\273/\320=#\350\231\275_z\221=\347d?\275\007\270K=\254\245\346\274t\265f\275LG\211=\035\027\322=\232=\331\275Cy\302=\326\362c<\022\323\222\274\367\333\034<\376\304\232\275)\212/=\212\351\354;\252\313\331\275&\241\246=Wq\277=\021\023\304=\331H\213=qrp=\317\361\210=\343A\200\275\320\014\332<?\3450=\373\341\330=LZ\321=\376\242P=\367\241\210=\036l\013<\341Qt=\2067C=L~\000\275[\261\330\275FUs=\035\223\242\275\303\363\313\275\265\005\261=\014B\316=\321\232P=&\311\322=\245,4=\030\346\010\274o\314\333=*Yw\275G\251\335\275\221?\264\275\376EN\274\200\204\333<+\226\322\274\271\336\260=\024\361D\275\033\356\333\275\232X\264<R\371Y=\231m\200<\211\376\020\275\322x\200=\212\335\207\275\350\211\251\275i\377\352\272\262\356\255\275-,\267=\302=\307\275\234X\245=\265G:=\362\034\252=\313a[\275\001\331\275\275\230 \267=\341\312\301=M\375\307<\264\342\377<\003\037g=e\232\266\275\002\0162\273o\'\225\271\177\342\307=\024.\202=W\302\330<I\022\311=\340\333==\007\025;=\353w\215=\314\013\201=Y=\n\275\313.?=c\277\013\275\2349\232=E\273K=\261J\'\275\'\232\352<\320\001\232=\202G\312=\233#S\275\242Ca=\323nj\275\032\334<\275c\361\031\275J\376g=D\210\n\275\313;\003\274\245\246\272\275\014\324\261\275\3638\367\274O\273\244=\354\246\265=\273U\230\275%[e=\005\344W=\021\220\205\275\313\010\220<\326\017\330<\372_\337=T\013\224=\376\r\274\275\361\207<\275\037\200\236\275i\374\035\275D}\220\274\2421\313\275bSq=\353~\010\275A\037|=&|\023\2741g\254\275\216\027l\275h6\336\275?H\r\273\300U\207\275~I\313\275\305\372P\275^\227U=K\374\346\274\312\377\245\272T\251\306\275\345/\216<\334~\222=\311\361\003=\255\031O=\366\014\264\273\264^\334\275r\214\242=\n\203\322\275\266\242\304=\013S<\274\2718\231;\330\016\217=\343g\357\274;4\227=f\223]=o\270\032\275\036q\006=\251\236\"\275Z\265\326=!\247\240=CM\303\275\372\253\033\275\311m_\275\363\346\262\275\257\333\201=8\366\006=\320\353\203<\310\305\335\275\315\261L\275\263\320\315<\301\212\255\274\361(\312=.t\317=\035l\277\275\2174\327=\016\033\324\275?NQ\275\320\254\242\275\030YO=+\332\273=M\246%=\230\302\300\273\217E\267=\226\350!\275\347\323#<\364S\271=\017\005\212=Ai\177;\213\n\306;fq\255\275\000wg\275\2045\032\275\235S\373\274\025r\210<g\305\267=\233K\202=\031\207\026\275\277\335\204\275V\221\321\275\251\327\301\275\201P\200< lD\275Y\365\\=+\221\357<J\340\200=^\016\214\275\241\236 =\226\254\262\275\244b3=\r\n\331\274IN\001\275$\321\235\275\234<)\275d&\277=\230O\314\275;\266\333=\016\005(=D\235\267\275\016\'0\274\257\210\324\274\253.\234\275\312\2325<\000o\326=\020E\"<\275\264\203<\217\241\213\275\231\036\366<\3234\231\2731.6=8\373\221\275G\256S\275\331\372\304=\330\274\277=\001KB<\025+\330\275\230\224\211=\363\243$\274r\217\020=\351h\316=\364\222\026=\344\352\031=9_\214=Z\277\217\274\343Kr\275oT2\275\240\243`=\021\325\223=\200\367S\275\353Y\257\275\346\031 <\275#f\274*x\215= \234\206=D\361<=/\013\365<n9\337=W\311\240\275\200D\314=\006\233S\275\272\311g<\254\353\267\275\314\320\242\275\2347\t\2756\273D\275\267C\235=\204\317@\275d>\324\274\352\302\217=\3071\377\274\205\335\207\275\\\320\320=m\351d\275\364\022\035=\231\026\332=\361\237\004\275\014\006\004=5\317\326=\312\227\356\274^f3\274i\'\275=/5G\275\2566\316\275\200&\275\274]$u\275\004\370\316=\241U\244=y\024\301\275\351\023\372\274Y\301R=0C[\275MM\033=\266\362\243:\361\267\301\274\206\025\266\274e\n\243\274\366`\206<U0z=H\331*=\010\256\360:\327\220`=\274\360\331\275\006\233\312\274\213\225\326=\340\314\257\275\307\214a<\036A\277\275\275\177\\;\273\311\273\275\022\034\254<<\231Z\275g\006A=\216\221\305=3\346x<\367\222\004\275\030\002\236=\355\225\301=f`l;\016\357\300;\336!z\273\312fp=\314\304\301\275\225\304\257=~\206\215=Q\334L<\266\2440=Dt\250=\350O\326\275Vv\240\275\004\366\272\274\255\300\016\275\273pY\273\006\027\033<\021d\270<\225\222\261\274hE\242\275e\230\222\275\030\352\250\274\276?[\275\306\316\203\274z\260\202\275\313\031\221\274E\341Z\275\024\205\271\275E\260\277=\324\260\265=\212*)\275\031{\265=>Qt\275\3565\233\275\335\215\312\274\023\341\237\274\254\\\263\274\255\332\376<\374\353\312=knS=sph\274*\364V\275LJ\311=\362\221b\275\275\374\266\275\020\365`\275)\360!<\202\036\303\275\314\313\274\273\232\007\243=\3629\323=\364\322\372\273e\355\253\275\362m\333\275A\334\253\275\367\277\231=\'\024\245=\225#u<\234\ng=\306L\005<\234\202O<\250\316\352\273\026l\322;\331\270\323\275o\323\307\275|4\267<a\331\274\274O\230\320\275\360t\261\275\005CG\274:\314\267=z\273\200=jtZ=TN\317\275c\022K=\270Q]\274\330\365\211=\335\017\226=\351\305\244\275\007\252\207=\267j\213\275I\233@=1o\034\275\374\376\226\275M\242\326=\217\030y=\273\312\234\275\035\341}\275\353;\251=]8\234\275V\332y=\255\367\327=\266\203\247\273YG\320=\356aC=\200\311\273=\177g\275\275\350\030\253;\3639\273\275\007\340[<(\233\027\275\211\\;<K4\212\274.\216\325\275\216\314\254=\212\377\214=m\367\255<%@\004\275\337\322,\275\306\2245\275\247hX\273\325\375\223\275\200\351\333\273_\345\177\273[\037\020\275C\017\333=\327\006\224=\352\212Q\275\375\333\363<\'\260w\275\226\t\304<\260\310\201\274\242\312\275=c:>\274$\001\363;\000\n\3069\277\302\327=\207j\364\274\007\"x=\273-o=\355\310\216<\341\330\327=4\237\217=\017\252\262\275,5\207\275$ob\275\256\3259<\014\tC<\275j\314\275y\354\370\272\2533\243<*\204\010\275\225\264\227\275\304\277\265\275\260\205r;\243\342\330\275o\206w\275\313\332\263=0\313\243=\206MI=sS\254=t\2725\2758\034\260\2745:\327\274\016\273\214;\270\246\235<\346A\314<bp\324\275\"\376\207\274T;\006\275o\370g=\257M\005=,~\213\275\267\251\251;\353\230R=(@\317\275\023N\255<<\244\016:\340<\216\275\245\3149\275\366\303\252=\320[\234\273a\341\215=\236\003>\275b\001\'\274\237\314\324\275h\202\373\274/\363)\275\215f\236=\222GQ<F\206N\275\307\375f=\341n\"=\002\020\017<l\366\330<1\027\206\275{RE\274\357\220-\275\247\275\311\274\'\320\021=\244\341\302\275\342\007\205=\236h\251=w\347\201<D?\022\275\021-\242\274\356\274/\275\240\266\271=N2\276\275\374g\232\275FYX=j\376\270=l2\235\275y\2572\274\340 \255=\354\277`\275gK!<\2210\227\274\261\351\245=\312\r\\\275sW\201=\354I\177;\311\346^\275\245\333\263\275>\231\006=]O\036\274p\230s=\030u\226=\262\216\344\274\005\263}\275\024\352\302\275+\217\245\274\rDg=\220\234\260<\325E8=W\363%\275\240\014\231\275\333]\037=}\3347=5j^<#\275\220=O-&=\370E\272=\247\262E\274\207\204\241\275\212\243\253<XZ\201\275\3169\256=\226\254H\27564e=_\204\254=\205\024\303\274\375HR\275\223\205\234\275\347gf=\270\\:\275\371\301\224=\332V\237\275 \340j\274m\215\233<\010\332\234\275_\333\235=R\313\231\274$\214\246=^\351==bTH<\230\361\207=\306\326\037;L\274\314\274\265\342\254\275\374_\322<\3650\225\275\010}\273=\000\321\271\275q\232\347<W\215\025\274\004\025\267<\257\233\262\274!\272\316\275f>j=,[\367<\270\305J<\010wa=\317S\230\274\313+\222=mz\021=\345 \376\274#\331\316\275 \276Z\275=z\224\275x\334\n=87\222\275\204,+=\231K\206<\351\210\222<\242NV<\264-\267\275\266[\217=/\265\221\275\224g\226\275\017c\213\275[\030\026=\302-t=\026z\240=\017\254\177\275\207\335\307\275l9\256=\234r(<\220\246\313<\363\357\264=\000\256\215=g\343\256=.\367\276\274#\364\272=\n3\362\274\033k\214<\364$\210=\303%g<\304\261,\274k^\210\275\372e\333<\326\203\263=\260:t\275\271K\20371\003\254=\356\355\244=>\242\330=\267\341\334\275\t\'t<\034K^\274\221\t\335\275Q\016\326<82\325=\212Hs\275\373\251y\275\273\325@\275:\010\233=d\361\233\273\265\356\236\274\0302\226\2759\227z={e\323=\272\265\316\275\026)\333=t\337\270<\'\251\331\274\263\264\217\274\263.\207=\3435)\275_\024\023=<\346\265\274\366{\020=X\225\n=m\313\215=w\322\250\2735\342\242\275j\035/=\n\0320\273E\247N\275\035A\321\275\237pP\275\254\211\314<\355\256\233\275@\265\226=\232\371\300\274\263:\314\274|\213\300\275\214\2167=sU\230:\260\360\214\2755\213\231=k{\030=_\026\225\2758\r3\275\206z\177=\234\374z=\'Y\224\275&2\336=\030&h=\277T\300\275&T\223\2754K\361\273H\223\216=T2\253=\250\007\211=\025\223n=\360\355\331\275\244\304\001=\021\231\246\275\265 \036\275\330\\\335=!V\311\275\337t\213=\323I\312=\243\212b\275#\033W=bZ\242;V\252\t\275\3365\214\275[\200\017<\306\272\254\275<|/\274\306\002D;\243~\301\275\3300i\275\350\243\254<X4W\275\016Z\273<>v\322=i\341\245=\'\037\206\275\325\326I\275\013\316\223\275M\021\230<,\214\226\275\317\367\204=\362r\326\275\200\232\365\274\275\362\\=\020\031<\274\375H{=\362o0=\303\242g;\032\204\267=-\372\245\275\213\234\304=\267\"\247<\021\216\271\275\253\347=<\360\344\030\275m1\247\275\323=\237\275@n\225\275\366c\330:\030\204\335\275\025\250\265\275\034\205\262\275D/\013\275\"\027\226=\343#\330=d\343\332\275\305\223\026\275\211#:\275\302\213\301=G\227 =^\016\223=\273\033\242\274\335\353\343<Q\013\023\275\270\341\016=\340\261\204\275\023E\335\274\310\313\205\275\305\267\261=F9\225\275\314j\314\275\nL\033\275\220\314\201=\261\236\303=L\343\240\275\303M\"=\273\247~=\346\237t\275q?\310<\364L\321\275G\267\232=u\376\334=\311X\226=\035(\333\275T\333\177\274\345e\350\274\210\200<;x\327\262\274\177\020\025\275x\000\311=\303\354\017=U1\211\274\212w\241=E8\204\275\207\313\331\274\325\225\243\274\321I\336\275\013\270\234\275t\'\374\274`~F\275\277\224\270\272I\274\247\275\377z,\275\036Q\200\274R\263\232=5\230\206<\267\236%=\3350\316\275\351\322\361<\336a&\274R\252\247=\246\275\202\274\363\361F=\210*\223=x\005E\274v{P\275\237A\331=h\362\204\274\257\n)\275\377\327a=<%N=\331\347t\274\324R\t\275QQ\240=\371\206\262=\021e\202<\334\212\365\274\312n\263\273\374\363_\275\363B\226=\353\352\332\275\213\325\\=J\035\275<\251jD\275\232.\247=\310}l=\r\t\325<\227\022\305\275\364\213\271=\337>v\275L\n\177\275\236\365\302\275\323\367\255\275\034\006\307\275\355\311s\275D\014\270=_\355*\275=A\244<\3178\316=>dZ\274\270\036\252=2T\247\275I\337\257=\3644\311\275\273f\241=B\007\265\2744x\221\274\353\257\263\275,\267\337\274?\227\320=\000\3512\275%A\247=\376kf\275kV\271\275\234_\365\274v\360:\275\274\025\362\274\272\332\002\275NT\305\2754\314\"=\227\331%\275\310!-=\325G\271<\3652w\275F\225\322=z\330\036=Q\021\211\275Zr\227=\311\220\332\275\005+]\275\n\311\274\275\025WT=\007V\307\275\316s\226=\336\035\355\274\331\223R=\264\022&\274a\275\274;\302p\302\275\355\377\220=\024\331\203\274\243\222\270\275\320\271\221\274\314\r\"\275}\3114\275\033\201\201\273Y\361\223\274\214\360K\275\345\365F=\234\233\223=\330\310\013\275G\370\226\274\335\3700\275v\314@=\326\247K=\321\365\322\275I\2209\274\377\232\226=mp\257=y\034}<\356\276\331\2744\'Z=\320\321\252<V\020I\275\215\320\347;\210k1=M\364@\275\266\350\252\2751\337\306\275\n\351q\275w\245D<&\314\254\273\371\323\266=]\307\315=<\347t\2758J\257\274\247\326\357\274\032\372\006=O\266\r;,\255\201\275O\225\323\274\300D\200\2715\237\307=\216!\361\274\030b\010=yO0=A\030\337\275#;\207=\316\010J\274\313X\344<\227\2777\275\007\273\252\274\360/\333=v\233\373;%\002\315\275\010\355\201=@\274\361<\357\357\316\273\203\226I=\366\312G\275\224JT;_\033\322\275p\245\271\274V\243\033=+\007\212=+g\320<\020F\331=\204?-<4s\242<\031\205\263\273\262\007>\275\260\242\270=\343o\264<\271\026o\275\310\356\206\275\305\231\221=\274\320\204=\334en=\230c\270=Gw\235\275-Xw\275N&\252\275Em\220\275JT\325=\257\020\331\275a\302\022\275\016\363\032=Eb\275<\370\205\245\274\343.X=X\317\264=^?\227=\013K\214\275.\351\361;G\270Q=C<0\275N\317\343\273\344w$\275\014s\303=\366\347X<\313PB=6\203\003=\014\276\r<Uy\245<\346\352\227\275\016\363\215\275\217\372\264=4\225\227\275\031\224\003\2751\202\255\275\335\323\252=\317\355\272\275\204\330S=_\316\310\275u\340\230\275b\270\327\2736\t\206;\242\370\263=_\017\247\275\"\266\323\275\222DY<\026e\276\274#\230\303=\304\010\211\275f\'\236=Y\270\237=\347\027\340\274{\243\224=\377z\232\275\253\341L\274\322\326\271\275\010u\322\275C\002\327<TB\326<@\371\235\275\264 \205\275~H\275\274s\362J=\2543\320\273i[\002=\302t\014\274k\240\013\274\260\'\215\274\300\247\"\274\247$\217\275\311\177\311\275\371R\327=1\220\334\274\304\305\251<\022\001\272=\030\201\322=y\250\213\275\036\021\322=\001\035\274\275\261\230\352\274\002\2229=\363`\212\273K00\275\333\350s\275\377\014\204\275\032!=\274l\253\n=[~\263\275$<\331=v\237\267\275!\017\304=\343\325\031\275\225w\214<Yv\223\275\221d\002=\251N>\275\204\202%\274\003\345\001\275\271\232\324=\017\001\r\275\334\310\314\275\227\316b=\275\257\236=\263\177$\275\020D\222=\361\r\331\274\177]\225==\322\233<\335;\250\275\271A\274\272\'M\330\274\300\373/<\351\371\222=\027\266\306\274\225<\206<9\272q\275\306\365\345\274c\t\257=|\036\254\275\220\331\257<&\301\006=\337\216\237=_\361\324=\334\262\274=w\261\216=\271\232\273=\211\244\333\273\251W\267=\3649+<\027\267}\275\007\013\323\275\024ZW\275\305\213\231<q\261\202=;\350\332=_\020\331\275\225\226\233\274G7\301=\240\003\230\275:\020\247\275\361\314\273\275\302L\243=\272\337\003\2751\235\013=\247\020!=\\-\267=x\033\231<iR\217<zl\273=W\016\231\274\237\362\025=c\243\244=\374\343\310\275E\215.\275P\017a=0\201\333=\316M\273\275\032\360\267\275GT\253\2757Y\317=d\313b\274\214\235\277=\243z^\275$\031\232=\346S\022\274\tp0=\336\323 \275\242\340\337\274<\225\251\275\226\244\275=\352Y\237=\207\307\322\275\'\272m=\261\255\033\275}\350\214\275_\263\334;m\326\266\275\252\003\030=o4\035\275\373\206\251=\261\211\231=\237\\-\275\0333\262=\375\027\300\275\021\t\256<\025 \216=`\336\037\275\342\324\210=l|c=\325\330[=\300\207\222=\017\253\366< P\271=\327\177y\275\024\247\245=CV\235\275\272\034\331\275\177\t\372<O\204a<\021OD=\340Y\275=\214\'\333<\020\213\305=\204\235\343<\251\032\\\275\362\260Q\275p$\270\275\017\371\335\274Y]n=\024\270e=g1\343<\252\'\222=;=\333\275\314bi=\304\230L;\247\245\324=\024\216.;\242`\210=\265r]=\364\333\300=cP\307=\027h2=Wh\321=\262\"\246\274\'4D\275}\001\r<\363\216\303=<\253\241=\276\246\310=3$\003<\235\207\202=\362o\345\274n\007\214<\203\r\227;F-\n\275\261m\316:Yx\257\274.+Z\275e\234\222=z\232\310=\001\242\326\274E\367I=\373\277\001=\324m\225=\204\357Z\275\\\177\240\275\263\275\271=>.q;\231\342\257=y!.=;\020\231\275\000?\020\273|\231\312=F\002[\274hM\337\275\016\345\212=\321\002\226=\354 \340\274\321a\317=;?\205\275(}\327=(\014\230\275\037\030]\275#\344\r\274\022h6<\337\352\325=\341\355Z\275Y#\225=\340\354\221\274\326]\331\275`\232\325=\321@\003\275(c\305<\352\365\274\274\221\350\223\275,\202E\275\272J7=\r\321\307\274\206\235\254<\022\333\267\274A\323Q= A\306\275\257\233\236\274@\364\313\275\3073\337\275 \220\177=\375p\326=\'b\336\275^^\271\275\257\3251\273\2318\243=~\3073\275\025]0\274\367\331.\275\"\003\025;r\376\221\275Q\177\375\274[G\317=HzC=\2374\214\273E\230l\275\227$$=mH*\275`\230\234\273\316C\233=\212\260\316\275#\021\320<\375\363\277\275l\363l\274X\302\021\275\253\227\307\274\245\216\276=\320\373G=\201\244\301\275\210\351\301\275\266~\r\274{I\267\275#\206\n<\2753u<\374z\227<\324\256`=1\364r\275I\374\n=\372\026F\275\014o\336=DS]\275HN\234=\304\237q\275\321\357\317\275\231\225\354;\242>\271\274\264@\010=O3e=\226\301\332\275\306\363\261<\336Y\311\273L\203R=\017{\266=\350Y!\274\274N\254<\007\034\246<Enr<\326\263\024\274\333Z`<\332\030S=Rt\201\275a\370T\275\274*\200=\202\242w=\0053\243\275\315\026\330=\016\364\334\275\010M\253\273\001\270\262\275\"\266x\275t\340\220\273B\337I\275\366\222\326\275\262\250\301\275\244\270G\275\243\275\314=\201\241\326=\227\017\245=\331\204+=y\255\003\275S\220\276\275\344\343\026=\323\234\021=w\276\230\274\335\205\233\274\337\207f=\320\251&\274]p\216:H\371\246\274\177gU\275P$\305=l\265\337<\324\314m=\017\344\316\275\010\333\206\275\236\022\377<\337g\301=\326\270\324=\244\362\260\275m\206\231=\006\021\237=\"p\225\275\325\217\241\275\320\302k=sA\021=\256\362I=\306C\332=~\374\247\275,\246\243\275\360\031\216\275\230\207\375<\225<\332;\212F\243\275\2624\347\274\033\307\232\273y|\034=\240\305\204=\306B\314\275\374V==\365,\t=\372W\304=\307\241\360<\277\231I=\253G|=!\366\306\273\254\277Y=\210H\232=\324{\255\275G{\242\275\260\301\316=D\004\377\2741n\246\275f\333\334\274\227\210\035=\266\2729\275\314\237\222<o\242l\275\325h+\275|[8\275\354\375b<\003c\223\274\035~\224;\372\2508=\244:\362\274\257\346\314\275e\224\235\275\000\201\307\274!Q\323=\340w\343\274RQ\366\273!cm=F0\312<\333=\361<\356\0258\275W\304W\274\327\3455\275XV(\275C\270\333\274\234\025\227=\t\007\201;\336\215\231\275H\302\204\275\'\r\266=\325\020\244<\274m\237\275\211=\301={\312\307;\204Sh\275z\023\251\274#\027\250=\300\256\374<\353\025O=\341\317i\275\227\224\022\274\251\266l=\262\033J\275\375pW<\017\013v<\354J\337\274\362\275\272=4\315\26799\252\215=\265\366:=\337>\216\274\344\356\206\275\035x\n<\001\307$<&i\333\275y\007\253=\222\355\225\275\245\t\352<\235\236\030\275U\377C<\332]\360<V\260\220=\t\257\247\274\301^\207\272\240\374\364;B\203\353;\016h\240\274@\023\222\2752\224\211=\243T\321=\031\366\237\274\336\334\244\275\226\351A\275L\315d\274\007;\346\274ty\230<\\\257\275\275\347\270\017\275l\326\030\275i(\004=X\377\324\275N\252\374\274\031\266\217=2\307w\275\362\323\335\275\274\226\232\275\n\212\206=\010\273\236=\023\314\327<\2640\313\274\242\325\252\275!\020\322\275\370B\371\274\325-\325\274nV\232\275&\333\203\274\366\007z\275E\347\201\275\352\252g\275\252\324\323=jr\200\275\3543\300=\3712\216\274\227t)\273\007\020v\275\307\n\307=\267o\202\275-\336\225=\304z\210\275\256\256\326=BA\371<\243f\227\275U/\277\275\312\340\247\275\337?\222\275]N\264\275\251gd=\251I\311\274D\204\210\275y\241s=\030\213H\275t\341\206=\214\321\241=Yzi=\005\240v<\311\266\331=\033\0312\274\210\217\264<\270\3425\275\277\325\025\275\344\r\266=N\345?=|\370\240\275\n{9=0zz=z\226\250=\202\034\264\2743\177,\275\367\206\303=\311\270z\275a[\214\275\273T\236=\312\353\205=C\037\320\274e&\344\274\331\013\203\275\032#N\275\371\367\010\275\3257^=\223o\323=\3425p;\031\002L\274QZ{=\371\244O\273,\244\316=\003\264\316\275S\354\233=7\350Z\275\227|\300\272\000\364.\275\202>8;a+\353:\344\313 \275#\275D=\363\350\207=w\226:\274\305!\316=\344\252\276<:!\273\274\315\010\232\275:Q\254<x\211\304\275\211\313\213=\025\245\205\275\177\017\247\275\227e\227\275Er\336\275\234j\374\274n\315<\275D\222F=\346\203\313\275[6\036\275\350\034\033\275\254\357\323=\235\371p=|\245\200\274\200\363\031=!\376\225\274\361z\230\275^\306\233=!\200)=\220\213\310\275\272\3020\27517r=\272\004\304<\305\217\325\275\313\260\361\273\010\355\215=\307\005\302\2756\251H\274\027\232\010\275\365\256\004:\354\001\234=\207\2417=\251R\205=\262\371\241\275\371\271\271\275\211{\244=K\000`=F_\260<\351\034\263=\036\234\323=\373\375\210=r\001\304=\342\203\200\275J,\325=D\033\240=es\211=FW\273\27571\254;\037\206\333=\330!Z\270N\345\224=\371OU=\260\177\210=:$\\\274\"\305n\274\317\357^\274kb_\275\222k\237\273\326%\271\272\"\007\204=\030\372X<\250#(\275\310\235\237\275\034\331\330\274O\257\301\275\323\000\327\275\327\213\017\275|\2431=i\341\364\274\267\021\354\272\224\r\367<\\\360\313\275z\034\271=r\305\226=\316\306\207=\247\005x\275\207\330\033\275\257\\\205=\'=\220\275<x\324\275\317tY\275G/\032\275\032d\032\2751.)<\254S\030\273CG\237;y(@\275)\377\235\2759\014\346;l\330\211\274,\234 \275\342\313\216=\270\014\247;\312\020\223=\026:Y\274CD\246;.{\320=\313\363\224\275C\210\213=E;\313\275\220\004W\275O|A=\367\203\207=:#]\275\323c\033\274\307<\307=\246E\343\272\307\370\212\274\247jv=\372\200\243=\276c\276=\304T\211=q\241\317\275[\177\311\275wV\251<\353\251\264=6#\244=\204ZL<\204\376k=\3624\332=\270\356=:g\307\275=\021\212\254=qr\260\275tlf\275\361%\265=\300t{\274y\353l\275p\332{=\331\377\275=Qm\243=\316\357\373<3\367\275=\272~\305\275\300\013)=\254u\217=A\347\231\272[=\001\275R\014m=\026}\322\275\247\024\301=\033\343\274\275p\272$=l<\210;\216\301p\275N\367\226=\253h\316\275G\000\030\275\213\031\227\275\221\203\230\275\246.\202\275\220 \324\274\226m\261=\307\\B\275W\014\270=,J\270=\336\240\270=\177\025&\2750\300\365\273V\243+<\327\025\317<\220\231#\275~\370H\275\207\360E;\210\343\257=T\322\004=\331\333\306\274\306\r\203=\020k\025=\007\3166=\304\337\310=;\257\233\275\027n\215\273\336^\021=\261\354\243\275H\362\241=\330<0\275\361\250\206\275\006e\221\275\013\325\r=\266\216\245=\001B\312=x\222\261\274\27632\275I\207\266\275\371z#\2755\337h\275\\\245T=C\313W=KI\230\275\013f\010\274qF\205<\r\275<=\000\022\334\274d\350\265=\3322Z\275P\344\252=\257j\210\275*\235P\275\225\006\274\275!\374\017=A\340\263\275t$\253<\371n\274\275\244\310\024=\337:~\275\300\240\311<\3147h\274m\362x=20\267\274iD\246=q\226\211=\214\365\017\275\247U\274=&\250\210\274u\345\334\275\177\306K=P\313\223\275g\240)<\325N\000:\371\245\311\275P\024\327<\205s\366\274\240\201t\275^\364\246<\300\026\333=\375\027\262\275\263\235\276\275\365\022\022\275G\277\272\275R\t\312\275\372_\204\275\355-o\275\245\031\311\274\336\024e\275?`\033=\3346X\275)w\254=\262\337\273=\225)\264\275~\255\334=\330Y\257\275iP\252\275\231\027\005=2\226\316\275\025\371\317;5F\363<\213\245\327=\244#\212\2757\365\265=\252\364\312\275\313n\257\274\300C\025=\003\243\351\274\372\003\303\274ym\210\274>\265\204\275p\320\203=\263\017C={\343<\275A\331\256=\213\365X=\233\242\321=#\226\335=\275\3176=~\275B\275\003\325\014\272\004%(\274\031\323}\274\346\224\224=\366\201\244;:\351e=\t^\004\274\017p\243=\304\333\253\275U!O=\354\374\245=$\242\2159X\235\256\275\006\247\305\275\032\2064=\212\231\252\275U\r2\275\236\370\256=\374D\361\274T\340\377<g\272\233=\252\236(=G\375\306=\2160>\275/=\254=\333\2561\275)\026_\275\211\325T\275\212w\324=YA\262=\344[^\275|z3\275\343\024\236=^\372\201\275\261F\301=\177l\202=\356\207\311=\'\216^\274\315\374Y\275\037\315\362\272\312\274N\275?3\036\2759\000\333=wk\225=\020\020\006=-\200\300=\332x!=\214\337\320\2751\002\204=nt\253=B\327\214\275\255w\004\275\344Y\331=\030\263\247=<\331\252=q\032\343\274_%\036\271\344%\310=e46\274Vr\263=\366x\277=\366@\242\274*<E\274y\014\317\275\305\217\231\275\024n\023\275\353\025\315\275\276\257\344;\264\243\336\275\025\270 \275G`,\275N\355\332\2741\205\033;\007\304\335=N\346\210=Lz\030\274\257\347\201=<\210B\275v\311\320=h\331\245=?\227\263\275&\332(\275\226\217\223=\207\220\240\275\346\262\302=\245\t\264\275\310\0035\274\223\034:\273_\303:=\340;^\275Q\013\304\275k\335\005\275vN\204=\317\343O=\364-\036=6\230]\275F\247\313<3\221\030\273\275\251\246\275!:\322=\260-\022\275\033\235\224=\302Ts\275\242\247\233<Sa]\275\nQ\252\275j\\\336=\336\265\317=\356k8=s\n\306\274\177a\232\275\226\035\216\275\253\242\221\275\317\3039==\262B\275\232\306\355\274\362\301\037\274&l\337\275\374\341#\275\264\203\321\275f\326\303\275x\'\231=\304\357\204=\344M\264\274n?\252\275\026\001\252=\004\233v<\230\'\242=LS\r\275\233\345\254=_\247\355\274&\346)\275\234\367K=\210\016\211==\2334\274\026\177?=\313\345\300\274{BW\275yx\203\275\256\322\023\275\340\302\215=\260#\241\275\313\325\241=\376\337|=#O8\274\036mA\274\300\245\022\275,\"\005\274G]\212\275\036\0000\275l{C\275\013\210\300=]\361\222=\2735\273=\372\363\321<\374j\241=\236\207\220<\203H\007=\016Yr=>pV\274\233%\013\275\330\334\262\275(8\264\273\235\256\250\275o|^\2757\274\243\275\326\347\035=\364\332\022\274\317\227I=\026N\252=\364W\233\275\333C\264\2753\033\271;\301\"\005=\234\321\303\275\002\230\234<\203vG\275\263\331)\273C;%\275Uj\316\275\207\261R\274\026\210c\275\371\032\010\275W\243\001=\013\036y\275\207\027\304\275Z*l<~\212\223=y\350\332=\211\3427\275X\323\027\275\233{&=\376\321\300=\273\242\345:\220+W=\250}\210=\372\033B=\034F\004=rs\212\274R\224\321=\2148\206\275\036X\213=\313f\300\274\3558\013=\301[\t=\225X>=9\271\275\273]\273\266\275\332\3333=:d\244=qd\004\273o\023\217\275\264\344\035=\360\246\310=\376xt\275c\177\337=pG;\273&J\325\274\013\274\300\275\233\360\013\275!\240\336\275\0167\310\274\247\225\336\272 %[=\373\277\336<\231\357d\273\322\235\373<Zo\314;\246\307\020\273\202\347\277\275H\373\261\275g\201g=#\241==\307\352\001\275\233\325\021\272/\247\242=\346\323e\275\203_\266=ES\271\275s\261\320\274\355\005\212=<\326>\275\006\331V;\232=\253\275\376l\235\275K\353\235\270\260\347\263\275\210A\334=\003\355i=\266\376\333=\260\256\271\273\245\214\373;\347?\216\275\035}\270=X\321\332=0=\232=\333\020\267\275\n#\312=\375\270\274=5\260M=\232e\333;\352!\246\275\300\212\252\275\252\014\255\274<\324R\275\377\376 ;\360\302\226=\220\340\344\274,\316\312=\224_\211\275\365E\237\275K\245A;\3640\037\275q\344\236\273Zk\241<\320L\203\275\202\352\207<\246\033\254=\201;\033\275I\373\245\275{j\334<\245.\264\275\327\322\200\275\332\337\034=\272{\263<\006.\017\275\366\316c\275\274\322\013\275\203\360\233\27592\037\275\2704\212\275\325\373\261=v\237p=\024\005n\273\000q\311=\333\333\\\275\255\353\242\273\376\004\251=\313A$=\241\301h\275o\347e<\225\245\320=m\rO=\1771m<M\251\301\275\262F\375<&BO=&:\212\275\345\317q=\375\243\315\274bR\202\273\203T\331\275\354\324E\275E\227\226<\374\334\234=\245k\343<\251\253\"\275\373\031\267\275\322\021g=\013\005\212=^\325\353<\037\354\013;\370\023\243\274\031\263\272\274\344\3710=Q\262\207=\336]\346<\'\241\000;\036Hb=\344\365\312\274f\247\325\275\314|\352<vTT=\251\016 =\306\273\305\275\023\270\214\275\303>\202\275^\030\324=\006\202!=\017\201\n=\034\266\357\273\274\336,=,\"\334=s\035$=\316\366<\273\000\362\352\273\231\241\256<d\t\236\2753\304\301\275$\252}=J\031\017\275#1\234\275\034\033\202\275@\324Q=j\340\350;K\352\211=a\r\334\275\307\333\240=\261G\270:\350\365\224=\026\025\247=e\360+\275o\014\277=\206\222`=@\375\034=\345\250\242=\271\035\005\275\354G\276\275\313g_\275\326j\232;&\240{\275Y\261+=\307K\220\275x\005\322\275m\306\212\274d\237\325\275\025\365\257\275\264yh\275U=R<\303\275d=\231\334\334=^\240\337=\247\201\324=\311\'\327\2756{\351\274\343V\307\275\013\242\241\275\374\211\257\275\354\366\300\274\020\224\333\275\277\331\314\274x\t9\275?$\017\275r?\205=\241\225\213=\2014\032\275c\305\247\275,\272\300=^\003\207\275\035\220\177<\036\377\256\275g*\370\274\006`\265=\2713L<\266\304\036\274T\203\024\275\200\324\231\274\343\354\257\275\217\274\233=j\0372=~^\200\275\2035\272\275\001\"u\274\017\237\310\273\373\314M\275\250K\221=\321\277\376\274\tm\244=\026\r\016=`\347\332\275\373p\232=\376\363\272\274\"\254\301\274\374\035\306\274\253\257\272=\321_\343<\314\254\306\275\371pp\275\343\272i\275@G\327\275\345Us=\212\260\264\275v\344\255\275\237.a\275zg\274\275\373\ru\274\314\022\267<\0359\343;\341\342\010\275M\366\375\274\233\221\304\275.\307\001=\360P\210\275\301\241o=\252Ju=S\275\225\275Po\033\274\337\243b\275I\013P=\315\372\221\273\275\007\227\275H\336\217\275q\310\250<iQC=\026#z\275\342Q[\275\022&\237<\246\360\013=\310\243\316\275\235\256#=\243T\262=}\253\231=\277\363\255<\305o(\275O\241\333<\032\337\235\2745\305\241=\224\231\305\2746T\250\275f\213\005\275\252\264\270\273\331\307\241=T=j\275\275)\210;;v\373\274\323d\234\275\006\327\325\275;u\211<\374-\211=\017\357q\275# \251\275kZ\262\275\2037\017=d~\240\275\272\200\320:\252r\313=|\007\246=\201\352d\275\313\200\212<1\256\026\275+\302d=bF\276=#\206\327=\002&\337\274\301\017\302=(\243\262\273\266\227\302\274\363\336\307=\227\327\223=\276\300\230\275\200\214\305\275\316.\313\275\203D\\\275\255H\243\274\335\340\204=\211|d=w\270\335=\254IV=\027\301@\2756\355\244=#\206\203=\350\177\177=\007>\236\275\212\203L\275\030\316\250\275\315\004\232=\375\014\034\274\203\340\265\275m\376\233\274\377\207\314<v\301t=Dt#=8\244\273=C\263(<\300\314v\275\371\350\275=\013R\307=\323\213\317\275\303J\276\275\3661\037;\317RP=\352\212&\273\303j\322=\032;\373\274v\357\343\274\001\354R;\367\343\321=0\314m\275l\367\333\275\257|\304\275\273J\307=\377k\222;\005\347\313=\213\267#\275\022\017e\275pu?=6\200\256\275\330\214\315\275E\261\355\274\007T]\275\3257\262=>H\256\275\201pr<\2661$\274\263v\207=\336w\265=\271u\026\2756\2557\2755\341\264\275?\2134\274\306\211\205=y\2266\275\2212\234=t\361\205\275CV\366;\351\014|\275\212l\277=_l\\=\004F<\275\330N\006\2754\033\203=\345\010\030=?\346\254=0z\226=)\0162\274!/\367\274j\340\246\275\340Z\244<\345y\266\275\333\253\201=\365\300\221=d\205F\274\263\252R\274\343^\250\275\353\376\226<\252v\320=\372\265\265\275tq~\2731L\270\275\266\006\204\273w\007#=\311;\002=\255\302*=\001\255%\2750\030\310\275\346\223\337\275\354\026\334\275\261\245q=\\\262\247=\220\002\310\275y\034e<\315#\261\275\337h\227\275\275W\275\274\361\321\r\274\200\352\336=\302\205\376\274\205\272\017\274\372B\365:\202v\236=l<#\275\235\004\217\275\301\270\314\275S\005\006=ow\035\275\177b\345<\005\307y=\352\204\255=\234}\250=\243\030\322\274\376\234F\272a\251}\275\354\227\260=\374\005\243<\270\265\331=\242\276\211\275%Xu\274~\023\216=4@\255=\000|\232=3$1=\016B\203\274\233j\243=\354\210\277\275FAF=\214H\037\275\242k\032\274JER\274\314>\337\275\302\271\213=G6\236\275l\324\327=\314\261*\275\312\313*=+%w\275-)!=\210/\216=\177t\333=%\035\000=qA\272=\244\343\261=\221H\001=\312\373\254\275D\326[=\333e\303=f\006N\274\034\352\030=y\024\203<O&\325=h\321+<\324#\375\274\376\006\235=\334\376,;i\253\235\274\276`\270<\346\241\265\275\300;U\275BUC\275\377*&<\204\374\226\275\263\r\251=\246\'\035=\226\nX<\264\352_\275#\004\344\274\206\347\'=\266!L\275\316B]=\277\014\205\275\331\030\224\274\261\013\327<\363W\325=\320\227n\275\310\206\347<=c\212=8\317\230=\303\2217=3\256\315\275\272\343c\275#\205\006\275%H\351\274\344\366\203\275@\276Y\275\020\327\325<\001,\267=\356\000\331\275\221\232\217=*\022\335\275\334{\337\275\'$\200=\017\372\2318\240\2749\275H\337\261\275d\022\233=0d\304;{G\212\275\345\006\252\275\360p\312\275h\231\024=)\212\212\275\2166\230\275 \244{<\\TC=\177/.\275\312\311O\273\024o\251={\354\303\275p7\247\275\347\t\032\274\236x_=\215\024\333=\341}s\275M\333\347\272fY\243\275\245\010\264=\252q\307\275\227\363\317\275\244\302\177<\257\311\334\274DZ\270=\007o\231\275\013\367\336=\\\270h\275g5\362\274}\357\352<\016\373\226\274!\222\245\275\350\254\260=lA\305\273\342\001\307\275\nT\035<\261gx=#\370\365\274\213Q\323\275\333j\274\275\025\353\207\275\347\242\225\275`\\\321\275\240\323\207\274\354w\273\275-\326\237=*\363\227\275E\264\316=Lt\257\275-\257\345;\343B\253\275\341D\310=%rB\274\344\354\353\274x\227\232=\016PR\275\354\222$=\025\274\243=\026\'L\274\366 \326\275$6f8xr\n=\\-\256<w\027_\274a\347\276\275=\nT\275a\034\235\275\205\302\375<\"\211\304=\341L\003\274\251\202~=\330\255\231\275(%\310<\272\252\033\274\312\251\305=l\227\233\275\361\342\310=u\222\216\274G\256\250\274h0\326=i\312*\275S\345\200\275X\315\267\275o\200\326\275\302cF\27401]\274\345|\233=\031\370\201\275\255\277\245\275\205\'8;8S\007<i\331\336\275\360\353q\2753\017\322<\310\305y<\262.\252=\302\343\250=YT\225\274;\324\314\275\336\036\237=\322@\341;\333\314\036\275\272\026d<\360,\310\275\370\r\253\275C \377\274C\3228=\265D\201\275D\210\201=\256\363\025\275S\360\266\275\350,e\275\267\217\327\275-*\215=\303\321\276\275?\277\006=\262By\275d%t\275V\234\260\274x)_\275\2442l\273C\216\215=\326\224\231\274u\243\225=I\261\265\275?z\277\275h\013\250=\220\232\233<\016o\002=\262\217\325\275\340\367\t<\323!$=u7\266\275\364\017\275\275_\330\333=~\376\246=\210e\275=.\314\335=\223\331\234\274\347*\341\274\253\215\316\275\364\235g=\261:\016\275\204\316\000\275aE\360\274u\366\255\274,\215m\2751\205\245<\237\201S\273l^\315=\225`\023\275\366\\\301\274e\356\313=A\332\227\275\233\322\310=\274\227\264\275\263e\304\275\0275\334\274\206\206@=L&\034\275\231l\264=S=n=\206\321\004=F/d=\316\362e<\037\225\350<\254\301v\275^I\265=`\020\230\275k1)\275\254\260\271=\030|\226\275\030*\203\275v\002\224=\\\325\275=\271\024`<\351\326\321<\321P\335\274\254\264@\274\033\226<\275\034\035\266\275\303\022\333\275\255D\177=\276\366D=#\376\352<z\001\216=\314\2134\275Y\233\350<\201\035\013\275[D\324\275\374\027\241\275\306\256\215\275Bg\335\274-%\342\274\332Z\334\275\20650<$b_=\310\371z;(\025\325\275\300\272x\273\232\r\367;\233\263\323;\217\303!=\177A3=M\235\242=\376\006\306\275:\021t\275\274\3060\275\313C!\275|\032\305\275YnM=,\204u\274\t\002\244=\250\340\367<\006T\213\274\030~\305<\3541O=,\365\260\274\376\023\266=\344r\211;a\367\270\275V\333\313=?\250\271\274jS\014\274\342\366\315=\202m-\275\022\265\324=\343<\t<\364\330A\275\035\250\204=n\245\253\275\235\231\035<x\210\252= p\322\275\232\007\320\275\254{E\275\234\351\025=\227j\216=\022\025o=(b\263=m\n\223=Y\252\265=\272\311\305<yQ\236=9A\244=\031\335\202\272I9\225=\320C\237=\207BQ\275\337V\366<`\340\305\275{\300u=\007\202\020=\327\247\221;\233\0174\275\316\"C=E%\237\2757c\202=\213>\236\275\375D\264=\236\374\376\274\nX;\274\335\007\307\275I#\256\275.\322`=7?\277\274\017\345o\275%\326\277=\006\313\306=\344z\327\273\377$\255=M\033\223=\023\311\321\273\3501\264=\034\221\254\275\331\364o<\333\013\203=\244\224>;\034c\033:\372\236\214=\237\272\231\275\267\272\242\275\326\244T=O4\304<\344\210\230=\\\013p\275\235\300\313\275\363\373#=\220\242c\2756\325\320\275\n;i\275d\026\310\275f\205\337\274B\316\252=r\t\250\275\326\027]<\234\246\265=\270\227\254\2756\340\001\275\201nS=z8\203\275\251\350C=\326EG<\356\366,\275m\016\273\274\036\237\276<\301\025\237=\225\250\332\274\311N\327=\t\000\244\274P\265\220=j\327w\275\256\204\262=\026\003%=^\247\234=\320\326\262\275\007\363\207=\007:\260=\027g\213=\014\3435:\003\320\200\275\212\253<=Hb\225=\327|\264\275\277\375\205<{\315\250\275\217\244\277\275\221 g\274DK\217\274%C\232=\256+\320;\362\374\264=\305\307\237\275Q[I\275N`L=j\231\027\275>\3241=\335\301\246\275\273\002\327=q\300Y\2753\324\377<\257r\322=\261%l=B\325\321\275\251\270\224\275\201\361\230<%\325\031\275F \311=\215_\036=\354\t,<\340q\306=\3024\372\274ww\252\275\277\275\203\275\026\365\206<v\204M\275\236\312\302=t\344\036\275VD\336\275\200\265\025=d\375\340\274\213\355\276=\330i\252\275\333`\244\274\354\025\023\275\222\355\236=Lq\316\275\035\253\'\275\205}\021\275\314\n\';\311w\234=$\372\314\275\t\024\211=g\360s<\305\036\334\275\'\272\215\275r\362K\275\342\362\"=\237!\"\274&\370\335=qKI=W\r\\\2751\341\003=C\365\227\274\276\332p<\255\036\323=\247\004\245\275\235A\271<b\255\033\2754V\206=\\*K<\035#\317:_0\232=0\346\231<d\201\263\2750\375^<\227\311\323\275H\347\007=\t\253\215\275\222\'\247=\354\014\206<\275\014.=\r6\227\274j1\031\275\343\267\314\274\237XM\274?q\253\275\373\232\341;\352r\363\273\000\214\232\275+\312\233\275\343\027\221\275\3263p\275Yt\306\275\030I\252=@\367\246\272w\324Z\275\020N\251\273\323\2272\275$o\277<\351kj=\272\313\206\275\224\330:<\200j\223\275\261m\257\275\253\354\276<\224\017S\275\276^Z=^\260\254\2752\327\n=X\030\211\274\255\rY\274!X\246\273E\253\024=\027\350L\273\324y\275\275e\200\306\273\2726\310\2751\322\204\273\352\003\211\275\177N\266\273\305\313\246=g \207\275\207\344\261=\\\325\236=S\3728<\232@\t=\036\341\254=\303_\341\274)\327K=\214\325\261\275\304\244Z\275\277^X\2758\333{=k_\317<\363Y\3418N\025\257=8\236S=o\316\303\2753%\021=\354\320&=\235U\023;\322Y\204\274C\313\336=\025N*=\304\361\321;\221%\354<ga?=\242\200H\275\263u\236\275\354t\304\274;MX=\240\022\n=\221\314\313\275\305\212$\274\tzz=q\025c=z\213\266=\246\315\022\275\374\026\247\274\305\344\013\274\032\221\205\275\265|\323\275\022l4\275<\201\213\272\204\352z\275\332\231\306\275\311\021}=\372\352\330=\270B\226\274[\350\260=+\010\204=\033\250\314\275\225\032k=\374H\260=D\317\276\275\214D8\275\037\324\214=!\264\212\275+\345t\275\271[/=\324{\303\275W\2021=\272\316\344\274P!\237\274>\222\302=\306H\215=\301\251\n=8y\312\275\312\255\256;\305\356\315\275\270\t\322\275gv\274\274\254\325\252;<V%=)ns=q\202\035\275=\216\010\274{\351\'=\322\247r\275,@\250\275\305\275\210=\201\356\306\275\211\266a\274)\335m\274L\244\270\275;\335\276=\340\250*\274\014\262\265=\225\355\364<\022j\217=X=\212\275\034\327\277\275\017\304f\275\334\215C\275\237\021\205\275B\n\223=\354{\200\275-\007\302\275\272\320\231=o\200\237<\331\204\267\275&\330\335\275\336\373\303=\274\234\207\274.\262\265=Z\374\342;o,\014\275\036/\205=\317\354\264=\n\3125\275D\325\315\275/\2356=\200\337\224\275v\031\323\275,+z\275\312Z\034<\325kw<\274\327\255:\230{\236<\t\264:\275T\315\311\2750\312\230\275\264\261R=%g\217=\332\340\212=]\241\310;\357E2=\3764\333=\377\340<\275\001\037n\275H~\331\275\344\201\323=|7\276=M9+\274\031\343-=3%\245\273Q\301/\275\263\023\314=\267\232\032=\223\205\271\275Y\274\353\274\321Z\227\275\'\326\004=\251u\205\275\025\323v;\013z\250=}\037D\275\337\357\004\275\2203\024=\304\014\013\275\244\353\311\273\272\354G=T\n\200=\217\271\277\275\202\023\250\275\221\221R=-\213\266\275\267T5=\235\260\254=\330c\273\275\352\314\020=X9o\275\341y\"\274>Q\244=\340\257\303\274\357a(=\206j3<\013\331\326<\t\274\243\275\355\270\020\275\207\231\213=\245\310\335=\030?\316\272V\034\351\274\243\226\r\275\307\027e=\206\213\216=\037\277\320\275\201\267\250=\3270\232\275/`\035=\333&\273=\215.\275=\242N\223\273\326\210\'=\r\230\335\274\262\250@=\354\027\343<\367\256\024;\211s\330;\313\013\251\275w\363\276\275\322\035\333\274\266\227\336\274\351\352\275\275Fk\202=\374t\304\274f\310>=\341\275j\274\323G\314\275\321yr\275o\317\247=\217v\225\275/4\263=\035\2139=Q\265\224\274\316d\205=\363\262\026=#\010\232\275\3249\233=\025 \336=\351\242\245=r\004\311\275\004\362}\275O\364\265\273\214,\251\275\267k\277\275\020\320\333\275y\024\205\275\347\025\304=\361\001\\<\322G\021;\026-H<\032\337\321=\336+\276=/\307/<$\t\023=\375\356\000=\3138\266\275\247?v=\031\002 \275\035\313\221=\237\342f\273\202\214#=\003\026\322\275\326\236\365\274\237\260\333\275\021\252\n\2747\350\331\275\222\236\303\274\357w\210\275\327\316\263=\354\320`=u\256!\274\\>9\275\330C\221\275i\\q\275\256GD;n\3725\275\310\244p<.h\320\275/\344\217\274\302\007\240=\300\341\300=\267$\300=\033f{\275\241V\271\274\272K\233=g\251\202=\326\377\006=\005\351\242=\265\212\254\275A\003\322=\003\306\203=y>\306=\'[_\274E\273\247=\347\234l<\346\214\274;e\331\215<\233\237~=\277\343\005=\3606J\275\315\367\303\274\252c\323<\263\325\006=\346\235\242\275\316[\t\274\005z\322\273jV\252;0o0\274sM\030\275m\303\231\275\342FU=\366\t\215\272\030\256\251=feR=\337j\024= \n\002=\006&o\275G\017\275;iv\316\275-\234\210=\357g\t=\201&\216=r\023=\275\264\236\243\275}\276Z<\350st==%\251\274\331\377%\274w\320\234=Y\010\235\274\356_\261:\002\363\335\275\363\217\236;cr\005\275\032\204E\275\037\206>\275\362\217\230=\274y\313=X\025\235<\314\334\261=+\\\257\2754\373\274\275\353\244\264<\341f&=F0k=\355 \322=vr\325<Bz\027<f\206\241\275\362\341\223\275\371\313\007\275P\375H=\365Tg=\200%\216=\004\343\\=|;\214\275\024a\246<S\024\357;\022g\227<\377\276\317;\252\330>\275R\025\'=\267#\226\273\034\245R\275\352\302\211\275\\\322\316\274\031\343\252\275-l\241=\217\024[:\306Z\213=\351\274\227\275\'G\336<\365\371\221\275\203(\330=\222\271\322\275W\333\021<\325\261\314\275\345\224\306=\265\377\256=a\376O=R\213\021=&\325\301\275\243\277}=\371\332\202=\233(\227\275G\n\205=@\026z;d\253\207=\\\001\274=\233\242d=CAI\275%\375\305\274\332<z\275\221,\234\275\032\243\322=\341\230\235=pN\313=(Y\302\275\261A\240\275\367\001\221<\344\035\033=\247\346\027;\207\241\316<+\300\310<\003\365\242\274\026qm=`C~=>fz\275\356\274\310=Y9_=q\210\247=\033\311\250=\017#\237<*e\241=\221\2114\274_K\300\271r$\243=\243g\230=\217\374\020\274\\\020\017\275\301\331J=P\241\261\2755\205\220=\334\320?\275\351\262\252<\374P\243=In\020\275\360Y\005=\360\327J<\014\226\027\275@\021\204\2753\225\336\275\217\265\244=B*\253=.J\252=\237\232\230=\003\272\321<\247]\217\274\21368\275\341k\021=\262z\026\274\rX\241=\374\204\217\275\371\007\000\274\255z\207=\001\303\272\274C;n=\025\352\314=\r\210D=\217x\237\275tr\214<!\365`\274\276\3402\275EV\266\275=P\250=\037\311#=X\2453\275u\347\304\275\027\\\305\274PI\270=\006\332\265=`\237\321=@\343\217<xp\036=\010~L=\216\375\007<u\033\270\275\264\241\203=b\300\212\272|\260\355\274\225\024h=<u\216\273\024\020\304\275l\363\\\273\223\274\237<\211\300==\213<\215\275fQ\215==uG;\007\231\225=2\"\265\275\250Nd=^\220\277=\2669!\275\377\213,\275\327\363\322\275[\000\255=V\200x\275_%\254\275\027\236\262=n-\005\2752\237\273=\341\211\262\275o\344\225=6\204t=\370:\250\275\314YS\275;\264\231\275\273\004\223\275\316\272\200=\003\007\307=\275|\037;$,\214\274\004xZ\275\246!U\275\032\244\242=G1\274\275\244\234\221=s\261\266\274\340\340\006=\010\206\236<\302\360\243=m3U\2755\311R\275\332\333\222<\027u\003\275-\251\206<t\204\217\2757\363\353\273\314@\221\274\242I\207=9\252\241=1\033\201\272mK\031=\022\026v=\'\2636\275\300\263\013\273WV\335=\006I\314\273z\355\027\275\3331\002\274\004\016\016\2738\315\213<\004\205\254\275OW\300\275\001k\330\275wY\232\275\301\323\306\275\006\321K=C\034\306\275ii\206<\201\363==\2501\277\275\347M\035=\237#l<\332q\224\274\324l2=\355\243==3\211\330\275Zgs\275\005`\217\275w\214\230;\033\275\332;\340\373\326=\253\300\202=\340\031~=\252>\205=\207\212\265\275K@\336\275\336\371\247\275\242\364\334\2755\330\002\275\366\003\245=\31777<\324\003:=\201xq\274\275\322\010=\334\037\337=\226\305\217\275\243\226\376;a\245\313<L9{\275\031\375\246\275\306\244\221=\304&\325=\204\037\247\275v\350o=q<p=v>;\275\024\037\272\275\205b\275=)H\352<d\014\265\275\177\372\256=\201\013\245=h\246_\275\306\372\226\274>\302\251=kj~;S\214(;\235\260\"\275D\027\"\275N(\216\275t,\313\275\000Q\315\275S\205\000<\3633\244\275sz\022=\320\365\317<\255v\320\275\212\247J\275\303|Y=@\313\301\275$\254~;\346{\301=\2735\370<q\300\305\275\345F\022\274y\347(=s\322p\273\326P\337\274u\272Q=\345S\335\275\337vD=)\342\313\275\026k\274=\235l\201<\363\247\325=\346\334\236=Z^\360<\226\210:\275\305\t\227=2.2=\262\037\251\275\213\2721\275\303\236\265=&\354\322=g\226\230\275\036\340\245\275\2630\307\2754_\274=!5\307\275\376\260\037=\232\177\261;\320:\333\274\367\345\317=\310\t7=\217=\235\275X\224\321\274C%\331=\252\327\230;\346\242\261\275er&;\376M\330\275s\200\247\274\\OJ=\257\230\236\2751G\327=\265\021\313\274\234^\205=\344\367\231\273SVE=\324[;\275O\345o=\261\026\314=\350u\014\275=\310\320=\252\247\201\275\237\261\302=\350~\265\275\245\232\024=f\303\274\275\331k\204=+!\255\275\013_\325\275\'\205-=_\353\325\275\250\205\272<<\016M=+\263\260=\302\243\001\275\233\236\254\275Rl\206<\337\364\325=\352\222\014\275\253V$<j\370\000\274Ii\003=\321cO=\003\002Z\275\035\262\226=?\270\327=[\366\316=\353t\232=\263\215\003\275E\262\240\275\352r\273=\345\206\305\275\360a3<\033\347\214=\362\312\211\274\027\276\203=*\026\013=\234\230\252=5\315\320=\332\237\316<\230P\335\273\350\027g\275\303\372\\\275\245X\207=6\311\261=\37704\274\177&\355<\327&0<&^+;\247K-<\234d;=V\001\241=\332\377\376;\264\373\220<>\010\275=\375\254\320\275f\342b=\363\347\207=\222\345z=Ml\241=gMf=\245\274\020\275\217\362\372<)\347\307\275\247B\303=\245\263\230=\036\\\010=\270\310\020\275\243\314\017</\233\235=\215<\250\274\243\306\227\275oW\260<\245\316\215\275\037\201\244=\251\302\255=;D\222\275\221\330\305=\302o\213= \313\010=\314&\207=\266\317\n=>\237D=\n\034\231=\274\266\314=\206Rh\2732\265\336\275B\213\236\275\254{\304=\017\355A\274V\314\331\275\n\330\312\275\325\326X=\356\273\202\275#\354\264=\375\321\276=\250\225\225\275\356\256A=[\351\246\274=\232~=\010\241\257=\241\272+\275\252\020\357;_AM\275\263\324J=\235\006[\275\013\224\272\275\006\265\002=\333\373\347<_\020\324=3;\214\275v\2206=)\244\226=8\344(\275\027\271\032=S\330g\275\342\251\254=.\363\266\275\323\220\271=\212A\263==3\273=x\213\274=:\227\210=y\206\352<3v/\275c?5\275\215r\263\274\tu\207=D\213B<\377\376\305\274\233\'\230=\026m@\274\222\\\352<\256\n\367\274\230\201H\275]\321P=\230\255l=}}2\275\276\212\037\275\026:\323=8\356\253\275E\004\212\274#\367\257\275\0018\317=)\242\241\275\255\271\212\275\225\n\315=\225*\323\274\365\357\031\2752\336\233\275pd\225\273#:\242=\203\244\362\274^&\033\275\002\232\262\275\224i\305=\350\245\027=\330(\331=\205\245\273\275\360\034\010\275;\266\331=\252\202\310=\327\223\310\274\177\235\027\275\216>\203=\355\203\307=;d\245=\254\002\240=\234^r=02&=*=\037\275\0140\310\275\222O\014\275\260\272}=h\267\203\275B\234b\275\006\370\271\275|Ta=\323d:\275b\266#;\253\200\244\275}\020[\274\231\360^\275\205\215\272\275<\332\200\275\245&\346\274T\001t\275-M\000=\010\362\213=\207\252g<\005\324\311\275\016\273%<\226_\307=\\-\336=|J\026=\032U\016=KL\2269\352O\231=:ma=\225S\245\275)\275U\275\251y\230=\033\330\273\274(_\254=\001U5\275%\354\255\275\306\316\235<<\376\231;(\300?\275\261\016o=I\033\225=\231z\241\275\356\224^<\314\235%\274@\350c=\333zg\275\031Z\325<\250L\202\274\236\263\312=\347F\027=\'\374\230\273d\234\322\274ax\223=\212\034\212\275\220\003!\275\376\n8\275\271.f\275z\324\226\273\265\231\217=\030\235f\274Tz =\245Jf\275\214\257\352<\213\371r\274\226\374-\275\256\365\326=\007\231\226=\263e*\275\2455\247\2755V\226\275\007\330\304\275\316\014\361\274\270\371\231<\032O\215=C\301h\275\203\233\214=\207c\321=5\021\220\274&I\233=\236\251\314\275\366Lm\275\034\220\254\275\211\215\273<\332A\234\274\206\205t=\264\376\332=)\265\240<\236\225\311\275\272\243\036=\263\214\304=-A3=\214X\255\275z\370/\275_\261\325\273N\035\207\274\360\300S=\334;\265\275t\020\222\275~\353\217\275\355\336n\275xZ\240<\340I\255\275\354\371\240=AGS=&#\311=e\201\231=@Z\321=#ZW=Lx\252\275p\226\220\275\025\245\254=F\200\307=)\t:=\232\227\326\275\376\251?=\202y\314\275\244\250\233=\256SM\274\233\300\222\274\034i\311\274\375T\177\275\033&\211=\272s\242=\301f\007=\t\333\210\275M\271Y=\3672\274\273\014>\323<\244<\237;\251(\310\275\212\'V\274\270\355U\274\255\363\010\275\025\342\334\275\307\232\366;\350s\241=\363 /\275\372(\273=f\363\255<\272=\r=\355\"\275\275\360}\326;\214\343\317=\374\344\325\274\362\035\261<\271\234\256\275\366\244!\272\236\314\000\275]U\322\275)\023\226\274\306`\317=\021\230\314\275d\246O\275\371v\260\275\032\341_=\'\373\276\274n\324\330\275\335\235\317=l<\232\275zU\223=p\232\254=\004\030\322=\244\377\230=\317\257\266\275\t\376/\273\317\371\226\272g\355\320=\222[\315\275\326\244\020\275\361\\\275=,K8;.]\210=z\322,=\275\200\200\274d\330\305=\233wL=c\374\224\275\372n\212=\203\004\344\274\022\246\253\275/Z\233\273\2709\254=\010E\302=\366\212.=|D\323\275\001\030\013<\354\301\'=D\034}\275\352N\322=~YW<I1\300=L\257\032\275Q\212\270=\037y\274\275\217\"Z=\254h\276=\255\267D\275tE\337\275\257$\021\275\3225N\275vO$\275\346}\310\275\007\\0=\344W\027=\204\236e\275r\270}=\2028\224=\271\342\312=\274J\273\275#%V\275\240bd=%^\021=\352\301\301\274\017\302q;\300\205\025\275yh\325\275\251J\217\274=\371,=\007eP\275bq\236\274^S\267\275:v\313\275\331\223\026=\253F\226\275\026n\232\274\305)%\275\224\302?=\377+\001\275\016\003;\275\2554\314\275\004\314\206=DA\344<!\006\323=\247\313\231=\002}`\274#<\251\275\274#\200\274;\333\023<\351\201^=F[z\274\350\364\331\275^\335\330;\210L\325\275\327Q\020\273\254\007\214\275\302\251W=\241\016\353<\204(\201<\204\313\321\275\255b\003\275\026\375\264\275\243\347\007=\2025\233<l\335F\275\t\222\n\274\031\312k\274\326\035\300;0\035\n\275\300\220\276=d\332\r=\335h\355\274\002\036\222=[\022\314\275\274\270\343<G\251\240=\262\374k=G\036\273=v\334I\275\3465^\275\330\223\261\274\310\225%=I\222\303\275F&w<z\264\216\275\230\236\306\275z\322\226\274\253}\252\275F\343t\275!\332\321<\221\237R\275\276\021\217=\225\3248\275L\206\376\274Z\023\250\275}\365\273=\0324`\275<#\215=\257\307 =\337%\204;\334\341,=\270V\251\275\207\322\315\274\312\234\233;\333d\265\275\235\206n=\2627\257<\375C\335\275hv\333;\374\323\257=&\324:=\266S\326=H\261\221=H\335C=\215\366\246\275\0312v\275\254\270\252=\343/\254=\234p\301\275_\234\232<\034\340\254\275\234p\334=\374\306\311=\007\345\025\273\r\251\371;\014nZ\275Ge\244\275\\\016z=\356Z&\275\036\207\303=:\340\250\275\366N\337\275lq\016\275\254\306\3509#\225\031\2750\377\262=\206\351\316\275O\"\244=\354\037\277=\334\315\240\275\211\2263=\334\221\207\275\337\356\273\275U\034\201\274\215\354\t=\230@I=\006\026\263=\276\t\334=\205\357\236=:\257\027\275\362\310\260\272\347\272\272\275\246\231i\275\037}\372<VwW\275\242\351\336=\022\006Q\275\024\201\306<\323\261=<\260\370\347<\205vH=\376\022\336\275\266+\315=\345Y\307=\271/\225\275&Yb=8\303\270\274\347\200\255=\233S.=\270p\327=\364I^\275!\350\013=\220\203\025\275\336q\313\274\263*\346<\250\306\212\275(\036\277=\242(\001\275S\016c;\235a3=q\325\227\275`\301\245=\002\340\202=is\234\275J\367:;\314\237\246\274\026h\232=\314\200w=\242\364\244=x\017;\275\313\364\332\275\251\303\240\275\223\366h=\024\224\201;\262bQ\275\231\330\262\275\332\331\000\275tv\206=\036\304\331\275\217g\373;\360\231\321\273.&5\275\304\344t\274e\277\200=0\312\210\275\260n\223<\311\240\275=\rAn=a6A=\322\374\317=\006\333s<\342\347\250\275\341c%=\325\202-\275V\240X\275l\363}\275\302FE\274\213i\261=\270\254\251<\022\035\275\274\3013\233\274]U\352<Y\336q\275Iay\275\316`A<\003\243\207\274\316\027\213\275\017\235\336\274\246\237)=\341F\256<\341f\326\274\211\344G=\322:o\275\312U>\275\034U\006\27518\261=\253&y\275M\330\216=\272G\312\274\313}\344\274\271\314\310=?\316\311\275\tl\274<W/{\275\321\340\033=\032\226>\275\303L\204\274j6\237<\'\256\027=\237\306\260\275\256\n\000=\017zm=9}\302<\235+\263<d\323\261\274U\013K=\037\220\236=\023\177\216\275\356^8\274`\022\261=\030\r\214\275.\374\254=0g\302=\345\321h\275\357=\324=HC\363:\370Ev<a\211\303\275\362\025\301\274\275\345\020\275:\334\231\275\255\264\306\275\323\204\250=.\016V\275>\376\331\274\341q\205=u(\003=\334\354\315=AL\217\275\276\036\263=\302\006)\275\356\275\202=X\311\230=\270\'\007\275\264\212\250\275\214z\212=\366\273<\275I\240\333\275\007\005\246=\361\331\214=\323\345\213<\226%\216\275\322Wv\275\234\367\206\275\205\202\000\275I\312:\274Y\007\207<RB\252=r\333\034\274\273\341\303<\021\261\271=@3~\275\030\240\306\274\331\335\225=\203\"\201\275\343J\267<\260B\235=\027`\334\274\225\244\031:\3065)\275\236}\246=\244\000\316<V1G\275\336\025\303=\321Gj\275\214\245U=\215\3019\274\300a\220\275\210\245\316=r\002\244\275\213\260\272\275\345\236\375;\345\007\016\275\345l\303=\233\306\336\275\253\"\206=-G\203=\215%+\275{\376\242\2740\373X\2758\261\322\275->\244=\361g\301\275`\231\211=^\243\236\275\2425\232=H\323\274\275.r\237\274\264\001\256\275\363\201o<T\254\261\275?\036\265=AA\272<!d]=|\316L\275\222B\310\275\024\367\360\2737\001|\275i4%\274\201:`=D\362l\275\031\360k\274.\233\316={\264\244\275\210\256\214\275w\352?\2755\331\326\274\033\264a\275Q\264\314=\201\204\320<\030\002\236=.\303@\274\224\303\321\275\316E\363\274\260h\261=<\255\355\274\211\352\234\274\002\313S\275\277\266\256\275\365\351\313=\211\346\236=b\317\225<:>\305\275\230R\265=2\271\302\274\240\027g\275\333S?=\220\266\323=LjQ=\2723\210\275\004\034\031<o`\320\275 _\336=2\\\227\274\217\306\305=\267\331\221=\000+\331<\321\031\337\275o\317\214<X\303\275=\013KA=\314\2438=\314\204\221=\365#;=\025i\220\275\331B\204\273\276-\300\275{Q\037=\275\333}=\236\315&=g\362\254\273@:\250\275\200\003;; \375\025=\277eW\275\244\372\201<\336ek\275;\330\223\275E\003\313:\240\362\265\275\225\216\224=U%\226=P\241\262\274!\342\035\274\200;[;H\021V\275\360S,=\006\247\260=u/\227=\260\242B=\330\r\265=\021\020s\275\306\250\362\274\313\226\214=\351\332\357<F\340\234=\034]\220\275%\224\203\275\006W\231\275!u\321\273\226\357\241\275\022\003\221\275\306\207\304=\320dH\275\236!*=\250?d=\266-\007=%5\375\274-q\347\273H\3456\275\017^\300=\270\"\254\275\201\'E=jY\211<\3357\253=J\266\301=\232\304U;8 j=\376\003\234\274q\371\222=\237\346\235:\262F\302=\247q:<\005\224\374<\221\332e\275\333\033\322=13\276\273\272/\231\275=\346\266\275\204[L\275\025)\356<\003\t\277\274\363\000\205\273\221\331J=\2148?\275\267\025\213<\210\350\250\275h\377w\275\203\337g=\227P\204<\320\342@\275\365s\005\275\253\276\210\273\201\265\303=\2447\301=:h\275<\003\035\267<tk\336=J\310\212\275\354\226Z\275\013v\034=&J\320=\266B\362;\004g\232<0\264\213\272\326\013\330=A1\201=1o/\275\343\221\312;A\246\235\275\000L\360;\215\203\246<m\352*\275Q\347\036={\203\313; \353\276\275Q\301\202\274\306\245\306\275J\224\225\275GwQ\275\"\313/\274,\376\022=\366\003\334=\363\243\236\275\027\3051=r\345\235\275\360\316\312\275\246o0\275\030\026I<\250O\243=W\365W\275\223\356\264\275}\252\234\274\321\214\n\2756G\033\273%\333\273\274*\212\210=\262\216\221\274\234Q\017\275\373\201\226<?\220\312\275\210\3651<\260\224\025=,>n=Ov\233<!-\207\275&5\327\274\300v?=\255\200s:\264\246\254\275c\353?=\005\266w\273N\3663\275%8\030\274\010\376\267\273\275r\333\275\353\346\300<\374v\307==\333\327\275\210\014\257\275L\314/\275\334\013)\275\023X\220=\252\357\265\275\375\r\223=\t9G\275O\221\221;[\307\033=\324\034\276\275X\240\230=\330f\244=\034\333\316\275\341\320\303\275\340\326\221\275\351\242:\274\360\\\333\275@6\203=gH\027\275+X\205=eAn=Igc\275!\230\016=\'\313\202\273s\373}\275\251\332\272\275\355\270g\275\242\220\000=\253X\202\275e\210\313;H\225\255=\262\035\207=\216K\271\274\234\333\375<\3672\206=3\264\232\274\231_1<\225\016\200\275\270\371\201<\323\342\010=\264q\231\274\225\010\225=H\035Q\274\203\365\260\274)\265\202\274\020\023q\273?\233\222=\363\004S<PV\017\275\224\236\333=\272\314\263=\266S\240=\320\360\033\274WQ\r=\254\243\314=\320\232\314\275\246AK\273\234\002\214=\351\220\324=w \307\275+4\304;7\374\210\274\332)\252\275\003\304r=K\312\005<f\276\227\274\351\232w=f\345\325=H:\213\275\037\333\225=\013\365\351\273\237\335\325=\251\\\021\275r9\215\274\321\317\300=\332\274\206=\022b\020=\342\030\225=\305\262w\275\302\352\234\273\"\205\312=\250.\316\275,\272H\275\323\372\214\273s2\353<\375\2327<\376\025\224\275\240\312\225\275\356\002\205\273\376\302\260<^\0038\275Z\213\337\275#\313\235\275w\356\261\275\t\330\t=\263\207\246\275\364\202\230<\236\376\324=C\367\216;\263D\227=\017\006,\273\222\3017\275\221o\226\275%v\234\275o)%\274?um=\346WD\275Nt\216=\347,\207<\372\024\354\274\021 \034=,6\201\275\247\300\211\275K\266\363<[\362\212\274\324\\\245\275\237e\'\275kH\243=\t\242G\275\337\200\367\274\250\'\266\274\035\257\321=\360\216\360\274B\302\213=\031w?\275\210*\321<V\3241\275\014\212\322<\336\215\273=\331\233\\<\025\253\265=!\376\030\275=\374\035<\033V\350<\347\320Y=\2566s\275x&\264\274$(\311=\367\016\304=0\r\363<\212\021\217<\274\244K=\337A\245\275 \362s=\252 \n=M\271\312\275\374H\233\275\357a\037=\357\020\303\274\003N\300<\354x\300\275\n\377\250=\010Te=\017*\002\274\314\272\200=\241j\277<Q\246\230\275\345\236\327\274!\205\275\275\006\215\321\274\356\303\206=\013CX=\257\212\266\275^9\'\275\222\223\260:\032z\217:\035\n\321=\016qn\275\363\235\257\274\200w\241\275\266\344\223=\357\010\217==K\022=\205\366\027;\\^\177\273\364\300\203\275\033Q\246\275\336\357B\274\231n\315\275\213\345\335=v\0142=0\355a\274\314\014=\275\337\315o= \016\233\275&EE=\346\345\227\275\362\206\274=]D\321=\213o\214\274\0058\024=\325\311y\275j\236\260=\372\341\340;\224\005\361<\346\355\216\275\262p\215={\215W=\337\021\331=\271K\232\275\246\212\250=\010\267\263=\342\336l\275\375\037\030=\316\270\252\275\\\273\211=U\335\316=\224\\\223=\031\306\000\274\345S\321\275\017YV=\244\030\\\275\261\371\261=|\375\272=&9&\275\332&\260\275\203\200w\275\235\016\240=[\366\260<\\\344\300=;\303\263=\'\2643\273\336|`\272\321%\247\275\373\337\273=\353\313\225:=-\310\274Nj\251\275\317\333\331\275H\202a\275\252g]=\216\257\254=Bg\275<\343\363\257=N\245\026=\350\206\230\275\374\345e\275\330\020h=\304\323\321=X\353\331\2751\253\317\2740\343\224\275}1>=\273c\234\275D\225\304=Z\274B<I\307==\274\370b<\275c\252=QOB=\316\336\224=m^.=\027CZ\275\256\276!=S\311\205\274\031|Z\275\362\263\016\275\256\350\334<\343\234\025=K-\220=7\226\302=8\253\232=d_\330=\304=\317<\263\214\315=\254\307\235\275\033\201\027\274A;\236\274\331\027\035=k\013@\275\r\247\303\275\013\331\210=\370:\231<\242\010\335\275\025\223\204\275\351B\230\275\234\210\301\275\242.\035\275\202I\245\275\025`h\275\342\270\001=\007\306L<Mf\213=\304\300\206\274\361p\301\273\275\026\323\275\213\3551\2753\3445;\202\203\317\275t\232\254\273\222M\331<F\234\327<\035\005\332<mFz\274\250\211\261\275\307\265\221\274F\322\231=\315\347\242=\2733h\275\353tW\275\235\274\216=\276\2065=\200\300a;1\r_\275)+\246=\362\273\234\275>\201|=i\335\216\274\204Q\014\275_\322\207\275Cst=\254B\266\275\356\202Y\275\316t\032\274.(\327=m\037\255\274x\266\214<p\355\036\275sn\272\275O\236\000\275}J\312\275\377\210\300\275?\ny\275\336\330\202\275\361\033)\275]{(\275A\340\250<\314`\351\274\246\376\304;\027%\316\275\271m\304\275#z\3469\237\307\214\274\324\335\226=\262>G=J\r\265\275*q\326=#z\312\2759\2030<=\305\211\274&\227;<\177\002\320\274\177K\234=\277\"\300\275\252\371t\275y f=\303\010\321\275\247\277\232<s_\332\275\022-~=d\020e\275\036\\E=\351:b\274\356X\037\275bJ\323\275\272a\265=\214\321i=/\032\244=\027fC\275\026=\010=V\307b=9;\261:\237\273\262\275?\353\331\275\004\265\260=h\253\202=\001\\\246\275\372\024\321\272\233k\365<\010%\253\274*\250\220=\274B\245=\375/q\274\326\315c<\030\016h=t\003\260\273AA\210\275Z\000\246=g\346[\275\253\241\334<\0323\223\275\023I\327\275pe&\275\3131\245=\210a\305\275l\024\271\275\221\0057=,ee\275\351\237\337\275\322\031\270=7\262[\275G\205\216=\013w\247\275\254A\033=,9p=\302\2546\275?v\221\275&N\177=\234\365\332\2744\231\324<\264\252`=\'@+<\220\037\032=\316\360*=\213\323\222\275\016\207\026=|\n*=\321{\263;\n]\266\275\322\\\007\275\377\017\227\275\2760F\275B\315>\275\202\304\214\275\253\341m==A\322\274\\\365\374\2747R\311\275\004q\244<\363\336\230=\316[h\275?(\260=\233x\244=\212\267Q\275\003A\234\275\307\357:\275\3625h<&z\"\275fo\262\275\025\353\201=C\327\313\275\273\245:=\322\010c=\244\010\346<\311\352p\275\336:\327=+\250!\275\221@\033=s\027c<)\315\221\274C\326(;\226\321R=gS\304\2750-\226\274\r\262\333=\206\241\327=\262U!=\222t\002;\315\313+\275\365\031O\274\241\220\217\275\367\002\276\274\001\nd=\005o;=\211\331\231\275\333\205^=H\001\303\275\005$8=\267r\221\274\004\267\227\275\315\360N\275\320\300\201\2745a\207<\340X\261;\343;[=\247\213\277=\216\276\252=\373\272\207=\326%\334\275\205\026S\274\005\021\004=\353?\222=\017\352\013=\007\n\232\275\207\334\213\274<\302><\334\352\321\275V\212s=\2630\202\275%\212\237\274\001|\300=0\377\252;\3640\033=x^\000\275\373\373\025\275\251`\307\275\260M\236\275,-\260=u\226\276\274F\276\331\275\266\364\230\275\210t\246<\242g\316\274\362-u\275,\350U\275\273z\301=\345H\222\274\323d\311=\021t\232=\310\222\205=\321\261p\275\2179\211\275\366\330\310=!\017\203=\367\270\325\275\237:\253=\223\000\201<\373\234H=\304\354\274=\317\202\223\274L\277J\274\037\267\320=\277F\345\274)I\264;\"\246\014\274\334V\234<T3\251=6\363\327\275\214\244\003\2742\333\232=y\344\246\275\367\305\304\274E\235\241\275\022\221\320=O\'\257=\215\276\244\275\337A\201\275{\352\010\275I\037\221\275\356\017\366\272\206XH<\320\222\361\274\250:\263\275\347H3=\263\266\331\274q\271\201=P\321\254=\006O\301\275\210\020\213\274\351\n&\2758\241\315\275\025D\256\275\241\2770=\252\247[\275\335\037\250=\013\2211<1\261\310=\332\006\246=\374T\271\275\232\372\334=\3141V=\205\240\372\274A\323~=\256u\241<\370\237\351<\037e\314<\335d\244\273\265wq\275\212\275\205=\241\344\000\273#\331\262\275\323Xp\273\010\266\201\273\"g\022<\355\234\006\275\037\016J\275\210\247\032\275h\033\330\275\272\272/=iR\227\275\260\215\304\274\024\326\303=\267\006\271\275\371,v\275[\247q\275+\305\221=r\353\331\275\326\370\300=\305`\273\275\013J\242\275\260\246-<8\222\277\275\024\261\305\274C\030\331\275\231\0134\275\361/\213\275\361\tr=\204\220<=\001S\372\2744k>=|\201\213=\035s\270=\325\235\262\274\374U\202\275\361\250\030\275\353\364\313\275 ?\207;r\254\324\275>a\223=\257^\325\274\337t\014\275dV\264\275O?\227=\226y\320\275dU\202=\353\355\202=\363\217\250=;Z\227\2752$B=\302\\\227\275\236\213\230\275\223\nO=:\310\274=0\262\n<\006\0323=\t\226\251;O\217M\275\324?\226=1\246\213<d\301\253=\356^@<\022XJ\274\360%\321=\212Q\311=\025Q\235\275\337.[\275\014\240$<\205\037\253\275T\310\225\274\373{\250<4\304\232=\3705\321=X\'\266\275\335\t\213<\317\225^\275\"\264\347<\366y\312\275(\013\307\275Ic\035\275\023e\213\275\022\277n=\307\\\207<\026x\361\274qs\262\275\023\017\233<f\365\222=\332\372\036\274\242\204.\275\271\r\214\275M\321\305=\261\364)=\246\372g=\213\013u\275T%\363<\"T\334\275\346\336\354;H<z\275\004j?<\314\274\231\273\354p\207\2756 \307=lZ\367<w\237\330<S\r\007\275fa\341;\037\302z<8\016\264\275\2654\336<\203V\306=G\202\224=~\317\333;\\\231\205=\322\177\202\274\000%\036\275\001\337\312<\350+\001\275=!\307=\366\232\326\275U\202\021\275\006\230\317=\251?P\275\rt\001=\202?\251\275\231\013\303=d83=^\311\231\273\301-\305\275\365\352\034<-\350\002<E\214\210\275H\374\275=rIh=bV\327\275\322\033\240\275P\031\314<\305,\203\275\315\202U\274$m\251\275\254\233\177\275WPI=\313){<t\264\237\275\214n1\274\232bK\273\364\315H=\337\274K\275}\022\323<)\230\302==\206\276=\2575\323\274$\370\332<\200\217\263=\t\t\312=I-\246\275Z\311g=\031?2=\213\014\301<\025B@\274\212Z\200=\261-O=\025\006\347\273\225~\007=\230\212\200:\017\320\221\274K*\206=\330\301\t\275\014\030\245\274R\re=\246%\333\275wG\262=M\314\303;V)\005=`\217C=\351\304:\274\024\034\275\275t$\264\275\373\340\324\275\001}p=\204r\023\275\243\377\313;aF\304=G\253\221<[a\336\275X?\244\27582\322\275\356\010\320\274X\365\234=\341\3169;\230\271X=\313K \275t4\271;\265\024\020=\307\027\315\275\342~\316<6\240\273\275\376\001\177\273\306\372\262\275\006\310g\274\251\004\325\275\372\\\217\274\271\0000\275\322\254\244\275\323\312\240=\177a_<}\250K=\315s\206\274\331e\322\275?xS\274^\372\246\275)\037\232\275\302\357\335\275/$0=\027+\3528\027\254\010=\3226\205=rd\257=\236\274\244=\022\245\240\274V\355\226\275\324\205\n\275\315\324\007<\342\332\177\275\343\300\252=\345\237\207=\351;\201=4m\221=\2137\335\275\035\312-\274\266%7=~\301\323\275k\355L\275\274_\335<M\264B=\232\341$\275\036d\216=]\302\245<\207\372g\274\001\023\022=:)G=Am\216=I\"\210\273m\254\002<\270)<\275\223\215\303=\311\353\032=\332\250\227;\261\261t\274\265R_<V<\264=\316\222\226\275\221E\226\275&\350\211=\333\004\253<\0311\265=\254\353\177\275\017;\235<Sp\317\275\277E\332=(\363\307<\230s\306=)\265\330=\027\253\255\275=#A\275Q\013\272\275}\177\037\275\250V\031\275\224\306V\275I\342\233\2752\"\316\275\313\302\330=F\267\214\275j\033\201\275c)p\275\203&\373\274\r\224\r=\241\333`\275eE#\275\260A}=\031\354D\275\215n\033<\026\314\007=\233\231\024\275\3145\022\275\376\345\343<4h\331\274l\007\307=^*\367<\372\201\223\275\321!\252\274\000O\344;\211\024\234<\2247-;u\244\321;\315\273\213\275\333\272\020=\335i\225\275\251\030\222=q\2335=\202y\020\274\364\343[\275a\251\225\275\274\303\000=\365\237\034;\335\232\007\274\215\334\211\275N\004\356<m&\243=8\343C\275\023\216\252=T\307{\275\0143L=.2]\275\263\263\257=\020\227\302=\373\234\033\275Y \211\2754\337?=\221\224\303=\304QC\275e\303\026=\374_\371<\213_\267\275h\004\005\275\245\306\'\275`v\021=\306\322\244=\005\032\233=\356\035%=\304\032\250\274\310\277\216=\203\037\351\274\262\305O=\003\236\023=n\206\024\275\0257H=\2567\255\275\262\022\335=y\036\300\275\223\014\200=\377\024\216=\307\377\315=ux\257\273B\350%\275\177\250\276\275\235w\234\275\013Md\275\024m\230\275q\267\023=l\366\262\273\275+\030=\000\302O=\273\363\240\275\265\r:=\215\034\002\275\r\243`=\347A\260<r\275,\275\016\306\335<7\200\206\275\022E\223\275+lK=k\217\237\275\223e\325=\306=_\275\314gf=Sb\257\275\336\223\004\274 \264\251=\232\311\224=\337\377y<\333E\335<\224\330\024=\'\225\246=)\367\r\272\221\366K\275\356H^<+\306l=c\317\376\274p\213\276=x\316k\274\204\272@\275U\177\241=1\014z<A\251\326\274\222\336\016\275\301\345\342\274W\037u\275G\037\374<\305\000_<R\242\263=B}\244\275ch\234\275?\021v\275\213\235\364<\235\033\251\2751u\337=)\222\266\275\326m\347\274X\006\016\2750\303\256=\325\250\261={\225-\272\266\014k\275\340\322\232\274\331\301y=\300\034;=\005V\271\273\037\312=\275\177\237\221\275O\336\303=\005\204-=\000&\230=\033\375\304=Q\261\r<W\350\231=A\373\311:\332\n\252=\3560\312\275&>\373\274\377\361u=\203\374S={;\240=\241=\305\275 \324\315\275\243?\317\274-0\236\275\226\204\312\275\253^\246<3\343\326<\276\236\300=\317\230\327=\336K\327=\313X6=\364\276\200=\3079\270\275\243R\334\275\034\025\277\275\356E7\275\303\310d\274x\000\331\275\034\313\022=lP\330<\360\201\276<s\027b;7Dr<\341a\250= \327\263=sC%<\307\037\236=%\020\241<\305{`\275\213wi\275\000\037A=Mhv=\016D\273\275\335\031\267\275\310y\301\275h\275J\275\306\236\001\275\'\360~\275\256\221\204<@%\207\275\301\374=\275\346|\315\275\254\274\037<a\353\261\275\227\013\300\275n\306\316<\345WD=\241\263\025\275\270\340\207\274\266\352\310\274\360$\236\275\363\346x=F4\216\275\'\016\201\275\344\251\270<m\366\275:\214s\363;+h\274\275\3678\260\275\026\356\027=\254\344\245<\005\302g\275\252i\344\274R\212\224\275\200\n\331\274\312\323\217=K\'u=\357\371\353;\271\224\234=\251\006\027\274\235Q\230\275\313,6=\231\227/\274\205\325<9?\317w=\267\346\273=r\3042=\224\262\006<t\nK\274O\321A=\314\354\252<)c\337\274Y\274k;R\371-\275\300\253\310\2757\031\261\274\203\234\323\275\327\204#\275\206KP;\311\214*=\326\001\300\275@\261+\275\250\334\331\2753\003\225\275\302\337\027\274\031\002G\275\r\r\264=\036\341\026=aq\352\273Q<\257\275\013\nW=\007\225\250=\000m\226\273\225t\242\275$\320\217\274\000\356\317=\"\035\315<\354\206\021\275wF\333=\374n\014=\300\245b\275x\3539\275\315E\252=o\330\376;\202(\300\275~p\200\275`\247K\275\276\234\265=\326\0331=@\317+=\212+\335\274\330\036\316=\264\312\231=\240B\222\275|\227\247=\022\261\311\274\236\206\035\273L\264\302=\213:\331\275]\251b=\001\321\016<\215U\030\275+\320\261\275\217=\203=!\217\241\275\362\276\241\275s\300\335=\005\207\274=\354K\373<\2518\302=\367U\014\274\n!\270\275\006\330u=\344\327\315\275c\361\210\275\023Y<=\354\300\242\275v\006\311=x\200M\275\373\204;\275\377\037\231\275\255%V\274\022i\202\272\241UC=r\301\205:^\205\025\275\203\310I\275\203h\004\274\331 \210=\351R\274\275{\300\216\274g\311D\275\202\020x\275_\342\317=y\t[=\255\214\304={\036\000=$F\325=\023\373\324=\027\262\321\275E\244\216\275\351\244\256<\264i\277\275 M[=\201\037\256\273>\036\265=k\304\316\274\235\226\203\275\234\300\331=\337\020\303;\317\360+=8k\314\275\232/\356;\027*$=\245dv=\013\372^=\016\231?=+r\226\275  \363\274\r\326\264==\235n=\n\013A=\212\265\243\275\3421]\274\r\372\251=\372\357\211\273P\246*=9d\031=9\000\231\275\341\344\261\274\367U\257\275\247C\221=\n\276\300<W\310\232<b#>=.\252\237=\t!\273\275\3110\235\275\206u\252=\225\245\274=e\236\355\274>\315\021\274\202\222\262=\333\254\277\275\323\307\266=\317\021\215\275\203\235\226=u\262\240\274<\214\207\275B\232Q\274\345E\036\275[j\237\275\311T\013=\177aT\274\375\276\233\275p\'\242\274\r`\326=X\263\007=\312\252\266=4$\361<\250\263\301=Ud\244=L\205\"\275;\335\000\2757\332\324\275\251\277\246\275\277\355\334<\332\266\274=\312z\265\275\3537\217=\226\177\002\275\305\037T\275\006\246\277=\202|F\275+\310\210\274:\346\270=\212\352\265\275Y\255\326=$4U\2753 \302=\304]@\275\306\307\301=\314\234\206\275y\007\337<\002\334\036\275\020=Q\275\303G\324\275\254\206\236=\232\270(\273\016\205\337=\352\254\337=\377f\337<\035|\320\275`\264\326\275I\304$\275j\261\213\275Ev\255=U)\223=\352\253\202\274\370\227\006=\\\304s=\230 \247=\n\2162\275\300\210\237=\212&\222<\325X\264<{\225\230=\263z\216=\237\254\327\275M\032\262\274\013,\365<C\014\334\275\333V\036\272\365\"\337\275\244\241y\275\2619\317<w=\205<\314\360X=\024\274\307\275G\360\334\275,2\325=p8{=\031~\220=\266~\310\275*b\201\275\324\024\334\275q\230\242\275\374e\270=\247\307\213\275o\314e\2750n\257=\224\036\353:Y,\364\272;\220\202\274\035\007S\275Y\r\315=\317\276\007=?\006\212=\204\241\337\275\237\236\203\275\362v\242\2759b\312\275H\336s=\343E\350\274\262\241\243\275\362J\222\275\001\206\020\275\371o\255=\270[\306=\253q0=\3519\215= \361\243\275d\310\205=\363\246\210\275\316\177>\273\201\'\275\273\216\014\026\275\251\226\322<\n\335\325\275Q\272\250\275\206(\220\275I\314\220;(\360\241\275l\210*=\315a\334\275\016)\334=\211\356\367;\250\3565=3\n\200=N\343N\275\247\326[=\345d\202\274\023\n&\274jk\241\275\246\244!\275z\337\245=\002\241b\272`8\226<X;\326\2754\360\307\274\310\226u=^\007`\275\345\3015\274\027~\275=\265\tG=\241\215\223=+\373\310=\360\275\326<I5C=\272\225\312\2758\240\214=\217\004\305<\002aS=Gb\252\274\024\365R=S\334\310=\224\374\227\275\251R\321=\r\016Y\275\232O\227=[\313\233=?f\224=\265p\241<\300\200\214\2758H\304=\237\3260=/\235W\275/;\231=1\217B=\302r\250=\235\325/\275\257_\222\275\360\327\331=\205}\272\275\033\302\271=\016H\007=\217I\266<\217\272i\275i;\300\275\001\232Q\275D\207\257\275\306\376\307\275C/\370\274=\205\265=\277e\204\275\002r=\275\337\252\223\274~\\\273\275\276!\235=\246\254\202=\335\014\317=\377%Y=cc^=\223\312i=\030 \025\275\366\034I\275s\r\255\275.\031\233\275\221+\320\275\304W\332=j\331>\275\021:\315\275\322!!\275\241\177\315\273\301\370\177=[\"\023=\271\327\267={\223\306\275\275\310\322\273\224J\264\275)\221\336=f:\245;Y\271h\275\303k\337=\2541\316=\\\225\225<h\272=<\361\227C=\350\322\331<\222\352\311\273\201#\263=\354f\276\275x\314z\275~+\201\275\001\237\202=:D\266<\213\003\324\274\271\317#=l}\307;)P|=R\355\013<%\205\232\275\353\300?\275)\365\022=\3419\247=\037\353x\275\222\'\243=\207\017\245\275A0\215=m|o\275|7\307\274\013\"\263\275 \030\330\275\344\311\212\275D\365\231\274\310\324\373:\376\270\204\274f\255\321<.\346\251<\277\301\032=\375\240J\275\340\270\216\275\023wt\275\213\222T\274\n\212w\271O\237\327\275y\032\201\2747\231\321=\017~6=\036\311X\275^g\246=\245\026\231<\251V\221<vc\206:\246 \231\275\357\334\\\275\312\023\270\273\301\021\245=\006\034\010\275^\001\203<4\353\237\275]\242Y\275\321\r\027=K)\363;\353\315\374;Uj\316\274\203\367\331=\317\216\223\275\177\263\200=\341\003f\275\237\026Q:\361\260\273=\326.\306\275\360\201\336\274T\226\275\275\335\263\252\275)L\373\274\016\367E=W\207F\274\214=\335\275\002p\251\275\241\213\001\275\327.\300\275\231\177\262<\210\222\214=\203]\250<%\207c\275p\216\316=\2050\275=\023D\305\275\215z\317<t\331\322\275!\030\333\275!\244\027=\376\314\203\275X\365\236\275\264C==\256\034a\275\345Gd=XU\213=\217@\'<\344\347\306\274K\375\277<Th\334=\234M\346<\364\244\204\275\270\023M:\341\210\n\275#\036\234=Ts\275\275\364T\331\274\326\217\025\275\022\354\274\275\335\000\233\275\253\227;=0\032\226<\300BT=\250\340\322\275\344&\233\275\274T\207=\277(\213=\307^Y=\313B\253=\237\013\335=f\n\212\275Z\'\016\275W\032\213=\333\267w\275!\274\212=\232-\211\274_A\223<\227\"!<\213\231\325\274{\020e\275\031$\257=F\370\031\275!\006\335=\351\262\202\275a\331f\275\304\332\242\275\017>W\274\0313l\275I\353\201<^\371Z\274\300\220\000=\305\277\323\275\347\353\220\2751}K=\377\242p=)\372\333\275!s\227\275\200r\315\275\265.\276=7\223\325\275\210\360\310\274\002cH=\370c\235\275v\025|;\007\372\321\275\332\253>=`41\275\034{\366\273pmP\273\203Yg;\363\342G\274\020}\323\275\030\322\301\274\375\241\244\275b+\323=\301\021\314=\351\365d<\202\233\026<\240{\"=\300@\203=\263`A=\260\031\000=p>\242=$<\263=\270\243\326=\351\361\252=\3052\202=\353\250\210<\243w\262=\347\233\247<\177z\332<\\,\372\271R+6\275t\374\326\275\375fe=G\265\254\274I\350\221=\004\251#\275\335\346\304\274\345t\207\275q\002\"\275\3254U<h\022\314\275P\374\232=&\350\246=lg\326=\221\261F\275\330W\244\274\t\235\021\275\252p\265<\237jL\275n\036c\272\312\326\241;@\033\202\274\357\226\262\275W\255\321=!\375\235=\374\014\036\275\035\365D<\025\357\235=?@9\274\212\216J\275\210\205\017\272n&\365\274\020\364\252\275Y\275\330=I\375\227<\277m\253=d\230\211=KRj=9IV\275\267P\260\275s\006\202\275U,f=\306~\013=\227\302v\275\203\347\315<\326l\r\275I\353\300=c\014\313=\274\021(=\035\3572\275\033\000\251\275e\365\314=\244\031\221=\207lB=Gd\212=qc\302=\2367+=\212\360\216\275e2\273=\010=\035\274\312\216\274\274\3402\221\275\232\302\177=~\322\313\275\2059\376<\031\365\t=\301\233,<?\007\231;s\371\273=\010\213\373\274\\\204F\275\034HY<\224D\317\273\013\221\204<\2436\024\275K\203\314\275<\360\217=\376\227\026\274\365(\013=\367\307\201\275\010\363\333<Y\275\231\275\207c\323\275\024\337\211=[\313q\275g47\2757\343L=\2774\224\275V\210!=\311\354-=\245^\335\275\371\022\233\275\324d\270=m\274\306\275\235\327\211\275\237\nB\273\256C\217\274\265>b=\243\372\255<\375\017\034\274\030\r\361<V\254\n;$\276\263;\375\201\\\2759\'\367;\"\317\212\2757\035\256\275\364O[<X\326\250\275{\177\246=\177\217\253\275J\016f\275\263Ev<\276\314*\275hm\262=\314\320\255\275\207\336\223\274\271GH\274\312\036\273=q\221\216\275\373\035\333\275\2147\014\275\3460\257\275\323\310*\274\256\342\305=\373\205\273\274\210\326\361\273X\030\305\275[\330\351<\214\200D=\361\033\252\274\024\256\324\274k\210\032=jq\'=\250\207\270\275\324a\202\275\374|\332=\345\302\267=F!P;\221H\\\275\261\374\321\275\207g\036\275i\016\325\275\262\n\263=\030\320\222=\306\214\257=w\010L\275}\033\n\275\225\200\036\275\323\276\234\275mHQ\275|TM=\243\335\225\275R0S=d\036\336\274\316\223^=>\204\307\275\'\342\200=9\244\214=\315\314\250=\252\306\234=\356\355\0019a\000\026=\373t[\275\344A\302=\365\220}\274(\023\325=r\024\030\275\371\271\265=X\270j=5\266\306=s\n\325=\006\230\223\275h\363\327\274Os\327\275\202\233\204=\231)\335=\300ON;\277D\260=rw\332\275\227\'t\274\3517\034=\314\026\325\275\200\027\327=c!\253\275?\270\235\2758\245\251;\336JY\275\325\362\223<[N\303\275]K\353\274\247;\260\275\332Lg\275\204\331\275\275\371;5\275J\247\214=\233%\017\275\220c\272\275V\202\r\275\326\204u\275\277;\253=\234V-\275\010\350\016\275\002]}=\226j\243\275;\351\274<\264\252\326\275\005\"\300\275KF\241\275\034\343\035\274\305\233\324\274Ca\270<\336\353#;,\372\225\275\327]\331\275\367\000\326=G\265\003<\006V\226\275lu\002;\271\316P\275\330\0224<\252\024\231\274\003\222\245=\277\202%=v\236\022\275\236\020\307\275\204t\236\275\211\203\323<\323\313\375<\364N\323=\223\221\256\275\271\273\277\275\316\n-\273c\024\315=\006\372\261\274;\022\267\2757d\276\273\032\220\363;\210\301\370<x<\205=\326\272\377;}\t\205\275\256\357\224\275\023\314\327\274[\265\024=\221&\307=\322x\t=\312\033L\275%\354\243;\300q\252<\374\243\\<\374FW<\027\004\203<\346\311\317\275j\210\326\274\t\352@\275\nW\"\275}-\007=\355\350#\275\242+\334\275\356\271\332=\213j\354\273\362\"o\275#\247\275;\323\303\233=;\225\337<\017\032\271=K\020\020\274\240KE\275\322\025W\275\344\313\313=\"mO=\206\223\270\275\263\240\250\275\274\212`\275\230ds\275\220Gt=\021.\332<\004\212\365\274#\n\272<\"a\217=\356\300\325\275\024\202\276=\023\224\337\275\202e\201<nW\203\275\367t\254\275\275\306\245\2750:?\275\343%\322=\264D\247=\021v\306\274\023LB=\246\016\305<\233c\336=\250\t\301\275\030D\320\275\240{\322\275D\372==\360\013\327=\375&\005\275\331~\214\272\027e\332=\207\232\213=\032\3404\275\247\"w==\377\010=gKB\275(u#=\000a8=\306U\222\275!\200\267\275cf\2779\322\016\256\273\361\023q\275r\201\323=n\033\335=\273\r\236\273\177\215\322=u\201\003=\345t\037\275;\342\325\275\261\325\032<\000\266\325<\'\216\274\275\220IR=3}4\275\n\030N<\000\337\220\274\320\025\223\275\303\304\260=\243\337\255=\021^\204\275{\271\277=/Qv=L\277n=]\364\233<\375\374\317\275\311~5=!\212\315\275z\007\241\273}\205\206\275\362bH=F\345K=K6\324=F\245\207\275\374l-\2750\332p\273\354R\251\274\274\317\301=\372`7=\244\026\225=k\274\256\275\247J>=\304$\002=\237|\323\275\360a\234=jb\312=\304\327\005\274^\276\321=\233=\335\275[K\215;\r\351*\274\317\301\2769uR%\275s\004\235<\326z\314=\247:H=\222\363q=\344p\203<\360\344\330=_\356\030=\007\350\332=Q\000\326\275\263\251:=\234N\235=\320\222\231=\0171\030<\202C|=|\347\302\275\270\034\275\275y\225\260\275\367\373\243\275\317\214\025\275od\320\275Z\332\342<\203\211\313=\336@\322\275\327\321\330=\337\316\333\275)\251X=C\007]=\263\272\277:O\212\216\275\234\363P=\025\320\225\274\371>\357\274\221u&=\024\262\250=\266\345\304=H\277Y\275\344K-\270~\022!\275w/\301\275\203\272\223\275\r\032\"\275\317\325\244<j<\236=\r\315\225< \210\367<u3\213;#\013j\275\025\212V\275\277)\217\275\362V\206\275E5\303=\357$\234<\331\313T=\261\337\355<?\216c=\212n\233\274\201\377\335=\352\266\231\275\016\307\277\275q\211\254;K\257\326\275\366s\030\275\026\375\254\275<\210\324\273\331\006\213=~:f=\320r&=\322n\254=\301\311\333\2755\243\233\274J\314\336=>+\203\275\020*\031\275\372\177\256\275{^\352\272-\316\206\274\311h\263\275\275K\331\275\247>\253\275\325,\233\275\230ae;\004\210I\275\3332\256=b\326?=P\262\243=4\237w=\'\214r=\203#\325\275\030}\326\275\'\247\350\274\326h1\275\217\264r<\373as\274`@\271\275\223!\001=40\242=\3241\026=\336\016\223=\345\231\374<\324A\234<Z\333\334=\315e\262=N\377\251\275\272\334-\275\022\202\311\275\232\375\024\274\317\352\227\275\3506\343;8\367\322\273\017\353\261=\221\364i\274Y\275\240\275\022]o\275\006\177G\275\324\340\307\275\224\360\215=\031[-\275\026\350\211\275\247\203f\275{\r\227\275|\306\262\2736\213\217=k\255\336\275\263\264\253=\333\316\224\275\320\345\220=\224\233\325=\336l\232\275\022\265q\274\202!\264\275\250M\204<\232|\223<\237d*<\316\001\225=^\245\035<\300\306\177=EX\257=\341\030|\275\243j\322=BB\303<\242\000-\275\212\225^\275\027\2715<\2617\321<\320\371\246=\252\271\273=\246\236\332=\304\375t\275\035\325\230\275ck\226:C\365\035\275TX\206\2750\216\322\275\327\010\201\273\345\3563\275\275^c\275g\313U\275\320bY=\350F\302\275\363\211\037=\341~Y\275\314\t\356\273\016s \273\020j*\275r\r\242==\353\233\275~\264\304=\032O\240=\002$\007=\024\351\227=44l=D\034\367;\205\031\031=\\\211\302\274\320\316m\275\004\2178=o\354\324=.&\322\273?\307|<9\t\324\275T\200\036<0;g;\231I\222=\344N\210\275\021M\272=2\220\250\275\027\001\326=\304\002\200\275\t\263\"=\202m<=?\351\244\275r\203\312\274\265\034y=n\334R=X4\240\275FU\216\275\270\207\262=\351E\314;\310\030\260=\307\340\264<X\231\310=~\325%=\3457d=\225\375?\275\001\034\341<\025j\201=]!\352<\252\361\305<q\374;\275\2679\262=E\303v=-\001\323=`\n\024\275\207\265\274\275o\274>\275s\221\215=a8q<wO.=\214E\177\275$`\246=\n\343R=\345\276\313<\276y\037\275L\177\350;hR\310\274\034\006\263\274\213\303\204\275TY\231=\204\254e=o`[=\352\323\210=s<\213\275\363H\327=\371Z\303\274\217\003\303=\201\024;=\001\350}=?\250\026<\362.\234<\2360\254\275H\354!=\017\323\037=\317\235\271=\326\250\272\275B\345\202\275\247\000\343<\005*Y=\0377|\274\200\020\311<0:\360\274q\360\304\274\307\010\322=\377\"\260\275L\346\320=\005\261\206=(\t\332=\273\255\315=&\2014\274\000(\333=\213\257\256=\241Z\323\275Ee\264\275I\315\212=\313q\335=\214o\014\275/u\"=\306\225\031=\020\347\361\274#V\274=u\377\220=\243\t\220\275\314w\026\275\261)\262=\335\371\223\275@\272;\275\337\260\226\274\256\205\271=\366a\231\274\315\201\'\273\013H:=\022 \312=\305\235q=\315!%\273t\233p=\033r\003\274L\266\324=;\3078\275\005\037\203<\352\207\233\275:\305)=<\361\215=\347\240\201\274\357<\323=\274\311\336\275\262\313\211\275/-.=?\307\027\274\222\240\326\275\204qK\275\032\316\373\274}\200\236=\330\376\211\275t\347\240<F\274\214<\0029Y=\332\361\324=\372E\336\275\002\215\021\275Yt\261\274\024\014\017\275\210\344\005=3k\273\274\314\230\333=\266\317\336\275Ih^\275\354\360\300\275\301\256\217\275).\266=~!\363<\\\220\320\275\346\317\322\275\301\n(=\242\262y\275\310xp<\266s\024=\232.\271=\357w\267\274\355\244U=\231\013\263\275\010<\320=\027\275\t\275\270\217\251\274V!\333=#\352\331=\017\306T=5\225\301\275iYZ<B\267\307=\3559\253<\2366\t=\276\016\271<\002\306\300=\000@6=\374\374\263\275\272k\234\274\260C\204\275\337\353\257\275\232\300\304=\240o\337<5\361\032<\272\273\313=-:\345<\r\216\022;}\311\304=\215)V=v\377\227\273\177\242\343\274\213\304\205\275\200Z\213=\010\003R\273&E\307=\337\027\306=T\235\237\274\272\315.\275Wk\301\275\001\221\225=\373\246\271\274>\241\000\275\250!\201<Opn\275\267aX\275J\004\236=b\025\255=\201\356;\275S\2573\275\177\035\035\275\3607\202\274\ng\301\274*\214\254\275\255\'\234\2759\273\"<*\240\235\275~\321I\2744\236\212=\tI\273\273\237IR=\356\251\302\274\234\037\337\273\370\211\376\274\031zT<\364\252\245=\330\307v\275\262_\330=\225^\317=\003\216\271\275N\261\315=\332\'A\274\010\204\273\275\035t\023=[MH=\314\337\204\273U\"\347<\346U\303<\004j\305\275;\nk=Fcy=\262L\321=M\277.=\035G#=r@\247\274a}\023=\241\225(=\2663\216\275\022\305\000=OY\335\275\025\310\304<\353\336e=\341\033p=\345\203*=?z\311\275;\000\240=w&S\275\322/\256=\250\250<=\327 \210\273C\301^=\350\236\363\273\314\362\213<\3164\270=2\026 \275O)\235\275]\2649\275e\003\202=U\206\030\275)6\273\275v\1774={M\303\2743\340,\275\255%\303<\252\263\334=C,\253<\306v\303=\032\214\245\275\343z\026=\006d\301=Z+\213;\363i\257=\203\017\261<#\006\336<\376Ch\275\271\247\373\273\017\3417\275dC\320\275e)\246\275rgE\275\007\274\335=9|\005=\332Q\243\275\331\334\034<\321\377~=T\327v=\225\242\256=\373\333y=\024\250C\275`a\230\275\255\255\253\275\300\2747=,/\270\275v\217\240\274\227\3611=\207\351G\275\033!\253\275\373\371\330<N#U\274=zA\274\351\227\211=e][=\007\223\333\274\300\343\274=\341\037E\275>\211\004=\343\326\234\275\001\345\334=\356\332E\274q\353\220=\235/\215<v\0172<\230`\023\275\307cT\275\332\322X=?/m<7\001Y\275]\207\'\275\001\327t=0\333\320\275~\252\204\275\347\'\337\275\\\272\245=\222\300\"<]\032\260\275\001\346\302\275\251W\273=\273\246\345\274U$\211=]\321#\275\002\337\022\275\021\315\317=(\251h\273\272\352V\274\036V)=!E\243=\320=\254\274\311\233\314\275\214t_\275f\226 \275\373\'\315=:\315\304\275\201\214 =q\232E\275Ru\220\275\3235O=\273\203\322=\336\304\246\275:\"\230\275\377\223\354\272\275\333\214\275\347!A<\353\352\203\275\200\2670\274\001O\366\274QaI\275\016\007;\274\321\240\327\275N\013 =\324\313\220<.S\252=E\032\301\275\000u\203\275\034\331\237\275>\003\264\273ry\307:\342\221\257=\216<\306=\355\214\226=\234#%=\220\034\222\275.)\021;\\\312?=r\367\241\275e\320=\275d\375f<b\327\302=\033*\247\275\370\226r=\203i\324\275\265E\212=\2336\366<No>\2753S\220\275\020\212\243\275\026\332\215;\366v\241=\206\340\255;9\274\3678\004{\251=f\344!=a\365\031=\t)\223=\272K\335\2752\250\316\274y<\"\275\022\347\331<\267T\203=\343\376\270;\2478\242=\'U\307=MSK=<g\202\275\000{\247\275\331:\013=\361\274N\275\353\321\244<)x\022<\264\020Y\275\003d\333=\370\002\270<d\'\352\274\357X\210\275\256\202\233=\216\205>\275\201\271\330=\301\323\025=\037\257\315\275*\237\216\275;$4=CUp<i=\253<j\346\275\275\337Qw=\246\200\203<\334yS=/\034\007<\r,f\275\2405\334=B\027\243\274\325\020<<\335\255\261<gP\312\274\341\252\270=TJ\330\275\232\234\340\274h\3641\275\2018\251\274Z\002\323\274O\r\334;FyE\275\276\265Q\275\353\241\335=\016\312k\275\216\000\311=\224$#\275\232^}<\211:\177\275\037F7\274\273\376\232=\033;\321=Q\274\265\273\026\334N=\340\336\333\275\376\364\252=u\004\330\2754\252\276=z\211_=\233\263\233\275\336\2105\275\034\272i\275>\205\317=\246\324l=\254\203/\275\340\352\331=\337\266\253=\235d\026=G\226H\275`N\330\275\271>\330\2753\277\223\274\273\027\235=\006\360\271\275\033\336\333\275w\261X=\206\020p=\017\007\363<\357n\277\275\202k\334=\036\252\313\275^v|\274y\204\253=F\311\266=0\3535=2Q.\275\372\250\315=}}L\275\017\335n\275|\210\r<\300X\205\275\370\345\'<hi\251=\242 \275<\023\263h<C#\235<\321\373\323=\342\247\320\275?M\217=Y\016A=G\2579\275rc\332<@L\324\275\3470\245\275\232\237_=\037#q\275\347!\203=\003\357G=\014\202\273=2=\217=\033R\372<x*X\275\341 \225=2\322\215=N\264F=\227U\314=\3211\241<i\361\247\275<\227v=?\211Y=\215j\276=\337sJ=\215\252\271\275\365v\317\2752\266<\275+Wn\275\016G\323;\332R==\002\301\333=\t\000g=g\007t\275\350\301\201=\230\210\226=\276dg\274m\3532\275v\023-;\270`G=z\271\275\275\353\234t\275\305\244\271\275\301Go=\'\000\004\274\230\265\275<^\201O=]Sc\271\367\323\341\274\246t?=\246\343\201<\202\364\315=\214\330\262=\332z\335<\306\032\215\275\rG\324=Es\234\275{2&\275l\002\337\275\030\240\t\275J\001\235\274\036\317\021=\213\025O\275\241\022\n<GN\355\274\215\344\217\27434N\274q\2409=\333#\303=c\2160\275\220\013\266=\037[\206<\2701\000\275\341#\214=\276d\331\275\307\330F=o\233\276\275\304\317\021=\312D\303=c2y\273;E)\273\336>r\275\354o\210=f\341W<\322\373q\273\035]\235\275^\233\232\2756\317\252\275\211\217*=\t\016\314\275{\257\235;\327\233\\<\336N\207<\324\342\235=q\310\310\275\241\344\215=.I\253=\320\303\331=\335=\274=6\351\210<\377\237\250<W*\001=\265/^\274,7\302=]f\022\275F\274\237\275m\217\302=T\323\260\275\204rn=\0069\254<\036r\246\273*$\371\274\023Q\215\275\264\\2\275\324G\316\275\206U\245\275\323\013\205=\327\177\253=\312B\006=\213y\333\275\032[\237=\r\261\247=\017\234\251<\237\311\331\275\240lw=l9k\274m\324I=\t6\227={\335\274\275\363%u<\357\t\320=\350\3472=\336rc=$*\261=\304@\277\275GM\307\275\233\305\241=\312\275\304=H\374W=m\270\303<\257+\224\275~\326^=\266\202\235;\030\262\336\275\037q\320\275\311\032\323\275\320\361R=\332\222\267\275\365\232\207=\263\315\262\275\032\022\303=5\271\331<}r\213\275\037R<\274%\232\n\275\256\365\227=\322\024\004\275s\0313\275\234\327e\275\264[\373\274},\243\274\373U\324\274\022\276\001=\270\271\302=R\022 \275\010\227+\275\341g\376\273)Q\226\275\222\370\223\274\220Z\000<\332)\233\273\t\371c=T6\320\275\361G\345\274\203\000\236\275r,\271=\230H\270\275\374\331\250=\204\275\"=$\'\327\272\201?~=\223\373&<\227\253\321\275$\017\335\275\271\020\306\275\224V\306<\206\375}=\341\027\304=h\225\300=m)\265\275L\032b\275\204\331\206\274Z\253\310=\222\227I\275\371\303z=\365{\314\275\277\367b\274\212\177\264=\335\231\231=\0324\320\275M\323\324<\264\034D=\205\336\254;{\016\031<\320w\010\275m\336\235;\310I|=O5\221=r\354\000=\221y\243<\346\002\202\275nv\n\273~M\275<0\255\225=[\330v\275\234\350\260\275nc\316=,+\237\275\r\250\272=(}\307\275i\255\277\275t\031\350<\340- =<R\216<\001\236\210=\352\347\244\2756\335\314=xz\300=\370\225\262\275r\222\222=z\373\254\275\006|\264:O\2724\275j>\265<\373ed=V\002\244\274)\006\216\275IY\337\275I_\203=\342\216\242\27540\365<7%h<\356\353\207\275S\031\233\275m\034\247=P[\002<\2033\005\274j($<\005\264\324<\016\265 =\262\257\366\274\350\346\211=\233\3538=0\351\372<uI\306\275\334\365\322<q\374\366\274\357|\202=i\376\301=\314\306A\275\244QI=X\027}=6\253\017\274\374\330\333=u\303\262\275\346\254\227\274\245\210\330\273\265\217\245=\236\212\224<]S\330\275\237vH=\200\347\036=?\212\252\2758Ho=\334ei\274\224\263\215\274\207\207\203=\200o\366\273\271n;\275~K\307\275\202\235\001:\312\225\312<\020~\020=\345NO\275\014\354\263<$\361\355\273\\r\277\275\002\275\212;\221\024_\274&\240\316\273vM\212\2751\275e<\352B\207\274%\233$=q\304\221\275\351\346\224=s\024\254\275Z1\031=|\225\314=\007RK=*&\274<P\343\277\275!\367;\275~S:=\2373\216=\210\010[<P\265\016<uSv<\352kF\275\315\001\213\275\232\314%=1\224\205\275\\\273\356\274\035\205\212\275\030\217\360\274<I\331=)p\331<\230\375\n=%\307/\275\216\205\251<\301\337\027\275\215O7=\352\037\t\275\255\361\010\275\350\265\313\275\335\351\244=\244T\276\275e\357\301\275R\341\300\274\270\351O\274\325_\314\275\t\327\216<\006\362\213\275]\374\222=\227`\177=\322\372\310<\255\264g\275J\026\247=\351\342\221\274vd\236\274![\275\275a^\203\274J\303p=^\001\355<\366h~<\203\372\021\273\236\216\214;\017\263I9\221a\333\275\304\326\226\275\367\2535\274V\304\231<x\316\331\273Z\315T=\277\335\213=k\033v\273\010\037\273\2750\325\227\275&\367\272\271G\360\272\275\22378\274\215\306\271=\262{\344<\365\372\227\274;\002\323<\367\254\324\275\257&\304\275\360\230r=8z\223<\301#\323=\255s0=\256\223\222\275\376\017\357\273[\356\023=\261\006E\275g\347\247\275\307`c\275\366\316\346<.A\n\275\353\350\306=\260\212.\275\331\376{\275\315!F\275\316P5\275%\346\236=v\242R\274\214A\217\275\305D\233\275\2123G\275\373\034\201\275\255\000\202=\026\273[\275\267\344#\275Df\262\274\034\t\205=\340\311\007\275\341y\257\275a\2752=\240\224\326\274\001\211\253=\t[\332\275\024\230\312=@r\224=Z\255\300\274\301\245\006=(<\325=\333\336]=\350*;9\t\236g<Wa\224\273>x\327=P\374\323=\302b\037\275\226\007\201=\353\022\311=\202~\210\275\306V\257=Q\314g\275y \256<\320=\347\274\301\"-=p\342\303=\241\033\221<\014\212\260\274\033\250/\275\021\020V\274g\356 <\3032\026=\004\266V\275\013\226\364<;6\317\275g\215\213\275\324\237\262\2757\256L\273\356\"\n=RG\334\274\305\214\273=AN\271=Z\325\314<M\030\336=\266;M\275\036=\335\274\326P\216\275-R\276\275|\204\326<g\0268\275\355\032K\275\366y\224\275\355\320\332;U\034\\\275\257\320;\275\231\t\273=G\002\\=}-\254\275 \304\037<I\265\321\274\320A\216=\372\236\255\273.\311\334=\032\253\326\275\241\344\000\275>\201B=\316\205\242\272\211\312\321\275\224(z\275\272\330\t\275\360\211w=\317\222\246\2755[\331\275\006\375\262=\310\031\306=}_T<F\340\202=\210\203\213\275\370\344\340;\302\272\006= \203\340\274{8\234=\225\000\224=\215\342\262\275`\022\336;\303\2404\274\224Y\335=5\370\255\275\231\374\254=\266~\240\275@\353:\275\373g\240=\314\263\265\275d\2338\274u\002\303\275\014\330{\275\347\264\r=GF\223\275@\274o\275\207w\214\275U\215n\275S\255v\275L\233\273\275\243\227\202<\313\204\224\273\005>\002;\265\367J=3\376\313\273N9H=\247\203\017=\323\256\206=\256\271o\275C\340\235\274\006o\227<\003M8<\262\212\207;\007\267~\275\332\032\254\275a\024\313\275\024-`=G\272e\275A9\006=\363\216\225\275IU\013=r\354\301<z\306\267<\335\251\232=p\320F\275s\316\263=F\032\t=\307k\026\275\000J\230\274_\214\302\275\2474\321\275\004\360\217;B\254\221=\335\327~\275Eo`<K\272~=\014s[\275B\370k\274jp\231\275\360\'\017={\000\377\274\372h\221\275su\004\275P\332\334\275\002\005\320\272qF\326=Anq=\026\263\216\275x\026\255=\001m\260\275\243\226\267=\"&k\275a\245\226=\"\233\206\275\024\304\205\275\'S\307=\2068\213=E\225\316\2745\311\277=\3127M\275\214{\331\275\037Q\t\275\201N\245=\303,\270=\377\032\013=sy\263=rj\261\275\202\302(\274\243\010\246\274\267\356\260=N\330\320\272\336\223E=-\243\322\273\303\326\264=\223\317\213\275U\255\205\275\265\365\236=\343\375&=N$\177=D\3374\275\371\315\022\2759Q\311=6\333x=I\013\262\2749J\217=5\216B\273\370\247\266\274V\271\226=+\265 =\210>7=\310IX\275\031M\023\275R\274\222<a\356\336\273\260&\023=\365\031A\275\031s\265=\342\300\314=\320?\266\273\225\nY\275\250\271\304\275by\\=\270S\315=xv\001< {\025\275\004\236\273\275\362\257K\275\334\244\373\273\213\352\363;\2518h\274\361\377\330\2747rW\275S\325\243\275YTM=\177\330x\275\232\332\230\274]\007\314=g\252A=H\277\200=Q\225\370<~n\207\273\277.\301=,\263\330=\006\256\033;\030\021\332\274\202\300\200\274S\314\226<\336\026\333\275\273\265 \275~\\\224\2757\322\205=\335\n\t\275\336.\335<\251\356\232\275\231\247\266=\240\303\331=\265\215\224\273\3432\324\275\030\003\251=\303\317~\275@\036\271<Do:=\330\000\300=\202#\307\274]\343\310=\"\311!\275!D\311\275\204\311\244\273\244\251;=T(\210\275\231%\273=\222,?:w\253w=\230\327\t=u\324\262\274j\246]=Y\312\013\275m\225\224<\241f\272\27537/\275@\315\375\274\312\"\302=(\263\002\275\304B\333=fh\332=}+\202\275\312\006\327\275g)\332\274p\370\326\275\346\266\266\275pN|=r\311\246=@\266\245\275\237`\301={\327\010=\272#G=pOV\275@\347\203=\230\203};k}\304<\2259<=\2067\274=[\236\222\274\316!\230;6\354(=\277`\372\273nm\337\275\324p\212=\000\210\230\275\004Z\343;Jh\005=\274\304\223\275\314*\256\275-\036\374;\304j\265\274b{\252\275\335S\232<t\233\235<J\201\212=;O4=z\200\244=\006^\235=\335i\303\275P\'m=Z\027\232\273\366\332\323\275\010\024y<\271\276\023=\304\026!=*\\\231=\220P\211\275\227.\376;\210\270\274=\242y\311=\025\2442\275Q\313\203=?gt\272\214E\206\275-V\226<3\260\253\275\237\322\300=z)\265<P\037\315=\2636~<N\325\273=\315\021v=\250\324\333\275\316\325\022\275\252G0\273.\022\177\275\336\261><\374\263\264\275Z\260\305\2747\033\026\275`=.=\r\221\t\275\377\010\220\275U\220\273<h\373P\275\374\250\025=\354\331\002\273\220}y\275o\372\236\275\205\007\032\275K\036\025=\323\367\214=\355\023A\274\257\343r=WJ\017\275}\023\312\275\0062\270<\017;\262=\265\207u=x\256?\275B\222\022\274\334\373/\275\224\344\206=~\004_\274\215k\276\275\347\261J;P\345\325\275\262\323x\275w\332x<\300\261H=\005\203C\273\364a\242<\0004\002=\344xF=/\315\203<@~\331\275\376\013\225\275\360\004\271\275wNq\275?J\253<}d \275t\226\204\275\244z\331\275[\320\363<Y\321\315\275d(D=\256:\350;\033\273\251\273VR\223=\203\305\226\2744\276\242\274\211\235\310=\352\303\311=\350\273N\275K\226\367\274v!n<*\307I=\000\303\265=\315\264\324=W\274\247\275\220\265\254\275\264\375\243\275\'l\371\274$\341#=W\017V\275\271A>=\235\337g=\374\2332=\320\337\332\272\330\251\243:Q+\033\275.[\267\275\230\241\356\274\232\025L\275\037FF<Z\356\237=QA\316=\367\024\324=\272\364\023\275\\N\233\274/i\022=E*\301\275\367J\374<ra\305=f\220\267\275\300>\204=\376\340-=S@\251\275\230\235\246\275\316\342\310\275\013I\223\275\215\246\234=\010?\252\275\010\237\033=\333\344w=|\350\264\274:0\262=\240\202m<\371\265\304=\265\006\266\275+\330\241=0\355\321\275;\016j=\267\3360=\342\372d=z\024\315\2750!\020\275B\204\272=E\321\224=\246B\201=\251+\207=\030\016\204:\2225\316\275\345\211\271\275LJ\024\275N6u\275\232\303\267=\351\364\201<:Q\204==\357\366\274\255\037\346\273\"\230\265\274\272>^=kb\244=A\241\222\273=\272P\275\t\342\377:\263m\254\274\333\210\312=\244\274\354\273\361\"\217\275\356\010\222=s/\224=J\277\222\275\257O\232=n\233\023\275\263FU\275\233\361\210<\242c\210\275D=N=\220[\265\275B\'\227=\371\207a<\260`\307\275\267\r\217\275\177\013W=r\373\033=)\201\355\273y\r\347\274\215\237\331=#\223!\274\"\010\321\275\312\"m\275W\267\243\275c\275\213=\035\374V=\177\305-\274\0277\377\274\237\n\331\275\017\333T\275X\251\336;\251W\217=\017\343\303\275\350\021D=\032=]\275\000\205\274\275\013`\203=\036\255\263=N`\027=mi\263\275\376B\333=\255]C\275-\332\206\275\272n\205\274\006}\247\275\270\265w\275`\242\302\275\233\227H\2758sg\275\364\361&\275\372T\216\275\241\241\357\274\203x\177<\023\233\270\275:\242\030\275\235Zb=>\234\343<Z\010%;(d\314\275\351\210\273=\363\215\211\275\333\341[=_gD\274\214\036\253<\322[\210=\223\001\214<\261\315\223\275(\322\252=\002N\031\275\232\325\326\275\341<7\275\034\023\317=X8\n\275\257\034\210\275\337y\307;\366\343@\274\255\361r\2755\032\314=B\035m\275\357\303\027=gB\222<\030\261\327=\304;\231\275\350\035y\275\272\030\250<\376\314q\275\020\375)\275I\247\274=M\'\210\275t\020(\273\261\223\233\275KJ\213=\036N\335\275\374k\273=\320G\030\275\213\326F\275\224\2511=,\341\002\275\331Xm=\323)\367\274\261?\315<\207w\335=\346\2718\273Q\314O:]\2527\275\256\031\002\275.\340o\275!\224\010\273\225\320\207\2754\252^\275\027\0074\272\356R\342\273\342R\237=\020\365\022<\342\235\260=\353\271\215=\244\205@\273!5&\275\350<\262\274\375\007\307=@\213\333=\246x\016=\262\325\300=\247\035_\275\272\260\315\275\212\312\234\275$\364\361\274\364\302\201\2755\2522\275z \212=\210\025-\275\322\'\324<\240\211\216=as\231\275\336\365\006=\315\322\213=j\324p\275pc{\2757`Y\275\016\302\\\275\223\322\263\273\233\014\332=\362a\347\273H\204\237=\0248k<2\376\330=\354`\241=\316l\272=U\n\225=\2348\304<\'7\037=\035]+\275\322%\372\274D\231\010\274\204\264\217\275\307z\267=NS\277\275\356\231\254\275\215&\304\275C\223\305\275B\3453=+\221\321;\374P\210\275<\357b=\254/\346\274\023\356\205<\307\242\325;o\312\231\275\252\274\017=\231]h\275\257\257E=}Et=\3175\021\275bJ\333=\240\222\235\2751\206^\275\336\367N\275\255\001\\\274\221\214\304\275\364\237\305;\372\022\255\275\253\245~\275q\341b<\211\304\311=\257\212i\275]@C:a\225\331\274\334u\243\275l\267\266=\337\307%=\204\252\236\274a\336\202=&\n\234=ey5=\244i\375\274\031\205\n\275\253S\255=\321\200L=\035\245R\275\002&\241=\267\311S\274\037\3519=\257\025]\2743aH=^\"\305<\004e\010\275\365T\270\275@\341\257\274y\230\323=\234\354\023\274\r\371I\275-\252\255\275\034\247\306;\350\224\231\273\245\333\253\275\301\365V\275h\323k=gy\334\275s \313\275\325\3108\273(\036>\274\247]\273\275\242\233\260\275\006\314\034=T<0;\367An=\204\220\321\274\306\\Q=41\265\275u?\332=\2658\307=\233\273\000\275I \317\275\226\375\324<M\227c\275{T\336\275\"G\244\275\020\320E\275\216\200\254=9]\234\275\007\212\277\274\204\321\323=\325\337\222\275\201\021\225;9P\311=?\354u\275\026I\337=u#\231\272\n\256\377<X\277\365\274\306[\375<T\350\325\275+7\276\275\255\363\246\274\271\225\177\275#\006\260=Gei=\215\223\231\275\177\271\243\275\333v\251=\240V\003\275\340;\030=\244\360Y\275\262]\030\275-\356\333\275\333m`\275\233\341\212=tg\251=\310\210\216=\331\243\014\274\036\207\212\274\224\230Q=\230\340L\274\200y\231=\226\\\335=)q\253\274\303\276#=v\303V\275|q\273\275\234U\007\275ORk\275\020n\367:sIV\275\274\\\377;\305\343\274=\232\020\216=&\260\264\275\307G\215\275W\300\231=eku=\247\370\n=/\216\306\274\324\261\234\275\344\350\215=\215\367\214\275\312\320O\275\247~\324\274*\275\227\275)\235\222\275Y\200\275\275\215\325\330\275\250\303\275=f\377\r=@\017\254=\247\354\250<\201\303\306\275Q\201R\275\373jc\275\3473\034\274\317\364\363\274]\207\n\274\253\237\201=EY\365\274]B\020\275G\231\261<wJ\311\274\356\032\370<7\342p\275\n;\337\275\001\362\323\275>\211\231=\0271`<-\235\315=\243\266W=\252\003\222=\317P\331\274v\021\001\274\n=\177=\'<\334=2\241\236=\020AN\275\001Y\250=\350\252\000<\001M*<\240\273\236\275\274\"\305:\275\322\342<\201\036\213<\010M\275\275b\265r=\231\272\247=7s\325\275\232)|;\227\370X<\274T\270\275\321e\333\275L\324\216<\351\357\275=\207\252\242\274wp\216<Q\027\214\275\000\330Q=\205\310\266\274\346\277\333<Z\332\370\274#\303\320\274]\266w\2752\312\014=\3707\212\275c\303\227\275\314\200\274=\036L\030=\210>\203\275\ni\244=\224\367\253<o\310\250\273\237Kn=n>j\275\023\355o=\356\223T=e\270\244=\322 >\274{Lj\275X\361q\275\222\034\266=\026\030\246\2756\301\023=\362\330M=4\325;\275y\314\225\275$\236\017=\214`\256=\206d\330=z\027h\274^m\324<\005\310\311\275\016f6\275B+V=f\021Y=~\034\024=\276\211!=d\211\260=\344\342\305<\236\203\261:m\304\310\274\210\220\234=.{\310=\205\237Y=o\312\242=V\247\213=\246\024\200=\327Y\254=\224\372\334\275\010\212\222=T\227-\275\317g\263<+5\325;\235\343\305\275\330\232\233\275\237t\303<qi\216\274\306\246z\275\342\243\333=o^\207=\301\016\n\275;\2468=r\350\207=\206[\000\275\333\262<=Oq\331=VY\262\274R\014\235\275[\246\\=\254\337\256\274\323\367,<\302\002\204=mZ\277\273\307\022\025=\202I\217=C=\337=K\302\275=D\243\305=z\355|<L\026\207\275\001\024\317=\361{\324=\2150>=\030\0302=\253\213\317=\235\260\320=C\363\233\275\226?|\274\374\203\"=o\224\014=\210\211\007\275\271\210\263\274\200\266D<\373c{\273\'](=\335\374y\275D\037\022\275S\r\222\274N\177d\275\364,+\275\272c\241<\377x\215\274)\310A=\373\224\243\275OT\265=\261\345\363<\310\316\302\275\264\032\337\275\362w\203\275\027jt=\346}\024=%\310\331<\310w\254\275o7\225=\210\253\320\275a\360\025=\375\367\354:=6\035\275\3213u=\261\317u=\306\200\017\275\330\004\216=\032B\332=5H\212\275\262\273\300\275\033r\362;3n\225\275\007\346\014=\274\0378<\221M\013\275T5k=o^\246<7\211\227=h\"r\275f\n1\275x\276\322=\334?\253:L\235\262\275\217\277\323=\322\342\221=\227!\264=Q\245/\275Qe\204\27459R<s(\334;#?\t\275GaJ\274\317h\315= Qd\275\334o\262==\3361\275iO\t=\236\234\260=\317t#=\264v\200=Sz)<I\246\274\275H\200\360\274,\200\336<\344O\216\275\030%\247\273[\034\374\274+>\252\275f\261)=\177m\322=\261\341x=?K^\275\3302w\274%g\225=VZ\334\275\177\335^=]J\304=d\265\200\275\n\250o<7A\270=\364Ww\275V\035\316=5\216\273\274z\023\304\275GA\316=\352\003\313\275\214$\267\275\244\"\335=w)\203\275\024%\334\274\357\217\216\275\252=J\274\231\357\224=P\307\005\275\210[\343<GFy\275G\211\026<z\233\014\274\364\224\205<\355\006\277\275\252\016\216\273\276\2377\274\250\257\237=\r:\303<\331Xa\273\306Y\001=\332\370\335\275\214\316\t=t\026\250\275}V\332\274\035\203\210\274H([\275\361\216\365;\203\313}\275\264\247\260\275\360\"\'\274\332<\326\275\224\323\264=&P\211=\222\331\314=\357\030\200\273Z\374\243\275\263lX<\325\345\225\275\rM\254\275\237\270\021\275Y\020\254=L\374\252\275\337\332\270\274}\207P=\303\302q=\331\033\371\274\270q\247=\361\305\217\273I\206\261=%\266Y=\255\020\331\275\210\013\272\275\216\016\033\274P{(\275j\326\210\275A)\237\275\304\004\035=\333u\201;\261u2\275[\035\004=e\241,\275G\005q=/X\035\274\344.\003=\\\014\316\275\253\2041\275\363\203\n\275e\005\253=\271\207\010=\216\267~\275\264\003\270=\000\020\267=\333\007O\275\222}\316\274\210\367f\275\013\251\t;\203|\026=\347\342\273=\317c\021\275\255A\244\275\014+V=SXt\273#c\207< \023\307=\316O\311\275\337\377\226\275s\215\313\275\236e\327=\352Fx\274\251d\214=\3444\264\273e\022\255\275\032\3440=\n\264T;[\266[=\031>\332\275;\311B\275\326-\202:\361\231\273\275\273B~\275<I\241=\305\300\217=e\253\206<F-\335\275j\311\210\275\216\351\017=l{\216\275\026\257\025=Y\246\276\275\311\275\220\275\037D\253\275\252\255\210\275\001`\255\275\324\256\277;J\000Y\275\221\303\003\274\024\316\241\275n\004\026=\000\355\246;\312\331\324\275\266&\262\275\376\311\316\275\'\356{\275\251\035\212\275ZY\337\275P\270\216=x@w=\311\255\034=\324\027\246=\350\260\236\275Ha\245=\301w6\275\310\t\217\275#U\306=g\233\227<\342\201\r=\232\241\005\275m\221\264\275?\227\232<8\271\177\273\203\212\245\275\212\250\036\274\264r\034\275$K\225\275\325\317\201<\356v\310=#\213\230<\355*\235=\347OF\275\347\315\210=\254\002\374;\263\017l=\033=\275\274\035S\017\273\234\227\267=\266\000\234\273b\3577=\264\032\241:\206\016j\274\272\023\210<p\016\245=\377\003\252=(C\254=\376\353E=\276\315\035\275\370\303\233\274-\351\233:\254)\334\272a2\270=\336M\203<:\200A<}\303\223<\312h\203\2759\036\330=;5\275\275\016\271\201\275\342\271\206;\301\205\333\274A.\261<\271\233\235\274\t!\202\275y\336\331= \036-=\357(/\275\034\305V<\021\340\224\275e\003\230\275q>\017=NX\311=lz\201\275\244\243\263=\373d\020\275\243\365\202=X\234\337=\225n\232=:\337\247;\270\321N\275\240\340\242\275\"\371\340\274\\\267\375\272\320{f\275\031S\323\273$\327\324\275\205\217\341\274\"-\233=\213\332\316\275j>\240\275\365)!\275\310\360\202=\314\306\215;\2406\371<\261\327W=\3427\244\275r\277\335=\325\034\254=5s\270<H:D=\017a\305\275\024fk=\256\313\253=\020\262\320=96N\275\375Hh\272\025\345H\265\007@\214=l\262\310=\220\216\331\275S\352\202\275t`\027\275\366\005\342;)\216\002=\262.\307=\224|\352\274\252D|<0?\201=\223\373\227\275\031.\260\275\232)\005\275n\321\260\275]\305\225=\303\303\303=u\354h=0\365\356<\216\343\321\275\303\007\321\275\255\341\335<\003\034\217=\232L\231\273[\376c=H\274\306\275e\255\232\275\210\205\266:\340\303\253=\326\326{\275\030\201U\275\200\267S=\352\357\302=\n\236\266\275\314\377R=kx\322=\237L;=Q\342!=k\031\303\275\036\206\177=\277\006*\275z\330z\275\n\351\242\275\nQ\300\275\373UM=ZdJ=3\025\303\275\352^7\275\"\3739<#\010%=\236k\201=PE\210\275\273*y\275{\201\256=TY\302<\000\371\230=K\302\221<x\275\037\275\275\001\237\275\373o\277\274\344d\017\275\256\2535=\027]V\275\245\2263=T\277\234=\347\244\233\275@I\231\275 \307\032=\312\265\333\275r\310\334=\211;]=QL\315\274`P\223\275\240\276\'\27534\211=}!\315\274\000\242\266=\364\247\274\275\212\207\362\274w\346\275=\032Y\252\275$r\254=n\246\036<\2571!=\342\240\301<\207\352m\275-Yu<\273\213\211=\262c/=`kk\275\274\237X<<$\021=t\017\265=\215K\213=\323,\210\275$\315\307=\220\027\253\275\201&\266\275[\365~\275\230\307e\275\2748\217\275AA\035=\035\rO=\214!U\273\366[\255\275#\014c\275\247%z=\310\024\200\275]O\354<\325\363\323=\'O\326=\r\2311=\214\241!\275\240\273P=\320\035\226<c\020\224=L>!\275B\036\335={\365v\275\321j\017\275\233E\302=\330\345\203=be\004\275}\367\271<\205\323\331\272gZX\275\350\016\'\275\302\007\230\274\331\350\262<\224Aj<}\010\215;\210\326\302\274\336v;<3\322\273\274s\336\246\275\323N\255\275\022\034\253= \303\263\275\340\340\331\275\006\225\202=\376\257\177<\362\211,\2757{-;K\367\000=&\363\227<\304\2156\2752\034\223=r\342\026=y\032\256\275\276%6<:\\\024=\264G\357<=\313C\274\334T\036\2758@\224\275\265\252\337;\346\273\223=\251\352\031\275\253\271\251=\253\310\245=IL\251<\020\346y\275r\257v\274(S\377\274\333\305W\275 \005\001=\" \315=\020H =\333\302\366\274\332\304F\275\342\025\"\275pA\250=\310\377\244\275p\020x; \326h=\334>\201=\355\331\324=\354\331\327\275\330\321Y=\354O\022\275\345\236\032\275V\261C=\275\031\363<\322\r\274\275\211\001\t<\360\320\252<\2271\343:aE8\275c4&=\201x\326=\336\206\235=\276\302\027\273\364B\261=.We<\340\346b\275\037\347\367\274e\\\266=\005\250\020<K\027V=6B\020\275rD\317\275\340\344\261=\305\306c\275N\356]=D\337*\273\002I\023\275\002C\335=\304\252\325\275\377h\270<\270s\201=\302oe\275\035\272\302\274\253z\233\2730\313\363<\0270\303\275\237\244\"=q\247\271=\330\202\220\275\314\275\222\275\275\271\251=\251N\212\274\014\235\202\275\361\031\306\2732\031\242<\205\010G<\347|\205\274\005\207\252=\335C\332\274\324\263><R\322v=\277\244\307\274\326\302\n=\257\303\347<\002\010\255=\250\022#\275\225\365S\275\241X\247\275\025o\271\274\235t\324=\272f\033;\330\263\270=Rf\230\2753\0172\275\276\271\261\274\263\331\264\272\222_\321=\342_\210\275\230\360\243=u\013\032\275\307-\217\275\353\355\361<\272\006\'\274P%\345<\313\023\245\275e\336c\275mI$\275C\322\221\275\241\366\271<\226\272\351\274\363\254\234\275\240\222:=\261\263%=|^\261\275\263\t\334=\264\3145=\306\007\371<\306}1\275\331W\257<\354\256d\275\322\374\344\274/m\331\275\274\307\270<p\265\307=\3024\327=*l\250=\022\247\216\275\227\350\217=\266\271y=\'\357W<\177\021?\274\033\245v=7\267\363<~\037\304\275w\302\022=\364\n\266<~\310$\275V\314\332\275_)\007\275\365\005j\275\345\270\234<A\336\247\275c2@\275`<\307=#\236\224=\013\027\221=\375>\237\275\335Nz\274\3113\315\275\256\271r=\350\321\245<\362\020\310\275\265\222\270\275\034\311R\275\300\267\230=V}\246=\344\037\314\275\275\341\261<\305+\232\274>\033\035\275\366\260\204=\350\203\277\275\351\326\021<\241o\030=\242bW=nh\304\275\341\0133;\225j@=NG7\274_\332\\;\002C\216=:A\226\275\237\273\375<\221\236\202\274_\217\223\275\207z\223=\346\"\270=\207\355\201\275.\001\237\274\277}\215\275\245\352\311=\316/\271\275\016t\026\275\177$\277\275\023\302\214=W\316\201\275Z6d=\343\315\216\275F\021,=8.V\275E&\022=\002\034\233\275*\334H\274k\'\311=\361\313\321<\350R\226\275\355_\326\275\244\033\324=\2627B;\247&`\2740m\201=\366.\241=H=\316\273\224L\337\275g\034\202\275\177u9=\320\003\315<\202c\230\275,\260,\275((\303<\006*\207\274\016~2\275\243a\275\273\350t\240=\325U\215=\266`\207=m\0204=\253/\366\272\221\325\256\274&\265\212\275C+,<@W`\275B\210\357<&\246\310=\201\343W<:\227\345\274\\P\236\275\335\010^=\023U\300<Ly\267\275\350J\237=B\251\274;&\201\024\274\326{\251<@%\267\274\306G\351\274\301\240\302=\275w\341\274\027]\211=\307.\221\275\304\024\332\275&uL\275H\326H=\307,\336\275\310bD\274\340O\234<\177\267\212\275E\024\234=\006\206\326\273Y`\267=\310\275\250=11\334<\262*>\2757\306n\275\346\212\331\275`\264\230\275\337YT\274+\310\005\275\237_\311=\216\313\"=s\343\000\274;\255;={D\306=\323\217A\275\312[\330\275(m\203\275\274\222\313\275\371\342z\275I\314\334=\311y\020\274\027\255\327\275\332\234\275=\265\220\224=\310\034\207\275\360q@\273\n;\272\273\323:*\275\363/r=\312\270\261=\200u\245\275\006\323\252\275q\241\315\275\372\360\036\275\317\313(\275\014\356\322<\276J\275=\241Y\264=\313\344\325=\233\253\335=\014%~\275\330;\243=\366\267\337\274js\231<\344\362\223<\345Q\265=A\032\201\275+O\207\275\362\237\030\274m;\211=\037%\375\274\020\372\225\275\023\226\365\273X\303\326=\311\226\333\275nJ\230=\371\021S\275\334\312\315\275\273lN\274&O\252=\332\000\033=\330$\205=\362xV\275\227(\275=\244\235^=^\316\255=\270\026\313=P\006\r\274{\364\232=t4\225\273\335\267\316\275\326\322_\275}\260\216=1\005>\275W0\271=\204\354o\273\366\267\257\275\236\241\240\275P\333\312\275\017b\307\275>\307N\275\206<\256<\277\306\274\272\325\200\334=M\273\245=s\327\327\275W\201\330\275\004\2023\275\343\2101\274&\177\300<\247\021\303\275%\207\232\275\024\267\313\274\272p\302\275\325\334\213\275\344\341\334\275cpv<\315\376\332\27566\337\275\027|r\274\364\375\217:+hg\274\004\'O=\222\347\337<t\274\210\275\t\" \275\313\314\217\275E\346\215\275;\025\217:Q\322\323<\225!B\275\343\303\275:\363R\237=\014\232\024\274&\273\232=xp\037\275?BB=\034\210l\275L^,=fQ\311=\353^~\275\3077\204<.\375e\275\350k!=e7\314\274\265\236a\273\312\365*<bG\241\271\314\331\254\275/\220\337\275\276u\207\275\315T\233=\313#\230<\257)\334=5\370\302<\343\206\305=d\211\364\274\177\370\206\274\'Jo=\021\221\356\274J\374)\275\2550\242<\234\204\260\275\203\003\244\275\206x\220=(Ix<Q&\333=\237\004\231=\0376\337\275tXd=\3342+\274\264\372\207\275\342\332\317\275n~\306\274W*\204\275>\014\306=\252\220\221=\037v\370<\370\347\363<\223\344\311\274#\226\316\275\270\250\251=\021V\375<\252\207\026\275#\225Z<\243\212\240\273\270(\233\273\211\360\332;\210t\346\274\200\254\331\2755.)\274v\003\300\275w?\327\274\326R\252\275&B\277=\264\214\371\274m.\205\274\225\006\326\274kE\302=\320?\006\275\360\260\265=\206\225\225<}\353\221\273\200\275\226\275n?\222\274H\017\200=7X\237=\342\237\220=L>\026\275\276\273\314\275\027\n[=\276\361\254\275\"\212\260\275\016\327Y\275\3268e=gi-\275}!\333\275\037\236\343;\\\225^\274\0212\221\275\353/\214\275\364\177|\275\261s\265=\240\270\224=\324M\314\275O\276\320\273!et<W\"\326={r\241\274\247\342\262=\233\335\320\275\375\277\326\275E\001\310\275,\365\233\275\273\020\276\274t\363\306=\370\243\330<\317#\272\273\375\357\313<W\332\202\275\027e\374\274\316\335\246=H\332\243\275\265\243A=\016\020s\274\213\233\234=\332x\217=q\1775=\021B2\275S\363\300=\223r\333\275G;\035\275\202\022\335\275\244\352\267=\3160,<|W\001=X\257\262\275:[{\275\345\334\333=\351T\301\275#\226#=a\024,<J%V=\232\360^=rU:=@6y=\356\352\336\275WX\271=\234i\232\275{\324\336\275\016\024.\275x\224i\275`\320{\275N\251\353\274\375\252\244=\204\326\215\275QZ\204=\321B\316=\r\032D=q\020\201<\325\275\225\275\343\346V\2732\300q=yr\037\275~3\001\275(\257@\274.i\336=J\247P\2746\255\334\275\264z@\274\243\366[\274&\030\273=i\331]\275\330\310\261\274\014O\245=K\034@=e\035\032=Z\r\224\274\211\252\311<\316\357\263\275\336\217\256;\310]\261=\375j\013<\021\224\321\275X\314\305\275\340|\243=\261 @<}\225\226<\341\270\330\275\241\215\241\275\321 \244\275~\375\227=\261\345\267\275(d}=\356\204m\275t\312/<S\315O=\254\304N=\254\374\231\275\223\266\272\275Y\205\003\275\255l\223\274\027h\267\275\207A\323<\252\217_=%\304\254=\233I\277=\227h\331\275\272\211\240\275\014\200\203<P\342\335\275\352\016\326=F\323u=\314\340.\275\246\334D\275\371,\007\275Tn\251;\366O\245\273E7\277=\350\254\272\275\n\\z=\257\361B\275YLd=\2539\270\275r0\225\275\0363\336=B\356\275=\331\342\231=\324\014\246=\357\266\271\2759M\274\275\212\315\254=\321\347M\2758\262\330=\313`\201\274\001\026\207\275\262\323\207=\016~\220\273n7\016\275\013\326\316=60\020\275\256\325\242=4(\255\275]+\222\275_;#\275\251\374\331=\002\360\247=\351\001\320\274:\001\027=\2502\214=\205\371j\275s\343\264=K>\246=h!\322=\222\023\302\273\r4\322<\204\322\222\275v\357\277\272\016\332\246\275\345\357M=\205\260Y<\366Y\312\275\315Y\275\275\364\203\261=j\261\227=\240\234&\275nD\236<[\251J\275\326\005N\274h\332\215<\205L\312=\324j\001\275\036\351P=\277\335w\2749]u=O\311\277=\373\255j\275\205\373V\275\251\323\266\275X\t)\274\265\341\010\274S\211\314;\312\214\222<Np:\275&\316\r=\272\002\252\274\301\315\256=\2356:<5\244+=\037\260\215\275\300HV=\307\266c=G\235\244=W4\201\275\272}\023<y\263-\273r\352\341<\024\372\274=\014\276E\274\345z6=\010n\n=\264\004\300\275$\315\307=\033\254\013=\021\227\304<\377\261\256=\236\005I\275=7[\275e\336\253<p\306\301\275\312ZP=\245\317\312=\373k\310\274\205\347\272=\022\t\245\274\\\251\307\275g!C=\242\037\241\275\204Z\225<c\220\035<\276\204\201\275\254-\207\275g\264\321<\342D\270\275\347u\213=\373\270\232=\346\021\r\274\310\253F\275\267\001W=\354\362\231=\351\255\"\275\255$\274=\033\204\305\274\253IM\274\\\325\352\273\377\371\204=\360*\266;\310\262\263=\313\311m=\314\033\331\272\371\t\313\275:\260R\275X\213h=\337\376\225\275\033\\1=\202\310\277\275\037\ra\2759\010\322\275\276]\306=\031G\302=\325\365\322\2743\320G\274J\033\264=S\330\243<\310\264S\275\023\314B=oM\316\275\313\025c<\331i\000=-]\036=a\340\246\275\300\021\013\273x\313\206\273\017\345\266=l\223\007<\337m\325<\302\221\034<&ba<\360!?;\230\373\314=\331\237\311\275/\313\217=\214\"\317\275\214\026K=\021V\223=\t\203\244\275\343\013\307\275\355\244\217=\021%\254=\312\254\257=\006s\301\274\n\343$=\031\322\252=\310Q\217\274\275\332\231\275\013\n\257<m5\276\275\277\035\242=\016\331\227=\323g!\275\323_\335=8\270R9rt\262=y\3271\274\214\370=\275\262\337\322\275\220\273$\275F:G\274\214\036\311\273\267PZ\272\324\206l\274D\252\264<\t\r\025\275\377[\327\275\216\244\001\273\303J\206=@\366?\273]*\240\275\036\251\263;\033\364\303\275]\234\225<\275\210\300=o3\210\274\272\"\242\275\341l\230\274\321\365`\274K\234[=:\254\216=\363%\320=5n\246=r,\241=H\342\272\275S\227a=\377\261\206=\243\202x\275\366\254\267\275\003\237\330=\271\004\250=wF\361;\n\351!\275\271|\217<\251\321\243\275\003\222!=b\353X\275h\306\303\274\\\307V=U\301\231=\320\024E=t\375\316\275\234\314`=m\001\306=\377\360\267=0-\177=4\211$=\017\334\261=8\350\255\275F\240\262=\024\177\223\274\310PI\273e\223\216=|\302 =[\271@=\375\217l<G\033\220=z\373\232;\360\324\034:\253\251\202=\016y:\275\303\320\356:\254\033\r\275l\357\232=\362%\262=U\3444\275MR/=\205\343\t\275\360{{=\371\007\316=\350\332\242=\373\342\232=\022\250\222\275qt\214\275\207\263\251\275\224\202\001=\322\212\305\275$\366\010\275t\231\310=\014\356\n\275u\000\240=\035\023q=\005\374-=a\020i\275`\330o\275e,\334\274(;\240=\017f?\274\216\260C\274\216\242\320=\014\010<\275\355\214$\275\230\320z=RU\221\272\324\031\324=\237\245\313=\215(9=\225\250\255<p\215\237\2747y\324<\261\205\320\273\013\305\356\274\303@\355\274\347\312\025\275\005\r$=\357\351\t\273a\035X\275\264\270>=\323\304\312;\376O\335=B\356\311\274U\267==>~2\275\324\364>\275\252\236=\275.L\031=u \206=D\026B=e\313\305\274\223\032\306<;.\360\274~\221b\275\201\310W\275\261\204\005=\203-\033\275\365\277\236=\316\327\237=(\002\335=\211\244\013;\\\362\205=\352b(=\026q\263<\231A\333<\025=\316=\354\376u\275~V&=\352\223B=\307\002&<!\257\207\275\374;\225=5\317&=]\330\365\274P@\250=+\027\222<\315\352\331=U\274\352\273%\337\224<i\220\300\275PJ\034\275)}\214\274\347\275\252\274 \211\022\275\203)\275\275\237\361!\275\305\244\265=\246\010H=\213@\226\275\356\263&=\310t\314\273\355\365\251=}\001\214\275lH$\275\325\236;=\014\032J=\235\314\"\2757N\304=\005\305\254\275\272\030\371;\227l\322<,\332\305=\006\351\220\274\316\307\202\275\022\271\224\275\000\320\340\274\325`\254\275bI\247<:\265\316<\362\266\220=\242\223\311=\236\222U\275\222\245{=\206\034\252=\3563\033=\327\212\315;EL\274\275C\274w=\272i\312=\202\230\233\273\0173\336=)\037p<\352\016c\275yx\273\274\013N\361\274\352\263\257\275\210\007\316=\031\357y=\022\r\331=\002\265\256:\r\007h=\222\304\223=>T\302<u\245\217\275\034^\305<hEi\275\220\234\240\274\312.|\275\320Y\260=\332\236\216=F\200\370;\355[\276\2750\260\013=:{\232=;\037s<\237>\305\273(\360d=\r\016\263=\032~\324=\")\212\275\353#O=\345\334\014=\333<\370\274Ad\270\275\006p\206=K\027\223=\332]\003\274O?\262=\234g\014<~\006O\275/\221H\274\344\351\274\275r\r\234=L\313\237=\202\366\255\275XZ\004\275j\260C=\35206=m8\242=\273\260\217=?,\257;\322\363\200\273\t\336.=2B\313=\361\250\357\274\251\032\336=\206\376\264\275\303\267_=\343\n,\275?\201\003\275\243L\327\275B\320\353\274!\003t=q\237~\274\034s\264=\243\256\327\275az\340;\002\233\335=s[8=\026\257\307\275\333\363\257\275\361\253\336=\354i\224\275]\337\003\275\251a\246\275\2349-=\n\377\327\2749\347\242\275\272I\346\274\323\250\331=\006`\025<\253n\265\274J|\227;\017Q\007<Hu\233\275\307\355\210\273\000\272c\274\277\325\271\275\255\361U=\016\030\253\274\022:+=\260(\373\274j\302\244\274\"x\034\275ys\254\275\034)~=<\317`=z\023 <\0013\327<#\035\226=:\334\266\275t\372>\275\343\2069<\n\037\312\275\177\334\324\275D\304(\27594\265\275\332=\233<\231\373q=\213,E<\007\014o=A\372a\274\340\302\264\273(l\243=\034\235\027=\220\237\333=$\000a=\027\202\027=\262b\242\275\333&\333=]t\201=HK\235\275Bt\002;\010\366J\275\216\357X;\177\334\200=.\2050\275\256\000\237=\214P\250\270\210P\266=9\274\002\275z\361\371\273\207\307\335<\272\335\231\275\316\342\265\275\212h\206\274Tp>=\346\274p=b\376\315=\370\306\246=\206\216\337\275\253\357\330=\334\355\004=\231r\014=\273mG=~\177^\275\017\007\374<\372\212\324\275\r\264N=\226*(=\247V\260\2751\205\250=\243k\035\275j]\240\274\004)\313=|&\334\275\261\034\004\274NS\260\275\374\301q\275\010\024j<g\004\360\273n\257\207\275\206n\311\275\311\304\231\275y{\253;(\320k=\265\370\270=\030B\303\275D,*=f\'\330\275\007\262\310\275\246\376\326=\303Zm=\020v\355\274\361\013\216=\014\324\216\275T\200\316\275\277)\316=\240\337\334=\253\201\277\275\021\210{\275\301\353\034=\277w\200\275\224c\254=\207K\313\275\304\251i<\312\361\267=@\335\355<\253\270k\274\356\244{\274\200\351\020\2752N\031\275Y%\232=\224,[\275GD\320=\002\302#=\202|\002=\310\354\306=z\367P\275\344x\252\275+\317J\274\0259\262<2\363\202\273\025\013\215=j\233\235\275\020S\266\275\330\026\337=\371\\\213\274}8\303=\250\326\005\274\210\257\324\275\236\216-\275\026\314\023;\352\237\300<)\2338=\302\333\337;\250\352\216\273\373<\032\275\354\252F<d\242\200=T\234\221=\300~\220=\267\346\253\275/m\307=i\275\221\275\300\357\335\275p_\014=\236I\316=2\006\251=\310\255\251=6\257\320\275\352\323\262<)\267\353<\275*\232\274^]\307\274E\033\233=p\275\240\273$\224\244;\"f\315\275\303I6\275\266\255\251\2741\231\366<\364\nG=\372`O=\250\251\316\275\343x\013=\343\001\340<\006\255\213=:f\274=\347\366>\275\017\265\271\275\177\370\314=:\213\334=\217]\300\2753\227H\275\314\275\200=\010\274\277<\245\314\217\274b\177\233\2749\320\224=\003L\010\275\366\005\265=-\316\312<\376\261\326\275bt~\275\376\341\300\275\025\273c\275\354b\263=\220\326\232=\261@\337\274\3568\304=\262\372f\275\025\341\255=&o\350<\335#\310\275\342\244\343<$\332\230\274\277S\205\275z\250\251\275c\243]\274\325w\321\275\225\211\263\274t=}=z@q=,\201 =ULu<\"\246\336\275j\377f<\244\314\211=\315\370\000\275\023]v=\344\272\010\275\205\305\021\275%\303o=\373\340\006=\023_\221\274\243\241\251\275\374v\227\275rH\346<\222\3402\275\375\006\026=Z\\~=\267>\342\274\341\245\177=\352\227\332=\363\3377\275i\247\300=%E\252=\314\332\214\275\207N\270=\304Z\221\275\260K1<\001\375}\273\247\205P=\305%\230=\254\213\240\275\224^\312\275\007P,=\233Y\252=\331\277\252=A\254\177=|\007\007=$@\200=3XL\274\262\032\201\275Az\365\274$\200\315\275\016\361\301\273\ng\250=\"\250\332\275,;\024\274\263\031\240=\377Vi\275/\353\002\274\216\324\202\275\017\337\200=\207$\262\275=\224\223\275M\310\240\2750\246\224\275[z\301=\241\223u=-m\240\275v\202\202\275\2514\215\273\326p \275|W\203=a\313\253\274\326\360\275=:\221~=\243\272\326\275\254\307\240\275;:\364\274\310\025e9\255B\226\274\\\221\347\274AU\037\275gk\256\275~\215\303=\025\324l\274/u\370\273\333\001\024:\340]v=\263\004\200=\252\310r\275\271\376\270<CL\332=/\177F\275\201A\177=\240\276\244\275\217\226N=b\316\330\275\261\360\310\273\335\252Y<b!\337=\030\265\225=%B\265\275\245m3=\245M\030=\005\372\244\275LW\311\275a\227\253=M\266\231\275\343\213\331=\340u\317=0\033\032=\251\333\224\275H\306\210=n\314\205\275\t\320C=M\244\276=\025\326\326<\264\330k<;_\301\274 \373\007=\333~}=\265\364\022\275\377T\321\275\272\311\315\274\317a\264;\276\261\244=IM\324;X\327\201\275[\251\t=*\230\206\275@\034\301=?\351\232;\022S\214\275\362\256\322<\024~\310\275\024\326\263=\240\301\335<\2059\177\275\246\247\254\275\032G[\273\252\355 =\305\337\211=\013!\033\275\312\247-<\320\001\034\275\366\251U=G\350\336\275\n\201\200=N\330\245\275^\214\337\275n\2064<56^=\2022\270\273 \t=\274\217\350\201\275\354\013\335\274{\267b=\314\203l=1\335\336=\277\275a=\204\030\316\273\305\003\327\275\360q>\275tT\311=\220\353\316\275\3317\256\275Q8\245=\237E\030\275\216\232\321=2\345\270:\310\370V=W\221\264<E\204\323\275xnJ=j\004\020\275\203\216\277=\360\255\221;\231\'\205\275\3733\023\275!\361P=F\037\202<\341\243\031\275jm\227\275\326\350\254\2747\316o=\362\2340=\204<\305\275\013)\315=5\003}\274\020\215\272\275a\261\305;V\243\220=(\265\033<\240\007\201\275\2349\021\275\350\370\316\275Yy\000=\275Y\016<)C\315\272\371\310\370;M\\P\275\343c(\273\237\022\210<Q\356\246\275<\264\306\273\277\246M=M\202?\274kK,<\265D\276=d\255X=gG=\275r\315\362\274\242\367\235\275\347~\004\275\324:\257\274\362\2418\273\004\223\227=k?\013=\222\022\344<\027\200\002\274]\220\241\275\364*\226=]\3239\275\300,\246\272\257\324\305\275\263\223\327=\265\337\270=\252dG\275\250m\302=K\201R\275\244\300X=9\031\247=&\315\264\274\243\200\274=$\355\323\274\341\273\230\274Z\252\226\275\260v\336\274\355\244>=\003\203\257\2746\033\251\273\221\004\253\274w\305\251\275eg(\275c\341C=\244\356\237<y;\200\274\214\037\t\274\301\255\273<y\313\"<mE\215=\001\225\330\275\005\007\260\275\314v\313=Fp\227\275\276\001\261\275\027\316\214\275\211\325!=\036\365W\275\230\250?\275\230s\212\275\207\240\340\274\022\263\216=\033\260\242;&\"\210\275q\200\214\275g\255?\275\"\231\230=\247 \001\274\\\262\023=Dk\200=i\0145\275)\002g\275\3478\t\275Ih\247\275\224p\231<\256\316\333=o\022\252\2748;g=\341\316I=\274\242&\275+\024\327\275\037\236\304\273\r\347\244\274\024\320\244\275\226J\245=u\320f\274T\347\031=Q\212\002\275\273\305\231=\255s\030\275\236<\216\274\316b|=\022\363\356\273 \353b={\262\037=;\204\263\275\361\317\376\274d:\'<\364\212\217\275>\210\205\275L\260J=Qt\326\275\250_\2148\032?{=\232#\r\275\n\002\253=K\354;<\272Y\234\275 >\234\275\323F\255=1h\247;\025\262\343<\357\252\223=(\234}<\253`H<\324\346r=?\371\335=#\227\031<^R\336\275\025\352>\2755v\223<p\023\200\274\001\220\201=\013\332\225= N\356;\'\017\202=c\245\256\274R6\365\274\377\350\020=\242l\032=\306c\267=\272\264\310\274\373\254W\273\264;\202=\017o\237\274\036\352E\275\315\216\036=~\223\242=\203\214B<\330\344b\272 \214\035\275\334:\317<mFE\2742\221z\275\361tr=j\342\216\274Y\353k\275\341\r\245\275\326\221\336<W\nu\275\201\227M=\343\302\312\275\023\027\200\275\260\016\204=\342\243\365<d\026Z<\275\230\204\275\235\326\300=\335\257[\275\332W\n<\272g\237=;LV=\263\"\331=\326\345\325\273\317>P\274M\241\013\275e$\264\275\021G\315\275\306Q+;\335\200\223=J\375\376<\344\341\221=u\374\275=S\341\023=9\321\025<X\204\301=cgp\275\032\325\324\275\216}e\274\3443\233\274<`\313<\250\305\275=\244\n\207\2755\275Q=X}\321\275\305\204\246\275\235\303X\275\316[\312\274\231u\022\275z\205\237\275W_s<\305\241\204\274\000\371G\274\373H>\275\220\270+=!\331\207=\017f\251=\355\007\244=R\250\327<\263\250\201=jj\321\275\336+\202;\276\023\177=\242R\253=Z\237Y;Qa\n\275\245[\307\275\341\210\013\274\006\323V=\203\371\271;\322\375\222<\314@C=\301z\205\275\305\305\010\275\243,!=s\010\233\275\233\243\310\275W\301\374\274\265\375y=\241\200X\272\311d\221\275g,\224=\345\330\235\274\312\037v=\344\253\264=U f\274\220\361M\275\325\333\274=?\202\007=\3576\005=\374R\267\275\270|\266=\027\370\237\275\374G\300\274_\"9\275Q\304\227=\016Dl=b\206\247=\214\214\300=H\026\303\275\177\311x\275\357T\232\275WjA\275\225\030\227\274\340\206\177\2754C\206\275\021\204\236\275\227\314i\275\362\275\245\2750\307\313<\226#\223=\322\256\252=\307\342\351<+\303{=\246\343\327=q\233y\275%\330e<y0\227\275\215\024?<8 \254\275@\254=;\t\306W\275\312\367\224<\025\034\277=\026\247&\274\245\310\027\275`\203\010<\352\354\001\275&\336\255=\350\310\334=\343\241\211\275\004C\021\275\030\314\245\275\036\363\030\275J{\252\275(\257\005\275W\372\310=\277\033\035=\236]\221=5Y\364\273\2629\302;\225\202\225<\021\224\241=\2148\276\275\267&\212\275EQ\330\274\036?\270\274?\232\250<\200\241z=\206\237\356\274\026x\027<\214\224\267\275\347\020\320\275\3578\313\275;\335\337<\270\013i=-M0=\335\357v\275r\226>\275~HC\274e\222\241=x^\031\274\325\353[=\206M\272<k\\2=\335\205\252=\022\307\177=\233JY<\000Kl=.\006\236<\274f\221\275\302#M\275*\312\332=\014\317\016\275\r\356\215\275\274\307\363\274\355\001\254=<l,=\013Gh=8m>\275\024-\267=\350\263\277\275\357\200\234\274F\035\201\275/\312\026\275PP\326\275\375\"\272\275\030o\236=\324\316\331=\214\260\313=\210\000\265\275\203\275r\275\215\3060=\336\177\276=\253\2419\275\316{\251;\273\004\215\275\251O\233=\360y\207\275\315%\313=\331i\250\275k\221\034=\201\277\321=\234\267\255\275\331k\017\275e\321\222\275NS\234\275\337\236\'=\'\266\266=\333\242(=B4\352<i\350*=}\342\266\275:\247\262\2753\t_<\010F\206<\3039\360\273BSC\275\332\020 <\3629\241={\025d;\265R\003=\221\207\367\272a\034\"=\250\341\353\2733\'\301\275l\336b\275\340\315\001=\023\375\324\275\0334=\275\232\0177<R\241\274<\0030Z=h\014\274<.\257\256\275P_\003=T<\025=\236\201\264\275\326\346\365\274\002\316\221=\022:\323=\346#l\275\345X\356\272\255g\220\275\231\007\267\275\332vv<:\213\235=zK\257=\005\213\177;m\203J=\370\371\264=\024\327@\273\310\332\231;nz\225=t\035\255\275?\021\345<\021~\217;67\274<\344 -\275\237\323\231=)b\213=\234\235\235\275\206+\'\275~:\264=\374\352\335=\200\324y<\245\244N=\305\320V=\273q\332<\274!\261\273\010\203\235\275\370\332\262\275\250O>=\233Pl<\310\341\315\275\377|\316\274\025\344\324\275\016-\236\275\236\276\326<P\357\034\274\022\002E;J\244\337=\007\361\t\2754\271\206<\277\216\261=J\376\277=\365\250\177\275\017\345\256=|t\221=\320\363F\274\371\270\255\275,\263>\275V\2412<\230a(\274_\221\310\2734\r\007\275\253$ <\022E\204=\373\353\234=\347\315\236\274\230\367)=\274\335\377<\327\336\362;f\272\274<\024\377\213\275L\304\231<\377\335z\274\322?\"\274V\030\327\275X\313C\275?t\237=\225\003\214\275\025k\221\275lX\273\275\307 \217<\225\257\310=J\227\003=\311\021l=\376+\240\275\323\007\235\275\221\017\035\274\232!\324\275\231\304\247=\300\253\322=\361H\232\275fts\275NU\213\2757m<=\010\271\205\275\025;\226=5\305\273=H\014\n=\212\304^=\317\303\204=\347\305\276\275F\226\277=k&\261\275\r\021\225\275w\242\326<Y]Q<Z\262\034=Y\207\024=\0024\225=\231\250\317:\276\345\211=\205\311\312\2756\223\254\274J\247\234=Q\310\256\275\324\330\032=1Io\274?\277\223<\n\371\205=|\373Z\275b\2548=C\244\027\274(2\252\275\353J\273=Q\376\264\273)\257\315;3\177\371;Uq=\275I\322\002=\032\0169\274\320[\200\275\212(\240=8\260\240\274\242\340\214\274\343\320\202=\360G\275=?XQ<\023\353\213<}\030\325\274->5=\031\316\243=\340ND\274\364\274\231=\t~\217\275\371\'O=#\255\235<\n\037\334=\035\330\273\273\310\265\301\273\030\330-\275\252\223\326=\266\204\374\273\001\014\246\275C\334\036=\345\345\302\273\346\014\242\275\245\345w\2758\260\336\275J\003\340<\023\356\222<\332\212t\275\001A\261\275\324q\227=i\030\211=H\022\027=\032\210\336\275\256\t\357\273\026\212\224=\226\266\206=\262g\207=G\021Q\273\272\353\033=\005\341W=\026\242\304=L\357\253\275\275\226L\274\2132\203\275\353\317\227\275\177\r\206\2755\314\230\275\032\244-\275P\322\035\275\005p\220\275\030\241\302<\006I\014=\300V\'\274\024\252\315=h\'\300\274{X\237\275\241\334q\275\202s\271\275-/@\275\273\370\025<=\367@\275 \350\026=\325\020\315\275\010Y\274\275\254\355\215=\205<\320=Kv\202=x\245\224\275\316;\222<Y\376\276=\357h\001\274\305\367\245=c]\333=\263\006\364<M\377-<e\276]<\2104\250\275]17\275\006\357\273=*~P=U\315\201=\332\373_\275\372wt:\232\226J\274\020\345F=+\177T\274:\334\224\275\367\016K=\021\362|=\246\320\021=B\267\024=\261\315\221\275\220\210n\275Y\207\252;;}D\275\005\235\336=M\3321<\023\342\243=\326\307\330\274\304\250K\274yF\327=\325*V=\274\273z=\241\003\t=1{?=\235\\l\274\374Q4\275\264\201(<\007\272\327<q\351\245=y\264\265\275[\204\264=-8\274=\024\024\330\275\302\255\220\274\301\201G=~\030\320<\223\351\325=\346X\220\275\245\243\376\273\374\233\335\274\311\340\200\275t\311f<Z\030\313=\371\360p\275\264\244\221<\215{\354\274\317X\205=e^#<\226\310\246=_\312\241=\242\374I=\367\337\024\275!\327\264=H\022\274=\234\2134=\025\206\322\274`Y\216=G\350L=~\206\221=\363\217\201=\211\340\230<\325\344L\275w\241\016\275\334:\266\275\225\370\213=\037\275\203\273L5\205=5:\352\274\022/\377\273<\346\230\275PI\274\275%p\316\275M\335\233\274\'\213\247<\217\251\363<\014\223\244=n\255\330=\316\305\000=?Q\264\275\3359#=\342\302\230\275\003\255\326\274\3321\274\274H\035\320=\262@\275\275Sy\237\275\'\370j<\000\033I=\315\312\332\275\006\013\365<\333\224\236=m\225\325=\316\365\307\275\347\361\220\275$$\204=\265\204\317\275\255if=[v\334=\374T\214<\207\205\262\274YD\312=\356\361N\275k\006~\274\005\002\000\275\tP\234=\231VP=\345\225\303\273\276\365Z<\353_\261\275\322\277\334\273G \226=\305\033\324\275\223\331J\273hX^=*vf=\336\303\244=\205W\272\274\201\212\304\275\336\364\235=\321\031\347\274=~\251=\237\254\\=\237\326\264=\013M*\275\263h\325=W%\027<}\265$;\334\327\026=\354D\265= \257\027<\037N\250<\301:l=Y\324\303\274\035\200\216\275A\230\272\2752\352\217\275\n\302\215\275\336\226\212\275DN\215\275\026\343\303=\265B\227\275e\275\264\274*\252\033=\303\023\337=n\331\332=\2536\273=\374\001\257<\023T\303\274-3P=\330\244n=\222\336\021=T\355U\274\271\352\276\275F\330\326\2747\230\336=`}\240\274\037-\304\275\372\262\241=c~`<\030n\304\275 \255\325\275z\327\201\27520\020\275\212%|\274&\323l=\273J\242\275\3347\374<X^\222\275$G\275<\316\010\202\275&\371t\275M\000\265=\205\177\236<\327;\256\274\231\332\336\275t\013\212\275F\274\005\275\360\201\306=\'\021\304=\023\271\261\275\205}\263<\020G?=*\271\265\275j\316-\275(\004@=\373\301\312=\203Hm=\312\204Z=I\246\277\275/\372\275\274J!\315=X\226\225=&\266\017=\244\\\353<\273\272\325=1\362\305\275\207\252\236\275c\334\301=\276\363J<%\240\034=\034\020\324\274T\311\331=\026\272\306\275\230N\326\275i\321\272\275\n:\224=\300\256\267< \300\256=\021e\355\273\336I~\274\266\336\265=\343\255{\275\342\215\356;\243\303\016\275\002G\306\275\337H\001\275\221\023\333=\376\201\205\2751\r.<v%\273\275`M\023=Z`\244\275M\274\001\275O\325\205<^\230\325=\203\201\334=\312U\006=\220k\210=3F\222\2753\314\262\275\022\213b\275\301h\210\275|\324O<M\022\243\275\243\030B\275\263d\031\274\014\350\215=\312 \035\275\363\214\315\2746\200\237\274\372\371*\272\301\265\332\273Ux\016\275y\\\213\274S!/\275b\305\022\275\242\323\250=t\336\014\274\t\270\234\273\327\364{\275\020R-=\256D\307;\037\023\217\275\364\005\017\275\206\030\332=\374C\221;\337>R<\301\225\331\275\017\355-=\005\030\272\271Iye\275f\000\020=\302\344\320=\212\316\250;\200\372k=v\223\303<$3\277=(\345\212=:1\t\273)\335\223=e\251\001\275t\203L=(C|\275M#\304\273d\266\235\275;\231\235=\002\372\367\274]\3636=\2445\312\275i\366S\273E\234\236=\337J\232=B\004\215\275\356\360\333\274K0\317=\257\\\330\275\346\220`;\316\342+\275\366\\\255=Z\n\014\275f*\256=]\030\234\273\200\010D=\247\204\330<\341\332\261=l\327\272\275\021\306\017\275\233C\245\2755\304\356; \033\025\274h3\224<I\3622\275\277\270\261;\210,\216=\036N\221\275\343\377|\274\212l\315=}t\300=\256\350\000=\232\006t\275\005z\017=\256\242\031\275\3018\201\275\3572\220\274\010\035 <\030\2663\275i\'\323=\213\374\231\275|t\350\273\250\207\353\273D\312\230\275{\220W\275\264d\337=w\301\255=`V\264;\267\020@\275\215a\321\275z6\010=\004\316\300\275{!\022\275\356\330S\275\206*\331\275\243\267\205=\366\022\315\275\0277\303\275@\310\002<\305\356c\275G\246\234\275\220\314o=\2378\317\275\341\201\313=\307\314b<-,\223\275\236\255\336=\301@\254=W`c=B\346\225\275\370\205x<$>\334=\260\251\234<\236\302\360\274\375N\320=H\324\207<!\201\227\2758(\247\275\224\213\223\275y\262n=\216g\234\273>\r\260\273\314 \276\275\341\027h=rA\254=Mb\314=^\234\026\275\002\340\276\275x\032\330\275\243\\j<p$\342<\021\003\332\275\305X]\271=\312\370\274\231\362$\273hK\267\275c\331\271<;mm<\326\005\326\275\340]\206\275\353\300C\275\334\320\236\275DR\r=\3639\241\275\350\216D\275Z\263\225=*\255\241\275\364`\244=vG\276\275y}\227=X\t\234=\211\360\256\275\027\240B\275*a\217=\337\200\326\275\351\361N\275\353\254\277=\036\333Z\275q\177\236\275\017\241\332=\t\230k=Yp\337=*\354\005\275\234\010\320\274\264\316\034<\366\276\263=t\352\253\274\003\237\266=m\321\203=\322\355\232\275\225\257\301=\375\t\275=\363\273\313\275\366\337\250=\260\200\316\275l\274F\275\032\254\034\275\235X\304\275i3\203=\306q\330<\246\320\023\275\252T\275=:\024g\274\330\244\354;\240q\204\275\020Y\222;\340(\016\275\002\036|\275\341\307.=H\332\236\274\014\313\310=\277\366\'<w5\013=`\317\310=\346Fe=\347\253\250\274\021~\031=\027\177\255=\243|<\274\034}\331\275\240}8=\303\377\305\275\224\314]=\035\275\255=\270\205\213\275\274\263\252=\230\312\177\275\350\314\247=\313\247\214\275\263\370\250\273U\001\001\274$\233T=w\254\\=\211e@<\240\370G=g\244\263\275:S]=\372\301\304\275\253n>\275&\264\325<\177\353\\\274\026\310\212=\234\001\204;KS\215\275\371\312u=\257\271\270;@\254L\275\207C\033\275w-I\274\2365\240\275S\277F=\367\273Z=W\222_\274:\232\315\275\207\0375=\313t\274=\277Z\225\275Yw\325=\353\315?=\1776\225<\303\t\266\2751\212\007=\2043\343\274\035\262\276<\036\325\316<v\372\032=\3417\206\2751]\277\274\253\377\262<\273L\327<~F\334\275:C\240\2757\343O=d\310\265\274>q\031=\206\364\240=C\\\300\275\314\374<=\265I \274\270\306\225\275\227\227\231\275\241\210\200<\207\324V=\363lq\275\214.Q\275\010T\262\275\247\375\214\275!\004_\275G\265\235\272y\r\021=\252\263\217\274\315\024,\275M.l=\r\024|\275\2471+=L\013\207\275E\317\207\275\003a\303<\247/)\275\250x>\275j\377 \275_l(=-93=\3109\227\275\301\222\314=\241%K\275~%\331\275\271`\346\274\177\225R<\025\216\021=\276\334`=T%\203=\274\270\225=\250\020|<?\311(=\034S3\274p\216\212\275\327\006t\275\360\243\326=\316`\324\274\303\272\211=ai\365\274\022\325\001\273N\312\241==\326\2459\207[\303\275\323b\205\275k\"\205\275\366\237A\275\245\206\330\275e\323\275\275\016\273\031<\337\321\366<x\222\272\275\347\355\234=4\010\311\275\215\021\333=\223\357I\275\246\252\300=H\332\320=\263\"\304=W\354\035=%\322\332=\200\213\320<\317\372\205=\250?\027=Q\354\315<T\352\037\274fG\270<\213\3416\275d\n\214\273\025\017[\275\203\3708<\374\221\252\275\2669\321=\307kY\275\006n\266\275\242\235a=\311\\\246=S\035\214=\376\232\221=\220\005\207=5!\240=\020\317\306\275\002\373\020\275\217\267\263=-\t\276\275\r\326\306<\355\327\202\274\375!|<VAR=\313z4\275\222\320^\275\001~\336\275AHh<\255\213\246\275\211\032V\275\221\034\262<\3205\202<\372W\322\275\215\375\224=H\335\014<\361\316\252\275\250\202\277\275\317\240\201\275p\016\225=\323\360\014=\207p\270=f`_\275\002\344z\274M\334\010\275q:m=\020\303\254=\235g\305=kD\307<\303\034\214\275\244\311\331=\261q\203<\333\020H=xA\200\275\020\360z=\324\333\251\275\371e\203=\244\245\002<\322#\204;\350d\222\275\267:\236\275\036D\206\275\312h\017=S\373\273\2751s\244\275\252\0000=\375\212\327<\3345\207\275\343\211\226\274Z}k=X\352\334<\007o\302=\330\227s\275pA\274;\237M\210\273\033\243\373\274\036J\r\274\016[\240\275\024w\210\274x\272\312<\227\256\220\274\004\314\225=\367\214\267=\223\021\263\275*\250Y\275\330^x\275%\304\261<R\220\371\274\334\322\277\275\'\224`\275@\013\272\275\225\036a<\305\350\300\2753\321\310\275\357\214W\274\335H\001=9r\307\275q\010\020=\262S\303=a,\204\275@\"\327\274U\'\262<\217\\\337\273\311\212\240\274\033P\331\275\026-[=\203+\334=\363\276\264=\2725\246=p\363\013\275\217\316\203=\247\027\253=\275\272\325=\333\364\307\275\326\320\234<\026\314\247<\225;m=E\272\200=\030\232\236\275\330\300\275\274\222J\331\2753\220\033<\002\035\300=c\366\222=/\237N\274\221\000L=\213p\332=\335j\003\275\201\262\244=\366\327.=i[`\275\232\277\334=i~\305<Z\360\323\274\263\273\r\274Q\010@=\246\222\267=\037\303V=\273~\260\275\345\014\254\275\275\340\326<m\3062=\254\374\335\275\230\001\273\275\362Q\364<\360\206\244\275\010\203\221=8\000\231=o\214\231=\304\220\300<!\367W\275\027\232\200<\271\026l\275\357P\024\275\t0\253\275!x\t\275\305\003\216\275(\027\261=2L\203=\370\375\235=\353\225\310;\006\212\220\274\002\365\343<\355R\207\275\224\240\251\275\354\201\207=\225T~<\347\242O<v\307\233;\317\217\353\274\342\376,=\201\356=\274P0\260;\362\265\314\275\374\327\021\2738\333\324\275\3203\017=\367\014\216=\232\3421\275\335\031\177\275\323 \305\275\037I\254=\255.\273\275:\326/<-U\254\275a\305\345<\025\335\352<\307\022\314\275jC\204\275\304\027\035\275<\"{\275z\204\257=\211\004\267=od,=\254\317\237:V\027\002=)\317q=A\017Q=>_[\273\203\225\335\275\013>\333\275A\013\330;!0\022=\255\013i=\002\320J=-\373\256=u0\245\275\255V\036;#H\210\2750=\301=\262p\257\275H\371\255\275\335\326\"\275v]\303=\311\254\026\275.^\307\273h\021\255=\210\004.\275\032\322\204\275\235\245\271<\332\003s<\242\214\223=\021\243\337\273\2531\376<z\252\335\275\232;2;\224\247\326=_\240\333\275nD\326\275\214\202\300\275\227\360z=Q5H\275Y\250\224=\345]o<\250$4;l\3039=\322\224\237=\026/j=c\212E=W\270\305\275X\017\n=:-\240<\230\252\001\275\002\013,=\354S0\275t\253\007=`\305\211<\361fx;\366\343\031\273\362\t\230<,\232\253\275\374`+<\034\316\233\275\016\350\313=\237!\233\2754G\364\274\350\302\234\275\344\332&\275u\362\307;\264<y=YP\274=\277\324\301=\311\264\337\274\341\201c\275&|\312<0\370\263=\253\263\233\275\263\237\236\275\201\027\324=N\226\367\271\225Mi= a\302<\217\230o=?\n\222=\256\235(\275\211\335\266\274\364\262\001=\251w\020\275\201\032\302=\375=\352<\256`\205=P\251\270=\256h~\274\312\361M\274\372\255\300=e\345{\275@\234L=\3364\246;\371\373\316\2757q\204\275\340\303\323<\325{\353<{\240E=!\347\302=+c#\275\3347\207\275\322H\275=\"\tz\275\376x;=&\360\326\275FA\216\275%Z\310=\336z\265\274`\302\003<>\322\326\275\020\356\236=Q\215\317\275Q\222a=\273\304\006=\026\rS;\033MM=\263\351\327\274@3\326=\365\374\311=\201j\203=U\352z\274\352=\353\274\373\357\242\275vm\";\325/\227=`T4\275\241[i=\014\0052<\250/B=,}\221=/\365\200=\344\247\326\275\036,\025=\270\0043=\353M\210\275h\372\365;\267lg\275\367\263|=Q\353\211=\305\266\000=\336\227\304=Z\002\025<\022KF=\031(\241<\311X\230=\257fL\275\365&U=\273\306\331\275\014\037V=}\315\205=\364\370\313=\341\032\201\274\010\t\320=\272s\007\275\322Q\230\273\2345\232=\304\0131=x\350\016\275\223jx=$\215\336=I\2673\275\3378b\272r\3407;\272\327\256\275-\t\023=\360\365\014=rw\213\275r\333\221=\205/\321=\354)\242\275\330jS\275\335\t\233=\377\211C=f\314A=\211\304I\275_J\021\275\373\030@\275\303X\330:y+\027=\330T\315=\336\337`=\234\007\262=\273\025\206\275{T\255\275\322\025\271\275~\214y=\355\005W\273D\265\301\274%\213\016\275\3300%\275o\"\375\274\267\034\215\274I\213\210=2j]\275\302\320e\274T\314\336=n\262\211=\237\376j\275\236\333\310=\264!\202\275\371D\365:\376\264\034=\016J\223=\270)\217=\032N\213=\313\325\246<aGG<\nb\207=\257\350\205\275\254tm<Z\233\211\275r8U\275\374\306\264<\220\361\245=\3177\332<\n:\345<\333[\367<PZA\275s\351o\275\004\007\211\275<~\323;7\010H\275\177|\020\274\251\326P\274o\341\242\275\037\321a=\232\273\205\275\335\270\234\274k\353\317\275\267p\203=\233\244k=\265S\004\275\214\013\220<\367\2645=d\026\304\275\362\337a\275\364>\225\275\256k\r=,\254\353\274\'\350\246\275\234\326Z=i6.=\\\313\332\275BLX=\376\201\310=\246n\304=\214\333\231<\375\241\034=\274~\205=q\251\235<\233&\223=\257\334\273\273\300;\276<\300\"\325=f\256\314<\320\233\027=,\236\254=\t\265\242=7\303Q\275\245\232n\274\250\214\222\275\226/\334\273\214\345z\275\332\237\250;\363id\270oi\207=\313A\222=\250Q+\274\335s\236\275\313\\\271\274s\231\314\275\005\242\334\275;\305!=\351\t\215=r\013\260\275\023\r\307<NP\224=\362\370\232\275\207]\203\275B\345\303\275\022\355Y\274\013n\222=\007\233H\275\013\241\313\275a\010\264=\273\360\225\275\262!h\275\252\303\335=\357\254\206=\321a\253\275zW\267=\024\222\330\274\220\226)=\025Y\203\275\207\226\212<\323E\272\275\317\016k\275\0268O<T\261\224=R\277\305\275\303\217\324\275\253. \274DT\267\275\366F\020=\320\030\025=\225\232\234<E\201\322\275\021\006\220\275\244\311\366<p\261\224=IQ\357<\013\225Y\275\261\353\010<\314\334\335<O\213\221=s\240\246=\377\230\220\274\277?\210=a\270\224<\002R\257=\375_=\274E\024\241=\360J\001\273\366\252\310=\255\365\306=\203 \231\274w\232\022\275\264\323\026\275S\263\272=^\307\023<Fu\263\275\215\241\240;\037P\264\274a\320\225=\372\307\240=\2363\021\274\265\220\241=\240M\256<\237\246\305\275\363kX=\367\352\037;\262\305\275=\226;6=\202A\277\275C\302F\275\222\244Z\275zrc\274\211\001\203=\0040\201=\213:@<\025\317V\275f\313\340\274\335\273\330=\245T\313\275\242b\240\275=\366\r<\035 \024=\222$\212\275\001\266\217<\373\"\241;Y\207K\275\313\315\271=\342\2227\275\350\254\232=\306\024\211\2759\275b\275U$\304\275\223\241\017=\340n\252=\266\215T\275@\027\022\275\013\245\223=\007k\204\275y\001K=\325!\306= \361K\273\026\346\302\275\204\345,<\227\025J=P\376\300=\343\325\212=\337\262\332=q[\274\274@\377\351<\246\313\303=3y\223\275>\\\377;vo\212<\256\241\335=+\274[\275\270\177\213\275\'\275*=\0000\017\275\322\036\201\275\021\353\302=\245\316{\275?\004\252=\264\320\010\274\244\3050<\370\363\231\275~\"\273=\002$\210\274\371\364\230\275\341I\261=S\2322\274\316\264\302=\002p\233=\327h\202\275\217\267\007\275R\306n\2757\367\333\275as\204=\231\307\273<\320\324\277\275\364!\201\275_\253\207=\311tn\275\321o\322\275\202n\263\275\034u,\275\222\276\246\275\220\3202\275\035\007c=\304;5<\257\301\226=\032\317\250=\030\364\275=M\264K\273\362\234\007\275\210P\224\275\253\334\306=H\233\326<\304\213\207<\317-\251\275L|l\275<\020\227=\354oY\275\266!\007\275\007\235\226=\326<\233=ny\335=\232T\270\275\3545\346<\305H\266\275n1\277\275^~\010\275KS-=Q`\254=\337\210a=\352\013\216\275\243+\260={\250\235=\332\2213\274<\024S=\005\000\315\275\246sr\275\373\336\306\275\277D\254\275~\221\307\275\241\301\216=\322\256\221\275\n\301\233=\257D^\275~\365?\275\276\3161;,dq=f_\304\274h\337R=W_R=Z\347\377<\0049#< \035\334\275\207\377I\272\253\"[=\024\353\323\275\303\213\236\274l\324\177=\372\313^\275\347\004b=\037\0235\275\324\n\022=\327\330\326=\347\262*=\371X\215=\271[\313<\014G!=\322\315\277=\342\323\276=\255L\224=\207\230\223=\362\225W=\345\033\272<P\235\037\275 \347\320=\332\024W=\360g\315\275\327S\266=&Z\324\275\256:<\2757<\204<\027\262\026\275\335\302\313<u\255\224=\225\270\212\274\310>V\274\330\367K=&\2416=\202\013\236\275L\216q=\305HY= O\206\274c\212\336\275G1\017\275\340x\302\275\365\203n=|\344\274=\236sn=g\002\345<\314\227B\275\007\211\302=\321\353\003=_b\2209\273\242m\275/\377\343\274F\037\036=^\207O\274\346Q\203\275\241\203\225\275O\036\222\275\215o\252<\322$\327=\341\032_\275\3640T=Zr\215<]\301\306\274\235\256\271=\030\0004;\276+]=\033{\332\275\256\327\254\275D\260B\275\274\322\257\273\253fe=(F\262\275\310\367\204=uZ\232\275\274A\261\271\022\035$\275\312*\262=\371!\207=y\t\267=\360\371\233=Y*\177= \274\276=)\211X\275\0002N\275wK\261<+\t\220\275\310\307\025\275\\z\341\273\243\n9=\226\326R=\264\272\247\275{\314\020=\223\346l\275\347\341 \273n\374-;\203\227\036=|q8\275n\207+\275\302t|\275GP\317=\336c\244\275,\364\207=\272\374\016\274;\177\235\275`y\317=(L\233=z\024\214\27403U\274\317G\204=d\301\376\274\362\221\334<}\262\266\275\312\355<=\233j\230=\003\\\274<\236\344\027=\t\270\034<:\345\224\275\317\311\213=r\356\234=\302\016\270\275\2534\214=>\204\317\275\342\361\344\274\267\325\020=\001\354\240\272y4\227<\374\261\311\275\025\"~\275\031O\243\275h\261\275\275\201\346\267\273j\204\335=D\204\177=\177\357y\275S\212\332=M\257W\274l\204\315\273\302\236\305\275\0332\203=z\310\323\275R\243\303\275\211\212\264\275\304F\370\274T\227\363\274\273\036\310=\353F\331\275\367\260r<\371[\302=x\004\033<\304\353\260=0\020]\275\266=\312=\007\225\360;L|\026=\324V\322\275\363\"Z\275\261_#;\356P\266\274\255\227m\275\236\326.=\376b\300<\205h\263\275\033F\000\274\351\200-=\261\037\200=&\023,=\272=\353\274\271 \217<\024{\357<\204\231\320=U\017\r\2753\030\221\275\361S\310\275\315\300\204\275D\317\236\275=1\252=\000\311\242=2{\021\275\014\216\203\275\0175R=y}$=O\025\'=\214\311v<%\2106=\341y\212\275!\3676\274\377t\330\275Z?8\275\006\221\302=\252~E=z\254\317\275\306G\210\275=+\316\275\264J\306=\350\363v\275\254\036\304\275\312j\237=\310\216\321=\261\231\332=\317\266]\275\223\357\331\275&\351C;\242Wz<y\322u\275\202\373#=\312@\221\274\003\222\301<5\313\315\275yy\300\275M\'\315\275zQ0<\"\252\313\275\363i\301<>\251\277\274\362\360W=\213\021\316\275y\301\231\275\337\204\204=\354\272\323\275\252\324\255=S\266\367\274\205\274r=\371\344\310=\247\t\316\275\360W\321\275\234\242:\274\332\305\000\273\231QF=0\274B\274\312\016\035<\025m\265=e\277\237=\251[\266\274?@\231=\316\000\"=I\341\326=\230U\206\273\255&4;z\213.\275FE`=P=7;\277\351\022\275p\200\227\275\020,\331=\233\277\201\275F\234\240\275\302U\037=\230\235w\275O[\336=.W\265\275u\010S=+\177\377<\307\232r\275\310\003\202=\343\313\247=~\316\r\275\\8\264\275V0==F\244 <z\231\264\274B$\203<\006\271\305\275\226\223Z=s\341\321\275\\\363\025\275\212\264\251<,:\273=tc1=\334{\266<P\321\252=\364\361\022\272\301(\232=\255cN\275\316h\244=\025\031a<\254$|\275\323\355E=\177\237\315\274\032\334\353\273\210\304\236\275\356\373\203=Y\260$\275TW\r\275\247\224\244\274\322\224V;\027\311\340\2745\322\327=O\"\343\274\204<\202=\336@\034=\017Q\260\275\242\026\304\275Z\245\231\275\376\017\276\274\340\206\"\274\354?\333=\255\370\335\275\256\244\323=\347\227\221\275\312\235\031=8EO\275\0262\226=\327\001\235=R\014\230\275\177\261\033<ty\222\275\234\345\213=\rA%\275[\024\324\275\201\340\302<\355\3131<-\202\224\275\346\242\233<\361<\331=e-q=\021\314\024<\371\265\317=\233_~=\203\272\220=\253\364\313\275[z^\274P(\204=\231\252\023=\2556\230\274\304\215\211=9n\274=p\307\334\273L \203\275\032`\230=r\213\364;\235Pu=gY\240=NV\023\275G\254\262\275`\\q\274~c,=[\367\336=\336 \221\272dqY\2757\2216=*\245\337\275z]\006\275\366\232\330\275\356\314\324=\340Y\242\274\022X\013\274\366\232T\275\'\265\240=\266\363\200=}.O\275\243\363\225=r\332\315\274Q\210\202\275\274\235I\275kD\247=\020\251\222=\036).=Q\2329=S\274\305=\275\010Y=T\224\206\275\266\3149;N\274\237=\246a\031\275?\270\240\274\367\225{=\330R\254\275\205j\215\275\020Z\232=\014G\315\275c\232E\275\021\032\203\274\346\022\317=\230\265\202\273]>i\275[\016\333<\362\370\260\274\230\221\246=\216F$=\370\230\215<\245\214\306=\235\322\246\275\337\n\222=\371dx\275r\003\337=\235\201\312\275\267\311\267<\327\211\232;\341\222N\275\335\311\317\274Q\000\245\275\303\025\276=\277\211^<Q\371\013\275\233i\267=\221\211\221<\247\325^=^\243L\275\362[\024=\260S\325=\316\'\273\275\253O\314\275\274\311\033\275Yj\235\274\224\340\202<\ri\361\271\001\323\253\274-\311\336\275^\2531\275\226a\312;y\004\224\274\031G\241<\256\362\235=\205\316\243\275/\306&=eH\212\2742tP<\357\3615\273cn\206\275Ih\232\273\272a\254<\237\203~\275\021\014\223=\350a\305\274\231\261\025=\257l*\275\205\373\247\275\342\244\334\275\274\362+=r\207V\274\345\246\206<W\316\336\274\230=\342;?H\324=\247\255\032\275\323r\341\274\235\323\274\274\305\214\205=\326\323\213=\027\355[=\257R\004\274T\236\300\275;>\336=Dw\227=\326\367\324=k\223&=s\254\250\275/1|=\276 \342\274\205p\265=2\365\240<5\225\303\275\240\255\261\275\350Z\335=\222\322\221\275\330\373\320<p\226_=\200\331\246=\251\350\223<\000\240r\275\354\026\214=\316t\301=\241\364\347<\311\300\250\273\000\363\002\275\026\336\305=\023\276\032\275_\341\255=\251\241\221=-\225\323=\342\0363=C\360\313;+E\331=\356F\210\274p6\301=\031\373\303\274\242\260a;$\346\217=\341\310\216\275@d\232=x\265\275\274w\264\242=l\"\201=_\324\0379\010\r\356<\037\275\000\275o]\276<B\326\307\274\370\020\342:G\210\327=ab\207=\023\316\351;\2742\260\2749)\321<-\232y=\262\001\235\275l_k\273\010/\203<c\n\\<C${=\260\034\317=\360\317\233\275}\212~=`\023\227\275\304\367\214=CoX\275\003.\270\275\360p\270:\276>\247=\364\254\330\275\332\340\201\2752\245<\274\275\034,\272\332v\226=Y\217\006\275\217y\'\274\322\212\336\275\305\241\270\274\202J\303<G\265\220\275~\361s\275T{\200\275]\273\023=\366\257\006=kt\277<\302\r\013=\245\323\273\275\2545\253\275\220.n=\365\240\377\274\264\037\200=\225\216\321\275\337^\362<\331\252e\275\375\254\314=1\370\232\275\372i\374<\370\241:=\346\302\334\275\t\310c=\315\223\227=T\026\352\274\033t\232\275\030\254\235\275\302+\332=\200\374\275=p\300+=v\374Y=G\326\221<Q\t\242=aZ\330=,;\206\274\353\217g<\330\360U<\314\321\252\275\336\033\247<\323\014Q\275\254\344\217;\343S\203=x\222\202\275\221$\025=K[\246<Y\024\231\275\2520G=\322\227\361<\037\340\330\275\341\217\256=U\3245\273\340O\237=\226d\263\275\302\322\276\275\327\001\302=\035rL;\336\001\271\274,\001\244\275\037\350\321\275\205G\005=+\365\021=hB\253;NI\013=\355\201\337=:\246\254=\355\016\213\275\\\360\'<\237\263\314=l\240\203\275\341\304\247\275\306\206\037=KC\313\275\\\360f\275\207.\277\2745p\234=SA\250=\337#\274=\210\302\316\274\230\237:\275\303\207h=\230%\271=\000v\210\275y\360\255\275\310\255\305\275\210a\373<\023\017\212\275k1\033\275\254\355\316\275\354\213\227\274-D\212\274\376{\316\274\267\267\314\275\010r\231<\2137\203\274\343\032!\273\266\031\246<\227\2579\273\236\016\220\275\t\206\325=\332\365Z=\346G\213=U\304_\275\214D\253=\375\316\250\275\352\216\241\275\245\020\275;\246\266w\275L\263.\275\232\026\207=\271\343\326=t\034w\274\r\202\266\275\263X\322\274\221?\221\275\323 \204=\363\376\004<$\r\024\275\310i\205=\007\231\317<\353\023\r\275\023\363\220\275\266\317\210\275s\351M\275y\263\232\275\217\257)\275#\303}\275p\021\223\275\020\024\241=\375\243\247=\340\372\263\275\366\232\236\274Z\237\242\274M\017\270=\210\006Y=\343\275\207\274\245\367\264\275\341y\260=U\331\311\272\3168_<1\325\305=\224\307\231=g\264\212<\274\273e=\226\341T=\355\033\335\275Q\257\203=\211$\223\275\014\261b\275\013\357\235\275y\035\001=K0\264\275?\207\337\274\2072\031\274\r9U<cq\257=\233R\214=#,\202=\302~\311=\356|\303=[3\267=\313\3105\274\254\373\023\275\346\357\326\275\025\013\001=S\305\220=3\362~\275\367i\227\274\361\276u\274V\275\323\275\213T5\275f\255\270=3\226\256\275\017\013\321=\316X\234=\374\007\235=\332}S=o\001\t\275\264n.\274\304%\322\274uO\263\274\262\0264=\265|\252;\264\2064\275\233M\302\275\225gR=\372M/<F\036\201\275\303\344\010\274\335a[\275\024\211)\275t\002\220\275J7\205<\230\037\275=\311\224\230\275\202U\247;\357\365\275=\207\316\255=\014\377\210\275d\222\033=\335\201\204=\227\215m\275\r\3668=\360\340\244=\027\2023\274\230R\315=v\035\323=\332\\\314\275\034\235\020=\017\316\326\275\264\235\307:z%\256\275\000V\276<B\024\274=\271f}=\275\266\225\274\236|\n=L@X=\207$\257\275g\313\263=\266`\334\275\200e\254<w\234\215=F\327\312\274/\265\244\275VJm=\264\276\270\275\027\301\206\275\227!\267=n\324b\275\203\345\302=\005V\326\275\213\0140=\237_h\275!\246\202=\234^\177\274\016=\205=_\014\226\275\312Wb\275\320ne<G\377\325;\212\377\261:\344\341\210\274\020\010\202\275\034F\010=\247\326\337<\362\317\000\275\355d\216\275\243Y\230\275P&\306\275\0148.<FA\324\274\237\370\016=\362\302~\275\207\014\227\275\037\216\327=\273\251R=$\022\262=\026\217\243;\345&%\275f\226m=l\"\010=@;\213=\222\010\321=\000\362\312\275\372)\311\274\326A\023\2754\216\305=\372\301\036\274\"\007\252=\030\n0=)\377\231=\022\263\260=\231\213@\274s\254\225<\036\266\356\274\025\215d;\002\254\250\2759\304\265\275\327\342@\273&\274\220=\307\250\315\275\020\224\336=\333\350\"=DK\245\274\304\035\250=p\236v=\203\274\315=\251\201%\275\024W\244<\214\366\000\275\217\233\211\275\370.\201\275q\370Y=\370g\026\275\220\263\362\274\354\336t=\237\017G\274\301\002\267\275\034G\360<\300*\362<\260\373\311\275bFz=`\231\231=Kn\r\275hp\222\274\374\025\332<\307gz\274-\370\325\275\277\247\031\275c\244U=\t\220z\2748$\275\275\325\213\323<\371\232\355<\246\210\327<\014\203\272=\300/\244=A\350\336\275\201\351G\275\347\344\363\274c\205\332\275X\267/\274\024\254\226=F\r\226\275\355\256m=t\3477\275%@\254=q\234\254=l\343\230\273\023\024e\272\360\323\322\275\017\325\303=\2662U\274\361\213\276=\rY\317;S\342\\\274j\361\010\274\366#\006=\207\037\021=\375\2568<W\0025\275\214\221^\275\240\262\227\275\206\025\334=\'\301t\2751I\250\275\323Qx\275y\306\220<k\310\234\275\036i\227=\310g\235\275@\271H=\357Ml\275\215\240\321=\217\334\231;\025\221\362\274@\365\035\275\0378\000=\376\000\217=X\265/=\375>p\275Y\334\274\275\361&*=Dv\206=fI9=\251J\215\275\214\034\233\274\032\233Z\274\323 \253=\354\016\371\272F\264U\275\230\210\301=\244\316\007\275\305D\320=\262\251\300=\332\214\241\275\034p\261=\304\225\223=u\213\226<\267)g=nB\004=\032\016\200=\365\035k</\323i\274\016\264\365;\326\367\313=\227m\266<B\335w\274\304n\001=\235\216\255\275\372C\214=wfT\275B\371f\275=\362\305\274gP\224=\310\336J\273\341\rV=x=V;\272\314\335=\325w\253<|\367\212\275\332\'<=\204DY\275\235_\323<\035\201d<\344\243\024\275\370\212/\275m#\263=\260)\320=\001\216\316=\226\253\307\275\230Ir\275<\247\263:I}t=\263\263\232\275\230\302\370\274\266\217\317\275\3627\325=\234\362\367\273\000m\200;\2176<=P\211\201=j\244\272\275\'h\316\274~u\310\275\332r\356;kL\353:\206[\017;\215\223\301=p\3723=\370\360\010=3*\313\275\250\210\357\272\307\336!=\244\211]=\300\323\333\275~\2430\275\320a`:\002\010\247=i\230\016\275\266\027\204\275\363\r\237=\3436\271=\306{\303=\264>B=Q\"j\274\333\020\023=\\\005\241\275\006]\021=\226J\277=\220\373*\275<b~\275zJ[\275\300\351.\27560\314\275\267\277\223<u_\335=\273\202\361< \034\265=|\211\330=T\324\262\275\231\216\375\273\235\177:={oe=\001\352\361\274\177\003(=S\373\025\275\023o\251=\220\272\220\274\347$Y\275v<\220=`P\270=^\255D\275\3462\205\275A\007\223<\2513-=\252\345\335\275\344\376\"=\243g\303\274w_|\275\265\347\225\275\244\037\241\275>\304c\275\245\031~\275\357\026\322=;\237\324\275\n+\267\275P?\322\275_4\201<\002\332\313=&\343\302=\232V\306=P\364T\275\\\317\244\275sz\236\275\366\300\227=2-\003\275\017\224\232=\317N\323\275R\027\t\275\345\207\251<O\223\232=k\372\274;;\321\315=\245%G=\314#\275\275\3578\200\275\013d\306\273\322\347\213=\312.\013=V\325\253\273\311\214\332\275\030\006.=\037\275\227\274j\312\223<\314Q\243=F8\246;\224\227\241=|\225\362;\'\002\251<\316\r\336=\257\250\240\275o~\205\275\247\332r=\335\\U<\013[\310=z\233\254=\347\022\214=\207\251\231\274\237\251\007=c\n9\275ql\253=\tq\243\274\217\344\311=\307\277\360<\034\206\263\275\227\037\227\274\032Y7\275q\032_\275\214\324\001\275\261\270?\275\231\350\271<\0308\000\274\027\014K\275\225\375\306\275\361\243\236=C\014\021=X\025\337=\204\237C=\325\335^=\314\322\317\275\307\016\252\275Y\224\250=l1D\275\344\372\331\275M\337\220\275|<>\275`\t\202<\205\375O\275\325u\222\275\350y\321\274s[p=(\224\304<\0371\234=\215$\315=\265V/\275h,\223\274]e\270\273\3007\260\274\237\207\003<C1^=\"x\371\274\000M\236=\217\367\330=3q\312=0@\201\2741\033q=\323\351\231\274\312\033\237<\244\013\316\274U\342E=\337\370\323=\205\006g=\252\346\210\275H\362\005=q5\310=\025.\264\2755\317\221=\234\311\204\275\216D9\275\351\321\221\274\227Q_\274\244\024\313\275\005\314l=I\305\242=\235i\223<$\211-\274\003\373`<B \270=\235\207\315=\256\331\021\275\337\353\212=\355\030j\275\211\324s\275T\335u\275\026u\304=s\014\261=\377\206\322<D@\215=\273&%\271\357%\310<}\353)\275\374\214\220\275\274\002\216\275\246\264\275\274O@F=&\356s\275\337\006\265\2758q\263\273\321\255\014\275\266\235\177\274*c*=\337,\254=\232d\327\273\253@\215\275\372\264\250=\261(\213<\344\252\210=\262\306+=!aP=\221\210\262\275\031\235G=k\271\000\275\034\224\277=\024\277\310=\033\254\030=x\362x\275\302/\t<\326\244c\275@\237\315=(\026\356<LHx=#&%<T\213\221\274DZ1\275S:\264\275\255Y\330\275=\244E\274\340\220\036=\374\304\205<i\027.\275\374\224F\275\361\254\335=\2559\333=^\211\237\275\201\r\241\275m\337\014<\360HR\275\223\266\322=%\334*\275\221\020\274\275$\014\211\275\2243-\273\007\302(\275\234\350\000=(\276\313= \232\242<p\204\250=\3633\343\274\320o\211=r@\020\273\320\036\237=\326\370e\275\003*\254\274\211M\r=#$,\275\030\rY=\327\313~\275Y6\272\275I:\305\2758\035\246\275\323R\215\275g\355Z\275S[\037=\360\327\213=u\223\335\275N\023\036\275,\211\255<\320&\301\2747\t\273=/\224\244\275\021\034\323\274l\320\277\275+W\236\272\271%\333\275\024y5\275 \211\241\275FM\307=\033>\007=8\2077=\341\206\311\275\177\251\324\275\3537\222\275\000\200f<\271\277\202=he\337\275\307\200\272=M\334\262=O\257\230;\320\341\304\275c\347\257=\r\340\221=\346\031\332;\223\322\276;q4\345<#|6\275\267\275\261\2753\260\'\275v\013\202\275|\335\244=\023\364\212\275\323\347\225<\2753:\274\305\034M\275\020\252\023=<OT;/s/=\223}\363\273\350\364\272\275h\314\214=\361\370n;\227\351|\272e;\327\275\321\341B\275{\026\002=\354\231\320=\337J\351\273\367\242W\275W\"\324<\320\277\021=\006\321\316=\2233[\275\332A\314==\273j=\313X\216\275\335\2508\275\307\241x\275\342<\225=\2154\245\275\277\\\037\275\324Z\257\275\270]\210\275A\005\236\272\277`\216=\307~u\275\326\241\242=\261\025\370\273\262\371\305\275\332h)\275\213f\240\275\232p\321=\002N\304=D.\227\275Hg\247\274\rG\010\275\226\254\214={\260\177=\262\321\335=8\322%<\007\217\224=\235t\275\275\341?\267\275\343h\222=\315\212\257\275\023\355>=\313\311+\275\340\342\221=\314\247\332\275\323A\263\275\\\372\t;m\255\307\275\220\237\010\275\321G\302\274\256\027\220\275-\341\322=~\234Y\275\n\237\307=0F^\275\324\337\303=\234+]\275\311I\243=t=\335\275\344}Y=\251\234\242\275\264\305\231=\001\272\325\275Lrx=w5\235=+\223!\275%\372\262<]\215\310=W\001`\274\275\363P\274\230\3648\275\326\'3\275\345.\252\275\235\361\203<#\264\276:\300\312\244\2757\313\266\275@\010\205=\366\003\020<<\005}=\276M\021=(\251-=\360\314\321<\331\332U\273\322\314\316=\tp\270=\034\336_\275\253\344\274\274\375\337\201\273\265\230\316=\222\036\276<\223I\247=\240\303\234=\'\276\230\275p\200\235\275oO\271\275\033\267\266\275\221U\220=\026\323N\275K9X\275\373\276\222=\023\023o=K\333\275;\000\251\313\275\263\345\016\273s\010\214\275H\014o=\313;\316=/\252\254=\034V\331<\007z%\275ZC\273\275N\227\177=\304C\272=\331N\270\275\214KS\275\353\237\213=m\013p=\347\312\246=x\002\017\275l\260\224\274>\204\330=[0\374;\342y\335=\004x\237\275]\016\240=\317\021\333\275\037=\222=WJZ\275\006Y\301=A\317U\275{\300J\275\227\263\276=\254\037\242=3\r =@xs<\020PR\275\267&o\275F[\017=IO|\275\231\273\314=\226\317\335;9\035\240\275\325N\237=^ 8\274\301l\251\275\356`0=\356@\214;\020\032\254\275\263\261\202<\266\264\361<\270\215\337=fj\314\272\367\'\315\275`;o=\300\220\r\275\202\346\206=\200W\273<\017\010\211\275%\207\310\273b\255a<\033ao=\335\003\246=x/m=u\331\240=\356\367\001\274\326\003\205\274\320f\346<\204\253\313\273n\025\230\275\022\372\346\274\037\360>\275\355\230\306=MI\240\275\022m\276\275\375\265U=l]C=\335\006\316=2w\307\275\037\036\362\273\\\276\224\275\301nX=\013\003v\275\023\210\210\272\337B\211\275\213:\264=Y\035`\275\372\310\256\275\215+x=v\361\311\275\001\265==\262\245\364<4)\333\275E\272[\274i\013\316\275!\264\'=\244\345\216<\274\306\235<H\225\350\274\214\231\016\275PR\215=jo\222\274X*\"\275Q\316\255=k\301\002\274\000\320\323\275\250\000\205\274M\3104=\005\347R=\001To<i+\274=\006\244\310\275y8\317\275\306kN\274]\225\335=\"\252\327\275\301\323\326\275\266\355\213=a\244\357<\232\371\376<\252f\325\274\035\335\006=`.E=\261\356\275=\345\006\010\275 `\255<\375\213\016\274\273x\221\275M\023\314=\360\241\277=\266\t\333\275o~\\=\367S?<WZQ\275H\2448<\377\330\255<~\340\270\275{\271\272\274&\362k=7R\366\273.j\204\274\001\352\205\275(*:=\317=\027\275\3328\032\275\364\001\321=P\244\266;L\323\306\275\250;\207\274]\024\207;Q}\022;\020(\300\274\316\223\222\275W\367\310<\0251a\275\013fs=\030\000\221\275\240!~\275\205r\304=\352\037\257=\262|\337=\3652\271\274\264\023\250=?%\257<`T,==\2628\275Oh\206\275\355*\200;\321\242\337\275Ki\304\274\032G\016=\305&\244\275\020!\267=3\230\205=^\305\262=\240\355\000\275\"{\332=\"\006\n<\246c\222=\232\225\314\273\001\344\033<\rO\006\275T\025\322=\273f\323=\033\215\t<\354D\"=e\005\221\275\302\031\335\275\005\323\217=Y\312\n\275$\202\247=Y\017\353\272\n\363`\273\327\t\233=\025\033\206\275\t\266\016=\23134=\303\312M=\210\323\314<7O}\274\264\224\036<v!U\275\th\301\274\004\252\006=\351U\325\275\306B\242\274\203\"\301=\210\367\246=\250<\223\275\\\036\024\275\331y.=\355\341E<\273\020k\274\005\256\243=0J\325<\267@\303=.\360\215=\275hL<\032\241\301=,\204]\275b\036==\307\350\246=\263\262\212=\261\246j\275\224\246y\275\247f\324=\212\263\233=\370\216\272=jWH\275`cm=\326l =<\276\277\275\\\000\241=\037\'\235<!\251Y=\031\314\003<\244\360\323=\273\217\233=XGq\275s\337\257\275\026\377\023\275\2172\217\275\270\257\244\274;^Q\2713t\256<\330\355-\274\351.)=\232\223\333\275\352J\257\275\357\006h\275j3\261\275\215\346.\275U\276<<\2330\205=%\252\254\275o7\206\275(\"\375\274\232\373\032\2740\270`\275\022\356\222\275|\350\022=\021\0210=\220\330\330\275\2461!\275\327\001\246=$)7</\230\327\274J:\316\274CXn\275\\\032\277\275{\223\235<\337~\007=\333\002\213<\301\010\223\275\247\264\344<\3578\270\275\222\267\014=\345e\315<\216\177T\275\310\215\000=:\200\207\275Z\345\377:Y\217\332\273\345\021E=gO\r\274\251s\226\275\300\243\303<\255\351\244\273\374\354x=\264(\324\275\354L\201<_\"\357<[=H=\213+\253\273\240\207\r\275\334\305\275\275hu\253\275\031\221W<\252\275\213=;9?\275-\313\235\275\337\216\310\274\274\204\217<\374\345\247=\213%\271\275g[\300\275\370\273\\\2755\000\251\275\"\221\336\273y\371\252\271\300\006><`\005\301\275\206\304d=\235\361\224\274\271&\314\2739\330\244<\024K\305=S\023~=\263\311\267=>\315@=-8r=2\034\227=\215k\222<0\354D\275T_t=?\222\250\273\243\332h=\001\366\265=GH\267\275\232\361\241\275e\276\\\275x@W\275\032\220\277<\3542\372\273o%\230=%\033\336=G\234\335\275\002~\245=\246$F=\000\256_<\336<\021=+6\325\275V\252:=\256u\233<A[\343;ps\213=\004\025\006=zg&<j\200\325=\022\304}\274\254\210@\275\247\232;\275\323\311\212=\330\264\005<\257M\t\275\314p&=HC\252\275\021\353\303=\000~A=\360\n}\275\031\277W\275\202\205\331=\316\372\312\273\372\275H<\316V\222=$\320)\274\234\332\316\275w\303P\275I\323:=\360\362\274\275\337\205\327\274\323R{=\322+l=\030\336\370<q\355\244\275\035aC\275u\345G<\022e\225=\253\324\026<\003\026\312\275@_\332\274\004\372/\275\017\363\310<L\311G\274\325\340\227\275\324;\330=Mh\237= \241><\354La\275\334\302\231=\'\202\316\274\201 F\275d\250\263\275\315\0324\275\037\207\026\275\353\324\237\274l\301y\275W\337j<\332i\247;~\304\037=\360\336\236:\206\257\305=\366\"p=d>\257\274\360\177\273\273\t\034\304\2759\277<=\226\330\353<@\320\230\274\375:m=E\rm=(\233\025=,\347\240\274\266\2073<O\266\376\273\275\244\315\2740\245\305\274>:\214\274/\0360\275\247\336d=X\352s\275\220_T\275s06\275v`d<\230\236\232=\314\246\337<\347V\245\274\005\276\236=B~\265=0c\256\275x\177\230\274)\3601\275\006\206\337=\271\257\234\274\341(\233=&\246\023=!Gr\275 \347u=\014\370\004\275\302\364\257=\0322\324=\267\205\320=\353\323v=\254F\262=\332\300*\275\363\252f\275\362\245\206\275\330\"m\275\235\275\324\275\367\202N=P\264\322=\n\036\254\275R\303\223=\2217M\2736P\334\275jR\004\275\266\201\321\275\013\321\317=\236#\024\274;^\242=\223\2403\275\244A\253<\205X\353\274I\323\244=A\255\277\275\215>\221<\2466\272<e\203\261=\336%c=\002\277\032\2748\303\355\274\343uj\275\226M\260\274\251\377\227\274\240\230\305\275\331\257\255<\331\372\230\2753\244\263<\254Q\315\275\035\307\272<\237\301k=/\023\304\274\265s\266\275\207\253\375\274j\2018\275P\210\n\275\362\030\262\274\020O\217\275\0278\243\275\0243\327<G,\237=B\273\242<\256]\267=i\266=\274\377\233\027=\261~6\275\347\"C\275\337$\020;\306\221:\275UXW=\220\001\362<]G\004\275\023\020\235=-]X\275\001\374\334\275R\300Q\275c2\224\275b\266\224=\ri \275;\310\276=:\315\241=\374%\364<\276a\254==kS\274\033\005\230=\014|\240\2748\344\177\274\000\301:\275\210\326\331\2754c\315\273\246\004\323\275O\254L\275\035\277\217=\226Hd\275\354>\201\275\377\004\253\275\030P\277=\363\010\025<\205&\006\275\001&\303\274\273\227\003\275\337\224i\273\032\026m\275\366W\264\275^\367;\275\327\264\330<\342Y\273<;+\177\274\344\356\335=\177\256\331\274&V\277= $\307\275\304\033N\275\342s\212=Na\234\274\346j/=+\252L\275\255g\220\275\321\005\322\275e\273\251\275\016\350t\275\033\240U;^@\221\275dW\335=\251_\225\275\217\263U=\370\3662\275u\037\231<\201L\245\274w\036\267\275O\216\215<\205\tn=\233m\267;D\254\223=\024\"\223=\205\t\326=\216\240\035\275\275\242\010=\006\237\223<.\373\223=!\241\r\275\370\332\331<T\n\363\274\365\216\332=\310\326[\274\312~\243=\\\035t\275{\234\324\273\371j\324=B\222\036;\330\374o=)\201\201\275\300\002\211\275\032\243\177=\264\325\007\275 \004\306=\371\261\227<`=:\274<\027\221\275uC\223\273\321\342\212\274/\200\242=\034\206!=\26481\275%J}=D3?\275\343\231\303=\371~\327\275\3721\234\274S\003\354\272\006\327\006\274\330\355\247<\256[=\275\302\270P=B\206\336\2743\243\331\275\2668\021;*d_=l:S=:\204\271=(\363\334\275l\215\324\275C\211\301\275\000(\270<\366{\372\274X\257\202\275\211\330\207=\353v\260;\353D\316\275PP6\275\345\236\203\275\201H\253\275\\\356W==\261s\275\275D\274\275\321\">:\3232\320\275\217\007\203\2743\002\246\274\032\225Z\275\257\030\021\2757:\306\275;\000\305<\213\311\303\275\311V\023\275\035^\250=\205\227\322\275\n\032\'=\256\234L\275\3064\035=\271X\227;\3037\267=\203\270G\275\306X\241\275\347<\000= \3225\275\352~s=\361\027\337<\325]\004\275\323\364\262\274\214\342\311<\260\314|\275\225\357\200\275\0360\335==r\207\274\007\330\253\273\311[\221=\'\031\230\274\266\316\321\2757\231\\\274\3668\211\275?\010\332\273\321\333\257\274\375\214B\275\234\354\315\275\301\204\"\275\327\327\361\274\177\367\273=\277\217\214<h\361\253\275xp\324=`\204\334\274\253\376\266\275\0260\337=\276r\244\275\355M-\275\225\356Y=\330a\234=\271\034\276=B\004b=\357*_=R\317\203\275II\243=\260]l=$\365\232<\373\270\233=\246&f=\3426\267\275L*\232=\304E\313\275\003&\257<&tx\275\240o\277\272\236\225\032<\317\200\301\274\250\026\305=\315\017D<B\265\220=\3721n;aM\';ab\226\275\352\3038=O!\206\275_\022\246\275*\361_=\242^\271\275\006\277Y=\356\374\351;\243S\230\275M\262 =\337\331@=T\206\214\275\262i\273=\223\323\225\275\377x&\275y\036F=Yr\321\274\356\334\253\274\353\376\213\275\377\257\215=Jd\177= j\312=\305\255\207=\273\225t\275\022\221\317\275u\257}\275\020\273\323=\334\345\316=FU{\274\236e\273=]\031\343;\244\362\274=\323\346\025=\270;\340<w\216\253\274J\332\336=\355L\235<\215\265\241=\027\330\300=\356\272\367;l\226\n\275Sf\212\275c\274\013\274j}\037={gT=5\367);v\361P<\025\213\263<\032\343\310=\036h\247\273,!\232=\236,\331\275\351\321T<\027\370&\274S\327\321=\313\221,=B\024i=K\347\232<J\345D\274U\005\262\275T\310\254=5\036\253=L;\272\275n\236\267=\365w`\275\316\247\235=\210k\017\275;Z\342\274\243V\334\275\264\366\324\275\017|\324=\331\347\240\274\224\206\313=\001\327-\275D\214\250\275\355\264 =\254yw=G\262\223\275o(=={y\023=\023%\215=C\236\375\273|c\265==\204\245\275\t\267N=\255\005[=\223\246\273=;\372\006=\010J\241=\334Y\272\275*v\214\275\360R\023=\333\351\275\275\221\367V\274\355a\304<\261A\277\275\031]W\275\267\306\022=L%u:\320\306n=\270\221\305\275h\317\313\275\336^\263\275\t&\255=\305f\032\275\354\377F=\r\035\000\275@d\266=\206^\252\273C\371\255=\242\350\275\274\003M\231\275\333\204\310<\304@\204=\276\230}\275\256\352\207=\027\026\206=\370\004\276\275\231n_=\347\000\223\2757W\322=\317\224\323=\001\213\177=\210\334\031<Q&\207\275\005\010\326=NT,=\271q\312=\327\276\310=6\246\037\275\260\213\310\274%c\206=N\364t\275\226J\211\275\320\006\353<\232\333\223=m_\324\273\"8\344<M{\201=f\006B:5\031\204=\001\023H\275\036 \265\273o\320\204\275.\343\316\275\246\302\005\275\266\237\317\275\001\373\276=\266\t\310\275y\236\277<;\373J\275(wv=\004:\203;\253\214\345\274\340\323\003<U\275\035=\300\003\212<QaI\275\266R\330<\272\000\334<\306\r\335=\240|\213=\206y\241=\374W-\274\372\334\232\275\020\375\336=k\236?=\225\300\014\274\307H\342<\303\247)=\262\021i=\222\255\312=\267\203\267=l\200H<\313\242\033=\024\201\025=\251\356\020=\332\372\316=\004eP=\376\237\317\275\210\034\244\272\213\362\263=D#\310\274\034:\310\275\036;\226\274\257\002\323\274\020\344\306\275x\305v\275\364\221\265<\367S\'\274|\033\210\275\024MP=\226@\263\274\267\261\275\275\354V\007\275%*\320\275AU\307=\'\371\017<\034\275\267\275\224\'\223\275r\264\264=\365\371\036=\324\214e\274\352\304\301=s\2507\275\027B\333\275\371\017\352<D\3416=\027\266j\275.7\360\273h\033\321\272 \322\267\275\307\264w=\235o\256=\324\334\212:\301A\307<\221&N\275Pon\275\213\256\005=\214\2116=\237\2720\275]]V;\303\004\301\275\213j\242=}\375\220\274\254\274A=\250\026\317=\356\033\\=\300\200\273=\024\225\221<\233R\222\275\276O\336\275\261\233\230=\335\001\334\275\322\177\210\274\363\220\327\275\n`\346\274E\305?=\333|\235\275\201\224\303=\024\007x=\326m5<\211:\252=\034\026\240<\375\241\332=\033{\205\275\222\245\253=\356`>\274g\222\266=SQ\330=\213%\317=\222h\353\2748\204m=\334\234f\275R5\352<\021\001\266=\026\001\305\275\317\277\"\275\336\232\215=2}4<\200\364^=\243\032\251=Q\231\005\275it\275\275\267\303h\275\001]\032\2741T9=\254\372-\275\327\t\270<\002$q\274O\273\335\275JV\277\275x\306\257\275\200\354 ;-\030\241\272\025\245\206=\217\020\217= \023\260=?`\202\275a<t\275\246nu\275\002eU\275\376\026*<Y\323\210\275\230\257N=\313\370\216\275\202\235i\275\307^\217\274\031]\326\275\014q\264=\212\220J\275.,\\=F\362\231<\301\022\271<\n\203\220\274\303L\336=\371/\272\274\013\271\003=b\362\202\273dZh<\237\001[\275\276\223i=\217j\001\275\356\026\320\275\345.\326=\201HO=\226!\331=p6\330\274\013\034\245\274[\234W=\301\010\007=/Y\0359\215\272\244\275\'\306\247\275\377\221\235\275\334\3523\275\021\345\327\275\363\222r\275\031/\205\274^8\330\275(\3273=\353$\215\275\035\366\254\275\255Jo\273\332\n\236\274\377\326\312=&W\372;\274z\327\275\362\231r\275\213x\265\275?\251\364<\300s\322\273\232\266\210\275#[\243=\033\253h\275\235\216\230\275\3329\203\275\261\262\253=^\227B\275\207$\263\275\340El\274\006g\225\275\220\377\215\274\243\000\251=\nl\360\273\342\'5\275J\303T\275}Z\246=\367\301H\275N\3510\275WI\306\275\215\253U=\221\262L\275\345\023\224=HLy<)kx=\264\236\256=O_\222\275d\343\242=\212\273\277=]$\035\275\226\271\\\274\323\375\303=7G><@\003\003\275\000#\236=D=W={M+=R\033\222\275\n\026\307\275@H\250\275\304a\352\274\231\347\002\275\006\013h=\255LJ=\301\021\276=n\331l=\tC\233=\312\257\267\275\305\364b=P\276\255\275^\204\330:k^\\\275\335\037\313=\351 |<\326Y^\275\027o\212\275\301l\210\275C|p\275N\3330=\305]\260\275\3718t\275\\\362\317=\215\321\277=\336\245\277<\363\274\341<~\341x\275l\300\034;e\365\234\274L\002\205=!\200\253\275\302\0036\275\3329\000\274\253i*=\262j\250\275\304\300\235=\2571i\275\220\256\232=\013\342\262=`\3305\275Sn\360\274\330\205\301=\013\200\274=\301`\336\275[\t\302<\026c\373:.w:=\210\237P\275Wr\337\274\356\234@;\305I;\274\344\343\312\2746\375\312\275\272\250\376;\017}\005\275\361\354\310=\246>\232=ds\311\275\310\025\024=2\202\306\275\020\353_=\365.\345\274+\333\316=\373\330\272=\311\331\254=\245\227\267\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 64
          }
        }
        tensor_content: "\253R@>\303\177\235<\337\321F\275\374{\017>\343k\031\276\365\276\023>~<\213=\r\364\274<\267,!>\014\345\016=\202G\262=\177\201@>\250\360=>\304\300\305\274#\037\023>he\364<dI\323<;\3613>)=/\276\034w\230=.|\241=\270\211\255\275U\"j\275\266\320\331=\304\023s\275z.Y\276,\324*\276\341=>\275\330N\337=$\326.\276\240V$>W\302\t\276\034\270\007\275_:6\276\325\025T>\1776\341=:\344\017>\301\0363>\307\253\037>\020\222V=E\366_\275p\365\377<I/\026>\013Nb>\034E\341\274\361\310&\276\341\341\373\274\237\344\331\275R<\251\275\013\342\372=\342W\002>\346\242\310<\244\337\370=\027i\372=\"\326>>\230\3018\273\361\340\201\274\n34\275|hG>K\235\240=\340\225\004>\250\345;\276t\2712\276~\235`\276\330\002?\276\325=\213\275\226\227\021\275\333\213\t\276oC\253\274=3b=\316\202\361\274\211@\n\276g\273\n\276C\354\246;)\276\242;\304w\263<+\345&>~\232D\275\200\270&\276J\363\014\276k-D>\317\207\246\275\260\233+>_\000\371=\250\0204\276\200\306\034\275G\020W\276_\3564=\336\262H\276Hx\021>-\024\004=og\r=(^\003>\377\321+\276g\360[\276\367L\017\276\023\260\201\274\351\246:>\3438\260=a\236%>\3301<\276\366.y\275\007\354\003\276\026h\307\275\233L\037\276r\376d=\217\237\014\275\004\033S\276A;\326=\265\217\217;\212[f<\200\226\002=7q%\276\307Y\215= V\004>$r_>w\013\002>\rP\347=\245\363\007\275\013\340\343=\035\367\007>\322\316\324\275V\361\201\274\352S\206\274~,\365=H\004\360<\023\311.>\244\331:=/n\"\276\274k\220\275\340\037c=|\242\024=\365\'\213\273Nj\013=\364\314{\274\013\341O\275\\\306_>\013\353\003\2768\330\354\275\223\3577\276\t\226\025\276}}V\275\036\202\023>yD\335\274\016{l\274\332\212M>fu=\276\304\354\267\275\365bZ>3\t\022\276}\000\331\274\'y\036\276\352\3124\275\256I7>\221v\372\275\321\260\276\275\237A_>\"\203\024\276\306@P\276\033\262C>\347\215/>aR\035>\262\375.\276\024\372Q\275\273\350\273<4\004\'\276\257\341\001>z\206\250\275C\221\025>\207\274\362=\212G\371<\276:G\276\016\\\324\275bG\273\274\003\313\234=x\224K>\270\274\024>ir\351\275-I0\276O\235\376=(#}\275\252\201\363\275\364]N>\006\372\212=\325Y\255\274\306\355\367\275>\177\027\275\004\016\274\275\227Q\310<6q\032>\206\235\032>\013/\001\276\010 A\276I;\\>\342\341\030>\025+\024\276M\230 \276\2236\352\275\335\207C>45b=\370\274\017\276\020P.>\234\373Y\274oN>>l\361\372\275\227)[>q\231\326=e\020D\275E\252F\276\213\022*>\332\274\331\274\023\240\350\275\257\025^>1]V>&9\312=\265P@=\300\010\030\2767\350\205<\017\335\247\275\231#N>\300*D<K\324H\276\177\366\303=T\272d>\004\300-\276\026\360\014<\232Y\">\333\014\024\276\357lL>Q\352\260=\206\r3\276\016\321\r\276\2120\003\276\256\272\350\275\225N\031\276:\273@<I\017\266<\273\023\332=\231\200\202=[@\372=\311\212`=wA\343=9\361\351=\336\227\346\275\305\341\311\275\"\310\n>\376\367N\276\260\3211\276\260\304\007\275\374\213\316\275\274\357\340=\033\032\014>^i\0377\036Q\236\275\233R\226=X\313\371= i\305=-iN>\014|\026\276\335\001\223;6\304M>\3000N\276\344\323?>\007\027\321=*d-\274\224\304\353<?\300_\2767\316\335=\227<)>\032\274\372\273Z\301#\276\266\340A\276\004gX\276\253\335T>\327>3=%\336\003>\345\2068>\374\2522\276\313`6\275\335%\013\276\177y\316=\024]K\276\335\257\001>\320\326\022>\027\241\'\276\360\307D\276\241\325\016\276C\006U\276\222=\235<Y?\363=a\374\224<\363\003D>\241\301\377<\224\232S\276\331\326\231=n\347f=\177)J\276\234\2661\275\275\315|\275\241{\'\275\344\265)\276\222\344\317;\177t\027\275^\231\313=0{ >\010\212\236=\356gO>\201\277\336=\007\327\217\275\304\366\n\276a\030\002>\365\372H\2769b*\276\265P_\276\014\3308\276\3011\320=]n\206\275q\220\277\274L\327C>\002\035\237\275\334[!>\020\021G>^U\275<|\205\031\276\230\256\340\275Kb[>\r\260M>Ad\"=\363\346\\>\335e_\276d\361L\276\272\251M=\242\261a>\356C\032\276Y)(\274\247=X\276\223\254 >\342X\355\275\2128\037\276\245t)\276\360\325b>\321\367:\276\213_\247<\007*\003\276\021\312F\276\306\3036> \2053\275x\271\331\274\262^T\276|\342+>*2\343\275F`5\276[q\360=\366\311\327\275f\250\226<!i\035=\365\2001\276\324?\270\275\312>\030>\244\031I\276\'\177\254\275\337qH\275v\233\207=\355p7=\234\265\211=\300f\016\276\223|\300=H\355U\276M{.>\234`<\276|\324\320\275\233\331D=z(3>X\rL=:\214\362\275\337\363\247=\250\2516\273\367\307O>p\205\237=\250\025\316=\213\202\204\275~o\005\276_&\344\275 \300\222\275U\213\274\274\344\301\005\276)p\262<\'\361P\275\307`O\276IP\355<C\203\014\275\035\212\r\276`0\010\274\244:U>}\007_\276\026\376Z>lm/>\371\327-\274V;%>\204\316\367=xe%>&\324[\276=\251\250=\270Jj\275\254\216\341\275\254\350\211=\377\301S\276\207\235=\276\307aI=\21738>-\327\332=\362\362\204\274{85>\376\016\272<\347\367\232\275\001\276\030>031=\010\223E>\207\201N=\242P\204\274\340=\023\276RI\313=\331<\202\275\327i\017>\324\340V>\\\031\267<ml\370\275S\000\206=S\255e>\366\023\237\275\304u\267=2\255\364\275\277\371\035\276S\001\207=\276\023\235<V\204G>\245\014\302<\242(B>p \334\275\232P_\276\354\316Y>\360\254\215;\272P!>\271\330\313=#\243}=W\306\251\275\366\005\004\275\333)\201;\035.\211\275x\240\361=\350\266\031>\305\201]<k\267\003\276\374<a>\356\002\000\275\034\267\222\275\233c>>\007\251\340\275\237[\243=\335.<\276<\361\030\276\300\357Q>\035z7>\003Q\311\275\241A1>\216\265\237<\rLC>\"|\021>\371\214\353\274\323\333X\276\021\217J\275,\003\325=\277\021W\274;\025$\276\366\000\265\275\242]\250=\326\303\036\276\223\367\277=\006j\325=\223\320\274\272\376\360\272\274\200\030\357\274\313\242\230<\205\032n\273\014\000`\276\031J\201<z\305\010\27698>>\213\021\353\274}S\231\275\031\310\201=\032\267M=\007\021\013=\244\231\334=\022\326/\2763f@\276\255D\212=\353\027\213=lK\020\276\035_\226\275Y\021\216\275I20\276\260G<\276T\241F=\001/\003\275EC(\275bu\322=\214\035e\2768\227u<\364\3769\276\371?\033\276\262\\H\275\330g)>^\231\235=n0\024\276\001\265\342\275\035\002<\276\231\362;\274E\244B\275\344-\262\275\266\320L=\246D\024>u\352\207\275g9B>T\246\304\275\356me>9\375\315\275\241x\325\275\221\020\001\273n\317\343<\317$*>\372 O>\340M\036>K\\\200=\246\020\200=\215Q/\276J\023\001\276\361\357x\274\342E2><\036\202\275otQ<N\256\034>\013r\037\275\344\244\250\275x\207\320=\363\202\030>\214\352S\276\373\025b\275-\373d\276S\354\031>]\017 \276\t\306\'>/$\244\272@C\014>Q\272\227\275U\'>\275%#<>#\361@\275TY\263\275\234mA>x\301\004>\246\213?\276\241K\331=,\332W\276\024\236N>#\312z=W\252\352;pD\\>\roA>\241\246j\274O\2054>\335\362\200<\254i\231=\206]\333=\333kK\276?U\362=H\300\317=0M\341;\322\014\005\274Y\024\226\275\006\240;\275\031H/\276o\266#>\244g)>X4P\274NQ\n>\013\311!\276J}O=\263\3567>l2\263=\360\t\205\275\203\357\014\27680\304<\334\360O\276\267\006\237;70\222=\221\316z=\317\375Y>\032\354>\276\372q\030<Z)\016<\322\225\037=\235\353x\273\254\223V>\241\263`=\373\306@>\326\374\305\275P\202\016=LA\201=\372?w\275\2761\301\275\317\026\313=\235\205\345\274\304\323N\276\277}\375=\353\242b>\362\312V\276U\217`>6\\\333\274{\256+= 0L\276\321\020\016>tt\267=VB1\275\027zc<\203w\360<\263\261b=\245\264\256\274(\213\n>\367\325\227=\024\001\351<\016\'s=\304\365G=\305\206N\276k\303\350\275\227\372 >\364v\013\276\216\023\314\275O\212\262=I[\312\275\'\337\013\275\025\036\350\275\264\277B\276\246IY>b\r\344\275~\261p</\014\267=\303\326\001\276}\334\267\275\324\'?\276\027=\333<:\247!\276\247\2433\276.\213\246\275h\036\r><\271\303\275:\223\024\276k\336\333=\3120E\275p\335\224\275\235\214r=\355\035M=\177\377\034\276\000@Z>\276\330\347=\232>j\275\201\335]\276\247\272[\276-\272\"\276\351\263e\276\315\001\236\275\003L\034>l\026\002\275\276l\032>\270\225p\275\"o\273\275\303\000\352\274r\275Z\2751\207?\276iG\266=\351\270Y\276\354\033\003>\312w\366=\003T\221\275\203vr\273SX\027\274\346Td=\354\356\'>\311\0244\275\016i[\276l*\037\275&\253\005\2768\017Q\276\262\261X>j-\245=|\341{;O\211\340=\r==\276b\226\267=\361f\007\276e\204\'\276\234=+<\213\240)\276\027\266+>{\355\247\275\215 \026\276\201\026T\276\333\312\014=\341N*\276G\277<\276\377R\231\275\245\331\202<\371\276\001>\370\010\314\275\374\203\201<\026\027W>\213\240\352=Scb\275by\033\275!\227\234=\310uM\276\262\230\001\276\023\226]\276c&z=\023+\255=\241\016\310=5O\221=3\320\252\275\2368Y\276\362M\324=\023\332W>\275\261\003>\002\rA>W\327S\275ueG=\352\332\013\276\262_R\275#w\">\354\354+\276\251\370\025>\rY\t\276\374\032\"\276U\352\023\276\020\232R>\213B\301=hC,>\026\\\225=\243\024\264\275\020\365)\276\300K\032>e\363\014\276=\274\323;p\274\014>p\367\010>E\036^\276iu%\276\377\026\003\276\245\212\302<\332*0=\302=.\275X\340\005=D\"\335=]\023^\275\036q\n>\260\014\266=\251\255\304=\021\246\024\276\375P/>m\336\001\274\347\212Z\275\257\361\n>\0342\033\276\357\2063\276T\226\242<\330v\311\274\2411A\276\305\246<\275,\225\261;[nK\275\2310\033\276\177\250\307\275\310\2629\275!W[=c\224\004>G_U>\036\005\027\275,\014\344\275\334\207\233=\3149\031>\2568\233\275\014eK>\034WW>\361\261\351=0l\241\2759a\256=\251\037u=\221X\005\276\251]\224<a\317\001>(Z>=\2559\006\276\363\225`>\270\177B\276\361+\037\276Z[\367<\326\274-\276,\245\031\276u$\340=\351\320\237\273\311\010%\276\243\222\340\275r{.=\177\266\336\275\023\306\371=\nv\225=\203\001\340=\200\327\305\275\325\255\354=\306\302\002>\217k\036\276$\257\023\276uz\301\275d[\341=\003\327`>\r\261Y>f\242N>\007\374B\2769\201\375=\030\275\301\275\177f\365<^\201 >\217\342\351\275\005\237\023>\035\005Z\276\311\352,>\233\231\034\275w\r\213\275\336?@\276K\325\326\275\252\n\217\275J@\240=\010\005@=\376\3550\274\\jJ=\374t\260=N\036\345<\256\301P>\240(\270=2\306\355\274\235\361\223\275\322iJ>\363\273\374=Y\265$\276FMB>Q\3408\276\333d$>\257-F\274\026\201\344\275\266\242\310\275l\215k\274\025\241_\276\215\254M\276\033\376]>\240\214:\274\241A;\276\335\225\376=\024)\354=\016\310\024\276\367\202\027=)t\234\275\205\001\302<\324\230=>\324\025K\276\021y\230\275\353F\252\275\271c*>\212q\365=\330\000 \276\340\303\304=\361\242Q\2767kY>\323FV\276Y`\235=\200>m\275\033\3052>\276Ze\274I\265\377=Y2V\2763\212\231<8C\210\275*\212d\275{F\\>J\301G\276xs^>\227\023\030>\325\322\353=\031\330\350\274R\341r\275\004\346\026>J\266\256=\330\2706\276\031x\261\275\215z[\2768\032\020\276\271\310h<\375%U\276\177\004E\275\222\341:\276\206\3300\275\204\017\003\276!@`\276\200!\376=)\241e=\306\'\014\276\340\225m\275\016\335\332=\307\300!>\221i\014>8\004#\276\371\362,>\330h\013=Ml;>\315F >\\\005\246<\331\346d\275\310\013\230\275\034\005\344\274\367^\n\276\017\311\031\275\005\006\236=\321vX\276\2350\265<\3136\263\275\357o\361=\344J\033\276\333\344\'\276M\314&\276\330K\'>\300m >\225n/\2760\336\323=2\013`\276\243uQ>d\rf=\007mP>Y\177\225=a\224\036>\237,\325=2\241\027\276[\2263\274\265\3003>\312\357\307=\023u\304=\214hW\275\005\2572>{X\027\276\216\262(\276J.N=pB]>d\003\021=\361\200P>\363{\316\275\272M\004\276\205M\214=\373\362\207\274\237X(\275\367\340I>u\017(=\267\235\267\275E.\377=N\335>=\376j\334=g~\345\275\010\357H\276\300K\\\276\021!\025\2761\315z\275J^2\276\356\201\030\276i\034\016\276\366#\267<I*3\275Ac\236\275y\014\256\273`\375\340=\236<\221;\364\373\311=\\\227Z>\007\361\370\275\224/\210\275\rA\">\013\021\272;\361\361\305\272\243c\t>\202\244\000>\331\342<>\nn\376\275+\370\027\276\221\2321\276GO\026\2760\244\232=\373\341\310\275k#\351=r\202\355=\037\307\016>G\235\357=C\2122\276\227\366\302\275\t\223I>\324\336\003\276\341w\010\276>\217\326=\\x^\276a\3211\276\026R\237\275\2652`\276\273,\371\274\335wQ=\237.\333\275\206\265\206\275-eM=,mX\276\276\2642\276\375j\017\276\352\037\240\275[t\316=\361\222\005>\032\322N>2\246\356\275=I\007\276\343\266K\276\374\220\341=\017\020\376<\375\267%>b\206(\276\241\206\355\275J\225I<cC\031\276\340\226\334\275\271q\370\274\203\326W>\205\377\362\275\031\211\006>\030{O>\311\327E=\365F\245\275\300\"\305<;U\023\276@YI>\254\346\017>h\350\026<\335\250\244\275\272\200\356\275\206\333\275\274\343\036F>}\275\236=\243-e>yH\237<\265a,\276\200\352\323=\277#\234\273E=Y\274H\030\235\275\025\222C>\266P\001\276\310]\021\275A\2019\276\321`)>\363\362&\276fa9\276V\363\233=\267Y\027=\003\321X>\303p\030\276V\343\033\276a/\327=za\037>:\202\365\275$\225\345=\023\2765\2756|\321\275 \273\004\276~\002a\273\211\205\002>\345\037\010\276\037\016 >\235\361\230=\350r/\274\232\244\315\274\356\363F>9e\252=H\270N\274\001\374;\276\271T\361\275\2145\234\275\315\262\223\275\326\007Z>\014\3104\276\362a\037>c\312K\276\301\244\303=p\002\002\276\352\027\034=Fq=>\302\240\310\275\264:`>\363\273\t\274\351\324m=\306}`\276W\340\236=F\277L\276\256y?=Fy\002\276Gy\340\272\256\302G\275` \367\274\271\241\213\275\223\206J=\006\242\370\274\355g\377=\004\000G\276\306\273!\276e\354-\275b\312%=#(!\276\276\356j9,\017V>\305\010\020=\212@N\276\244\n\357\275\316\307+>\356|\022\276\211j\017\276}\220\363=\002\".=\017\326\266\275\212\345|\275n\332$=\21003<\352[\341\2756~0=\243\251r=\033\237\010>+9\243\275\274\370\324;\303\241\310\274\036\235\231=\304\327\246\275\274e0\276\351\221\032>\3139\326=\250\222\010>\334\n\271\275\034X\201=\224\215T\275~\354\024\276(\234^>\232\032J\276,\217\356\275\223?*>g\2745>\033\206V\276\371\317\037\276h~\221\275\246\323\022\276\002\\E>\347\303\032=O\200\366\275\252\006Z\276\221_\257=x\001C>W\331;>\256\326\205=5\223\200=yu\n>\275\216\\>4\233\274=\360m[\276\234\351\354=$&)>,.}\275\251\334\250;\316j\230\275iQ\215\275\242\027\027\275:\251\204=\200~Y>A3G=\343Oy\274\022\204\205<\036Y >\207\007I>\321\004\207\274_X\035>\360\211F\274\273\336L>\230L\311=V7\263<\242wH>L\034M>K\337I>\316\330e\275Fu:>D\336 >)\267\214=\000\2401\275\216|\014\276x\010(>C\020c>\335\307U;j\2461\276)\016\t=\035\000G>\351\005Z\275\014\242\022\276\016\202[\276w\214\263<I\365}\274Z\247\204<j\212m=\023\002f\274\247gK=\005}\234\275\275\313k\275\360, \276\325.\227=\200\224q\273C\227n\275\307\207\365=\301\'6\276Sqq=\324M\204\275\252\236\261=\035\177\246\275\013\310\014=\242\0257\276l\330\'\276\332\224_\276V\2674\276\340%I\276\372\201,> F,<m\3319\273\206\352\270\275W\370\376\275\305S\023\275+\271\320\275R\371Q>~\211\205\275\177\370\351\275\317\231\300<\265T\206\275\320\362\277\273\r\002\n:$\260<\276UM\014>\206\275M==\3016\276\315\210\002\276\325\2475\2769cM\276B\003Q\276\326\020\211<J83\274\021\343\345=K\333\001>\372\366;\276\n\362\031\276\270/O;\205\316\243=F\370\013>\215j\365\274\374@\224;<\341h\275\022\037\345\275y\202_\276\035q\017=4s\243=\257\347\224<t\031W\274\241\3111\2769\031E\276\340\313\036>}\272\216\272!\t/\275\242\325C>\277jb\276^O/\276\014=\332=\214\374W>\320\n\020=]\214$\275\242\244\005=\021T\222=\034=\267<\212[)>\246\341 <\003\236\334=Y;S>\3639\013>\354\254\020>4;\036>\221u\002>\036\274\010>x\262\032>\230\262\310=\336\204\334=\376\337\006\276\344\355T\276\\<\327\275\330-\256\275\351\241\362=\347\"f\275\231(\036>\242lB>+\254\277=\265\341\313\275wXd>\312\004\275=\256Q\342<\224\325P\276\253<\266<F\341\313<\273\204e>\363\301S\276\353\355<\276\230cM\276\017\302\316\275\331E{=>2\272=\344\036C\276\277\3521\276le\317\2759;\203=\020\370R>\304\277.>;/\037>\3141\033\275\020l\024\273\004fn<@n\206=\341 \303=\037#R\275u\216\350=@\006A\276\025\346h<{\331S>[\245h\274\rYJ\276\\\001\230\275\304f=\276\265\270\026>C\355\217\275\233P\010\276\302j\353=\245C\000>\322\002\373\274\224G;\276O\006\243=\244V\267<j\271+>\037\262c\276Nw)>d\031\023>0\335H\276\333\241\276=\335\375\373\272-#\371=\275\376!=\235!\220\273_\212T\276\313o3\276|\2639\276g\334T\275\366]\232<\225\376\271;-\243\'\276\014Z/>Rb\335=\n\t\362\275Z\030==\\u\321<.)\323=4\271\336:V\242 =\303F\236=\301S=>\336.%=\253\226C>\303\n\021>\225\"b>\244\205+\276\361g\264=]\212\252\275\037\241\230=\313\205\215\275\036\010W\276\201n\337=\177\327\274\275\001x\007\276\342r\\>+\207\222\275y#y\275\215w\005>\221\307\032=jd6\275V\013\007\276\t\220\021>\0378\374\274:x\373=\257H\336=\256\0372>\251d\\\276\244s\264\275_4\003>\202\007a>!\031T=\310\273`>\033/\252\275qV\341\275Iq\">E\322\013\276\\\260s=`<\331\275*\256\254=\006\031K\276c\201\240\275\0213H\275\325W\364\275:\3001>\020\365\344=\243\302D\276m\321\374=o\341H>\237\255\346=8@]>\\|\013>\346eH\275\236\224\275;\030\274\036\2752[O>d\243\350\275\356\233\035>\020\016\207\275\300\254\260=\272\t\207=\n\313V\276\367_%=+\372,>k\361\317=\311\265\303\275\360\246\n>H\t\026\275\010\277a\275\351\364\273<\'\2460\276NA\203\275\372QY\276Q\'I\276\r\363`\275x\366\003>Y\302\027>#\322\240;\264\267d><(\372\275mu3\276\034-(>\236\230\022\276?\316\031\276@CC\276C\353P=\226\036Y=\036?Z>MH\242<8|;\276\376\rD>\270\033\016=\030\023\001\274\203k\034\275\007M(>\202\325;>+\032\324\275\213\375;\275\351\003B\276\360Ke\276\300\020\327=\365B\371\275}\013\311=\357\377\n>\251\325^\276\323W-\275}3\366\275\243\024-\276_\316\205=\202p\036>#\212\030\276\310\271\251\275\234QH>\022!\371=\356JL\276\'\251\030\276\335G\016\276\317gA>\032Z!>\231_\265;-\221D\276\313\366\002=\346\017d\276b\343%=\220\317\036\275\371\030\035=\003d\370\274\240m\300;l\024T>M/\002>%~\346=\r\313\'\275F\0079\276|;\356=\036\326<\276\005G\313=3\362\204<Z\221V=\343\342\365=\271\342S\276N\3239\276\030\276]\276\000\005\n>\303\000\223<\364\365p\274o\237\373\275I9\036\276.nU=\016U\241=\360\024 \276\303KT\276\241\270\024>\210\2253>\263\033\r>6\361\017>\273\020\006\276\032y\223=\371;\n>\t0\252=^\032Z\276\033\227H\276\360\317\376\275\334\006c\276x\247\310=\217\262;>\371\035\016\276\343S\035\276\216\275\026>\326\227\372;`\225,>\242h\026>\020lb>\210\263\002\2762N!>\265\346\003\276\305<G<\r\020!\276\267\204&=*q\007>`BJ>\013KF>_\302d>3H*>D\330C\275\244:\013\275\271\n\'\276\031\373\334=\'Y=\276\024S\215\275;Re>\207\277%>3\275+\276.~\344=\001\370L>\216?D\276\207f0\276#u.\276\372H3>=\207Y\276\245\007\311=x\035\316\274\327}~\274\035\004\037\276N\365:>6\314+>\033\\<:\036\3144<d\215\326\275+\274-\275x\316d\275\007\202\305;2\023\333=n!~\275\246\360L\276\013\010\024>)\342\315\274\304\327\036\276\236\313\010<\372.\367\2750\373\000\276\225\231\252<\351>\014\275MB8>\314\317\232=*\035h;k\016i\275\036\003\310=\260\211\177\274\246\273Z\276)\024L>g%\257=/\356\024=\211\236o\275rG\006>{;\024>84\352=v\330\310\275\311*;=\235\026\005>L!\001>\263\033\223\273\255\275>\276\276\000->\346n\341<x\031U>N\366\341\2750Q\025>\020\3060\276\206\237\002>F\"\327\275S\345-\275K\220\312=pn=>\007\326\333\275\260\250*\276p\325\336\275\352Z`>\224\235\026\275\337\317\372\273\341\353z\275z\003\314\273\231\371->\211\327\320\274\343&\035>U\214>>\356\265\220=\337z\024>\025 \226=\002\204q\275Z\220[\275i\266,\276\202\221\'\275 \223W>\372b\222=\260W\342\275\310\266\027=\356\306\033\276t\347\261\275\243\3328>\274iD>T\242R=&\377W>\341\302\213=Z\246\367=\265\223\n\276W@\026\276\010d\203<\367\'\253\273\021\226M\276\245aS>\227w\203\274\313\345%>=\241,;-\014>=\031b\321=\347\001<\276\3571\243=(;7>\n\346\361\275\301h\352\275\316\214_\276^\370$\276\263IR>\321\336\256\275\202|$\276\317>%>6\004W\276\2705\004\276\232A\027>\321\316H>\320\336;\276Z\331\251=\354\365\021\274\262\271\212\275\242\2705\2763\370\010>\206\337T\275V\"\336\275\373e_\276\264*H=T\374\031\276)3\233=6\262\346\275-\033H\276K\306\361=\224\353\323<\025\036\242\275\305\371\341\275\206\276>\276\234y=\276\3616\243=\325\352\\\274\026\321\303\275\302\370\000>u\310\\=\232\024\314\275\216\356Y=\306\345\202\275\223\300\363\275B6\027\276\'\247\">\2448N>Oe`>\352\201a\276\000\216\374;\357\327\233=\177?7\276]Z$\276\177\316\033>\215\r+>\327t4\275)\301\237<r\274Q>\034k\314=L\250n\2741m@\276\221E\020\276q\345?\276u7\247=\365\211d\275\227H\276\275\275t\276\275,\343[\276>\372G\274Hu\354\275\016\032\347\275\350\253\251<7\222\325\274]\032A>\352\350&>\260*\345\273\222\016\250=.p\024\276gx\200\275\3674\010>;\367L\2760\317\266=\"\\Q\276-\237\332=\224)\017\275\027\377\234\273ko\304=vp\032>\007@:>\225\346\t=\024\026\211\275\244\325\241\275\371\311T\276 O^>\n\013I> \320\331<\245\350\037\276$\004X>\03713\276\254\333\301\275\326\211->@\002\205=\325e\324<\256\2264>1Jc\276\307\003\354<\032\035%\276\236\030\033\275\363\314\340\275\356\0061>\374\007\266\275\262\212\025\276\364\216\321=\255\360\024==\301\007\275CU\005>\t\337\342=a\367`\276\246u\'\275\t\312\247\275\263.Y\276=\2257>\271\357]\275\021YO>Ke2>\345QR>;\026\004\275\273;\025\275\365\225\205=\373Xu\274\013\316\360=\032\005T\276\276\222\302\275\330)_\276\311-\037\276\033\007_\272i\007\003=\027\360\313\275\355\007\365\2755\270\205\275+E\302\274\304R\266<PzO>\272\3526\274\334w\262=\005KG\276\267\223>\276\367Ng=\310\274\024\276A\260<>\016\347 >\210m\271=z\212\346\274_\327\034\276\3602\t\2763\035\022>-a\360\274h\264\360\2759\247\342=T=\330\274!-\204\274\271#\217\275\007\301\242\275I\337*\275cx!\274\235\346&>\332\336\224\274\247\313S\275\032u&>6Y]\276\271\277$=I;\244\275\252\346I\276\'\007\030\275f\322\013\276+%Z=\337\256->\371>\251<C\n,>\240 K=\267\2725\276\232\025\013>\006\220k=\242\3527>\250!z=\247\341\007\276\356Yy=\036\273R=\313M\376\275H\322\217<\207\355\000>\243\360\345=\332R\337\275]CJ>bJ\231=YS\003>\023\376\335<s\211%\276/\"\032\276\203v\337<\262]\\=(\265C\275\213\242c\276\034g\311\274.\357N>\247j\354\275\3178\031>\242\351X;}\324\246\275*\3069\276\242\221X>3kc\276\360\335b\276\275\242K=\351\030=\276]\262\r:\"\214\036\276\276\255\336=\226j\n>K\203\004\276\261\374\"\274:\010\205=9OY\276\"\250\320\275\273\217\325=\362\304\327\273|\230\3719\224\264\375<\332aa\276p)\373\275\357U\244;\"`#\276J\234@=f`N>\312E\207=\315\203V\276\n\013B>\243\257D\2769\027\266<\302\215\322\273\177\266B=\024\320*>n`\277=\302Z >V\007\244=\351\037P\276\267+G>=\026\212=*\262\244<\006\nI>\207\271\234<\231\002:>+0b>B\366\370=*\227\316\275\310\2265>\304>\351=\032:\353=\270w\260=1\260-\276\004\223B\276 =8\275\020\253*>\307Y&\276\202u\026\276\212\3717\274\257j\241=,\214;\276q\252\337<\340s+\276-\235\253\275X \014>\262!\336\275\341gJ>2\272\374=\333\350\366=\256<<>\355\374w=bZI\2769M\350=<9I\276i\327\302=[\255\031\2763K*>\t\210\256=h\345!>\321\227)\276\253_%\275\356\212$:\335\024\240\275j\351\035>#\364i\274\241-\365\275\205\313\341\274C\344\351=^h\024\276\275\377G>K\013\274=\360\322\301\275\327h+>x)]>\3349\321=~IS>\242oC>4\326\242=\004\014\024\276Ct\310=\243*\220<Oy*\276\231S%\276K~\312=\360\276[>\303\214+>V[*>\241HB>\213\254\306\275\252\2209\276\227\236Y;(\310<\275\377\3629>\266c\273\275R\007\246\275\255x\357=\217\270\374\275\300I\315\275Y\366\361\275\323\251\221\2741\350\244\2758\224\245<^\221\032\276\334\263d\276\\\360\255=Y\0237=(R5\275\333\033<\274\271\010\023\276;$,\276~>h=\035\271\023\276\321q8>\374\r\333=,\254%\276+\324+\276\335\304z=\022\247\207\275\321\226\223\275\267\274.>\017\244\361<\350\360$>md\364\273\251T\355=\333\311\367\275\334\332\036\275\033[\031\276=\036\222\275\362hH>\215s\263\275\310\270\022>\026\230e\276>[\201=\306\273P\276\031\207^=F\272\221=\002%{\275\014}\036\276\213\210\272=\227\037\302<&\036\250;\233g\010\276\373\263\013\275}\244\224<\031\360\027\276\237\005,\276\033\357\304=<\254\037\276\234\352`\276\227^/\276\326\276<\276\334V\007>\246\266.>\371O\302\275\360\215\n>\245]B>%\307c\275!\305\263\275\267D\265\272\rn\000>\0330\256\275&\345D>\240T\024\2769i\254\275$\010\236\274t&;;HRQ\276\307\334\005\274\245&B\276L\216\371<\346\216.>\204R(>\001H\016\2760\243H\276&\232\302\275H\311e<gQE>P4C\276b\265U>b\240U\276B]\006\276.f.>\234Ib>\214\201\355\275\216\326\217\274\274\007\365\275\206\361\233=yQU=\347\230\222\275\01089\2760\362d\275\005\265\254=><\001\276R\025\023\276r\360 \276\236\034U\276\344\306\031>9d\235=\230\035\035>\242m\275\275\246\316V<1\"\335\275`=\344\275N\203\316=\227L\212=3\353\231=\317>Y\276-\217\233=M\315D\275\221\257\265\275\036W3\276\357:\324\274D\217\222\275D\3270>\363\0348>\345\2553\276O\326@\276|\\Q\27562\035\275\301L-\276\362\375M>e5->j\233\017\276eN&\274\270\037\031\275\325\200<>7\010\361\274\253<\211\274\252W\375\275\004\223\'\274\213\253<=\374\372\031=\374Mb=ty\"\274\233/I\276\267x\303<\250z9\276\014\342\363=\312i-=\355\337\036\276\305\022\305\273\2461F>\363\370p=_FD>\275u\026\275(\033\"=-\310\013=S\346\037\276?\3311\276n\276\320=\364J\357;\330\231D>\016\322C>\231DX>\323@\323=V\'\341\275|\241\220=\307j:\276\263\204\274=`\010\033\276\027./>\3446\202=@QA>9\037\325\274\211R\233<\255My\275\007a\334\275\227\251\323<~\252\010\274\177\3660>\324\244\220<\244,\022\276\312\005\013>\366\324b\2762\036P>\rn\323\275\225pY\275\320E\025\274\\\225\001\276\313\371\n\276L\016\361;k\242\203=\304X\233\2736LP\276\355\216\223\275\345&\206\275qT&\275K\224A\276\364\026\300=\337\347\013=6\322\224;G\315\301=\277\3328>\231X\377\275\250\252=>%\353\215<!\244\254\2750\327\240=}+\337=\246\340\002\275\225\334\355=n\014\017>\266$=\275\335\032A\2761S\'\276\031\233\034>\031%\204\275\001\021\035\275\372nJ>\224\2007\276\253\314\204=\3318\031\276\345\246\021>y\265\n\276\266\035}<\203\300`\276\270\336?\276\3322\323=\241\267Z>nYs\275i\033\\>\021\374\302=\341W\254\272\330\3475\276M\203\002\274\001cV\276$\323\024>\204\230S>\367\207d\276\376\272\263=\013\364L\276\"\253\247=Z|)>5&\206<\021YB>\261Re>%<\366=F^\252=\211\221b>\273}\340\2750\230\271\275\265\302\006>\242\224\376=\263G\261\275,\304>>\003]1\276\310\260+>6\r!\276\245\244\355\275\262\353\364\275y9\026\275\314P]\276\233\"S>\357\205\210\275\200|\270\275\347!\035\276c\256\276\2758\260\026\275\037/Z>\336\311\234\275\204\260\205\275\004]\026\276\014:\271\275\3350\351\275\246\'\026\275\\cT\276Y\025b>\220\205T=\231&\326=\233l>>\325\313\002\276\274G8\276\317rc\276\213\303\355=\204V9>\266\027S\276\241\327\365\275_!\"\276>\371Y>U\272J>\323\207\023>\021e\332=\203l\017\275\002b\337\274tV\270\274W\030\'\276U\031>=\023\nB>\352\252\357\275\325\341\336\275\222\355\226\275\204\271L\276`\006\206\275I\334r\275l{_=\276\006a\276\013\013N\276\200)\344=/\251\220\275\207:\t>\324\225Y\276\361\031Y\275\001\204\315\275?5\252=\025\271\363=\006QC>\376,\275\275\363\202@>>F\335=\250\312\203\275\377U\301<\224\037N\276\003\034\223\275\270`&\276B\364T\276r\031\370\272\300x\027>\254\001>\276\211.\210;.$\024\276L\356\'>\350\014-\276\341\004X\276_q#\276*\303\036\276`\275\312\275\244\177\210\275\222\335\261\273\0231.\276\271E\353\275\267.\356=\344?\245\275\366M\321\275\037\271\322\275b\374\375\275\270:9\276\316\327\026\276VY1\276 _1>2\333\261\275U4\223\275\010u\t\276m]\314=\253*\020=.\254(>\n5y\275l\256\020\276\n\317\355<\332D/>\027\246\366\275\202\351\031\276\022\224\324\274\301*\220=\345P\253<K\260`>Zy\t\276\n^\200\275$\323\312=rk1\275V\201\257=f\360\275\271\336\"\275=\371\020\007\276\032\003\314\272fNr=\007EF>p>\236\275fHM>\255\315\327\274\207\203q=\343\202\320=\226\'\264:Vx\351\275\245M\361=\271\037\300\275\262\323]\275{\272I>h\323=\276\031\\\303\275\305\232/=\3444\257<\245\374\003\276\035\360*=\341\234\274=\214w`;E\250\375\275\307d\313=a\377\351=\337\322\014\276L\300\002\275V\320\211\275R\3148>\'EQ=\250\267\265\2741`f\275d*<>\177\252\302\274\030\262\037>\276j\023\276j\016y=\326\302/>\204\344E>\322\241)\276\030\330P=\253s\302\275\350\303\033=\014LI>\016\264\014\276\303-\330\274\352\255\253=j\302|=\245\002-\276z0N>uwv\275\205\3264\276\317\3255>\327\216\267\274\006\210\311\275\365\326\354=F\367`=N\201\241\275Cx\007\275\025<7<l\354O>\317=\020\276\\o\032\276y\347\214\275\242y\025\276\373\214\317=\320 B\276\234\260!\276u\210C\275|\002F>iR;=\2436W\276>\302\215=T%\014>\030G2\276\006 \341=\270@;>i\274S\276~\205e>\211;\244\275}\2703\276c\201\021=\272\016\253=\267g\005\276P\347\246\275s\006\311=\3768\035>\312\034B\276{\214\326\275\272;\251\275`xb\276\034n\003\276\263>^\275\007\001\233=\223\250Q=\247\037;>\341$\222=q}\202=\024\3164\276\356\020\030\275\336~\342=\217o\347\274M\"]\2755\207\260=\003~\002=\020\3451<uAY\276\261\265\260\275r\311\007>\367k6>\362z\'\2760\200\010=\266v\201=x\302&\276\315\230\251=\374G1>\206|\017>I\204>>\234\367]\276\007\030A\276\007T.=\240aD\2761\257\355=\330\266\240\274\335\317D>\307\330`>\267\312\332=W\317\036>G\346\n>\255T)>\310L\271\275*\2464\276Y\326\323=,g\224\275\357u\020>\352\257@>\255\372\354=\200#\031\276\360K\275=i$\340\274\346Ot:#UD\276F\316\324=\2019\244=\243\372\343=\020\333[\276D\227P\275B\263M=!\355\323=\364\366&\2768\372\242\273\353\242\217=h\307\013\276-h;\276\240\200V>\275t9>\343\037\352\275b\302+<\022;\"\275\302\236,\276\221s\361\2755x\270=\\}\261=u\2078>\r[\003\276K\3729>\257.\202\275\331(\372<; \255\274X\344\016>zH\371=\220\021\023\276\301lG>\"\322\305\275\241f\013>A\264?>\240\220*>8%\\\276\320!\230\275]\333a\276\226\265R>\234$\373<\240\336\326\274\247\2748\276%>\253\275\367\366\310=MLP>~\005\026>_\033\333=\324\023\031>\017\001Q\276\377\351\242=\376\323\n>x\315\256<~\270\217\274\037\234;>\201\210\016\276V\363G\275\372rT>\370\351[\274\277\351a\276\220\010->^\343P\276\247\362\341\274./Z\275\205\331H\276\322\334G:\363w\260\274\352\364\237=b\002\234\275\250\242\013<[,p=6~(\275\306;\260\275\220&\341<e\353\n>$\205!\275=\021K>\2603\214=\022\376\001\276\374H\n>}\210\034>\303\215\032\2760 \270\275\261\311>\276`\247A>\033\327Y>\267\350A>[\275\026\276\257\201\275=)\361\030\275^\3750<m\246,=,}\316\275\006?Z\275D\270\005\275\251rB>\322\312\021\274R\004\262\275<\214A<\240\334\272\275\230K3>\246\030p\273\365m*\276\336\020\330\275c\001-\276\322\214\230\272\210:\033>\005\354\234=\363\336\271\275\234\263}\275k\303\267\274\223\224@\276 \177\016=\326l\203=*\221\'>6C\315\2758.\026\276\260\026\237\275J<\025\276\215\335\267<nV\316\275\021\310\305\275\323\340\353={\333c\275\350\032K>\245\362\005>\333d\001>\2174\361\275QU\321\275)0&>b\032S\275\356\365\017=\265\225&>\326P\357=i\330\032\276\317\301\345;\221*==\247\204\003>\257}Y>S\210\240\272\314p\244<\224\300\236\275\225\357\031\276\007\342\306=\370\017h\272\261\256(>\372\310l=#vO\276\207\2355>TLH\275\357b\270\275\354\232\342\275?\240->oV+\275\342\201n<n\356\030>.\322\322=I\006,\275\3779\375\275\351\2103>\010\332k\274\212F\">\236#U\276\250\347\261=\277\226\246\274Q\264\322=\177P\376\274\206a4>,\004N;\035:\256=Gh\022;\321\002 \276\221\032J\276\351[Y<=\217\024>5\267\002>\254TG\275y^\324\275\3740\030>\340\030e>\241\365.>\025\203E\275\t\273D\276\246B\335\275\003\210S=0\2326>\031Y]\2763\333\017\276\327\270F>\177\226\320\275,\217\337=\220zU\274z\346,\276I\331\261=\362\0309>\007A#\276Dh\036=\254S\016=\311\355\021\275\201F\352=apx\2755\276\007=\267\n\367\275\003\010\026\276\353\240w\275\316k\274\275\242=\001\276\222\330\256\275*\341\256=\005U\035=S\321S\276\357\026\271\275A\270d\276\3152p<\363\276Y\276\342Rc\275\324\'\250<\255\315\220=\220\314\034>\016\317%\276\0167\373\275\333R*=j_\023\275\256\206[\276\351f\263<\005\314\016\276\'`Y>tuK\276\027\355\233\2744\177\233\274\"\025\002>.=\220\274\221\236\001;\371xZ\276,?.>\224\214\356\275\273o\375\275[\270\033\276\225\034d>\276\022\023\276m\257@>y-\033\276\260\300\027\275@\372I>\340\025\003\276\235\240*>\363\346\262=\261\330L\276\205\235Z\275^\360\276\274\265\033\216\275s\006\016>Q^<\276\217\353T>\234\213F>\3622\000\276j\363\003>9\254b\276\303x\347=gJ\370\275\356\211\013\276\256\256G\276D\222\242\275\026\363\327\275\204\374+\276\027\333W\2745\260 \275b\345>\276,^@\275h\344\314=T&J\276\r\320m=\266\271\030>\315\215\304\275D\206\230=&\250a>V\200P=<\037T\276\200\002\000>\235BA>0w\346=\257\277\004\275\306\223*=sK\202=c[W\276\270a8>\216/5>\377\333\'>\214\210\304=B1\270\275\262\316T>>\354\373\275r0->\312\255\"\275\225&\225\275wU\225\275\325nP>ZV\315=\033\2166\276\361\313i=\"\203\340\275\316\330,\276x\004\023\276\236\326\031\276\254\227\230=>\3135\276GV\243=\204\177G>\030\251\250=\375\211P>m\375\254\274yO{\274\004\027\004\275T\321P>\374\207\251=\372V\303\275i\355E>\223\370@\276s\035\261\275\310\266\020\276\366\310U>d\331/>\236\310\375=\016\376_\274y\355\231\275\350\205U\276\357W\346\275;\202\027>\034<V\273\341\334#\276cG\324\275\214\277\000\276\300.&\276\203#\016=\374\370\270=\360\344\241\275\263\223\350\275W\224\240\275\210\221(>\327\202M\275\324\241F>\202\n\n>F\371*\276\243g4\276W\252\256\275\034o\351\275o\276\355<\221\257\024\275\206RI\2752X.>\307\354\305\274\207I\374\275\362(\001\2769\334\371<BIZ>\001\233)>S\270$>\352v\347=\377\374)\275\222OC\276\360\036\035\274\237\t\025\276\341{G\276H\327\373=\340\236L\276\316<\361\275\213#\301=\261\233W\276\311\236*\276\221\223\021\276r;0>\013\370\'>/\301-\276\323mJ>\324\272\207=\005\373#\276\036vH\276\014a~=\304\363\311=\3638;>8\3468>Eg)=\370o\203\274`\343#\275I\332\314\275a\221\303<\363\0241\276\354Q\r\276\370\222m\275\031\250_\276]\241\022\276\211\206\327=\227\216\257\2756\027\215=\217\325\023<\r\246K>\352A\276<\202\211\024\276\361?\025>$\241D>m\214\020<\261\343\337\274\274\255\331\275\340^A\276\232\226\303=\223>j=Y\341\006\276\333\232\202\2751O\340\273z\306->\264K.\276Q\357\253<\334\330 =\222\373\337=\342\211\030\275$\373\213\275H\342r\275\235\244J>\272\207[\274\370W\014<\335\016\237=a\3262>\311(a\276=>\264\275\033\333\032\276\250G.>\324~\014=\035H\227\275j\3120\274\225\342\006\276>\211\374\275\006\343.\276\255\344?>i\271(\276\201\230d\276\260P\257\274s\036\">\242\002\363\275\034\272N=\300\203\000>vt\345=dM4=\255\016\016\276\000\323\367\275\206\363T=IU\250\275?\342[\274A\022\276=\235\365.>ku?>\3432\035\276\212I\202=\270\320\005\276\3033?\274\331e\177=\216\376\010>\"\036*>\214t\020\276\272\013#\276m^\364\275\337\320U=\237\373\273\275\035X\025>\360m/>$\000F\274\371\270~\275\337\375\371\275\253\023\374\275\245\312\177\275$\377,>%\310\216=Y\314\006>;\352 >f\243?\276\216\332H>\342xQ\276\017\270\371\275!\242\367<}=<\276\312e\252=\230P\317\274\024y\017>\302\335\243\275\221\244\354\274\375\336\013\276/\242\335\275\004\374$\276\000\2372\276\274\203\035\276fQE=\234\355\224=rG\311\274\346\037\014\274\367=\205\275\350\331\255\275\211\355\035>pqE>v\365c\274\204\3671>\275\206\002\275P\374.>\256|\016>\353\225)=\277\t@\276\351E\361=\226\220\n>\214\003D\2761I\033>\rR&>8\225\353=S\026_\275c\326\t\275\261\026\263=\377\312\004>i)\376\275 \361\252=\374nZ\276\334\353;<\262\331\273=\242\366*>\210\227\026\275\360^\r>8\300]\275\010\244\275\2758\233 <\010P8\276\214GF\276\265`8=Q\300B=\007\3156\276\201Y(>\213\344\025>rR!>-\215\362=v\021\027=\267\303\211\275\273\307`\275j\355<\274\312\035W\276\310Y\005>\234\300\034>\355\354\241\275CB\303\274] \315\275\372\221\030>\217\220S\275\322{\376=\366.+>\364\245\255<\177a\301=\335\\\n\276\237B\205=\242\333\271=\217\335K>g\214\021>\214v*>\254\322\221=\323\362\263=\272\252c\275O\200\253;\333:W\276,\375\r;u\217\354=k8:\275\207\026~\275\034\211Q=\362\374\220\272<\260X\276\310j\276=\311?-\2768V\034\275\322^9\276\252\010!\276\213\206\371=aq\327\275\377\234\306=\260\232P\276\276h\371=+R\222=\032.?\276Q\345[=\272\213\013\275s\221\370=\310\332\003=g\277Z\276\005\010\267=\0204\241<\250xN\276\326Jd\275\243\024\'>B\215F>1\204\020\276\251\205\013>\013\022\026>\331@\">\276t\214\275\323c\030=|+\267<\"\275\002>\310q3>\233P\206\272I\013\227\273\020}o\275\352\313\233\275\221+\274=O\306\026<\365\207->\262Y\244\274Q9\030=\353\327\016>:\347)>\025\265\333<\\\234\021=\257\375\371=ro#\276\223\000\361=\327\270Q>\274\023\t\276\343\207\215\275\227\313?=\230.\327=\303\342\034>Te\016>7\034M>\323\352\375\273\371\0229>J2 >[\311\030\276\251w\260\274\244\331E\274I\365R>\361m\253\275\017\302\266<\236f`\276\356\263\010\275Q}\010\276:J\221\274\360\260\026\275n\335\203\275:\276\350=\224\215`\276\006\221\262<\023x\356=(@\367<\271-C\276[\235\220\275\013\237^\274\337\374Q\276\273L\003>\016\204I>N[H>\274\326\022\276-\271\026\276\024~\210\275;\215%>\317\334\272=XJ5>\2639\301\272\303{]\276\273\352;\2769\355\330=\345\235\341\2753\213\232\275\203\245\241<_p?=;\213\222=h\301O>H\302\320<\267T)\276 \314\t\276L>\244\275#~P\276\263\367\321=k\032\353=C\277\"\276\346\343X\276\036\036\337<\325\003\027\276$\304U\276\034\341\021\276\217\271>\2763\335$=V9}=_\265\315\275m\316\334\275?5\331\275D\211%>\303>i\275\363\315I>\303\001\005\276t?0\276\200\010R>\342\346\226=\364\234\r>]RW\276\331I\325;\310\352k<[\206?\275\203\340L>\256\250\007\276\356\204C>\361LC>m! \276\234GC\276\274:\016\275:\020\232=\226\253b=\023\2206\276\372S?\2767\367\002\276\n\227\023>\364\032S=\303w\257\275\007N\226=\374\260\325\275\006\002\'>n\205F\276)\232\010>\311Ya\276W\026H>?:\330\275\233\311\032\275\302\235\343<>y\000\276jG\037>\376LK>\225B5>\344\271w<\032\236c\275gkQ\276\3147F>T\017\024>{\013\202\275\345\302\315\275\252\351\023\276)M(\276\'sB>\364\273\241<5\032\250\273\350\031\031=\177\226\003\275\006@\234=\374bc>\002\023\305\273K\377\234=\246Z\273\275\037\331\366\274\357\277\200<hP[>9C;\276Q\025L\276\245,\222=\231\016\254\2750\373f\275\353\313\230\275\252\205Y>)0\233\275e\nU\276\207ln<d\300P\275\310@\204\274\035\355&\276<\022\327=\024\233\353=\355\026\366<\322\355:>\200\324\033\276\334\354\373\275\202zX;\360Pd\274\362P\204<G\033\016<>\2313<(K\216\274M\312\035=_\222\033>\234\003\353\275\251}8>\276\224:\276{\335F\276\350\236*>d\334\321\275\024z\254=\367s[\276\037\370\033\276Ki\024>\321]O\276\247n`\276]\230\244=\031\322B\275\305#\005\276\321\037\347\274\277\020\206<\346\201.>\362\217_>\342\317\236\275\226(?\276T!\212\274H1\013\274O\212k\275\234U\370\273\274\032]>\316\002\320=\013\2146=\2419<\276[\344#\275)\371\013=,\361\352=\360a.\275\304\221Q>\237\024A\276R\253\300\2753P3\276*aI\276oc>\275?\0201>A\232\264\275J\254\006<\243\222L>\227\204\372\275|\337\330=\371y\300<\217\241\307=\202\263\261\275O\322Z>\334\241a\276\233\254>>I)t=\335\267\317=(\205\033=\245\\4>\340`7>\352\315R>\331\337\331\275\356]\346\275\360lJ\276\266\327Y>y\245I\275\000!\023\276\323\210K\276c\347\276=(\232\023\275\235\017d>ME\227\275\342\264#\276\311\\\026>\365\230\241=\315c\363\275\322\352\'>\302U\304\275\273O\013\275\t\247<=5\004J>\376\351_:OY\265=\307W\251\274\360U*>\322B\205=\002\354L\276\324\032\004>\303w\334=\202R\327;S] >8\237^>F&\005\276\020,@\276\013\277O\275J\351c\276\226\t\355\275,\242\253=>.8=T$\025\275\365LJ\273?M\006\275\210\265T=\240\357\022>`\001E>\271P\307\274)\314\202\275\331)\370\274\236\357N\275\237\237 \276\272\334\007>\035\033\217\275\344\220\310\2753\025\217\275\265Jm=\t88>`\037#;w\000B>\000*\017\275\356&\025>1\265\017>Dy\010\276/2R>\r?\310\274\363a\371=&A/\275\205\234L=3\376S\276t\205E\274\324\343\200\275LzJ>\027\3004\276\271\262\371\275\307S\252\275~\353/>\000\264Y=\311\321D>\241\264\324=\274\223\010\276\032\035\240\274\317>7\276\335\320\233\275W\024h=\337j\r\276\311\306.;N\216\n>\377\235U>\030\373F\275\035D\266\275%\2277>\345\033X\275\034T\353<\236\337\016>\376v6>\257\274O\276q\226\207\273R\3074>\371\215[>\365\207\020\275\274\266\013\2763\326\r>D\342\010>\373\262\005\276\247$\301=A\233S>\316\244\354\2750n\031=y\210\024=\031\0077\276|\352\"\276.\3618>\236\220\220\275<\001\206\275\355\321>\276N\316\017>\347\027~\275@\034\311<[\327\305<o~\026>z\241\377\275\363\324\316\274S\361\022>ss$\276!{\236\275\250\203\027\275\0146\013<\356\333\253=\027\360\277\27509\021>\352uL>\240\230\024\276\257S\017\276\343\000\021\276\271\321^\276\217\177\005>\024))>\210\217D>\300B\372<L\313\004>\326\265f\274f\334\021>x\022%\276?\236\216\275\266&{\275L\005\322\275\203\306Y\276\'\366\355\275u\014\036\275\376\301w<@\3655\276\2153~=\004Q;>\022\rJ\274\014\272\352\275TJ1>\237\260\341\275\314\234G\276\362\207P=<\302\340\275*\214+>\000\023U\274ji,>\357\221,>\0046\013>\346\341\017<\207\034\224\273\013\232\017>\025\326d\276A\3316>Td\"<\266\264\243\275\261dA<\207\372#=.\027\007=\333v\306\275\323\211\252=w\226+<"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.21650634706
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.21650634706
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 39
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 64
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 49
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  op: "Div"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  op: "Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub"
  op: "Sub"
  input: "avg/AssignMovingAvg/sub/x"
  input: "avg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/mul"
  op: "Mul"
  input: "avg/AssignMovingAvg/sub_1"
  input: "avg/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg"
  op: "AssignSub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "avg/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "avg"
  op: "NoOp"
  input: "^avg/AssignMovingAvg"
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/mean"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "control_dependency"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  input: "^avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  op: "Neg"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_2"
  op: "HistogramSummary"
  input: "HistogramSummary_2/tag"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_3"
  op: "HistogramSummary"
  input: "HistogramSummary_3/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_1/pack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/Rank"
  op: "Rank"
  input: "global_norm_1/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_1/range"
  op: "Range"
  input: "global_norm_1/range/start"
  input: "global_norm_1/Rank"
  input: "global_norm_1/range/delta"
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/pack"
  input: "global_norm_1/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_4/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_4"
  op: "HistogramSummary"
  input: "HistogramSummary_4/tag"
  input: "global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_5/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_5"
  op: "HistogramSummary"
  input: "HistogramSummary_5/tag"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_6/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_6"
  op: "HistogramSummary"
  input: "HistogramSummary_6/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_2/pack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/Rank"
  op: "Rank"
  input: "global_norm_2/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_2/range"
  op: "Range"
  input: "global_norm_2/range/start"
  input: "global_norm_2/Rank"
  input: "global_norm_2/range/delta"
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/pack"
  input: "global_norm_2/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_7/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_7"
  op: "HistogramSummary"
  input: "HistogramSummary_7/tag"
  input: "global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_8/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_8"
  op: "HistogramSummary"
  input: "HistogramSummary_8/tag"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_9/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_9"
  op: "HistogramSummary"
  input: "HistogramSummary_9/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_3/pack"
  op: "Pack"
  input: "global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/Rank"
  op: "Rank"
  input: "global_norm_3/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_3/range"
  op: "Range"
  input: "global_norm_3/range/start"
  input: "global_norm_3/Rank"
  input: "global_norm_3/range/delta"
}
node {
  name: "global_norm_3/Sum"
  op: "Sum"
  input: "global_norm_3/pack"
  input: "global_norm_3/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_3/mul"
  op: "Mul"
  input: "global_norm_3/Sum"
  input: "global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/global_norm"
  op: "Sqrt"
  input: "global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_10/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_10"
  op: "HistogramSummary"
  input: "HistogramSummary_10/tag"
  input: "global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_11/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_11"
  op: "HistogramSummary"
  input: "HistogramSummary_11/tag"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_12/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_12"
  op: "HistogramSummary"
  input: "HistogramSummary_12/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_4/pack"
  op: "Pack"
  input: "global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/Rank"
  op: "Rank"
  input: "global_norm_4/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_4/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_4/range"
  op: "Range"
  input: "global_norm_4/range/start"
  input: "global_norm_4/Rank"
  input: "global_norm_4/range/delta"
}
node {
  name: "global_norm_4/Sum"
  op: "Sum"
  input: "global_norm_4/pack"
  input: "global_norm_4/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_4/mul"
  op: "Mul"
  input: "global_norm_4/Sum"
  input: "global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/global_norm"
  op: "Sqrt"
  input: "global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_13/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_13"
  op: "HistogramSummary"
  input: "HistogramSummary_13/tag"
  input: "global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_14/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_14"
  op: "HistogramSummary"
  input: "HistogramSummary_14/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_15/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_15"
  op: "HistogramSummary"
  input: "HistogramSummary_15/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_5/pack"
  op: "Pack"
  input: "global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/Rank"
  op: "Rank"
  input: "global_norm_5/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_5/range"
  op: "Range"
  input: "global_norm_5/range/start"
  input: "global_norm_5/Rank"
  input: "global_norm_5/range/delta"
}
node {
  name: "global_norm_5/Sum"
  op: "Sum"
  input: "global_norm_5/pack"
  input: "global_norm_5/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_5/mul"
  op: "Mul"
  input: "global_norm_5/Sum"
  input: "global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/global_norm"
  op: "Sqrt"
  input: "global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_16/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_16"
  op: "HistogramSummary"
  input: "HistogramSummary_16/tag"
  input: "global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_17/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_17"
  op: "HistogramSummary"
  input: "HistogramSummary_17/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_18/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_18"
  op: "HistogramSummary"
  input: "HistogramSummary_18/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_6/pack"
  op: "Pack"
  input: "global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/Rank"
  op: "Rank"
  input: "global_norm_6/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_6/range"
  op: "Range"
  input: "global_norm_6/range/start"
  input: "global_norm_6/Rank"
  input: "global_norm_6/range/delta"
}
node {
  name: "global_norm_6/Sum"
  op: "Sum"
  input: "global_norm_6/pack"
  input: "global_norm_6/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_6/mul"
  op: "Mul"
  input: "global_norm_6/Sum"
  input: "global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/global_norm"
  op: "Sqrt"
  input: "global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_19/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_19"
  op: "HistogramSummary"
  input: "HistogramSummary_19/tag"
  input: "global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 448
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 448
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 448
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 448
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Loss is inf or nan"
    }
  }
}
node {
  name: "control_dependency_1"
  op: "Identity"
  input: "CheckNumerics"
  input: "^train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CheckNumerics"
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^control_dependency_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
}
versions {
  producer: 9
}
