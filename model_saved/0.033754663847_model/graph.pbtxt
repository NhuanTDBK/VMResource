node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 375
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 375
          }
          dim {
            size: 55
          }
        }
        tensor_content: "\246\364\343=\251\264\310\2746\361\351\275|,T=\377i\227=\347F\245=\263\204.\275{\'\204\275^\367\302\275\223~\266\274\206\342q=M\237m\274k\027\013\272\221\275\260=$\367V=\316W\215=\243}\277\275\332\220\236<\335H\330<M\246\306\275\326h\231=\010\304\325\275\307l\235\274|\321\363<\0136n=-\367N=\232\rl\275\235\342\255<\300@\255\274\222\034\304=\247)i\2750\360\264\274\025\377\272=\323\223\301<f\316\221=\372^\341\275O\246\231=~\224\274\275\324g\316\275\265\022Q\274\227r\255=J\245 \275g\302\272\275e}\027=\267\225\261=f\017\321\275\0131\356\275_a\326\275\371\036C\275}\212*\275\260\2425=\344|\234=\270\340S=nS\201<\255\275\223\275\037f\361\275\357\0105\275\265\013-<Q\313\304=\204x\335\275\255\250\247=\300T\304<\212Z\220=\356\355\332\275\274\032M<)\270\241=\320/\232\274w[\036=\354\300\320\275\033^\355<\313\270\241=U\2551=B\212j\275\320\256\267=)\256\022<\342E\267\275\303R\\=\243\\&\275`\276E\274!p@\275\'\014\007=\267\316j\275\326\210\035\273\253\273O\273\361\245P\275\303v\271<\035*#\275\032\007\307\275G\236\326\275\001,8\275\255Y\340\275\370X\301\273\013\306\327\275\245\201\240=<\362\366\274\346=\264\275\352E\035\274\332\361|\275\250\004U\275\\6L=\331\216\000=\3539\340=\200H\310=\376\352\324\275i3\254=\252h\327<\221\346\306\275\366\373\202\274\251\305-\274\376\320\014\275\020\ra<e\202\330=\325\006G=\020\362T\275\351\025-=\200\016\327\275\255\032\302\275\324\022\273\275\376\331\306\274\342R:\275ky4=\255\263\332=\\;\314\274\305\275\266\275P\002\320\274\341\356r=3/\247=R\251\024\275pcu\275\206\243\255=5\201\345=R.\010\273#Hl<Mb\271\275@\341Q=\001,\332\275\254\014\316\273k\010\220=\023,\002=K\300\017\275\210R\327=\003\262\222=\222o\341=\024q\334<\211\007\354=\245\271\306\275)S\357=\001/\264:\343e\315=\207\321\341<\352)c<`(e=\235`\240=\225]7=\201\277&<\226Z\206\275Q\344\002\275\310\0028\274\036\254\315=(\313G=*\221\236\275\033\256H<\030\032\332=j\000\263=0\231\255\275\203\250\223=\353\036)\275_<\301\275\244\376\274<\335\324\250\275\001\270\211\275\\-\340=\335\004%\275B\373\345\274\'\200\347\274n\252\247\274\325m\007=\243{\003\275MC\250=\256\313)=n\253\221\274\005\211\322=\271\366\353=\226\027p=(\353S=\321\301*\275R\270\206<\251o\201\275$\300\253\275=\366\270\275~+\272=\033\010\322\275*_\300\275%\n\240\274\211q_\275\002]\337\275\212V\227=\231[\230=\332j\242=\\h\322\273\237\270\233\274\234\251\334=\007\243\033\275\213\256\246=\254\030\360<\262\221Q=\376\314\305=9x\316=\336\354\234\275\371\356\340\2753\270\037=\224+\3329\302\342\340=/S\023=D\345\221=m\310\276=\262\006\317\275\267A\300\2759\356\260=0\302\301<\005\360\343=\317$n\275)<\333\275\260\305\240\275\362S\371\272\375\215\312\275G\026\222\275\375[\035=?\331\226<\217\003]<H\2070\274\367\002\337\275\271\246\267=\013\201\201<V\'\343\275\367I\352\275\373\264\n<\344}z=7\224\007=u\226\233\274`\213\t=\260\325\361=\236\2052\275\355\n\304\275\225\271\311\275.\326\245\275y\336\342<\360\331a\275_\302\265=\203\233\253=\315.3\275\244y\335=\031\n\200=\245\325\263\275\212I\001=\2526,=\314\265\305=0\004\231\275k\"\300\275\003\362\357\274\003W_=\232-\215\275\326\360\351=o\274\1779\032\205\347=\255\362\351=\267]K\275\2269\260<0\031\302=\233\207\n\275\036\317\350\275\266\362\301=a\242N\275\312\264\000=\026\357\246<%\003G=;\311\224==\373\253\275\261Q\033<3\014\367<J\376\245\2751\027\357:\023k\313\275\361\366H=\325w\211<\250\202\245\273T;>=\331\320\334=\333z\276\275\'\241\346=\340\241\r=wY\343\274E4/<\330c\201\275\275\303\347\275k\374\002\275\303\266C\275\366\366\266\275\003\024\337=Z\375S\2750\022\243=qmc\275\266\325|\275\353\231\236\275\025z\343==\020\021<\300)\202\275:r3\274\220q\223=\264\310\211\275\004[\310<\271\3357\274\246\024\252<\246\001\205\275\333j\260=\211\312\260=\343\357[\273\353\256^\275@\005\357\275\013,\037=v/(<\246\215\267\275Pm\244\274\017\033\336\275\240\261\251\275\367\213\323=O\304\013\275L\210\212<\212\0018\275\374\200\316=\025W\226\275.!+=\212\204\264=\224\216\266=\216\312\236=(r\335\275j\215\332\274.\300;\274e\277!\274\016p\346\275\254\323\270=p\335\247\275\034S\256\275|\351z\275\331\033\220\275\377\234\246\275\267\337\372<-\362\231=\346\362\216\275\000\020\302<D_\370<\320\243:<\210=\365;F\312\271\275\177\240\312\275\216\253\333=\312\026\222=\032\362]\275\366\030z=Z\354\213\275\233\356\"=\334\277\352=\037\255o<\364\001\334<\313\005~<\204_\334<\376\002\033;\005\326\256\274S\313[=\357\303L\275\016\224$=\262|[=e-4\275\244w\337\275\240 \022=g\264/=\360\315\206\275d\340\020\275E\214c=\230\321\033\275\365\344\204\2748\312\000\275T3c=\013\364\245=(\323\345\275\367V\330\274\032\225\264=i\344\344\274j\242\273=\253\241\246=\364V\235=\017Y<\275\352\201\275=\021\234\305\275\310\305\224\2756`\246=\315\312\370\274wP\234<\315\223\350\274M\217%\274\364K\364<\273i\250=\030\270\024<\232\335~=7\031\341=\014j\353\272\251\254\262\275\366o$\275\351\273\007\273`\321\201=\227dY\275>!\334=Oq\346\274\2649\357=\220J\250\275\362(\342=K\331\201=\2629G\275\014\026\030<b\006\236\275\216\025)==\236\r=h\203g=\270\035\333=\206W\270\275\327\010\322\275?\003\202\275m\201\264\275\0108\177\275}\351\253\275\203\273T\275\204\031w\275\022p\216\275\246\361\306=\\\374\301\275#\273\341=O.\356=\002\310\343<\244\230\235\273K\360\331\275D\300\225=i\207\333\275\321h\237\275%TR\275\027jZ=xX~<q\230M\275\314\316=:\327\270\226=\352\251\002\275\210j\006=\320\353\343=\336\357=\274\335:8=\333r\036\273\340^n<s\002\272\275\375\237\264=\207\005\225=\010y_=/\331a\275>\214\230\275\332:t\275JT\347=y0\350\273\373\322\370\274\344\220\217=\255\300\347=G\210\302\275\312\262\355\275\236\305\250=V|\263=C\250\250\275\031\030\216<\232$\346=\223\264\355=\335\361\021=\354&\240<M\353-=\223I-\274\203|\236;\261\342\240=\265h\n\275\323\355_\275^\3619\275\3030\234\275\272\025\315\275\201\006\335\273m\365\220\275\313\350\277<,\336;=\204\265\235\275\010\270\343=uC\301=\210K@=\364v[=B\270\215=\237`\341\275n\224t\275F\036\302\275~O\240=\004+\310\274v\007\t<\235\217:=\2150 <\004\270\317\274\352\312\030\274\226\332\013\275\000\377\010\275-\337\220\274\\\203\250=b\205A\275\272\303\356<\323\210\330=P\207/\275\"k\020=\250#\257\274\310\2276=\234\026\325\274\265c\337=}\033*<\257g\211=V\002\307=\360\313\002\275\264\333L<\362\250\205\275\235!*=\025e\334<\".\342=\265\032\004\2757\206\306;\021\243\313<\366R\331<\t\341\274=\327C9\275\251\300\242\274\243\370&\275\241;\300=\371K\267=\365\034U\275\315\215\331<\345@\315=\232e?=\237\017\233\275\260\316_<\357\371\301=L\373&=$\036\334=\237\0027<W\337\332=\204\314\023\275\273\244\310=(\275\243=[\276\305=\226N\311<_\265\331=\234\300\216=\321\271r<\274\243\033<\246\366\247\275\\\014\266=1~[=8\315\333;*\223\002=\340\335\371\274r\247\325\274z\202\336=g^~\275\242d\371\274u\374\313<M\310\311=\025\302l=J\326:\275\273\027\226=j\247\304\275\200\335\231=<\204\253\275\035\030\270\275\023\252\315\275&\177\t=\226ud\273\000\010\357\275p\340\255=\t*\252=6\327\255\275@e*=K\257\337=\305\371\302\275h\245\237\275j\274\355<\263\352\225=~\354\214\272\177\276$=\227I\327\275\301t\277=Z\204\344\275H\376v\275\200\031\310<,Z\252;\233\234\306<$dT<\313\326\350\275K\250\322\275\251&\223<9\235\276\275\250\252\255=\317\031h\274\014\203!\275\342\233i\273Q\311\327\275.\265,\275\177\246\241=\001\306\205=\347\367\235=\211\255\315=g\367\026\275\2513\211=_\007\024\275\322\003\224\275\366`\333\275\235\244\362<\241<\252\274\362\322\350=9\033\241=\227\334\006;B\374\000\275L\311]\275\231\336\342=\205Q\217\275\013Xf\275t]\315=\323\311\354=\317Q\355\275>\364#=\306z^\275P6\257\275\311v\316=\333f\273=T\"\357\275\252\307\217<\301*x<\330L\212=l\301\r\275u\273\273\275\327\201\200\275\213fU\275\376\344\245=\234M\022\275\352Yi=\022\371\305\275\371#\304\275n2\355=oa\267=\025\303G\274*\221M= T\320<e\313#\275R \257\275\017{\255\275i\235\232=Z@3\275\021\315\033\275E\204\322=(zS=\236\'\206=!\372\273\275\307\234\222\273Z\231\'\2752 )=\033\036\341<\206P\205\275\224\254\232=\221 =\274\007|\307=\004_\347<\362\177#=\222~]\274\204\320\365;\177]\033\275\017a\252\275u\247\315=R\204\213\275N\317\001\275\003q\265=\223\225\231\275[\271\360=Z\371\314\275\352cS=\237tC\275\234;\3029&\317\336=\353\205\t<\347j\204\275\357\366\263=\223\270e=\331\200\014=\344\000\025\274\3322\201=\005\371\342\273\202\'\335\274]\313\261=(Y\307=\177E\345;K\353\247\275\346\030G=\237\317\237=#n%\275\033E\325\275\331\302\266\275M\202\033=\310\376\342=\tcH<\270Sa=9d\036\275D\203\331\275&\237\277=\027\260\252\275\0218\031=\364\006\221\275\323v\205\275\202\266\331\274\210\315\265\275\240\310\232=\235\023\341\275\316\261\313\274W\036.\275\312v\337\274\347\301l\275\010\337\204\275f\247Q<I\206\205\275D\236!=\204\200\275\275o\315\033\275\351\324o=\2448l\274u\354\265<tz{\275\260d\256=\267QA\275rV=\274\376\361\222\275fM\366<\330\336\304<\2437\340<\362\233\336=%5\222<,\321\003\273s`t\274\224\321\315\275\322%\\<\226\342\361=t\244A=\350jq\275\273\227\336=!-\351=\362\347\210=\001?F\273$\236p\275\3024\243\274\242\221\310\273i\351\374<2v\335\275=\006\334\275\347\236\271\275-\\\017<\034\310\227\274`.\222=\033\310\333\275p\317\257=_+\341=w\027\355<\350\321I\275m\207\354=\001\210\031;\220\252\254\275]\t?<\256\236\314\275\010`\'<\231OH\273\014\323\335<z\341\234\274\324\350\330\275CtW=D\305\032\275\267\000V\275\260\312\277\274T3d\274\360\035\312\275\363#\252\274\000\301\371\271\323\376\323=\362:\327\275\200\227\307\275\265X\027\274\266\360\016\275\177\300\024=h}\210=i7\316\275\273S\366\274\204t\300=I:\251\275\034\317<\275\310p\301\275\302\252n\275\226\256\024=\366\035\306=(\245\032=m?\240\275\r\315\001<%\220\236=\2177\314\275ow\303=;\321\315\274T\265\246<9a\336\274\373\007\360\275V\362\227\275)\371|\275\302\243\264\274.\025f\275q\342\350=Bws\275\263^\223=XJ\300=Y\031\300=\235\300\216;3e\256\275_5\340<\030+\251=h\351\202=\310X\352\275\037\211\235=\336\340\342=\367u\322=^6\343=M)\333\275\244\363\240=\017[\000=\327\320\274=]\317O=\225\232\232\275O2\336\275\0342X\274\332)\273=\262\260\222\275\027\003\303=5H\333=\350\024\355=_\n\001=?\353.\274Z+\262=%P\305=nI\270=\204\210\234\275\270\370\277\275\266&x\275\020j\242\273yI(\274v\330G\274\355\024\337=M$\353\275(\350Z=]\246\257\275\034\230\230=\323\320\305\275[\353\024<t2\234\273\213\365\256=e\306\316\274O\375&\275nw)=<a\273=\017\'f\274\270\337\261\275\240\017\244\275e\337\246<,\212\303\275\3654\002\274\322\031\347=1Y!=A\2008\274\254\227\204=a4g\275\000g\350=\316e\273=T|\227\274}\300)\274r\376\354=\333o\333\275G\001\236\275\331\331{\275\302\244Y\274\203\201\203\275y~\255\275\352\363?=\023\272\265=\006_\344\275Jw\321; ?\317<\216\253\353\275\364V\310\275\014\234\325=\332\356q=\276\341\345\275\321\203!=\2127v<\363\351\315\272&\225\305<\346\367\310\274\273\260\252=\257\274\272\275\017\331\303\274\305\"\202\275}<s=\205\277F\275\367,g<K\361\025\275j\240r=\277\232\350=\323X\233<BIb=\262w\210\275,\203\275=\031\266\206<\027\271\n\275I\334\207\275\264O\246=<(\261=\317\200\256\275B\361(<\222J\205\275\214\335N=\363\r\350=\177\307R=\017\362\312=\372\234\232=\356\245C\274\263!\315\274\341\345[\275\375\365\244\273z\357\307=}\t\352;\223\261R;\r\221q=G\023\370<\366<6\275\306\2709=\026\343\322\275\366\351\260=\267\216\177=\306n>\274\341*\226<\245H\331\274?\031\366\274\313qc;\205\r\207=8\315:=aG\333\274\353\253\350\2749\024%=\230\234\272=\222]\332=\261\300\234\274\372\263\256\274\3439\034=\020\342\314\275\r\371i\274b\307\256\274,\264\341\274$\013\200\275\330J\020\275\220}\327=\022\374\355\274G\311K=\315M\234\274VW\303;\267\307\222\275\320\356%=\023g\000=\032\030\352\275\376\036Y\275\233\023\351;\221l\350=\322\374`=32\026\275\275:]\275\345\353T=\026\235\275=\366\331\300\275\331pM=\262\360\324\273\346\033\231\275\331e\217=\250D\270=r\365\221\275\030\276\336\275\2574h\272\004\001`=\326\347\202\274\024\366\216=\372\213\236;\256c\236\275\263\307\020\274\247\023\272\275\235\022\257\275\265H5\275\007\325K=DR\004<\276 x\275\231\234\025;\303]\264\275\234gr\275\201T\270\275\265\024\233=-\237\320\275|\310t=\034\016\246\274v\363\206=\206\322\301\275_\251\305=\\\372\253=\223\001\023\275\214\252\311\275\340\270\000=\362\036\272<\321\305\347=\366\367\333\27526\257\275\031\230]\275\350g\237\274\352\027\262\275A\332\022\275\002\356\214\275\002\030E=\257\236\256\275\273\342\257=Gh\270=<7\025\274I\370U;\007\324&;D\032\261<>\307\224\2751ci=\006\034w\275\313\346\310\275\0277\236=&!.=\221\037\257\274\225^\206\275\222\000,;\321\324\243\275_4\270\275\373\226\253\275\317\305\246\274\340s\253\275\377S\252\275\213\0216=\207\342\314=R\223\346<\215\031\343\275\271\025\235\275AvA=\364\037\341\275\000\355O=\242)\021=\374\244X\275r\241\30195-\336=\237\236\364\274\201\220\240\274\0376<=%\233z9\235\350\201=\"\267\241\275\272\004\321<\214\'!\275op\261=\325\375x=\261o\256\275\037\312\304=\345\3677<\261xR=F$\023;a\020\225= \212\356\275\0027\277;\301\261\016=\035\213`=|\322\253\274\317\301K=\2444\317\275O\007\223;a\335X=\177p\226\274\236x\340\270\rC\266\275\352\361z\275}\221\312\2753)\302=\303l\245= \000\210\273D\004\213=\300\242p\275N\342S\274\206\374\253\275\346\000c=h\305\336\275\016\030\244=\235\347\332<\235\205\263\275\267\212\360;\303\236\000=}J\207\275t\316\211\275\355+\242\275\232-v\274\257\032\t;H\306\254\274*6\016=@d,\2742\212x\275\034\324\205\275\\\311\006\275\247\315\014\275\306\307\202\274M]u=5\237<=\376\001\021=tX\232;t\021|:\362\251\205\275V\203\306\275\355\234\313\275\377X\266\275P\210F\274\021\222\203\275B\361C\275X\200\207\275\315\231\000=\265\240\302;\251\021=\275k\237\344=\026\225\265=E\220\252\275\330\225\230=\031=\275\275\334o\215\275J\"\302\274\n\037\335=,w\265\275e\345\372<r\030\177\275\274/D<\203>\224\275\344\342,=\303=\366\274i\265\344=I\210&=p\025\235\273\232i\356\273-\217v;l\221\333\274x\211\013\275-f[\274\0167\354<\313\313y<\243L]=:\211\345\275`\216\336\275\356\030\252=mD\220\274\331\006~<\360J\350=<\007\254\275\372\251\247\275\033\271|\275\034+)\275\303V\221=\360dy\275Y\3359\275\324\211m\275[\355\356\275\300U\313=6\252\204=\0176r\275Tj8=\000<\212\275D\301\321=!\235\017\275\021\206\263\275\230\336\352=\316\353\013\2754\223\243=\246\017\336\275s\027\352;\025*\230=\367\016\244<j\221\224\273\242\244\211<\244R\271=x\226\020<!Z\340=\322t\353=*\320\252\275\302}\005\275\201 \221\275D\236_\2757\343\201=6\031t\274f\206\351:\315\247\336\275J\020\215=D\324\353\275\236mE<\217\002\247\275p\351\343=\317\327\320=\325\032\333=\202\211\237\274\272\014\205\275\27662=\212\227\332\275\256\255\201\272\343<\255=\030\342;\2755\025\264\275\265\243\210\275\235=\306=U\303\033<gH4=]\215\310=nU\200\274\2049-<\t\376r\275g\253\221;\341w\343\275\016\262O\274\0005\022\274\032\375o=\240!\331<\002\313\221=\227,Q=\300\234\220=\0315\276=\217~\226\275q\245\264=\327\203\326\275\"\354\240\275\0063\035=\274^\343\275\317\363\033=\276\323\243;$8\264=X\256\333=ZM\"\274\031l\243=\230\274%\273\354\344\017<b\355T=\325\\\322\275R\213<\275~v\361\275\345<\350=\241\213j\275\006}d\275n\242\361\275=w\342=$w\230\275\253\306~\275|\177\262\275\306!\354\273DI\223<?\263\314\275\204\203\2668\316c;\274\'\225\356=}{\022\275:\000\316\275G\037_=![\217\275\231\337\225\275\370\215\310=\204\263\354=\307\031B<m\177\037=\214x\352\275\373\\\215=\177\023\260\275{<\331=\215>\336\274+\302|=\367\\\232=6`\265<\271\\m\274\237\220\246\275\224\366\340\275\367Z\257\274\257\\2=\2745\271\275\305\034\271=\200\204\273=!\272\245=\034\371|=\027\212\270=@\200\005=\204\305R<\245\025\323\275j\313w\275\355\217\252=V\004h\275oJ\202=O+\323=g\337\255=\311\232\266<95\240=9\016\344\275\332\314\334\275\3428\354=\323\330\340;\306\253\272\275X\022\304\275K\345R=\377e\332\275\231\371\025\273\000\212\345;MUq=\300\273\363<\333W\331=\351\\\010\274\213\247\275=dL[=c.\003\275\301\213\274=e)\027=w\344\254=\300\267\005\275e;\311\275P\207\n=\274\000\223=\365\221T\273+\302.=\241\026\305=\324\265\213=Hf\212=~\302\t\275\353\233\340\275\343V\355=\364\021^\275.Gc=D\323\217=O\214\223<\265?l\275\217\314\344\275\342\240\334=s,\224=\340\003\014\274\323\366 \274r\327\313\275\022\034\245=\327\005\223=\247\247\224\275\373\247\321=\324\221\250=t\221\205\273V\340\211;\232\n\'\275\004t\203\275\241\342\220\275\270\350\277=\376\341\314\274h\247\265<\341\021B\275\372\357\201\275#\335F\275\016H\311\275:\375\200\275\276\342\256=\237\241\250\273\036 I=\362tD=\256\265\325=}\272\306\275\304t\233\275\311\022-\274)3\242\274\014\243\213\274\367\326:\275\255`;\273\326\225\236\275$ \336=+\243T=q\267l=\004\007\235\273\204\274\261\275\312\r\346=X\366\203<\264C\240=\025\271\367;L\245\316=\032\217J<j\207S\273\363\016\227=49\317\274;\364\247\275\243\213\265\274xl\350\275\350\206\337\274\351\324}=\333\201\201\275*\271e=\221\307\324\275UZ\201;/\352[\275\327\247\273\2758\330\354=\277\331m=k\260\271\275\023np\2744.J\275\3341\010=\373C\213=\355T<=\263\307\360=\247\r\031<V\203\251\275\373\002X=\033w\252=\177=\261\274E\307\034\275\232nk\275h\367\234= \353%\275\315\313\306<9\211\230=]\306?\273Ru\251=\301\234\220;&d\302=J6N<\242\210<=)\316W=\334\022\203=*\034N=\215\007\274\275Z\004\255\275\366\006\211=\304\353;\275\2236F<\005e\013\273@@)\274M^\322\275S\216\351<\213\252\313\275\017\356-=\001\352\356\275\260k\304\275|#\303\274\237\246\334=\325\\\210=I\r\206=~\255\213=\357[u=1kC=3\314\222\275\374\254\211\274\343\332k=@2z=\2545\353=\345mH\275W\357\341\275\233e\311\275t\212\271\275\373&\202\275\250[:\275#MN\275\243D(\274\"\250\177\275|}:=d\361\317=\357\242\024=y\376\321=Y\314\023\275C[\356=\327\005S=5\326\340\274DP\332\274guY;\235;\263=\271K\260\274\217\034\251=\'\007B=\200\213\245\275\351K\320\275\003Y\323\275\352\345\323\275}Sm\275Z\n\200=\250\314m\275\253\005\007=\3366\245<\351\342\231\275W\300\202<sYe=\320yD\275H\373\261\274\332.\316<\217\260\313\275\343\346\264\275<\311\336;\271\021\020\275b\'g=K\315\201\275f\023\356\275\207\234\'\275p\372\367<\313\305\263\275\207\233\t\275^\372Q=x\001\230<x!\266=\242\350\226=\'\336l\275\215\315\213=\014\250|\275\200\313\211;+\357\255\275\031J\273\274\301\201\301<\317\262\245=\254\225\324=\225G\377\274\323\t\252\275\345\001\002=m\276z=\251\031a9\010\356(\274\362\215Q\275\307.\247=\214\t\214\275 _~=c\371\r<\352\351:=\000V\206\275\246\261X\275\30631=D\256\346\274\265\231\242\275qQo=\020N\332<P<\201=\374\007\302:x\324v=\331\014\357=cG\256\275\n\314o\275l\255F\275S\370\001\275\222\237Y\275\247\322\227=t\305\344=`\340?=\242\r\255<\3611\252=\017O\006;#\334V=<\006\217=\'\030\017=U\245\337=m\351\277:\257\251\206\275\205!\000=\334\340.\275[\376\250=\2430\356<\021\202\013=-7\263=,\327A=|\321\261\275\332R\016\275Y-\230\274?\334\235=g}\271=\t\314~\275\306\235\251<\0248\241\272I;\350\275\032z@=.\202l\275\r9\255=l\215%\275\365-t=7\3562;K\273\242\275\r\r\233=\006\355\353\275\2512\352=;\023\247<~\240\247\275\357\253\341;\313\177&\275\r2\254<\262\005\212=\2453\315<\241\376<=\331.\357\275\216\032\232\274\333<-=\014CO\275;}u=\335*I=EY \275q\337,<\245\351\344=\366\275\336=\206\230\336<J\365\315\275x\357\347\274u\225\361=~`\"=\341xu:\316\255T<{.\341;^\036\233=\017x\206=\310\376\324=\013\367\331\275\232\0260\274\205\212\252\275=|\315<>\305\274\275\3272\316=\241\225\332\275\246<\036\275\310w\267<\004\265\210<\000!0\275\234\337\251;\236\227\316=\2610\021=8\323\241<\016F\311\275Lr\257=K\211\200=\266V\215\275IP\306\275 \025\257\275\365\007\361\275\354&P;\243\"y\275`V\272\275\305 ~=\220\350Z\274\336o\323\275\177\243\202;\2132|\275\211\211\233\274n\034\275=\373\013w=\222\235\224=\273&\261<Y\026\312\273\007wQ=T\223\3519\375\304\340\275\336m\303=b\035\262<\0343\213\275}([\274\247j=\275R\303\300=>Kx\275\0056$\274\345\265\313=\331\3761\275q^\217=\216A}=\246\255r=tjF<\372\365\315\274\014\376\221\275}l\315\2754\032\330=7>\214\274\253C\205\274tY\325=\334\274\206\272\310\273f\275\271\177\002=\210<]\272\257A\241\275.M\201\275\321\331\202\272\260\256\357<\223t\214=\364B\227\275\370\002\201=\333o\346=-\006K\275r[\216=\201\372(\274\310h\360\275\262%d=\252\224\'=`x\301\274S\247\231\275B\262\306=\344\235X\275|\203\210=x\272\013\275\360\345\232\275bJ_=\370\026\240=f\003\243=YI\277\275\020I\345\275\271\263\347=?\321\034\273\305\366\252\275\014h\243\275s\223w\275\023\353_=\201q\232\274S\206\245=3V\231\275\267f\333\275#\036\240\275\3531\334=\246q\t\275\327_\202=^4\301=\036\030\317\274\320\254\316=\364\353\316\274+M\240<\243\020\337\274\235 \224\273\275&\325\275\262\256X\275\252%\034=J\252\360\274\021\353\231\275k\361a=:\026\331\275\3647\352\275\0267\007;\023\270^\275\024\373\335=<\263^\275\035>s\275R\020\264\275D\352m\275\211\211\036\275\001\010\352\2733\375\n;\371f\274\275\202[\250\275?\213u<\222X\354\2756\257\223={\266\240\275\365\010\213<\t\241\212=F>\304=\275F\355=G\376\207=\034\332\272\275\371\246\256\275,\265\344\275\310\237\334=?\212\371<EFz=\'z8\275(\257\267\275~\314N\274t\267\246\274m^\334\274\206\326\266=\321\223\343;zB%\275st\212=L\266\320=\323\0204=\025\366S\27428\225\275\005C\207=\t\025\361=BM\344<<B\227\274\314\030P\275_d\336=\277\237\243=\353\341\361=x\334\354\270\362\360\241<\275\016\371\274\025\300\256\275\251oa=\017\311\230\275\"\274\276\2739\036\214\275\212\216\334\275\n\005\277\275\006\237\036<\364e\347<Q\232\255=\374H\306\275Lj\216=\212y\010=\242\311\207=\264\333\244\275\212\022\212==\215\231=\264\020\346<g\375\372\274A.v<c\3679=&\004\020\275\273f(\275D\337z= l\352\275X\204\350=\325\345\222\275\334\334\266<\222w\224\275@\231\276=\003?\347=s\377\027;\021\242\342=\010\330\350=\346\264\241\273\206t\313\275l\232G=\220\3627=V\007\330=\246)\225\275\240\365\033\275z\0275=n\344\316<\367\001\225\275\302\016\274\274\326\'\232\274xB\236;\364x\356<\204\263\331\275d\207<\275\350\231\351<\272\332\251\275-\\\270=3!\325=T\257\251\272H\327\302=n!\375\274xt\277\274`^\250\275\342n\364<\023\307\215=\346\007\344=\212\241\336\275\216\207\246\275\004K\265\275\221u#=ns\005\274T\314\275\275\027\332\275\275\236\277\016=\301\353\265<\276;\343<\000\217\215=7\343\014=\370\013\221\275\233\322\274\275\247\217g\274F\227\356\274\021\300\272\275L\"\245\275,\344+\275\021\210y\275B\253d\275HZq\275\357\370\313\275D\r\223\275m\275\006\275l\254\242=\226\177\230\275\354~\300=`\316\005\275\267\261\'=a\030\200=]\232\301=jv1<\271N\244<\252\230\201=\213X\201\274\370A\237\275\036\263\021=s\013\021=\235OU=\013\305\001\275\270\327k\275\237\322\260\275\032Q\243=^\363\035\275\326\210\357;Y\213N=\222f\310\275\372\363\225<L\362\226\275\\S\261\273l\021\253\275\217\030\337\275\344\027\304\273\001\005\300=\ra\200\275\201\233\210\275\344\301\346\275#\374\205=\267\316w\275S\357\245\274\33444<\316\233;\274Y\251\265\275\030\301\311=\337\017\343\275\275\001\312\274\215\312\306\275D\031\205=\'Qq\275\211\177$<Ce\204<\021ZM\274\030\233\033\275\267\251\311\275~\257\324\274\321\n\342\275\375\323\341=\206\0220<\207\2267=\231\311\263\274\220\301\272=\n\346<\274#K\334\275f\222{<\255\350\201<F\310\254=\022\312\030=\335&\252=}n2\275\204N\026\275S\324\022=\221\'\354\275\370\307\231=0.\277\275J\005\301\275\312\251\251\275\323Z\240<P\262\244\274^\316\212\275\240\330.\275\013\351\250\275\275U\275\275\352\311\346\275\247h\315<\273i0\274!\0236\274\275\317\004<\264\206\266\275j\356\360\275fu\325=6\314 \274\370V\033=\261\311\307\274\245f\303<\2606\220=y\334\215\275\033\220\006\275\223~\271<\366RW\275\355\235B<DY\215\274\337\004><\304u\316\275\014\210\t\275\010\223\037\273\001v\321=\032\356\001\274\037UV\274\254<n\271\306\335\354=\304\323k<\335>\033\275d\026\251=\230u\t\274\226Q$\274B\275\376<\237J\350\275\313\242\246<\243\365}\275\204\354x=\202\031\361\274\300\334\322<\203\354]=\203\007}=\222\205`\274\206\353\207=\250c\324=\306\205\254\275l\247\257\275\247\213=\275\346r\306=0\005\377<\252T\227=\022y1\275\302o\212\275\004t\332=\023\023\334\275\014\"]=\022\020\250=\031n\342=\213Y\177\2758\343\275=\022\246\261\2752\223\356\273_\361]=\032}\266\275\n\272o\275\006\347\205\275\013]\312\275\217\327!=\006\274\200\275\337\216Q\275\034\3334\274\215\206\264=:w\253\274w\227\345\274J@\263\274\202\324\030\275V\335\225\274+\000\346\275n2\350=\n\352\202<\213eG\275\224\022\037\275\364G\327\274k\346\302\275\213\203\253=,\311I=\306\272\217\275\227M\016\275\333K\000\275\315\017\321\275\312\271J\275\311\332\337=$\250\266\275wx\234\275_\371\256\275q\321I=P3\027=\343\222M\275%\244\215\275$M\233\275\367\242\271\274\224\364k\275&\225\250<-\003\226\275\346\022\321=\r\351\202\274\\\311z=!\240u\275g\372\216\275\034+\334=\314JS\275\024@\301\275\373\023\352\275\taf\275\240#\216=\216+\246\275I\312\014\274_#\257\275\363\341\252\275\215\303^=/\340\210\275\335|\010\275\375\362\251=\217G =A\367\311=\256\r\207;\266\367\302\275|B\232\275;\265\314\275\227\003V\2753X\276;\301\203\344;Uv\260=\3426\356\275\271\224\351<\367\275\342=?\2329\272\re\266\275ji\233\275\'\344\241==L\234\275wvz\275\t\372\255=\275\025\311\275Xe\323\275\006\304\332=\260\"\235\275\245\035\270\275\345\rA=\371\031\321\275\237\364s<\245\261\321\275\036l\324=\004\270d=p=\326\275T\227\021=QG8\275(\203\316=(e[\275\007^F\275\376hx<l\375\316\275\013\024\354=\013\010\327\275X\200\010=\206\221\201=\376\231\315\275\246\244\326=\231\244H;\014I^<\200Z\241=\262\260@\275\347jK=\367\000\016\274\305X\247;\201\274?\275C\267\246=\2040)\274\332\205\t=\205\023\271\275\345\234\'\275\331\rJ<\3446\237={L\236=>\237\347=\211$\275\275\373\327h=4\333\325\274WO\226\275\361d\250\2757,\330={g\302=\254\276\350=X\265\006=\261SQ\275\314\233%\275\351a\323=\245\272\306\275I\320\354=\373\014\211=t\215@\275F\252\264<\325\255\264;\003\027\324\275y\320\203\270\325\312\256\275\350\357\023\275-\314\347\275\034\330\252\275X\225p=x\004\036<\'\360\261\275\023G\360\274\244!\336\275\010ZX\275\245E\252\275\241\310\212=\203E\313\275\350&\274\2759\261\265=\217D^\275!V\203\275\310(\206\275\232Cm\275|\247W\275\254(w=\006\204\315=\337\217\234=\331/\"=.\374\n\274\227\323\212=3\222\206=\314d\"\275\251\210\235\275k\243\326\275\307?*<\263\227\271\273\304\312L\275!t\206=\251\244\235=\271\337\273\275~~\331=\306w\350=\233\'\215<1S\273=\226\364\234=\241\353\214<\260\n\265<\007Tw=j\225\335=}./\275t\332\214<\354\230\215<(R\324=\271*\001\275N\260U=\373\271C\275\231?\220=\2501\244\274*\321}\274\010\261-=J\344\256=\305\353q=jZ\201\273\337\3705\274\335\360;\275\365\215\251=d\354\273= w\252\275p\363%=8\361\221\275\300\355\254=pk\242\275\'\375\272\275\221q\311\275\223H\r\273\215\203\t=\316\005!\274\273\002\341=\246/\352\275]\332\260\275]S\236=\211}\336=\253\253\266<\007i\316\275\205\205o<g\321\225\273l\005\200=s\020^=H\334\323=\223\201~\274\3673\374<*\274\245\275<\212\353\274m\277\353\275\255\324\351\274a\237\355<\336R\214=W\017\222=\020c\361=Y\215p\275&=\311=\n\"\277\273ZC\231\2757\231F=:`\006=\315a\225\274\001\333\240<o|\235=xK\302=\272E =\301\010\245\275\r\306\352=\"E)\275ylX\275\352\327\210=s\014\251\275\000-G=\t\221\337=\307\262\303<A\205\210\275\016\342\270<\250\351\256<\324\326I\275\242\373~\274\315\352\330=\267\265\266=Q\331\245=u\246\321=\2102\270=\253_\365<1\366\246\275\366<O<\254D\325<\177F\330\274\301\r\241<T\206;;BV\267=\014\023\206<\346\333\311\273sB\252\275\356\207.\275Lu\223\275\271\370\226<R5Q\274\024\177\263\275\354\025);3^\277\275w\004p\275\310@\202<\200\311X\275\014+\321\275O\'O=\270\234$=:1\265=Huk=\232F\213=\364\2732=\260\213S<\026G\216;(\2457\274u\360&\275\314\221\310=\\9\334=\320\325\245=\246H\'<\"\374b\275\350|\305\275\376\334\177\275\336\312\267=\031h\214=\302\3154\275\033\020\233<\366v\201=\255\3721\275\311L\330\275\315\371\300=Q\3263\275H\372\250=\270\254\346=\023\237\242\275l\307B=\220\317\326\274TX\311=\362\222\275=^\241_=J\354\321\275\303\247\323<\202\355\353\274Up\277\275>{\324\275K6\320\275\211,\210=\206<\325\274y*\222=\227R\320\275\353E\322<\306\256:\275\246z \275\204}\204=W\030\020=\3528\270\275\205q\024\274\326\223@=y\024\254=&\364\305;\254\241\245=\007\310\244=\215\314J=\335\335\222\2759\005\347\275\301\372\240=\331\213E=|\324\355=\301\357\375<z\317\224=\354v\350;\203\006$\274\230v\305\275\274\325\311\275;\346\253\275!\3079=g\tO\275\270\373\357=\241\337\270=\261\207\276=\315\372\237=\312w\240\274o\236E\275\031\026\364\274}@\022\275L;\264=y\271\236<\235\205l=Y\314M\275\276\327\205\274\320\303\214\275\306\313\352\274\325V\265=JV\363\274\231x\326\274& O=\251\261\216\275\227\363\206=b=\271=\330\236\253\275U\225^\275\3341\336\275|~g=W\355\006=@\315\231=\301-\313\275\322\250>\275\327\272\356\274m0\232<\233o7=b\253\267=\023\022y=\233\021\022=\"y-=\327\250\241\274\031\224\200=\334\314\300\275&C\302\273;/\300=\311%\344\275\240e\254=\2359\264= F\300<\377`\254<%\2423\275\252\t}=N\344\'=\003V\231=\210q\333:\365v\360=\310;\304=\024e\005\275Z\201\250=\371\350X\275\313\353\313=x\361\200<\253\274\230\275\207B\267=\252\315\276=\243$\342\274\346\372\300\275\014\346\261\275oT\300\275\020\277\311=\344F\'\275\306\203^\274\032\002\322=WW\006=\227\252\017<\007N\261\275\303Mr\274\342Q\361=\375!\235\275&\367\034\275B\251M\275\303\034\034=d\315j\275\035\366\322\274\261\354\036\275\371\260\273<\370\354\000=ut\241\275\301vH\275}G\253=_\357\272=r\262\251=\333\367\204\275\263\273\201=Rz`\275\023\265)=\310\353\316\275/\010\214=\364\360\200\275\222<\335=d\022)\274c\031\353\275\2244\272\275\021A\202\275\374\315\311\275\010\336\310\275\201\274\365<\003\007>=-\245\323\275y\326\347\275\277\272\336=Pn\243=y\200\215\274\036\265\210=}\326\326<&\311v\275PU\300\275xcT\275\256\004\204\274\210\366\223=\373\246\340=\350BO\275Ti\270\275\262yx\275p\027\342\274\0272\267\275Q\364\"=\346y\255=\363 ^<\315\201~=\362\241[=\330\360\341=\203\355\304=\223\347\324\275\335\034\337;\264w\327=\276M\332=_\234\241<\025S\334\275\037\003\372<\266\177\013\275\361\351\324=T\017\017\275[\315\n=(\204\324\273\226\356&\275\375<\236=Gt\305\273\203\362\204\274?\260\260\275p\266-\274:\026V=\207\351\"=\303\341\224\275I\nj=Wn\265<\257\353I=[\2071=o\327N=D\333\253\275+\237\332\275\005UB=\216\003\211=\356\200+=\321uO\275\300g\253\274?Z\344\274\032\2549\275\260\026\207\275\177\234\037\275;\274\352=\016\010\332=h\346\317=w\245\254\274\334\333\017=\026\323a=\26269=OnN\273v\350\316<\353\323\230=d$\036\274\302\336\307\275t\260\225=Ql\020=rw\252=\2508\212=\364\341b\275Ko\272\274\316\277\304\275\364n\214\275c\024k<\231Af=\317\326\245=y\r\262\275\366\331\"\275\357z4=\376\200~\275U\330\006=3\256\325\275\260\3644<\302b\030\275`\n\032=\020m1\275x\255<=\n2\322=)\231\252<\235\210\314=\031\236\225\275\000\270\270<\260v\253=\370!{=Y\030\021<G\337\347=*\343.=\355\342\254\275\263\020\332\275GTN=\032)\350=}*\226\275\255{\253\274\\q\247\275\204\336\313\275z\n\243=y\215\242=\326\273W\275\234\356N=\255\271 \273\315\263\325=\231\031\024\274\335u\317\275@\237\320\275\340a-\273y\357\347\275}\376\305\274>^\325=\351\240\240\275Y\210\204=z\0169\275^\347k\274m\377\251\275\240\221f;I\036N=\036c\020<D\343\327=\261^)=7\304\231\275\374l\343<\340:3\275!\025Z<\037El=\326\272\216\274\025\340\321=\346\343\277\275yU[\275\010\022L=}\023#=\344;\202\275\330th=5\026\351\275\2054\035\274\321\225\356\274\005\021\265\275\n\257\301\275\013\315\352<\261\211\323=}\370\322<\355\007\371<Xa\356\273\350L\212=\332\034\357\273_\033\032=\2315\320\272\247\356\347=c\217\335\275\256\362\221\275-\202\244\275]\317Z\275/]\226\274\222\234\336;\2320\221=\r\265\237=\336\364T=\177\346\255<\007\201\317\275%\020\232\275 \360\327=\236\242\320=\037\366\245;\252V\302\275N\202N=w\217\263\275\202t\310=\371\310\247\275\022!\031<\267\215\352\275G]\304=\327\223\343=-y\224<\026\377\330\275\021S\216;4\017 =6D\352\2751d`<\nfj=y\213\237\274\374\274\177\274a\261\316\275\253\267\351\275\333\315\237\275m\306b\274TYW\275\355\035\304<\200\230\304=i)@\275^C\341=T\021\'=x\307\223<\214\334\264\2753,\274\275F\024\220=\337\251\320=\246\353\"=\211\342\222\275\252\210\222\275g=D\275|\200,\273\026\255\213=Pn\253<\1774\231;r\203\356=x\013\345\273\365o\022=K\302\351=\035\\1<\032\003\332\274r\364\247\275g\022\300\274j\331c=\213n?\275\224\002\256\275c\230\236\275G\375\323\275L\347\276\275i\333\257=\032\300\n\2754\366\316\274T\246\205\275\027\024\361\275\2728~=\346\222\215\273\333D\024=\324\247Z\275K5\325=\252\346\221<\020\002\325=\357\235\221\2750\230\337=\301&c=v0A<\262\\\007=\226p\334\274;\357\023\275^\021\220=t2\342=\024@/=m\365\215=\246\354i=\235\\\264\275\220w\022\273xU\300\273\317\233\375\274\271\345>=\276\237\302=\346X\302\275\302\375\224=lj\343\275\207$\327=\025QY=f\216\211=\tb\354\275)\344e=8!\204\275D\017\216\275\253:\252=Q\374\263<\222\262\350\274\320\331\356\275w|\260=v\202\022=\364\260;\274A\005\200=\255\327\304<\362\213\007\27505\262\275\007\227\326\275\230[q\275\267\251\246=q[\032\275n\200\255=\233[\204\273\236p\217\275s\375\322=+\027n=\"\274\236\275\202\370\304=lhx<XA\326=\023\002\245;\000F\234=(\245)<\016\264\313=\354tS\275r\350\230\275D\363\017\275\024\205\002=-P\305=\206A\242\274\274\224\247=\262\217\300\275\237\245\340=\271_\331=\241\007\330=38!\275\025\210\016=/\315l\275em\302=A\002\"\275J\263\336<\021L\247=\365\327\353\275skf\275\322\332e\275u\332\271\273i\265\343\274\341R\257\275$\337\202;\254\370\317\275\342%\317=\206\335u\274v\345!=2G\325=\214\250\361\275\354 \347\274|r\232\275q\333\022\275\306g_\274\340R\236=|\'\311\275\206O\236=\211\351~=\2144\322\275\004\003f\275\255b\354\275Q\373\346=n\201\344=I\304\254=\320gu=2N\216<:\032\212\274\244\353\002\275\276\302\315=n\261\260\274\005\364\311\274k\364\216<q\351\317=\241\307\034=\267\346==\315\000\205<>\022\225\275CS\246\275_,\264\275c\211\337\275_ M\275\234\034\263=\351gc=\324\306\006=G,\032\275F\027\274=l10=\307\304F\275i3\'\275u\210\200=\365\317\254\273\363M\226=b\204[=\032\326\341\275O!\233=\355r\314\2741\305\231\275!\254\244\275\245~9<QC\215=\n<\227\275\347\262\322=\210\320D\275\301\337\300=\214\300(\274\337\302\342=ph\030=\253\344\316</i\367<(Z\332=\263\326\264=\211J\274\274\313\377\251\274}\317\007<|6\270\275\262H\274\275.\024=<\357M\231=\307p\317\275\257\002s=\221%\206<\265\033\336\275\324\305\206=w&\247=\213,==\213\303F\274\200\277U<$s\225=\255r\245\275S\215j=\005Z\034\275E\376\333\275\247\0006=\356\275\023=\245c[=\n\261\337\275n\346n<E%\221=-DI\274&\265\335=\033\024f9\263\224\321\275\350\376\003=\346;\277\275\334\226&=\032Nc\2751\026y\275\367\212\322=\340\201\337=@\341\236<c\306\202=\201\256\356=\254\216\213=9 \245\275\017\213\326=\376\370\265<,\222V\275\315JW=\363Wy<>\352\357\275\343\207\324=\365\230\265\275\233\276\033=\031;\335=\316\353\251=o%\320<\214\017\327=\230?\250\275\235\247\031=~ \212\275\303@7\273\230|\327==\276o=\013yj\275Z\032\206=1G\206=n\227\355=\235^\251=\357;\212\275Zk\215\273\307\360\304=\327\300o=\370\240H\275\254r\224<\362\303\275<\0345\346=\223\350\333\274\003\330\346<IK\327<Y\240\224=X\023\330;:\214\350\274\340\222\355\274\037|o=\023\347l=f>\225=5\337\342=\325\236\212=\222C\352=\245}\236\274J\271\007=G\313\244=\337a\313<\377]@\275\302\263\305\275\326^h=\334+\035\275\254\320p<\256,\006=\227\260\225\275\034^\337=\303\267\233\275h|r\275\304\006\004<qS\353\275\255\316C\275\"f\313=~\237\311=*\013\240=\300\333\327<\300j\275\273\260\036\343=$\351Z=\227N\217\274nN\220\275p\031\270=n\236\233\275\274\316\'\275\016\177 \275\277\337\261\275x\003_;#\302b\275\314R\344\275\347\305\306\275x$\240=\3172G;\177J\257<\232\340#<*\\R\275\363\214\255=\"\237\326\275\252P\014\275DL\200<\321e\322=\252e\237<\243\233\240=\341L\267\274Nt\250\275u>\244=\277B\010=.\025\361=\324#T\275\231\227Q\274q\271\200\275\"\244\243=\266\"\211=\241\216\260=T\326\340\275\021\317\321=\275\271D\275\211.\257=;<~=8\216e\275\327tX\275\334=\347=\223\372V\275\276#y:\035\'!=\232\341\341=\331\\\235=wv\032=\001y\'\274J\250&\275F\225<=\250\360\212\275\226$\023=\344\353%\274\356\262t\273\025+\307=\213|%\275\271\353\205\275\003;\302=\270\354\233\275t\351`=J\342\007<\237\271\230=\031\022\305\275:\222\032=\360\231\274\274\340\351\301\275\225\014\216\275.\240~=\221\214\341\275\370:\317\275W\033\240=h\260\307\275\350l\235=\027F\256<\361\204\332=\242\215;=\366\361x=\271\243\231\274\261Q\270\275@t\231\275\234\267\207=vt^=\247\025\006\275,K\260\274\266\246z\275\200\344\330=\253\265c=\357M\260=}\272d\275k\002\364;[\247\357;1e\267\275\214\350s=\366\225\235=\316\000\241\275\357K\004;,\253\336\275c#\356\275\376\342K\271\313\037\214<\260\234\204=\2206\240\274\023.\245\273\242\362\234=nx1=\010\r\251\275\014\301\316\275\272\231\t\275\344\306\245=\247\332\232\275\250\262+\275\013\312\322=\317I\243=\323\312\327\275w}\004=\275`\202\274_4\001=<\372\013=\004\277\242\275\333\344\335=\326\245\262=\334\325.\275F\236i=6?\240\274\013\366\221\275z\343/\274\023\323@\275Q\262\346\275\323C\322\275\332\255G\275\252\351M\275\311\313\315\275%\327\264=\254Q\222;\323`\014=f\332\312=\255E\335<\243\256\325\275ry^\275\244K\276\275\017\220\276\275D\362\274\275\304K\277\275\3502\254<\014T\312=\357Y\204=z\321\362\273\334a\204=q\230\345\275\027\322\237=\337\344\366<5\243+\275`\276\r<\r\360\020\275\345\000\310= I\\\275\227\366\330=\370d\225= \201\207=\207\031Z\275*\353\355\275\006J\313:\362\336\230=M\341{=p\235\007=\355\305\235<\266\360\3449\371\\\237<\2105\022\275]VQ\274\3405\245\275\213d\352\275m\r\020=\r+\360\274)\316\017=\375\246\311=-\014\343\274\243\252\223\274L\265?\275Q\240\330<7\371\270=p6\212<\312D\277=\372\246\200\275\2318\010\2758Xz\275m\221f=Oy0=\345\321\354=\304\210\224\275\377\035\235<.5\034\270\373\232?= \210!\275\224L\347\274\016_\302=6\333\320=?U\225=\361\010\320\274\220\020\316\275\307a\346\275\013\n\337=\371\2040;\366Mr=\266E\226\274\024\034\341\275\375*\251<\250$\233<\037\365\325\275\230HK\275\200@\304\274\023\366\312\274\217\360z=\204\026\017\275\356X\277=\200F\214\275\212\227&=\n\212\361=E\2002=jlv=\274\347\241\274\036B\306=\025\356\275=\r\225R\275@$\306\275\265U\255\275R\371\334\275}\275\242=f\351\325\275\374\250\217\275\rG\350=B\002u;90\334\271\236|\217<\004\243}\275\372\253\301\274A\276O\2752\213\336\275f[\316\273\2727\216=1m/\272\023r\243=\204\005C=\237\035\312\275&\202\021\275(R\317=\313\256\237:s\242\225=$\277{;r\244\223=\251\336\250\275\344\310\203= =g=|\010\250\275\360oo\275\221\032{\275\022O3<\230\r\001\273\262X\217\275\232 \272\275\325\246]\274%\375U=\342,\'<\006\230Q=r\024\244=\274\266\277<\025R5\274A\270\301=\251$\276=V\240b\275T/\217\273\340\300\250=.\203\205=\010\211a=\034\216\322=\377\365A\275\337l\220\2751s\211\275\242j\314\275i\232U\275\375fd<U\303\304=\204\325\213=\025xc\275\322 \244=O\227\276=\340\315\304\275G\332\335=\r\302\253\275\321Sl=-\206\215=h\351\007=?b\023\274\222\363\320\273\372\231h=\274\360\236=W7\312\275F?v\275\312\001\321\275!k\340\275\341u\235\275Q\2449\275)\275&\275\304\0022\275o\254-;\346\2739\275\315X\257<\214w\007\275\223\261\242;\244e\225=\230\020\263=9\317\353\275M\363\355=\024\220\204\275\2663\243<\230}\334\275\036\310\250\275\276\330X=V\252\354\275\255/\002\275q d\275\272\320\321=\214\335\247\274\204\211w=\274\235\261<kP\361=\016\226m\275i~\354=\343\231\000=J\312\326=\310\246\225=N\357\214=\220\352\223\274\007\331\322=\304\265\275=\2041>=\257\202\273=\017oT\275_W\344=\214\331\221=\r\335h=b}W\275y\363\272<\275\016E<\261\313\322\275\352\345t<\363\355\310=\200\244D\275\356r\001<\345fZ\2755\264+\275G\275g<zR\274=\236\232+=<\264\330<\230\t\210=\037 2\275\031>\315\275F\"}=\270\002N\275Kc\220=\201]\271\275\201\317\350\273\352R\205=\200\267\\\275\363\301,\275_\213b\275\360+\313\2748\027q\275\241\324&\274= \201=A\367\230=O\356\230=(^f=`\025\372<\301\253\351=\3077\242<\\\231\301\275\025\201]\275\036>t\275\314\266\233\274`fR=\032\232\247=Y\2470\274\310\277\244\275\302\024\276=\264\236\234\273\014\003\311=s\364\374<\304\230m\271\226\001f\275A!\312=\321\226\275=\376\316y=@\246\270\275\023\006\261\275\227v\212=\264\321\037<\240DU=\362\305\203=\210{\240\275\020\250\335\274\222\021\240<+\211\216\275k\203G=?)U\275\014\315\243\275\3349d<u\241\246=\343\331o\275\333\0162\275l\021\265\275se\354<\035\317\226<h\331\310=\232>\243\275Wp\244\275+\243\202=C\035\205=\374N\313\275\2515\311=b\344\323\275\264i\033=e\365\230=,N\226=OT\325=S\014\375\2737\032\201\275p\351\252\275\226\231\310\273\2226K<\264!\266<GL\334\275\266\350\230\275\234o\210;\307\rI\275\245\254E\274\373H}=W\274h=5\245\205\275\327\215\232\275\237\022\314\274\265k\253\274\2004\234<\324\263c\275cP\265=\022\210\337=\327\234\320\275\210\227\260=\360\243\215\275n\232d\275{|7\275\007\253@=4\373\323\275SR1\275\271#\371;q\222\211=\215\225Y=\204\246\\=d\214\323\275-\236\312\275:t}\274\252\031\243=\264\305\242=\336\036R=\223r\354=\233X\223\275\257\352\272<\225\274\221=\303X\325\275\346g\272=\036\265/;W\377\324=\345\376\272\2741\254S\275Z\375;\275\025\007k=jb;\275J9#=\035\310\021\275M\357\205\275,?\235=m\326\347\274oV\213\275&\3210=\n\333\323<s\016\003\274S<\223\274\'b@<\007 \305\274\347PM\275\272\251\247=\253\236\203=\265\001\257=\261\345\331\275\350h\216=\267\023.=\023\353\203;c\347r\274\006?\\=\237{\354\275\r:\325\275\205[\222<\206B\347\275Y\320\233\275\264\314a=\031w\235\275\266\304G\275\201\374b\2755E\251\274\275\334\364\274;\336\273\275ZTe=&8>\275\364\317\341\274\255\252U=D\373\322\274\204\257\236=L\357\224\275F2;=\352\217\301\275\231\017S=\352\371\320\2745\363\205=t\363\034=\336\315\005\275)Z\261<5\220\251;\222\"\035\272/99\275=\303\257;\254\274\224\275\376\203\336\275\273\374\252\2757\026\003\274DP|<\216T\240\275J\314\257\275*&z=\350w\237\274\2319\037\275\325\256\246=\237\013\201=\245&T\275\337k\350\274\220F2\275r\302\201\275\265\345\252\275S\302\255\274\237\325b=\227\006?\275\200\016\331=g\340\331\274\312\242\243=_\252J\275#\202+\274\377\353\237=&L*=\344\3366\275\225\327\232\275\261\342\340=\265\224\354\275\037\345\257\275T1\232\275)\350U=co\357=\312\361\257<Y\243\013=\367\201d\275XZ\303=\343\223\275\275\225\376\014=\331\354\010=L\342\305<\031W\331<]D\326<CH\336\275\2470\034=\024\322\342\275\322\337\224<\330*\246=h\252\034;t\004\313=\030\001\264<\207\375\274=:\263v=E@\264=\327F\260;X\033\361<\374\371\226<\252k\362\274v0\303=\331\262\"\273\016D\255\274\217a\350<\340\357\271\275\3467\315\274\236\255\207\275W@\004=\236z\021\275\217\277\000\275\344\022\253\275v\220\312=pA\200\273\266\264\212\275grr\275\350\rS\273!x\215\275i\177\265<\241\262\304=GJ&\275\317\r\212\275\026\320T=\264^\344=\347\027s\275\242vM<-8%=\236\220\237\275T\325\355=y\'\334\275\303\242\245\275z\202\214=\233z\335=\326\357\362\274\201\375\350\275\361\2301\275\270\232\266\274P\313\220\2731\326L<)\245>\275Cc\357<\222{H=\017P\311\275\r\344\372\274\013\031\366<\344\222v\275\360}\204\274\244\006\214=\342QF=%m\006=\333[\312<#$\234=\377\020\354;\374\364\227=\363{<\275r?\212=3\240\334<\322\ro\275\310@.\275\374\240B=)\353\330\275\311\211\013\274\tV\";:&<=Wd\260\275^\336\330=\205\334\324=Z\207\222=\034\303\354\274a\032\320\275\243R\320\275\264\273C\275s\360\206\274k\231\346=\236\210\340\275\tK\'<W\2046\274jY\311\275\2319<=\274]\347=<!J\275m\305\276=i\237/=D\231\343=\261\312\320\275\007p\305=*q\200=\307\261\255\275\026\026=\275[\370y\275\016\275\001\275b:\257=Z\372%\275\317\342F\274\002z\313\275\222 D=\273+\235\274?\035\225\275l\331\215<+\273\336=\320\367\241=F\227\004=\316\361\252=\t=\206\275\347\364\330=\235\226\205\275\237C\021=\342AH\275\252\227\276\275\3641\356<Y\237;\274K\025\201<\262\364\n<q,%\274\265\363\333\275\316m\340=\305`\274\275\253\256\020\275\260\244\347=\2014v\275kB,\275^y\035=\232\246p=\213q\307=M\010C=2\331\316<\332\0013\275\247 \3739\")\353<:\350T\275\342)\351\274\002\210\233<M\241C=\276\001\243=_n|=\377T\250=\340\212\035=\253X\324\275\275\"\035\275\222v\333\275\032\300\330=\306\206<= \313\244=\020\025\177\2741K\322<;\321\263\275\005\327\251\275\237\247Q\275\253Q\246=\005`C= ]\336\275FT\'=\243~\341=Q\177\236=\224\276\255=\200.\360\275E\027\343=\344\326\"<\220\3761\275]\305\267\2757\017p=\372\336\027<Y\010\356<\022v\314\275\321\322\252=>\214\346<u(\323\275\321\3311\275\027\007\273=\013\245\275\275\365\222\274\275\354,\201=\373\346?\275~\356\312\273N\220J=\032f\222=\262yJ\275Z\003\322<\267CK\275\213\242?=\301\225[\275\253d\221;(\235\230=\275\2628=W\357\010\2758Fy=#\313\211\275\027))=n5\"\275@\223\r=mfq:tZ\264\275\264bZ\274\252\276\273\275^\276\203=\347\366\244\275\257m\323\275\006f\267=\016y\224\275.Z$=\0160f=M\315\032=\033*\313=\261\337\333\275%\2645\275\006\245\236\274\323\367\272\275\370<\275<]\325\357=\3175\235<`\255\265=`\215\307\275.N\305;Z\031\325=([\203=\333\\3=a\370\311=-\0267\2753\032\311;W\335\273\275\330tj\275\321\325\326\2756\362\200=\2569\254<\223d\353\273\337}\220=A\202\351\274\311B\347\275q@\272<J\251\036\275\375\022\261=\365aT\274Y\036\270=\025\237R=\262\212\306=\006\032Q\275\333\254V\275|h\360;\031\325\020\275\002\017y\274\304\277==\332\224\233=\000V\332=\264R\237=I3\307\275\243x\034=e\017\t\275\325\274\230\275J,F<\332\325\274\275\013\274h<\ni\221\275\342YU=\346\230\251;B\273\253<\010\322z\275\350&\014\275\377\260Z<\024b[=\300\016\030\275.\347\253=\321[\'=\037\375\223=k\213z=\256g\253\275\332\220U;\025\304_=e+\212=\257&9=\325\274*;\320\302\026\274dw\217=\374\230\360\275\r^V<1\177\253\274\364\343)\275\357\022\223<\177\316\344\275\353\212\230<u\352\257\275\365\243w=\037\001o\274\270C\274=\274\315j=\0316\302=\027m2\274\332E\027\273\231&\010\275\361-\274;B\201\276=s\247\333=A\306\221=Ml\207\272\036\206\244;\335\302x\275\230\352\215\275&@>=\362\304\270\275I6\022\275)~\322=\353\223\223=*\373\307\275\244\3547\275\023\034\007=\177\016\223\275`n\325<~#\270\275\300~\201=\216\334\322\275\321Fe\275{\311#=\210\343\315<\010|\205<\302\241i\275\036\313\032\275\270\316\345=\300\024\224\275u\020\026=\356\326\253\275\330)\314\274\357M\223\275\024Q\266<\312\313\036\275\276\370\306<\211u\310\275\311\331\230\274\223\252\347=\006\237w\275V\264|\275x\370\220<c4\201\274!\024\255\275\335\275\343\273\203bE\275%\223\216=N\231W<\374 v=\336\n\361\275\nY\001\275b\241\254=\300jz=\226pW\275*-\016\275\265\\\306<\006w^=S4\336=`\023\353=\254\274J\275\262\"\367\274\007c><;\365,<\276\177\344\275\335\022\347\273\257\371\n\275aj\351\274\004\222\322=Z\325U\275\343 \317=|\256/\275\262\333\334<\350\344*=DP\260\273\234+\213\275\221\032\353\275b!\353\275\005[\334\274PC\310\275\226\035\250<\243\304\201\274\036\330\016\274q\300\024=:\336\232\274!\305\350=\202\n\355\273\235\230\322\275\341\247\237=\024]\200\275}\023\201\275\366g\262=\250\325\252=:\301\n\275\357\353D\275\201\247\t=S\027\356\271\036\333\310=\267\303\260\275\236\371\271\273E?\274\275\245\347y\275\025+\211:\302\345\206\275]\024\263\275\331\317\236=\223\024\336=7\272d\274\257\236\277=m\030\325\275\264,\264=\355\252W=\036Dw=\247x\251\274]\323\360\275Y\302\267\275\013\0249=\324\377\241=z+[\275}\271^<;\346(\275^R\201<7F\261\275(\276\350\274\327\264\273=\303\001\327\274I\342\273\275q\304\334=\t\206p=v\327\177<\270\336\017\275\205p\325=\256\'v\275\340\361\237=b\373\352=\256\236\244:\214`\226\275I\237\333\275\355m^\275eBX=\213&^=|s\223=\324\027\330\274\261\325)=j\n\240\275Ei\233\275\337\251\205\275\315\245\340<[\242)=j\376\010=\266t:=\244\335\254=]\207\207\2754\007\224=\021,\350=v\302\202=\365$z=\331:4\2755\257\256\273ve\351=\210pQ\274{\244\244\275\370\326\261=\270\255Q<\037\320\352=m\333o\274}\323|:\277p\210=9\236\232=\'A\266\275\340l\334=9\353\244=\364\245H<\3428\335\275B \233\2746Y\247<s\227#=d\017\212=b84=\317\231\361\275\307aG=\231\022\234=)\325\245\275\267U\223\275\370j\306=+\230\216\275h\246p\275\345%3\274\304k\337=\353\035==\267\240\352\275\035\342\222;\325\361\323<\312\367\232=\300\266\255=7S8=\326\253\274\275\355\203\210\275\255\215\340=\366\240\331=:!f;\273\336\252\275{i\232\2751#8\275{\020k\275nT3\275`\376\321=\004G\367\274\323\332q\272M\212\325=\330\302\001\275\23029<L\n\272=4v\010\275\306\232\235=\201\206\337<\231\037\265=\350^Z\275\240\3775\274]P7\275\007\337\341=\361n0<\001\030\256\274\221\245\323\275O\374h=\356#\206=I\360\375\274\314\007\321\273\177H \274kh\202=\307\316\346\275Y\352\034<6d\211;\253sA\275u\325\333;\260\202\033\275\325T\254=\374\312u\274]\320\341\274\355m\203=\005\376E=\220$\224<\210\215\323\275\013:\265=\2755\t\275?\351C\275D\331~=\271\370\233\275<J@\2727gw\274\363\205\306\275\275U\211=b\375h<\225b\253=\363N\332=\214\206Z\275\027\337\212=X\366\213\275N\t\32296\370\254=\246w\345\275H\350&\2757Kq=J\337\336=\212\027~\275T\206H=\034u\031\275\305\370\312\275+\303\205=\356ER=\005\310\300=\276\023\307<\252\205\207<i\256\003=\322\201\337=\332Y\020\275\031=\301=X\341*=\017\256\307=>\330=\275\347\016\335<\316\265e<\036^\273=\244\025\305\275\314U\304\274\273\217\346=&\355\271=\277\001\256<k\200L=\342p\330\275\033\252\307=X\320\257=c\320W<9\200:\273\224\257\221\274[^\267=\213o`<]\030C=\313~\236\274\263et\275?\000\207\275\265\2306=2\326\210\275\211L\325<w\360\'\275\200\233n=}Z\225=\016\311@<\217\\;\275G\036\335\275UO\217=\373_\277\275H\037\271\275\000^~\275\027\022\363\273)Bh\274\364\023\224\275\340\223:\275:\016\272\274!w\342\275\360\326\377<\307\341`;\202\352\024\275Yf\247<\211\037\207\275\232\264\204=\332Z_\275mA1=@\021\217=]\004\305\273\355.\211=\304\014\242\275\006K+\274\004\236\220<\222G\351=\037\345`\274&j\320\275*\005\275\274\252\344\275<\005\266\356=\036\314\270=\033\313[=\357\271\226=M\360\201=\334M\270\275\030\\\351\275\331jT\275W\025\204=]\010\320=\263\320`=\030}t\275\311Z\324\274\211\030\321\275\t\333\202\275n.x\275(\240b\274\031Y\301\275\231\223\230=%\237\006\275jG\2239WR\361=\003\2170\275\306\247\r\274\326\214_\274\272\213\246=\347\222\236=\271\233\327<Y\032I\275\237\3675\275\365\312\264<\254\'s=E\331\005\275Y\246:=\373r\223<\325\033\237=\'!!\274\322\207|<\260\317\317=\t\177\303=mt\037\275\001 \263=\266a\347\275\320$\273\270\272\370\210\275\035k\323=\372\255\313\275\304\0049\274\257\216\355\275\275\021\277=\271\256\020\273\026\034\224=%\316\314=&\352\314\274\235\014\224\275\r?w=\2626\256=\307\034\337\275C\276\252\274\216{\305\272\345\355\317;=:)=\034\341\321\274\352x\221\274B\204\314\274\237\302\201<H\317\251<h\221)\275\357\350\336\275\340`\355\275\331\227\274=W\000U\275@\274\243\275\354[\331\274\310\r\245\275\231\221\225\275)\347\347\275\323\317\333\274\344%+<\307\363\014<\312\266\310\273\000-\337\275d+\266<\247\375\272=G-\272=\311Hi\275!x\353<\002\234m=\200\304\275=\206\226\347=\234mp=)2^\275[\003\221=Z\304y\275\212\177\231=o\233f\274\032!2\275\347\211\034=\366v#\275i\235g<\353\351\217=-\267\357=\3279\361\275\021.\334\275\342hn\275\265\254h<y\216\334\275\244n\342\275\354Na\275\266a\313;b\225V=\304\032\344=r\213\257\273J\371\216=\237\235A<\361\307\265\274\310K\351=\375%\024;\237K1\275\266tg\275\370\355\037=f\355\354;Q!y=\326a\314\275^Tg<\203\202\202\275\273\256\207=\237\211\026\275\242\221\261=\344\214\003=\351\"\201\275\246\304\341=\263\354\330=G\367\310<^\0356=\365Bm\274\rnf=\014\234T=t \203\275\322w\205=P\224M=N.\244\274o\026w\275/W::P\346\361=X/P\273\335\266\274=\026\026\305\275\367\256\'=\333d\335=\254\342\331=\252\347\031\275\332\346Y\273\211\271\204=\332\007\310=R\037\321<*\376\206=\020l\327=\010\256\022\275\020x\266\275u\030{\275\245\213\017\275\376\304\333\274\tL\177\273\013\021\235=@Tk\275\353\367\326\275\323-H\275\275\205P\275\300:\227=1Y\264=\253D\225;\010\310\271\275J4\216\275.\017\303\275O\366Q\275\370z\252\275\376S\231\274\277\230\211=\365\372\202\274,)\002\274Oh\031\274B\253\253=\343\030\305=\342\037\244\275\267\220\362\2740\033\010\275\233w6\275\200y\250=b\010\312=\376\002B=\213\325\331<u\307\"\272g\341\336\275}\222@\274\004\320\237=\304\377\3659$\224\220=z\'\244\275\235 8=]2f=\025\363\202=\224\031\301\275\t\2629=\230\276G<\320\267\320\273\366\025\351\275\351S`<\201\264A\275\234\313\340=\303\026\322;\255\013^=\010\261\302=\330o\311=_2\344=fC\216=\366Z\261\275\375{\234=\r\206\262=\227\033\353=\264\300}<^8_\275\374\220\207=^\327\330\275\341.\221<Jk\237\274W\352,\275P\277\267=\264\251u=7\344\231=\3549+\275\333w\217=\246\342\253=\304\206\n;\200\264\277\275Zg ;#\243R\275`\\U9\315Nw\2752\230\177;6u\314\275\224\254\275\2759\205\317\275\034\005\263\275J\304U\274!\030\276\2752\305\267\275\211\313\240<\0050\276\275\210]\354\275\302\374\314=v\325\351\274<\375\317=\037\375\223;\223\337B\274\321\242\234\275\331\214\217=\264\210\305\267\327\000\357=u\350\315=\304\317\007\275\326\264\307\275\374\033\300\275\234\360\210=\370s\236=\334\357\235=\376?K\275F\236\206<\217\250\350<\205\'\343<\374\266\267\275\225\006.=\003U\317=\035J\343=\016\3644\275d\327\212=\350\330I\275\334\250\331=\234\203\217=\nZ\341=\206\334&=\204M\347=\223\374\017=\261R\262=\'Bw=\340z\337\275\301k\205=\240Y\260<m\235\205\2752\211\025\275ZG\356<\010\033\306\274x\221\305\275\331\020\023\275H\013\263=\321\215\306\273\202\201\020<\241\204\303\274\242\300\232\275\360=\263=z\306\206=\001\013\205;\373/\323<\211lQ=\307\337u=x\257\357\275\352=\240\275k\023\277\275%\232\202\275V\372\002\275p,l\273\204\367\356\275\024S\314<\222\257\312\275d\204Z\275z!\225<\024G\262=-O\355\275\035\035\210=\302\300\340\274\322K\241=\205\342w=\241\202\220\275\305E\266\275\264d\216=\346/\346\275\221\206\356\275bP\r=\027,\340<\300HZ=\254\310\031=\333\376\336\274\034k\027\274\t\311\316=h\253\272</\363(\275E\363b\275\332>\317\275\023 {=\261\025\236\275$\332\342=\250k\"=\212\250\322\275%\271<\274\205\225\006=\"\225\230\275=\203\t=\000\264v\274-\251\251\275\225\210\303=P\346\255=)\277\311\2755\330\\\275v\237[\275\016\236\317=\222\211\307\275\233h\351<K\363s<\303\276\335\274e/^\275\264{\227\275\250K\010=\200\277d=E  \275\n\t]\275\242=\273=\243n\266\275^n\261=\203W8<e\200(=S\020X<\033m\277\275\263\000\351=6>\335=\222\222\264<c\342\357\274\200k\325=7\366\350<u\312v\275C\020\313\275\227\234\354=\271\344:\275\347\207\356=]\360i\275\237c \275\224B\014\273\331\361\010\273K\263\320=\352\247r\274Q\035\216\275\310\200U=\033\"\355\275\236\017\256=\270\306\021\274\336\236!=\272\220\006\275\252A\252<\352;\203\275b\025e=\210\356\234\275\241\207\267<7\245\352=g\266\302\275\017\316\035\275\333\372\237\273\205`\023:\267\320u=\303\365\252\274p\221\243\275\314\274\352<\353S\244\274\317\376\220\275s\016\257<\350\300\314\274U\203\352\275\332\261\315=`\0221<!\224\260=\323\271e=qG\206=\013\372\036=\000\341\004=\223\365\352\275\021\376+\275G\370\216\275\000\033\266=|\332U\275\220\'\020=WR7\275\357\365\273=8?\213\275\246d\226=\245\273h\274\014\213\355\274.\374<\275\374\242Y\274 Mg=\375\377\321;\243\322\341=M\373\233\275\376\026\211\273\232\004\230\275\203x\372<(\267\320=\340?\336=\276\364\325\275\221x\325\275\322\340\300\275\331_\016\275U\322\231=\256\271\037\275\222K\027\275N/`\275b\305`=\341\375!=\027\347\270=\031\017\340\273\024\355\351=|\321\366\274\256]\344=\271\311\014\275\345z\324\275\253\224K\275\rCI=\366\343\343=ha_\275\355\223\344=cb\344=\3674\215\275\362n\373<==\327=\241\231\206<=9&=\335\350\\=\201\223O=n\024y\275\253]\263\275\3679\324\275d\242%;\230|\305\275_\205\262=\342\203\n=\230\021\230\274\245\036\322<\362\377u<\022\240\"\275\352\371B=Q\2073\275\347m\351\274\331\330\355=\022\020&\275\310\203\247\275=+N=4\362\010<n\330\"=\233\232\177=A\306t\273 jN=za\t=\315\t\350;\361h\252\275\350\032\000=\217\r\245\275+m\306=\242M\305\275\233v\323=\022\207\027=\312\202\307=\272\266\305\275\320;\255\275m\032\236\275\331\225\317\272\273\225\274=U\345\262=G\341\257\275\n\020\305=\201\214\352\275\224\362\202\274T\371\315\274\332l\340<<\205i<\307\0214\275\241\255=\275\206\023\273=\367\257\274=\376\367\220\273\002W\332=\026\261\265=\346\3223=\230\264r\275\224?\t<\005\321b=\207y\250\275\n\374\325\275\223\342x=\nj\356\275HR\026\275\246|\341\275e\224\330=\356\353\277\274\304*\235\275H\360\350=X\234\227\275\206\240\242\275\211\321\206\2756\\\226=&\271I;\005\251\335\275\374\010\320\275&9G:\336\233A\274I\225\217\275o\313\253=o\373/=\207\356j\275\002\302\001\275\001zG\275\206\322X=\374\222\230=\342~\204\275\354\366f=\200\016\177=31\263\274j2\217\275\215\351-<\263\206\210\275+xB=\3747\243\275\002f\256=\2316\265\274\375\017\222=\262\230\304=\2244\222\275\336E\321\273\316\214\360<\' \"=C\204\324\275\335$\344=q\375\254=\342\324\267\275\237\004\017\2675&~\275\260\266\363<1\022\354=\307\210\335<\267\266\026\275\373\266\272\275\3015W\274\004\341!\274\336\231\254\275C\352\257\275\021\272\324=\241\267\331\275\245Sk<]\003W=\005\316|=r9\273=Fo\323\275\345\005\007=\300?\307<]m\326=\373\355\202\275\331\357\220=\356\205\337\275G\215\211=\231h\330\275\026\300\271\275=a\245=\272\272\215\275\"\366\3678\335\344\305\274\252W\"\270I!\360\274\332u\344\275\005\001\342\275j\254\267<j\200\204\275p\221\275<:\366O<\220n\312\27417\276\274\262\026*\275\213\016&\275\264\022\260=\252N!=\311\235\026=[9\215\275\t\366-=\237\374\345=JC\346=\262\255\273=\317\026M=$\217|\273E=%\274\342\242\036\275\203\024\005\275V\216Q=I\023\230\273\036\244\320=o\237\340\275\244\016\353=\035\0130\275\327\036\242\275H\270\372<i\316\210;\023\331\221=\247\256p=\316\244\n\275\274\255\217<\254S\307\275\227\237\223:I\306\250=gY\370<\321\227\337\275]G \274;\243\376;]W\337\275(\303\330\274G|\321<\331\255\225=\234\331\224<\221Z\031=\326_\r\274n/\333<\001\t\236=\037W\030=p\273I:\354\002y<e\200$<b\303\341<%%\344\275\003\005\241\275\033_|=\303|\026\275\031\006\237\275\234\033\227<:\316\302\274j\373\337\275\265\301F\275a\014\367\273}\031d\275n\363\036\275\271n*=\201{\316<\362Pd\274\207q\345=\336\237\330=I=\360=\002\024\320=\255\374\201<\241\237\201\275K\255\272<G$Y=\014\004\217=\356<\022\275\277F\307\275Q\215S\275U\213\006\275\303\010\204=\231Z\261\275\262\256\030\275u\r\307\275(\026\356<\341\375\320=(#\230\273\241F\002=\n^;\275\333B\245=\276\350\273<0\337\352=\262\345\350=#\333\013\275\351\242\264\275\240\360\210=\374\321\217=\002\261\031=\013\335\340=\255\212\264\275J\323Q=\301\017\211;\260\350\367\2747\267y=\363\0268\275Q\201E\275.\375\233\274,\305Q\275\315\242\325=\367\017\271;n\255\242\274D\017\341<Y\210\303\274{>\236=\210\215\215=\027\371\212=\357Q\377\274\364~$=\3307\274\275w9\021<%Z\350\275\326\262A=\370\310\306=\312s\275=\004\270\n=\374Y\222=\017\201\303=c\030\254\274\225\341/\275\033\243\230\275*\027\223\275\217\376#\274W(\347\275\273\255\224=d\263(=\321#\230=\210\370C;\245C\313\275\201\201\203\275\275\317\n=\311\036/=\323|\303\275\035\352\311\275cz\256\275\340~-\275\337\021\264=\376k\220=D\267,\275\362\253\331\273\354\213\267<\r\250\357\275\342\035\303\271b\266\343\274n\207\326=Zo^=\035\250\234=\224\000\347\275\331~`=\362\r\306=\001\353\0349\246V\310\275\371\273U=+\262\234;Rv\271<\342\261\245\272\366\023@=\202\206\001\273\n\240\323<\t\334\317\275\245\033\023\275eY\203=\337\256\212=\010]$\2736\247\326<\331\230\013=u\317\312;iT\235\275\215\002\036\275\254q\226\275\241\241R\274\036\363\337=\021:y\274@\354j=\\\301\257\275\2020\272\275*\231\337\275b\320\233<G\341\307;!\234\227\275\224W\031<\203\260F=\026C\323=ik\352\275\377\n#\275T;\257=h\344\237\275\342\235D=\267&\272=l\271\225\275W.\337\275\013\245\374<\372\0368=}\006\262\275z?<\275tZZ\275v\037\215=r,<<\315K3\275\310_\006<\227\014I\2746X1=Y\037\322\274T\037\301=b\300\223=\021\252\232\275}\216\217=~{\204= \322\230=\202\325?\275\261\373\275=\320)\323\275\2476\322=.5\264\274\222\255\255\275O\233Q\274\322<@=\360\340\264\275\266\274\303\275M\352\020=\315\267(\275A\240i=q\271\004<\364\355\360<s\317b=#\223\033\275\244\'\260=\330\022\234\275\373H\364<rF\337\275\242m\257=t\230+\274\371\254\313\274\346]\226=\367\246\337=\230H\274<\010\205q\275\262q\247<|\277\324=\270\3748<\200\355\037\275\346\264\021\275l-\342\275\323\004\271=\335\265x\275\226F\260\275.\3742=*\233\264\275={S\275Hb\261\275=\024]\275Ajd\274\t\363\036\275\r\363\337={\207\217\274^\313\332\275\236\216\355\275\004\254\204\275\217!\255=\232Z`\275\032{\337=\034\302\321=\006m\222=\321\'\245=\035PL\274\275\251G\275\377p\333\274\342\362\342=b\335\217\275.\243\355<?\326\266\273zB_\273uP\200\275\376\"\314\275\314\376G=\331\362\013\275|\332#\275\310l\227\275\023]_=\321_\262=r3\375\270\246W\035\275b\346\270\274S\031Z\275CH\212\275B\256W=\354s\356\275G\343\351\273\217\261\225\275\234]G=\017\365\236=\302\377U\274\021\014\353\275\001\3618=\341\370\255=\014\244\200\2754\207\325\275\261\250\275\275\"\250\230\274\274l\326=\271\213\006=O\'\010;\367\313<=Q\324\203=\n\266\032\275\r1\251;H\030\232\275Q;\367\274$\255\225\275\027\323\266=\3355\211<\276i\256<\365\017\262=s\377\327\275\306\243\223\275\021\341\351\275[z\344=\352\327\221=\317U\303=a\264M=e\301\244\275\014\265\277\275\313\302\360=\355\321j\274\345AF<v\\4\275xk\205=Y\243\236\2755\244\333=\251\263\321<n\301\204<\371\250\000<\320\252\333\275\205\307\230=\265\034y=\325/\273=d\021U\274\362\230!\275\177\2305=XK\206<\330\264\215=\366Lj=\237\320\274= $\241\275S\367\304\275n\203\204=A\330\262\275q\253\206\275\350&\325\275\250\200\202<Q\251\271\272\032\357\336\275\252\205\312=\326]\013\275\320\026=\275\277\272\216=\276\265\354=\371\264\206\275\217\333E\275\301\n\003\2751.b=\376\003\345=\212\356-=!\242\227\275\333\177\005=\264\366\305\274\016\245\243=\302M\242<\021\024\275=\025kN<\353k\210<\347\376\344\273z\235a=Y\202\337=\022J\204<;\214\245=\372\002\240<K\312t\275\213\306\267\275\t@\361=>\003\357\275\377\342~=\221\271\310\275\355\025\255=\270\232p\275y\2379<\211\224\314\274\nq\361\275\323u\346\275\026\212@=\350\372\261<PR\302=\033\245:<\300\363\237=e\332\177=\032\003+\275\365\025><\370\273W=\344}v=\2042\366<\221\207\001\274\301;\357=\2757\315=\333Q\347\275\325\216\252=cY\331=s\223\344\275\013\031k;\310n\261;KA<=u\321\250\274>i5\274]\r\321=\323l\201\275~*\251\275\367\\\326\273S\221\005=\024\204\246\275!qA=S\315\263\275&\177\317\275\354=9<{gH\274\nD\2547\206\253\360=\251e\252\274\002v\305<\372\224Y=\027\233\214;\351\242\331=\351\306,=\325dS\275\2467\254<\016Z\317\275\317\214\336\275?\275\315\274\321\272s\273e\306\331<o\306s\275\321\025\230\274b7\235\274\231\374\204\275\224\226\274\275\036\330\t=^\243\274\275\347\r\006\275P\250j\274\377x\356=;-\236\275l\201m\274\334\267\351<\341\221\276\274\360\266\352\275\"\314\230\275\007Tu<\034\212I<\360b|\275\2246\222\275\230\367\266=\022,H=\n\257\323=|\227o\275\201\374\330\275V\220/<\225H\003\275\216IS=\253+2\275$\031\355;\037\203\217\275\324\r\234=B\216\302\275\304\365\312=A\261\373\2744\375!\275\221\231\321\275L\271\351\275 \376m\275\'M\343=\360\235\330=\343\244\r\275\220\223\017\275\347,\262\275\031\'\373:\274\307\004\275\251\030+\274\002i\256\275\266\320\336\275]\211<\275z\314\310\274\272\200\314=\323dY=\252\375\222\275\344\271\264=\201\3360\274.\375\026=\317\272\247<\262\364\205\275\302\363\231\274\255\315\025=p7u<\210\354\247<Hq2<\013\361\263\272\n\312\247<s\317\256<\270D\336=\332\214M\274\363\243\263\275\250\231\241\275\037\355\234\274k\271\250\275\363p\320\274\\\212\035=\336j\203<\226|m\275\261j\211\275_0#<V\242\240=\223h\214\275\023\311\266\275.e\244\275\256&\304\275\227{T=>\350\241=\210m\272\275e\006\225\275rZ\022<g\306\200\275\375\376Q;\324\240\237=y{\335=\3424_\275*|\241\274f\376\340=.\\B\275\\\224\016=\240\013\225\275.\362j=\207\341\030\275\030+\320=1`\247\275K7\302=u\257~=\325!\360\275+\222\222\275\027\252\237\275+\'\346\275\216k\243=c\271\347\275,\227\236\275\025\206\325\275\244\022O=\r\262\221=W\035\224\273\030\000\321=TI\347\275\377\341F=u\214\333\2757\030\004:2\345+\275.\240\340\275]Pu<\312\027k<0W{\275~\335\263=\"L\304=\027mU\275\024\t#\274\354\031h\275\207\213\267=\200\'\344=\273\264\235\271\tE\345=\003.\254=\247\037\304\275z\211\252\275\027\332\230=\242\243\221=1\025\205\275\202\254\273\275i\253\302=A\317\333=\303.J\275\326\214(\274\341\313\353=\037\304\271=\342\324\323=\036-\317<\233\005\245\275\321\017C\275\010\006\030=\374\033\330\275\251?\221=z\310\252\274\360B}<\276\304a=\370:\334\275{U\227=\235\024\225\275\2557G=!\016\262\275\"2\210=\2375\217<\016\005\220\274\356R1\275Y\224\016;!\242\275\274\0057\031=\237\343a\275\220\277\366\272\240(\300\275\305\232\334\275\354,\021\275\265t-\275~\273\257=\004\215\022\274\344\025\226=\246\016\353=\302\351\232=\361\365\265;\\\205&=u[X<uZ\335\275\311\344\312\273b\234\246\275ps\266\275\010#\252\274\271\221$=\201\013\245=\374)\310=K\023\217\273\272\241\337\266k^\265\275r\261)=\260T\340\275\013\2579\275_\253\235\273\202f\345=\\$\346=\363l\340\275\260\030\323:\272\"\342<\0233\253\275\333\310\247<\032\235\216\275\371\020\223\275\270U\023=\032\275!\275\264\016>\275EV6=\261,\356=\260\344\313<\330\306\323\273~F\260\275\266\265?=\336\010\272\275r\343\311\275\025\365*\273\362\322\347\2742\2525\275\023L\327==\014\204\275Cg\324\275\322J\320=\327\342\271=\200I\343\275\260[\206\275l\235\320\275\022/\"=o\023\300=\026\334\032<\231\021\t\275\2457;\275G\302\336\275Hu;=|b\317=dz\253\275`.\274\275A\037\244=F!\222\275\275Z]\272\231\266@\273,\201;;\270\202\312=\2134\351=\003\301R=\021\267C\275o\215\333\275\266)\247\275\023@\305=@;\234\275i\325\310=yR\220\273\341\243\327\2758~\355=\032\246\231=f\216}=\006\270\345\274T\026\210\275\032\324\345<\235\030\353=\371\242\203=\340P\247\275\306b\235=\010\311F\275\230\214Q\274\242\035\213=\034\030%\275R5(=\017@\'<\315\236\223\274\303\311\013:s\365\311;\240\324\232\274\254\206e\274\006x\325=\360`\245\274\003I\324=cOp:#9\354\275\313d\335<\033\322\303=\256a\343\275\316\344\267:\3745a\275\276^\347\273\277e\332\275G7\236=%\263\275\275g\r\242=p\362\274\275\003\257\241=\315\371\217=r\212\027=\224<\217\275\220\371\247\275\343\276I=\301\322A\275\330\263\252<\354s\234\274\"\177\315\274<\r\177\275a\210\001=P9Z=\364\202\234=\373as\275%6\236\275O\222\225\275R\320\302=\370w\335=\222\370\304\275B\302W=\304\314$<}\242c\275\367\305\014\275;\250\033\273n\257\351\275*\267\317\275\322F\337\274~f\216<\321\314\241<\177\224M<\356)\004;\213\016\017\274\037\250\350<\254\351\323\274\366\232\312=\212\204\230\274\355I\022<\325\035\306\275\375\220\234\274\\\370\002\275a\003\321=\326\'X=GQ\322=4}\273=\353\020\346=\004\221\235=r\325\251\274\347\301\230<#\205\255=\263\001\357\274i*[=\033\221\225\275n\264q<\346\377\270=\024\020\212=D\267k:q\367\020<\304V*<\241O\201\275<Ol<\002\242\022\2759_[\275?\202\315\273\201s\226=\327c\305=\322\376t\2745\275\203\275~D\t=:\211\332\275\263\001\321\275\010\024J=\316\220\235\274\032@\253=\211\312[<v\260j=\016\322\001=#B\303=|\324\251=Q\362c<\377\354\334=\267c\321=s\344\252\275\325\200\356=\317\t@\2757,\234;\211c\267=\221-\202\274\333c\013=]\013\210={X\275\275j\357(=\354\214\216<\337\232\323=Jm)\274\261t\353\2759xx<)@k\273\300\202\217=\334\262\357=C\341\007=\234c\320\275\324\024\303\273\355gX\275\217\250\275\273\242\203\277\275\270\215\350=\320\345\272=\306\377L<\250R\317\275\006\027\214=g6\220=%\016\265\274x\020\361={\355&\275\225\302\357=\200\005\340=_&\327=\314CT\275\3142[=A\241\344<\006\270\205\275\\\004\205=\232\235L\275\032o_=\252_9\273\334\263\247=+\030\361=8(\265\275\331\260\231=\213>h<$\233X\275\365\222\253\275_M\323\275\t\335\225\274\265\213O\275p\225\023=\275\030\213=$\214\277\275l\325\213=!\322\255=m}~=\020P\355=\333G\244\275\346\213*=\007H\262=@\225\231=\262m\245\275\247f\234\275\ta\361=Uh\263=\021\006\333=\026\205\234=W\205\337\2758\017\244\274\306\212\327\275D\374\242=\033\376p\275G\027\202\275\022A\232=\000\266\212:\340\312\231\275v-\344\275\333\230Y=\251TZ<\303>\205\274SL{\274\223&\203=\355!\336=\321\252&=\271X\216\275\004h\267\275\022WF=\t\301\031=\304\265\346\275\210f\"\275\022\272\325\275q\262\355=3\336\010={I\275\275a\nd<\332R\240\275\260\2053\275\177\232\234=\227\230\246<\0138\222<\250\232\262\2759r\330\275\230t\023=\257q\261=(j\260\2753\243\246=\031\313?\273\312\233\354;J\353\226\275\0268\323\275\357\212\336=\247\372\310<\375\231N\275`\265\316\275\343\200\252=/t\212=\220\247a\275\311\205\312\275<\320\310\273+\310\273\275\\`\266=\333h\315=\344l\337\275\351qa=s\323\351=!\351\264=\323\232\006\2741\004\332\275\331\022\200=\331\226\277\275\t\226\343\275\274\336\224=\363\251\232\275c1\345\275\001\324\245\271\233\305\227\275\313\'\354\275\020\323\355;\202\177\216\275vs\233=\nCn\274\2654\241\274\320\236\337<<\277\204<\001#\306\275\273F\350=\003\276\222\275\nT\200\274\223\034\363<+\007F\275\245\251\346\275\357\n\260\275\207 V=\033\201\350=\3353\"\273\222\034 =)\272\233\275\030\035}\275\330[\203=\372\371\342=y\312\004=\312y\256=\024\227\261\275\374\032\276<\361\246\246=\207\216\324=\333\210\215;k3K=\331\367\212<6a\305<Fx\205\275*-\352\275\227\200=\275\231\215\t;\rQ\333=\016/\346\275&\242\201\274\240\266\325\275\010\017\270\275\323\351\355=\274\251}\275\302\3413=\227\323)<\306\374\022<\314D\300=\220\336g=\026\343|=\202\002\005<\327k\307=\332\034\266\275\021\341\345\275C\005p\275\003\020\303=B\276;\274\177(c;\322\352\320\275${\231\275o<\307\274>\306\262=e\332<\275\323(Y=RF\267\2753\320\333=\037\316\243\274\201\2302\275G$\327\275\0232\250<o?\340=j\322\361=\31648\275iu\302\275\263v\177\275\245\325\210=\334q\006\275\244A\243=\222!\331=\241)\320\275\200.\226=\343\003K\275\275h\255\275w\225\350\275~ux\275\202\243z\275\333<\316\2750\367\267\275\224\325\327\275\247!\223\275\307RY\275\316\3440\274kK\206\274\360W\212=\3319\333\275\377\231\317=2\230\036<\006\220y\275.\025w=\262\305^=\350l\232\274\305g\306\274k\244\251=aW\242\275\210\211\002=A\006\334\275\244\t\325\275Z\233\273\271\227\\\275=\317i\324\275\021\311\340\275\345\365\321\275}\177\177<\005\247\254\275\230U\324<\236\262\304=\025`\325\275\230>\245=\037\370\202\275\320\323\250\275\025Yd=\302\003\241=j\264\226=\363G\307=\315\337\351=U\177\254\275\373\016\344=\337\2617=\350\363\274\275\213\376\313<}\3717=\253\260\302=r$j=ti\363<c\367x=x\303^\275\214\317\323\275\367\214\346\274L4\232=\346\312\353\274<\227\265\275\'m]=\234\336\214\275F\224\274\275\026L\304<k\232\271\275\212m\223\274O^>=\016,m=\2736\253\275\"\375$=X\342\317\275\324\301\t\274,\374U\274\021\032 =%X\224\273\241F4\273;\254\027=H\341\231=g\376\322\274\370h\026\275#\314\311=w\355\214\275\351\311\327\275\270\t\340\275(S\255\275X\347\302<\377<\026<`|\317\274\371\371\374;\250\216\331;?\026#\275\312w\022\273\353\344\312=gx\361=/\010\223=|aA\275yoo<;_d\275\200\024\337\274\230\'\246=w9M=1/t\275\036\204\252=vD\226=\025[\226=\367\275\244\275\'\252\204\274\"p1<[R\223=\352\315\364<\257\377i\275\257@\253\275-\"]<\'\321\264\271\037-\217=\230\253\217=\260Tm=\357|\341\275\007\350\242\274ggw=\323$\263<>\336\321\275Po\211=8\216\226=\260\312\034\275$\202\021= \226\025=.I\247=\"\327w<\031v\002\275]\373\321\274\257\224\206=\363~\324=F\244\314=:\257\022=\370\334b<\022\036\346\275\306B\236=\020\010\350=\263G\311:\237\025\"\275`\352\264\275\177\036l=\"\264\306=F\260\256<\273z-\274\355\026\343=\345H\245=\034\r8\275\235;\232\275S\210\247\275\314\237\253=@\343\211=K\000\254\275\203\340\250\273j\3723=\224\264r=\246\014\211=\337\033\025=[\022!=|Q\271\275\230\321\303=oD\270=\026K\264\275*\366m\2751\325\"\275\'\330{\275\t\337B\275\225.H\275\341\261\361=\365\241\021\275v\007\302<\032\342\216\275\246\310K\275\221\000\316\275\321x\214;\316]\275=\243\244\260\275\303\377\316\275!\254g=\346\377Y\274\274\2072\273XZ\312=\242\257\332\2757\264)=\307t\325\274^k\361=\251\350\342\275\002^\223=,\260O=\230\212H\275<\007A\275;\224m\275%{\267=\270\346\317=[6\256=u\244\252=+\335w<.\326<=W\'u=b\340\361=\3139?=S\364\251=gH\305\275\224P\200<\311[\323=\244\005\362<q:\227\274>\317\356=\025H\210=\3506]=\200\026\244\275k\246n\274z\036\270\274\215\n\357=\331\344\234\2757\017\256\275So\351\275\371\221\310=\356\301\242\275:\'\247=\356}\314;\027\264\325=\222^\203<\222\023N\274\277T\265\275\367\357\314=\027\256\310\274\354\ra\275\274\306\222\275q\367\227\275\007\253;\275\007\323\307;}\236O\275\016N^;\013\276\323\2757o\343\275L\261e\275\256DC\274%\017\234<\252\022\313\2754\037\272\275#Q\t\275\341\313\243\275\306.\310\275\347v\206\275>\217\315\275\333\221B<\264!\221;\203y\362<\333\222\361\275\356\355\260;q\356\314<\252\272\353=\266\002\224;QV-\274+\366\250=Q\274|=\243\243\303\275\002T\272;\3550\354\275p\001\024=XdF=e]\212\273\220\374\303<d\213\302=Y\240\004=\371\267\302=c\341\213\275\014<\337<\323\032\261=\271r8=N\374\243\275Hp\303=\326\301\212==\261\324=\335a\313;Q\352\177=\237%\017=\263\247O=\211\023\300\275\242\000X\275\300&\247=\006\245[\275\206\203\242=\352\256n\275\"J\276=\205\315\317\274\257\364\354=\214\345\336\275+\364\313=\346y\356=\367\334\343\273\360@q<P\344\272=\351\005\314\2753\177\240;}\362^\275>\036-=c\013\347\274\265\210\201\275\235\262`;x\256\266=k\271\210=qyS\273F\032\361=<\306\247\273K/\204<\207\202\344\274\231z\235\275\330\360\226=Q\205\250\2749\221\272=\277\235\316\275\252f\354=Bi\254<\t\010j=b\017C\275\367u?;\342i\316\275\327{\006\274\003}\321\275\242;f=y\206\342=\203\024\223=\252T\302\275\251Y$\274\307TT\275\203\260\264\275s\023\275\274G\325B\275\226G\357=\305\303\227=li\273\274u\203\247\275\311j\301\275;*\243\275\2165\325\275m\263==o\272\247\275\311r<=G\257\236<d\003\351=\313!\250\275\364\275\377\273\267\200\265\275\275\265%\275}\234e<\303;\236=\t\200\327\275b\375\215\275\346z\177=K\005\306=\271V\211<[\313\236\275\337\222\360\275\201B\311\275\235P\343\275?.\037\275\357\247\277\275\017\274\334\274\205\317\324=\251f}\275\202X\303<#\372\003=q\0324=\3506\323=(\320\341=\253$\231\275O\230p\274$\377\n\275\254\232\001=c\352\335\275\357o\302\275\376\003\356=\211,\276\275\351E\350\275\357\371\270=:\'\020\275yz\321\275\234A\355=\342\036\266\275\255\251\333=Gc\037\275\212\275#=\354\301\252=7o\201\275\314\223\254=\036\274\307\274\212\020\211\275|\276\256\2750^O\275\275|\203<\027\331\240\274p0A\275\'\303\262;\300E\276=\373\357\330=\215\335\225<\264\260\301\275\037o\217\273KD\245\275y\232\264=z\326\353\275\246\030\024\275Fv\303\274\307\243\234=;\020\206=\242v\342=`\303I=\177\255\253=\"o\300\275\347Y\177\273-\336\246=a\301\342=\005\275A\275\364\253\222=\235\002#=\t\006\201;|~\265<\205\274\331\275b\"\313=\214\202\325\275b\372\\=$\365\352<\240\374\234<\020t\203\275\234\275\353=\211!_=\004\306^\275\024~\244;\215F\004\274T\303\266=\006\307\232=y;\005\275@l\352=\317\001\224\275\202\241\201=i\372\215\275B\277|<\275\331\305\275\236.\260\275 z\260\275\000\035\210\275\024\360\274<!~\353\275q\244\335=\223\226\245=6\333\333\274<\241P<\304\343\253;\207\266\362\272\2435\266<\225\343\245=\343\300\222\275\216\237\266=\275\203\236\274|5q\274\236\334\330\273\003R\370\274\271m\331=PH\\\275\362\203w=M\321c=\267g\232\273?<\322\274\321\243\240\275\266\023\361=\324#/=\241\207\004;\232\377\267\275\325\000\254=\337\372d=\233|\177\274\354\303\005=\376\177\346=\005\351\336\275\177Rn=-\037\353\275\272u\341\275t\374\231<\245\373T\275+.n\275\2454\351\275p\010\344;a\000\251\274\223\347\234=o\323t\274jg\353\274\322\237\322\275k\033\r=\272Lv=\034\222\354\275h\257\327=\216\020s\275\275q\345\275\356\n\036\274\370\344\345\274\000$\253<\276a\031=\251L\325\275T\200/\275A?&\275$\371\222=\024\236H\275V\347\272\2757h\274\275\270\275\270\275S\273\300\275\304\026\360\275\256^\301=\365\220K\274\275\372\333\272/bz=8\n\340=J\r\316<=\215\357\275+]\305=\217\373\300\2744f\216\275\322\377\352\275\333\330|=o\3064=s\323\355\273\366\261~=\234\352\260\274=\210\315=~$\364;\332\375\271=\000\037\346\275\364\315\313<\017wQ\275\300\002\034<\004\341\335\275\250\031Y\275\265\372s\275i\314\277\273\007\203\017\272/\000\004=\222\240\000\275\251\307e\275\007G\210=\001UX=\004\364\353\274j\357\355=C\033\276:\247\214+=\274=\032=\330\007t\275\334\017\316<\036w\303<\332\232`\275\347\354\031=\206\007\203=\303\217\311\275\030\006\241<\340\336\361\274\201J\360=eB\204\275\207\373\203=-\361\362\2747`W=\250\330\265;\344$\207;.<\241<\327\350\271=g\360\233<\202^\241\275\256S\210\275\205\036\203\274\017c\210=\341\020\330\274\262\250P=\005\306\345\275\"\252\214\275\336\023\270\275\0060\253\274\371f\301\2753\0102;TFE;\311\376\251\275a\300\204\275\271Mc\275\354\232\236=\204\025\317=\003_\271\274\311M\316\275\334J\307:3*\244\275v)\014\275~\242\357\275U4==\230\335\265\275H@\256\275\240w\215\274\246\274g\274\002TT\275\213R\250\275\2160\213=\245\273.\275!f\260=\370\215\337=\035\314\320\273\315\372\260=3\'\277<FF\261=;\277\210\275\243SQ\275!\212\246\274\326\374\231\274\031\034^=\001)D=\307#\266=L* <U\251\201=w_\273\274n\327\217<H\264\241=\220W\203=\262 w\275lP\334\274`\235\346\275\255\333k\274\375\313\243=p\322\360\275\321Y\367\274\241\333\025\275}\177\240\275\020\000\033\274\367\r\323=\266r\310=\t\261e\275Q\215\336\275\3134\336<\r\242\026=D\354\332\275\330\261\000=\266\016\360=\206uE\275\317\"j\275\267\314\206=\352o\244=\247$\006=\314\330\327<\222\035o\274:\361\262\275;\247\260\275`\007\245\275\017\036l\275\022\026\200=s\336\'=\355\256\315=\263Fa\275\235)\242\275\216f\264=O\336\264=\301\016X\274&pP\275\330\240\264=\310\370C\275\275k\317\274-\004\202=\254o\350=d\261u=^\275\031\275$/P\275\331\262\315\275\357\030\274\275.\024\370\274\345\325\252<L\035\324=C\334\344=\005=\231\275\267\236\025\275\022Y\344<\206\366\222=\364\013p\274\t\326\260=\204\216\345=\026\304\342\275\020^$=+\331\270\274\361\202(=_\366\275\275!\257\005\275\026\324\032\275\203\'\263=\213\241\345\275ZF\207<\211\366\343=\261\3069\2754C\352\274\316\260\305\275\266\t\325<5\\8<0\340\352=\273r\246\274\032\321\026=\271\270\203\274N\350\271=\260j\202\275\270\031\005=\177q\312\275E8\330=+\327\245<[\013\304=\211\311\r=@g\245\275\246]\304\274\276P\231=M\000\225=$\272z\273sN\360\275\264\370\210\275\332$\335\275\204\257G<\014\331\340=\235\341\350;\\B\005=\330\211\215=\\]\214=h\']=U\004\207<%\\d=A\245\245=\364\303\275\275|\024m=\357\360k=\244\310\217=\376Up\274\273L\272<dW2=\354@\336\275\311w\225\275[L\251\274\325\024\323\275!\221\252<\360M\322\274th\305<n\237\277<\356\217\341\275\216\"\225<\324?\355=^\327U=t)e\274\266h\357=.\030r\275\013\335\266\275\254\335\246\275\262\330\025<\217\010i=8T\313=&\250\342=\333\300\325=iO\327\275\241\305\336;\004\277\007=\367\315)\275\302\376\202=Cd\204\274\213u\315=5\373\256\275S\270\224\2754\235\262\275\035z\301\274\031 \233\275w_\272<\337\\\310=\031v\265<\321\034\r\275\363\354\257\274\213\030Q\275\264\303\206=\327\032[\275\3517\217=\002\325I\275\253\255\254=\275M\342<\234\266\224<\362*\331=\256\034\341=\232^\203\275\301\271\313\275\317\001\315\275\014\331\326\275\\[o\27586\216=\370\277\263=zKh\274\226\221\250;mnE\275\027\337\330\2759X\351\274\314\245\201\274\373\373c\275\247^\312\275=u\370\274\274\024X\274L\327V\275\000g\332=|\245\320=\307\341\202=\254\226\310=M\242\266\2749z^\275\327\'\217\275\252\330+<^t\255\274]\322\236\274\365\231;=U\333\207\275o[\254<^\2251<\362\340\251\275\243|\n=\272$\030<\013~F=\245 \023=$K\337=\365\365-=\"\325\354<n\177\205\275r\351\357\275w\312|\2751\203\234\273*^E\275\033\200v\274\257\201\224\273\363\324\033\274\245\335z\275\335\016\263\275\212\256\210=\022\227\311\275\264\220!<\373\311\225\275@\0226<)\366\211:k\373\321\275\355\360\320=G\345\221\274P\250\360\275\032\235\255=3\001\215=\006%\250\275;-0\275\301q\277\274\237A\244=\360b\345\275h\002\312\274\007\214\255<(\316o\273\367\360\t\275\217\244a\275\343<\341<]U\252=f\322\354\275\"b&=u\365\316=\312Q\330=\200\367\027\275 \376\253=\232\002\205\275\336A\000\273\035=?\273\322\002\361<\347\300\200\275L\000\352=\0225O=\260\212\314\274\037\3111\274%a1=\234\371\272\275\204L`\272\006\267\321=\333?\250\275\206N\231\274\033\313\273\275\375\362k\275f\335\323=n\204\253\275BP/\274\352\031\250\275H\216\323\274\031\211\037\274\261\317E\275\024\022Y\275\323\357\207=K{\354\273\321$8=\0131\340\274\355J\307=\243\323\200=\255\345\035=A\255%=-S\311=\334=h=]F\302<\002\257\271<\034\244#\275\254g\214\274\007\315\226\275!\214\234\275\002f\216=\237\006:={\250\316<\225\234j=\260a\224\2759\007\310\275\032\242\340<Be\340\275\245{\326\275j\260\241=\207\247\261=\372X\237=\246\031\027\275\251\311\013\275\004\212r\275\226s\356\275L+\264\275\233\263\202\275a_E=w\333.=\327\256\245=\220\031;\2738~\352=\373|\026:\3551\313=Q\242\265<\200\324\236<\360$\344\274\025\306\233;a\352(=\177n\312\275\362\272k\274+\241\214\274\372%\347\275\376\312\231=k\253\333\275\3223\266=\275u\234\273W\036\274=\246\033&\274\1775w=Bw\214\275\263H`\273vN\274<\256\366\026\275\316\222o\275\366\377\225<\337\364\221\275\\\223\034\275\210\347\342<C\313\267<>\002\240\274H+\361\275\224\322\331=7\226\250\275\2612\360\275\021W\360<M&B<\'\030\255\275\217\360\351=\320\201\271=h\202\277=\347bH=\031<\344\27570I\275:)\211=\225A\351\275\362\266\236\274z\025\253\274\003\327T\275\244v\237=\364\030\377\274\265\302X=:[\236=\207\251\270\275p\305#\275\256J \274\226;\322=\023\264\334:,\304\257=6\252\337\2753\374\245\275\276\315u\275\300\207B=\037\002\220\275\004\t\235\275U\224i=\264;\312\275\277^\203=\275\330\203<\255\276\t<\014\017\317<x\342\234=\366\334\013\273\245Y\271=.\327\315=\267U\\\275\363\235\240\273\313\221\264=Y\360\025<\331\332q=\334\2603=\364\021!<\356H\265\275\244\252j=\213\312-=(h}=K8\357\275\216\201\244\275\362,\204\274`)$=?D\317\275\353ze=]\036n\275\003\t\263\275\274(\205<\256\274p<\352,\031\275\230\326\305\275]\311v={~\n=4i\330=v\350H\275_2\276=\000\277`\275\005\223\"\273\270\352\244=\022\331\234<\354}\226=3\246`\275\264\257}\275\200\n5\274\225\203\273\275\222\3172;^\221\357<\306B\267=L\335\332=\237i\264=u\344\n;\3477\202\2752\334\256=\224\356\030\275\237f\214<J\252\303\275+>i\275n~\352=\325\341\006=\234\253b;\362\347\006<\353\304@=\345\263\255=\036Om\273\353/\251\275*\341\231=\370l\242<\375D\036\275\2558{=\243\3712<Yb\031<8\025@<\300\315\206=\022\224\320=x@\246\275\317\316\336=\312\243\014<*\033\255=\372\202\315\275\235\200p:\376@$={4\351=sd\235=\220\267\007\275\304\347\254\274\352\306\201\275\227jC=\260\204\301=\031\307$=\322a\244\274\010\251\216\275\356\022\304\275k\232\362<\\\323\254\275\217[b\275\321x\212\275\212\320\335\275)\224\261\275yv\255\275\3631==&i==\014\235\030=\253b\224\275\227$o=z\311\254\275\002A\233\275\215\205\270=(\366G<L\246\227=%\354\353\274\235v\267\275\234O\344\275\031\031\250=\355\030\347\275MZ.=\345]=\275:\n\357\275\264\305\200<\326$\205=\240\033\352=\260~\205=\352p\257\275\364\274\030\275\357\337;=R\327\260;\205L==\373\014\334\275\004\311\244\275\021\365i<W\274\324\275\273\013:\275\256\256\271\275\216\016\022\274%\336R\275\307\370b=,\025&\275J\020\260\275\205\0243\275\215I\\\275\254\262\346;)o(=\2011\230\275L,\002\275\247\357\246\275\336*\276<\342\376\236\275\247V\260=m\'\230\275\313u\303\275f\010s\273\001\244\312;KJ8\275m\364\275=tVW;\264\210\250\275@\022\361\274\356\214\230=%\337\202=q\313\352\275\310\202\241\274\020p\256\275y\317\000\274\205\220_\274\177\272\332={\3055\275\366\3542\275\231?,\274\373\247\354=\204F\262=\251k\016\274\204>\235=v\250.=}Ey=\353\242\252=\377i\371\274\010\007\267\275\205\320/\2755\304\013=\356E\253\275\220\276)\275\036Sr=\342b\007<M\014\322=o\315\242\275\033R\273\274\226\375\217;\330\265\322\275\017g\334=\322\243\237=\247\372\311=\367\021\177=\325qS\275\242T\217=\"^7\2754R\302=2\177\313\275\273\231\306=7\303w=y\020^=Y\236\036\275\370\201\224\275z\242\262\275-\202\213=\363#\321\275\234H\014=lqO<\006\266\224=\225v\355=\001%\017=\271\346\031\272\344\237\234=\276/\312=\326\201\253\275\354\276\311=\025\264u\273\212\323#<\\\'\323\275\022\332\231\275\001\225\273<\233\312\250\273\025\327\201=\3300\243\275\256y\213\274\270\372\343\275\275J\364;\177w\023\273\340\257\202= \023K=)\314\237<d\031\232\274V\255\305\273\001#\334\274\301>\313=\022\240\206\275#i\204=*>5\275O\232\000\2755\025\210\275\301:\264<\226\274\014=\314A}\275E/\230=\377\224\355\275\244\200\270=\314\264F\275\266;\213\275dEj=i\3612<\242\260\006\275\304\261\027=\277\315\264=\026\253\001=\306U\235\275\023p\366\273\331S\335\275\377\273\305\275W\342\224=D\211I\275\2471S<\305/\336\275\346\237\260<q\031\351;\353\332\301=\345v\216=\312\253\351=\324\345\247\275\357\361w=\262\274\324\275\221\372\235;\311\237\001=\222\250\320=\264`\340\275\304\020\265\275LF\275\275V\033\377<|B\223\275\3440\316\275\013\356=\275\345\207\343\275r\212\205=\013;\323\275VXc\274\266pJ=,\343\352\275z\352U<\210\010\234=\267\272V\274I\200\255\275\223;\004\275\231\237\226<\275W\217=\377\316\254\275Q\253\312\275\322A<\274\325\262\201<\357\243\333\273\207w\341\275\233\272\233<\030\351\234\275\275\030\216\275\311\210\000\275\361\013\020=\245\020\t=\324o\014=\215\373\325\275\217\333\327\275;\276m\275}\221\357\274\366:\004\275\2520\203\274:_\332\275<4d<V\000\276\275\345 \217\275`R\250\275\003\345\301:\030\334\035\275\354T/<\266\032\007\275\241\333\263\275\233(k=o\263{\275\024X\213=0D*\275\363\221\324\275\266\333\271\275:\271\262\275\276\250\255=\270\313\322=\257\301\271\275o\260q=\244\254\225\275\246qX\275\361\276\\\275{~.\275\351\206R\275\334\2372\275\330\225\311= F\225\275\210s\364\274\340\034\351<\350\3126\273\007b\001=\246\033\314=J\205\342=W-\315\275z\021\222=\233\221\270\275\\\353\266\274\0316\333<\325T\260=e\277\311=F\346L=\212_\231<i\305\020=\224C\010=\025\352\354\273\037\300\350=\3670\205\275OX\345<W\307\250\275,\223\367\274\303Gd<MO =\300\016\022\275\3278\033\274\236\350\034=\316=\245=(\236\316<\254\234+\274\274\372\211=G\007;=m\375\203\274\224\210\221=\374m\240=\271\257\351\275;Y\217<\032T\204=\213y\224\275\257\317\021=\304\001\200<<\352\322\275v\321\302<\205H\240\273\232\0043\275\254\272\356=@\301`\275,\366\325\275_\230\266<\306\375\315\275\344\211\266\275\227\276\336=J\n\251<\354c+=\024\021\211=C\310d\275\225\3453\275\263\306\361<\030\246\233\274\200\250\333=j\020\315=Q\231\261\274e\031\253=^\3548=\246\030\357\275\'\325K=06U\275kyh<\227\r\233\275\264\347\200\275\241z\221=,\305\257\275\323\377\305=\211\031\277=\201^?\275\370\202\241=\343\236\267\275m\375\377<\320\224\177=GB\262\275\032>\034\275\027\255\267=h\337\203\274lZ#\275\271\250z=\003\215\257\275\263\367X\275\3258\272\275\263\341U\274\032\271D\275\374R.\275wr\271=48m=\026\372\205\275\220\013\247\275\313\316z\273\222\201|<\2278\261< \036;\273\2634\321=\356\305c\275o\311&=\033\223\016\275\014\232\343\275\263dH\275\223\244\245;\3758\215;Bq\323=p\r4\275?\217\337=\222\217\211=\310\031\311=\343Y\265\275RM\256=n\267\341\275\356\222\217\275\377\233D<\3739U=\331\275\337=\021\343\260\275V}1\274\233)\257=\220=I\275\000X\240\274[q~\275\260U2=\034\265f=0K\255\275~\246\000\275\021\357\225\275\035\030\335=\205\370\256\275\0259&\275\254r\260=\020r\227=\031\035f\273\307\332\327;\367\037\005\2755\320]=v\273\350=\225\231I=\277n\353\275\343\037\243=b\346\013=\353\252\030\275\272K\327=y\343\247=\225N\001\274M\327\220\275{\315o\274\344g5=b\010\354\274\027\251\360=\033\231\314=\001\301!\275\302\005\307<\222f\264;-\224C\275\022\340\331\275\262\254`\275\271E\027\275\201\317\273<\222\267\357=aq\314=\t\337\235;S\220d=B<4=\257\222\361=\001\367\004=]\360 \275\037gY\273mh\324\275g\343\304\2758.\301=S\320\313\272\t\327\360\274nuC\273\275\313q=NG6=\323\303>\274HR\215=F\247\246=\0234\301\275\342H\323=\207J\226=\352\307\226;\362*\253=\021\204\000=\033\273\322\275\302\305\314<\256|\240\275\203\t\346<\003xQ\2755\2202\275\210\320J<\225f\001=t\357f=\371!\355\275\225\317\233\275\276\363/\2750_\331\275\320\t\265\275\r\317\216\275\305IE\275\367\363\213\272o\016k\275\330\241\377<V\367\227;\306\013\300\275\370\212\267<\244\321\303\2752\354\344=cm\306\275\274\376/=q\025\031\275\336qc\275\356\313\344\275f\207C;*j\211=\257q\302\274P\202\242\275!J@\275\232\222{\2754\231$;\271i`\275\027\246\322\275\222\025U=6\007\312=h\"\216=\202\n\254\275}\371\337\275j\345Q\275\323D\201=\004\3537=\031N\272\275R\024\256=\316\232\224\275\355\037\232=\222<c=\254Y\273\273J\344\255<j}\253=\357l\307=\356\273\355=\031\274\254\275kR\364<\212m\'\275\253\215\342\275\203\004\201\275T\370\000=0\201\331\275O\235)\274\343:>\275\244K\310\275\245v\002<\033\036\225=\334\032\206=\326\250\340<\327Me=\036\361\355\275\350#\221\275\360mV=\305\272\t\275d\260\336\274GB\224\275#\233\230=\354\330\266\275\302\212\232<\237\014\365\274B\265\231=\330\237>\275q\r\200<\221\010;<\311\245Q<\350S\354<P\355L=\"\270\306\275\264;\325\273\341\356V\275d\033\256=\301\020\005=\336x\260=\365\323\211\274.\356\246\273\223\n>\275c\346\277<N\322\245\275\325{\303\275\020\364|=a\203\014=\316>(\275\311\332\310=p\245\270==5\201=\346\316[\275\215\263\274\2753T\330;\337\3329=X\034\323=\272K\256=\214bo\275\325\177\234=I\\\276\275\365\303\306=\250u\334=\270\262\373<\236c_\275\007\016\360=l\361\271\275\301\277\314\275\032a\216=&\233\332=\306]\\=\350Hg\275\362\224\353;|\\Q\275.\327d\275\217v\264\275E\300\275=m\000\333=n\302\330\274\014\240\"\275\002\373\004=\365\203\202;BW(=nT\016\275{\235\202\275\342\001\006\275%\254\253=\354\335r\274\034*\234<Y6\327=\247\312\241\275\346\000\017<\341\320\\\275\014\205q=H\225\003\275\300\314D\275\226\362\034=\335^\235\275\320\327\327=\252{\363\274p~\327\275\"\274O\275o@\327\274n\2554\274W\303o=\215B\203={B\260\275\352\032\214\275\312\013\361=3\001\344=T\306&\274\031\274\014=\3452\230\275\323\034\325=\023\371\345<\370J\345=\233/f=(\261\304=4\001<\267\306!`<\016\273\210\275\366\270\203\275\036i\227\274\201\365L<\013\002\231=\014\247d=\301\300\342\275\345\221\251\273\036\272e=6\353\273=P\220\247\275\206\215\216=\266\350\231<b\002\023\275\221\r\277\275\350\202\340=\033c\337=Y\334|=\372\234\236=Cn\347\275\255\010Z;\2615B\275\235Y\224=\001q\000\275\210\225\230\275\035\031n\275\330\253\223=\177\256[\274\365\272D\274\241\025T\274\r\362\344<;G\273=H!\323=\257\372E=\"v\322=e=\260=n\325\003\274`L\303=\250\'R\274\274\274%\275\246\031\\<\247\225\207=\'\201\221\274+o\257\274HC\361\275\035j\206=#vz\275.<T<\3507\257\275\031]\303=w\330\202= z\343\275J\244\233\275\000\203\272\274\254,\013\274Xd\363\274\234\316\210\275\261@\\\2758b9\275\006\247/\272\036\345%\275\322m\221\274\210\367\313=\221X\333<a.\312\2751\272\301\273X\315\372\274u\t_\275\034=x<\231\203\003=\305\213\232=,g\240=\342O\253<\242n\276\275\014\305\354\275\tt\206<\t\342\341;\023L\351=F\331\342=\034m\211=~\260\211=\374\245F\275\242G\270\275\027>\217\275\023Kn=P\342x\275\n\366\306\275h\316o;\260\027\241\274\005\256`\274\377\262d\275\200\330\361=\230/\304\275\314\210\217=}\263\306=-Iq=^\n\301\275v\302V\275P<\205\275=\214M\275-\r\320=\\\306\303<d\247\324\275\264\030\016\275uv\303\274t7\256=\244=\021\275xw\256\275\'\245\373\274\254\342\\\275\2235\207=#\033H\275!\236\004\275\241\261\265\275\010P)=\034\017[=\232\3008\273\022$\245=\361[\350\273\333K\314=t\302\336\275\271\032\304\275,M\316<\231\2518\275\tE\226\275\211\366\211\275\334\321\020=N\222\264\274\224\210g\273\010Zm\275o\374\332<z\005\270\273\010s\301<\313\204\331<\211\364\337\274\262o\220\274JQ<\275\232\271\210\275\\\037\367<b\300\332=Y6\324=\013\310\277=b\252s\274\341\035\271\275\247\013f=\253\250\313\275\300\223\004\275\322\311\276=\314\242\272<\007\343\316\2756\236\212=\241\303\346=g\\\234=\254K\021=\372\223\254<W\253O\275K\001/\275(\316\323\275\265\027\237\275\025\036\303=KI\322\274,x\035=\241R\317\275\024&\244;\342\233-=6\005\247\275\017\035\026\275:\315K\275\t\331\037\275-\241\305\275\370\2402\275m\3443\275\265\206\214\275\261\264m=\030\224\240\275\203\024\310\275R[\247\274dz\307\275\335\251x;\006`\265\275;|6=\231\221\302\275O\014\334\275\347\263\213\275\010<@\275p(\200=\t\361T\274\335\225\301\275Z\336\r;B\244$=/gl=\017\211\206\274/\013\351\275\277\223\357=\232\322>=\021\265F=\251.\331=\326\2627\275\177\336\260=@\334\233=}\266\235\275n\006v<:\327\336=\342\236k</\t]\274\036*\345=Uy\243\275\371eO=\323U\242=^\265\243<\266\216\333=U\033\373<b\'\036=\334<\267=[\034<\275]\264\010<\365z\271\275LD\246=\316\003\372\2741\262\220\275\262\331\277<\2157r\275\307\274\242\275\224L\271\275\257\201\300=\247\213\t\274p\016\013\275t\377\354<2|\276\275\213e^=\021\231\202<\243\252\243=\022\323\327\273!I\367<\256?\234=[\203\277\2746\276\221=\361\277\354\271\346\212\341\275\374\374\231\275\367\246j<u&/\275\237\353\006\275&\272\331=\3319Z=m\263\371<a\024m=\261\0053\274\t6\315\275\257\t\313\275qLf=\345h\266\273(`\202=\236\262\356\275x{\274=\332\0248\275\265\272g=)Zu<\225\254\300<\223y\313\275\323\244\276<\361\203\202\275q\221\340=4\302\377<\350\312\301=\204\244\336=C\345\361\275\365\253\r=\2705\025=\307\t\347=\355l\313\275W5\243\275\312L\202;\267\222\253\275\251\330\002\275\014s\337=@N\302=\200\266\302\275\000\321\250\273\270\016\312\274E\037c\274\025\2773\275\267\nu\275\225\230\276=\207<\353\275Mi3\275+m8\275C\245\364\273\315\331\202\275\231\236H\274\347\227\273<\246U\223=]\271>=#\367(:O\333\227=a\335\325\275jO\320=\273\233\231\275\260-\321\275\366L\261=kp\336\275\020h\360\274\266\326\261\274\220\207\354\275\237\032\271\275%O\324=\341z\317=\261^p=)\234\361\274\272\250\350\275f\274\344=\t\341\320<\336R\326\274u#\262=\003]J\275\016\343\245=B9N=\274k\232=\206\026F\2759\233I\275\177\235\177=\356\343\271\274C\276\312=\217?w\275\323\310\017\274\022\220\253=\177\341\340\275\263\355\335\274Sn7<\234dJ;\005}y\275*\022\310\275\220]\254=\316>\254=\234\345\207=\245\014\260\274\021uw\274t\274\225\275\237?\341=\213#5=\343\320\303<\377\037p\275\306\033\240=8\205\300\275\362\317q\275b\272\301\275-\315\024=>\000\333\275\007\233\313\275\322~\233=\026\224\247\275\322\327M=\034\273+=\223o\314\275X\204\004\273\361\250\267=\000\277\265\275\337\005\333\275\375\261\231={\316 =M\374\251=\211\325$\2758\'\212=\324\306\027<\360\351\254=:\330\310=\013\275\311\274\010W\325\275~\306`=6\277\307=\256s\350\275yw\300<\316&\321;\202\371\340\275\362\244\270\275\277\230\r\275WR\323\275?\"\021=E\271\232=\276\004\272\275\310\357t\275\253\247\313\274\222\236\365\274-\270p=\031KV=F\354\355=i\230\336=(\251\233=\336\375\353<\232\345\317\275\370k\310\275\027\353g\275p\211w\275\250\346d=\036?\233\274\275=\360<\014\217\254=&9\242=\316}\205=\233\026;=U\370\333<4%\246=m\273\356=\241\202\257=)\361\244=\204\213\316=\267\036\032=t\036x\275\314$\344;v:|\275!S\255\275\357\034\313\275l0\264<J.\244\275\010\227\233\275\330k\363<2\377\313\275\025\337L\275\371\340\276\274\275*\336\274U\343\345\275\362\325\333=\251\364\336\275\3550h\275Ib\177\275\267\'\233<\214\023O<\321\024\242\275mH\207=w\200\314\274\225\037\274\275\223\367\201\274S{\224=\353:m=0\227\213\275\216\266\223\275 \022\345;\245~\261\275\314\373n=\207\024\324<\237+\341=>\220(\275\273\267\242\275\372A\225\275\272\334$=k#\347=\324id\275\353\333\\\275\304\3473=0K\001=d\362\210\275B\033\274\2754\356%\274\350\355\227\273\277`\264=\211\016{\275\034\264\024\275\273\024v\275\032\000\230<B\014\035=o\312*=G\353\333<\371M\236\274\376\025\017\275G5\307=\225\335\343=\303*\334\275L\330|\275\201\332+=\371_\311=\202\377\336\275()\264=\346|\213\275(\347G\275#\322\263\273\354E\337=%\034\303\274\377\225\335=7\216\217\275\"B\222\275u\346\"\275;\231\344\274\241\363\320\275\240\220i<\210\n\211\275\301\261\233=\214\244\035\274\306\331k=O\223\263\275\322+\314\275\t-\304<\350\235\306\275n!\250\2755\201\201=Lk?=i\313\321=x\207\217\275\277\300\036\275\005\254\314\275\3353\005=^2\017=x\342-\274\364,*\275P%v\275uK\265\275D\201)=v\366\263;s\031v=\240\023\241=\233\212\314\275\331\352\237<\247\352u:\241\254~\2753Mp\275\254\234\277\275\233\336\271\275p\001\236=\300\342\324=\251ZV=\244\330\307=\327\255,\275\230\235\264<\342\221\002\274\250x\347\273s\324~\273S\031P=\273\350\306\274\034pa\275\252M\223\274r\204\353=\200\266S<4)f\275\273\2552\275\252\"9=\\\226\360\274\212+]\273+\367$\275_\313\267\274\371\331\203=a=\327\275\341M\316<E\264>\275\376kQ\275\310\367f<\005\235\217=\347i\215\275\232\005M=\351T\204=\324\246\267\275\312\313\227\275\016\226\245=g\016\304\275\207,\035=\262\234O=uFh\275,\320\235=\002\276\206<\004\326\017\2756@V=j\315\004\274z\341\021=j\322$=\366{\321=1\036\207=\230\3146=/\242\332\274z\023\346\275\320\234\271\275\2605j8x\271A=\240\267\325<E\264\036=\250\034\221=\036D\205=\020\207\333<\221\033\233\274\231\3440<y\217V=y\013\253=\316\337\277\275\344t\025=\360\370z\275\202\320\356=\033\336\265\275\366&F\2756eu\275\005 \243\272\315z\365\274H(c\275\301\362\265\275\276b\223\275\326i3\274\221G\340=\364w\305\274\300m\203=\320\246\343=\\\247\341=\223\013\320\275[\240\264\275\206Z\343=\331h\021=\273n\344\275\025Y\027\275N\303\267\275\332\366\343\275\226s\235\275\303\"\271\275Y\201C\274\314-\273=\374I\324<8\305\246=\323\223\353\274\362e*\275\320\270\307\273\372W_=\231\006\207=\3642u=\0259,=\024\027\266\275JNh\275\314\272V<\235[\246=\211R\216\275\nr\350=b\203\375\274u\370\231\275\324\272\354\275\013\022\310=7\356\344\275\030xt=l\213~\275\261t\306\274\371\364\303\275z0\330\274\372\265\324\275W\311\345\275^\246\252=\203\241\307\275\237\214+\275\244\215\300\275_O\255\273\177\177\202\273,>\212\275\031\256\333=\257\000\242\275\035E\353<*F\341=Rt\347\275T\210\267\274\366\202\234<C.\211=\254\n\277\275\372\021{<}\300\001;d\250\233=\333J\356=\310\334R<\245\262g\275v\332%=P\326\255\275^\355\"\275\361\031\252\275\014\216\344\275wy\002<_\2417\2759\331\265=Y,\035\275\000\0236\275w\311\317=\350\304!\272\202\357\271=Z\235\214=\002%\345=g\331c\275\345LZ=\367\361\343\274\326\242z\272Ps\332\275\225o\330=\274\323\322;\374\222O=\250\346\325\275nA4=2\027\244\275X\313\327=}\272\243\275.\003%\275Gk\354\274\266\275\212=\223\356\307\275`<\224=\226\034\247\275@\200\235=\361\322\341\275\247\356f=\036\334\200=\357=\301=G\243P\275^\216\301=( p<}\212\363;KN\345=\216\021\201=\242\327N=\033\201\370<)S\332\275W\222\317=\337\320\330=\302q\035\275rS\014=[\230\361\275\273\025@\274\260\254\n\274\364\205:=\313\256\203\274\254\035\026=\240\323\n\275\203\327\207=\333\376\335=\354\272F\273\'\217d=\367\235h\273%G\'\275\000M0\275\351\217\355=t\333x;x\335\262\275n<\\=\230\324\277=\035\331j\275\205\310\310=\2715\016\275_\r\232=\241\273y\275\304\303\253\274\346\030\234\275\262\031\332\275\361Vx=\032\231X=H\200t\274\r`p=yF\333\274e\350\220\273Z\024}=\312\257\020\2754\235\226=Q\024\201=\263\t\202\275dA\022=d\215\030=\245\022\323\275f\350\331=\031J\251\275)C\320\274<D\036\275\375\302\322=\354\\\345\275\2163v\272hr\305\275f\354.=\\\310\334<\014CG=\347\356\277\274\220\202\221\275\330\3546\275g\333\036\275?\2030=\307p\266=\262?\'<\177\030l\275\253\361|\275+\213v<@\035[=\2239\270\275:\235\331\274\257\226\332\275\266\302\333=x]V<y\"\360=j\357\310= \332f\275c\253\213\275\260=j\275o\240\270\275\375\364\331\273~\016\323=\3276\223\275\253*\351=\352\340\357=\037~G\274dqN=\227r\233=\231<\355\274\225\324\217=\214p4<P\000\242\275g<\t=\375s\226=v\344\355=$\'\255=\302\372\352\275\320\001\250=D\310\222=\257\022\374:\213\027\303=\374\004\257<\'\350\340\275\316~\203<\247/\253\275s\215\347\275\200v\272\274\212(\226\275\005\2473=\\\325p=\304f\246\274\215\232 \275\352\001\260=~\202\254\275\3125\016\272\2201\204\274Y\3373\275\034\357\264=\274;>\274\304F\\=\2247\316\275\345\334\205\274[3\216\273\202\270\033=[\324\220=\354Q#\275\351\372\234\275s&\013\275G\345\335\275\346\013\346=\215$\355=E\210,\275\034\366\255=\001\262\211=$|\241\275fs\245\275\270C\316<\367L\220\275/Pj=\366N\216<\316(b=H\"\261\275\200\215\220=)P\247\275\317\256\245\2741v\307\275\215q\361\275\353\260\206=H\177f\275I\227\240=\304\231\206\274y^)<\2170\337\275(\017\227=\230q)\275f\206|\2750\270\254\275\016B\201\275\337\030\215\275.\313\247\275\362Q\020=\025\203`\275~o\367\274\204\3118=\365u\213:\2139\271=\212N\270\275\330\222\245=0!\320==\345\335=@\375\306\275\230 `=s\361\325=\355\327\214\275`u\271<\032\212=\275\021F\233\274\267\275\277\275A.\306\274\203&\310\274\025\353\272\275\325g9=\177\203\336\274\212\307\211\275\013\333\277=\373\310[\275p\025\200\275^\261\316\275(\207P=\306\232\204=\322q`=\306\240\211=E[\347\275\347\304\201\275\317\016\205=\323\376v\275\333\001\263:b\360}\275\014K\244=zFs=\033\364&:F\243a\274\034\006\206\275\234\327?<\201.\202\275u\272V=8*\036=D7T=\307\304\245= \262\207<\267\262\250=\367_`\275~\304\003\275F|\223=nG\222\2733\375\337\275[\350S;\336\021\307<ve\342=\320\226\210\275\225w\245\275\212\241\033=\3070\327=f\\0\275\214\032\r\275v\256\271\275\336\240\266\275\270\344\315\275\337\014\237=\362\207\330\275!\365\345\274\327\321\373<\014\235\230=~\271E<\026\330Q=\371+\'\275\303\314\221=\305$\304=\031\n\301<\317\024\033;\034\305\357\275\004\212\\=\237\310\225\275\360R\210=!\266\022\275\034\224\214\275\267P\026\275\305\265\375<\310cy=\232\341\257<\254a\352\275\nO\322=\347e\376;\270K\201\275\000\002\257=\335\375\303\275\252\262\264\274\037o\267\275\275\240\241=\233\036r\275\203Z\263=6\345C\275\303\366\271\2746\342\245=\275\361%\275\340U\316\275cZ\234\275{3\247\275\344h\024=\205E\001=P\177c=\232n\304\274\\B\327=J\303\326=:\024\221=\321o \275t\200\036=\266\022\311\274?\023\001\275/\232F\275\202]4\275\373\246\010=\035\'!\275m\314~\275\252\253\230;M\032n=\334|\202=\364P\037=V]o=\364\343\234=\020\274\320=\013\241)\275\325#\231\275\276\237\021=\302v\347\275\001\236\314<\277W\313=X\264\256\274`4\227\275\257%\026\275\240.\237<\321$\237\275d\377\210<\177g\221\275)\226\251\274\n-\243\274\221B\331<C\330Q\274\364\006\224<x\010\223=K/\276=\225\013\275=\276\202\021=\271\363\277\275\306\024X\275\361\201\342\275\306\211\020;U\215}=\373\373(\275\230\311\356\275\263|)\275y\004\337\275hW)\274\332\246\204=\220IV\275\345t\233\2756\327+\274\254\272\354=Gi\340\275\340v\257=\335!\227\275\034\013\310=C\212\327\275*|\222\274k33\275\204\321\207=\014\331\344\275\322\303\014\275\304\314\222\275]\232\210\275=\310\242=\256\306\003\275\033&]=_\310\267\275F\024\300\275\324\307\265\275d\310\265;\325^\336\275\207\341\204=\322A\204\275$\034\006=\376Q\245=\222n\326=\310\266\277:\224\207\273<\240\217f\275\212\250\223\275!i1\275\0219\304\275\301PJ=H^\213\274\013r\374\274\265\225U\275\362\327\202<\307%\240\275\237\272\346\275\210e\001=\350\013\343={\241\265=\310N\350\275\251G\235=\343\377$\275\260\321\014\275\320\374t;\334\204\312\275\232M\274\275R4\203=V\236\345<\236\247\206=\2715\306\275\222\342\n\275T\275\342=N)\234\275\230=\324\274\262\210\323\275\241\341l\275_\223\275=\216\256\235\274\276S_=)\226\031=\001\016\t<m\353\242=9@M=\"\320\204<d\177\302\275\230\332\252=\204\273\273=\027\372V<\252{M\274\354\021\2258P\333\273\275\257\034\374\274\031\212\322<\272i\246\275\210`\301\2756\300\254<\322,\251=\224zw\275m\211\224=<\253p\275\375\352\225\273p\t\360=\243ub=\252\034\243<[\255\345=}Gy\275(\376E=\215B\206:\256r\346\275S\231\254\272\266\227\330< 6\241\275!@\007\275\271j\264\275\346!\016\274h\363\335\2758mi=\005\363\202<%\r<<\247\213\210\275\370\343\261=\275{\301\275\322\211\035\275s\276\214\275\334\300\312\275p\212\347=\370i\216\275{~Q=a]1\2754\002\231\275\377\270\024\275\342\241\204\275\271)v=I\223\252=\024\262j<\002\225\260\274k\3645\274\362$\263\275\221\331\304\273V_\310=\024\'^=.[\272\275f6\325=hL!=\327[\272\274\031\243\023\275\245\353\330\275\324\367\006<`\301\206=&\214h=\375(\273\275s{\245=\372\350\201<\344\030\247\275)\333\356=\202\356R=J@\354\275\356z\256\275\367\302\226=\266l\232=^\005K=S\325\224\275\224\261\227\275\306e\277\275\354\201\275=\307[\244\274\3015\221=\260/\342\275\231\220{<\013&\276\271\'\226f\275\276\2074\275\020\250T\275\026\025\231\275H|\351\2749d\216\275\253\310\201=G\334\224=\032\227\254=\257\332_=\210N\230\275;\377Y=\270\216\323\275o\335\256=\r\021\246=\353\250\316\274\350\221k=\021\360\365;\264\367\311<~\023\347\275\177,\265;@\370\206\275M\354\367\274\"m\205\275\212_\020=\201T\223\274;\222\327=\024\225\'\275\224\010\225\275G\216\346=\373\252\270\275\357DO=\177\334\310=>\361H\275C\311K\2751\317\002\274\310\275\216<Hd\037=\353\316t\275\376\271[\275&\037\331=H\211\351\275P\270\237<\353\035\224\275\273\247\341=\270\\\331\275\354\226&\275\313\3421=\202X\360<.\271\312=\351\326\200=n\217!=~@\210=2\010\340<\030\322\375<\372\300\227<6\332,=\214\266\256=I\340\360\2756\275\264;\343\036\350=\353\364\342=S\265\246=\177\3209\275\221~\240\275\244B5\275$i\226;Q\324\326\275#\337\257=\036\255\327=al%=h\"\232=\340\212\305\275\025N\200\275\371\335\245<\266\263\003=\270\344e=\344h\245\275:\222\276<Ed\237=\367h\301\275\270a\003\275\272\251\311\275\340\231\270\274&\256\220\275\257t6\275\235\375\034=X@\236\275\2637i<\035\210\326\274_\026\321=\255\330u\275\332\231{\275\321\263\324=KV\340=\2365\357=\364C*\275\352\256\325\275\001s\025=Q\260\013\275\035H<\274\253\036\344\274^\312L\275\030\234\032=\"`?=\362]\333\274^\310\224=\310~\216\275LW\215=\371\357\357\273\324\216\261=\236g\2617\237\010\321=t4\303\275\204AA\275:\030\265\275\220\266\274=\034\213\032<\376w\306\273HX+\273^\3128\275\227\277X\275\315\026:=S\350\034\275\277\266\337\275\323\260\257<\207\t\273\275\032\212\343\275\035\222\177=g\204\030=@b\263\275W\236:\275\276.\232=\354\361\322\274\272\350\313=H\2726=D\000\320=\210\357\246\274\006\2717=\023:d\2743\370\205\275A\334g\274\004J\344<\273\246\361<`Kx\275\251\253\205=\004\360\312\275\362\252g<\201Q\306<\340\006\024\275\031\361\243\274\257\265\263\275\312\353\243<+\306\327\275\226v\303<\334\201\344;2\200\273\274\320\357p\275\026\252\331=\230WQ=W<\376\274\214s\022=5\206\014\272<\235\333\275^\336\007=],\273=\311Q\344\275\260\361\202\275\355b?=L\2661=3\330e<\374\205\306=b~J\275\037\204\001\273C%E=,\250\327\274\236\"\316=\307\202\322=<\253\322=\261K\274=\207\235n\274\246v\373<\327\230\202=\360\356\353=\343\376\265\2759\275@\275\212oT=\212,\260\275\376\036\001<\352\260\026;\333\376\"\275xyT\275\210Y5\274fV\233\275\237\\\273=\324W\013<\266\021Q\275\250\365\020\275\264\251\245<\225d\235=\017S\033\275\224\017\257\274\343\350\217\275\264\277\304=\2320\217\273b\212\212=S\376L7\235H\320\2750A\205=>\215\306=h\265\306=\177\177\246<*S\347<dq\322\275\3777[=F/\377;\350b\202=\351b\304=sc\353<\014B/\275\342\360\270\275\356\315t\275&p-\275\212\353w\275c\353\325\274\205\374-=\265\226\215<5\352\246=\346U\306\271\027i{<;p(=\364L\247;\010\253\312\275a8\362<\364\266\007\275x\340\220\275CC\234\274\361\374\037\275_\003\216=\rm\n\274\"\030\355\272\273\004\337\275~(\361=N\035i=r\222\234<!\177\220;\373\rb\275\251\314\351=&_\005\274\331\025q=I\301\317\274\201\213\256\275$I)<\356\007\260:\004e\347<\253K\201\275\014\225\353=\361\246\311\2759\027\346\272R\037\005\274\265\275X\275-\332\206=\353\010f\274\243Q\300<\205\363\327=$\000;\275\224\006\353\275&\031\327=C\360\263=\317\272\206<K\017\217\275\336\013\001\275\355\241F<\241\037\316=o\371z<cb\200\274\003\251\307<\332\354&=s\024+\2753\205\276=\253\361\353\275\345\364\025=\317\372\316=\323\376/=v+\201<\214\312\334\274\343Y\025\275o\331\302=Q\r@=&\251\225<8\334\247=(Qu\275\251\377\212<^\346\324\275?>\340\275\220\256\270\275\2543\262\275f\001\027=\010\017\335=t\253=\275\232\021v= T\323=\307y\246\275\361|\241=\371\306\337\275!{\205\274\014j}\275\375(\253=\036\232}\275_0\276=\302n\337=\331X\242=S8f=Y\177\261<\211\322`=\346f\331=\004\3773=\273#\341=\222k\013=\243\277\252<k\356\222<#\241F=\027\001\321<\312i\330<\321\205\203\275]\347\214\275HXI\2758\236\265=7\202\251=\272\240\347=S\252\220\275\t\364\202\273\225\252\030=\343O\240\274\301M\264=?\013\345=\277+\245\274\321\217\346\275\264\021\"=_\224!=\016\346\320=u\266\272=\357\363\254\274\233\004\354\275\363\373\212=\022\275.=\210.f=k\006\340<\303\314\302\275\316Sq\275x%\207\275\025\3600\275\006\320\335=\253\023\240\275\222t\220\275\345\224$\275\362\003\333\275\t\030\354\273b^\217\274\022Z\240\275\246U\354\275\257\205\210=\342\340\335=\264\310\373\274\271\201\n\275\205Y\317\275\'\207\256=\324l\234\275@u\215=A\366}<}#L\275Ck\371;L-N\274\017@\313\274\312GI=\022\270\216<\370\321-<o\214\240\275\242\033T\275\330\300\021=\333*\032=\007\347\257<NE\362\274\321D\212\275\315\272\362\2739\330\271=}d_\275\3772\303\274\340\r\031\275\273m\n=\306\002\333</\244\347\275\206\035\252\273S\025\360=\312\303\241=\021+\350\274{\017\220<\025\352\206=\204\364\322\273\310\233\340\274\376L\302=\210\355\310;dC\237=\341\036\n=\3122\332\275>\372\325\275D\246T<\247\212\207\275\005\033\256\275l\225\317\275\022\220\032=\270\373\204=Rh\016\275!\220o\275?\311\346<}\207=\275\251S\336=Y]\254\274\t\202\214=\2033\237=\202\037\250=x\345\r\2759I\036\275\025>\263\275\262\273\340\275\\\265\334=\340\371\270\275\0172:<_$W=\3203\255=\317\004q\275\303J\326=\275\320]\275|\204\223\275\307\263\275<\340\362\203<_\241\'\275\243\343\250;w\r\307={\376\316=Z/h=\276:>\275\324\007\253=\214$V=>\201\232=\244\247\304=ug\222<\\\311\005=\340\t\261=\230\323\202=K\244\230\275f\364\254\275\251Z(=\003|o=q\346\372<O\212K=\261\336\371\274@\222\314<\017*\216=\310\352\321\275\216\0171<\206\321\333\275NG\200\274ow\353\275\270\351\206\275I\005\360\275\213\344\223=f\3020=\343at\275\232\010\266\275\345\306\337=\261ll\275\321\324\224=\371\226\247\273\211TN=\213\027\252\275\377h\205\274\001\254G\274\320\345\267=\261L5=\003\227\203\273~\360\374<\r\235\237=TPH=C\243\203\275R\322\253=\237:n\275\357\230\243=\017a\236\274\367\323\306\275\313\367\327=PHD\275\252/\311\275\304%\317\274\033}\303=\275k\021\275\360$\266=v\300x\275SP-=\321\203(\275\031\031\026\274\233\212\305<\311\233\t\275E\364\343=\263}\332\275P\024\007\275\014\372\314=E_l=(\006\276=\301\013$\274Ll@\275h\322\273\275T-\202\275q\315\251\275\262\'\360\272\331Z\312\275\026\246\373;\224\362\322\275\3039\264\275\361\000\010<?-O\275#\372\215\275\230J\222\274<E\250\275`R#\2756>\305\274S\010\360=\350}H<:TA\275\\\365S\274#\203\357=\027\313y=|\231i\275\346\320\250=\005\205\254=\225\264==\301(\036\275i\374`=t5[\2755\014d\274`Z\335\275\244\223\247=4\r\353=DLa=.\005\246=\317\271\300\274j\202t=\364\260\177=$\312\320=\277l\224=\316?\253\275\212\352\320=\350\006\227=\200\267\252<S@\036=No\003\272\211\370\277=\344\200\253<cw\346=\323\220\223\275\005h_\274\022)\035<^~\252=\350\027=<\374\340\304\275\314>\300\275M\001\323=\275\231\325=\313_\355=7\337\020=\241\363\242\275\333<\'\274\377\000\200\275\234\276\260\275h5\033=\366\032\210=\226X\222\273\313H\345=\215r\276\275\232n7=-J\333\275\246\267\222\275#\360\340=\217\271\220=\220\0353=\223^\224=lO\245\273^\020\265\275W\235:\275A\275\307<\344:\307=-\n\035\274\317?\342\275\320\374\342<\262\351\277\275\nw\307\275\017; =\356u\216=H\221\301\273Yx\327\274\242\335\225\275\013\333\304=\211\332\240=00\272=\022%\333\2757\031)\275\'\303\017\274v\236\242</\035\322\275I\314\307=\276\365\221=\342\260\204=\023\035\334=\216\014\316=|{\016\275w\242\006\275r=e=\301\225\255\274\306+\266\275+\222E\2747\002\304=\217u\204=i\365J=\013@\330=1L\271\275mCI<\276\026Q\275g*\346=4\327\266\275c\205\251\274z\364\263\275\320W\221\275/h\335\275\202k==\372K\270\275\213\215\003\275K\363\202=\254A\013\275\222p\273\275\365\217\361\273\334n\203;\237\337\323=E\277\327\2753[*=Q\n\226\275\274\303\360\2741\027\351\275\355\221^\275BYk=\272B\246;Gg\303=\254\344\264\273\372r\345\275P\260|=/\330\023\275\236\355h=Q\0348=\214\272+\275\257\243\021\274\3200\233=\260\277C\275qZ\233=J\247\256\275\372\016\254=\235=\"=\221\357S\275\310y\221\275\246.\336=\362\256\305<x\324\332\2754$(=)l\314\275~\033\200\275\0222\316\274\374\314\324=\"@\204<\300\r\311\275\371\377\341=\2165\323;\376\3476\274\201\275\240=\375\2043\273\363\205\335=X\251\271\275\271Dk\275O{\220=\0138\343\275\033\347\232\275\2632l=\nB\274=\244\227(\275\377\022\310\275\321\345\246=P\354\363<\355K\335=\360\305\205\273\200\024\205\275\365\003\331<\0172\241=\020\225,\275A\027V=\225\327\211\275z#\332\275\t\272\334\275#\301\227;\356-M=\362}\325=-\317\032=h\033\360\275\2634\007\275\t\341\256<\230\303R=\245\032\213\275\351\352\203=O\233\270<R6^<(\364\262=(\213\354\275\274S\353\275\235\202\311\275{8\337\275\013\2213\275\0241\357\275\014\245\316=\020\326(\275\226\032\307\275\206\370\377\274\004S\331<\\9\241=\360\031P\275(\215\312\275\373\241\340=aj\240\275\260r =T\033\221\275\265]\215\275X\\\017<\351\313\352=4\024\215=Jl\363\274\033\241\\\27559\252\274e\233\271\274<\003\343\275x\313\177\274\224\256\217\275\322\035\355=\321(\351\275P\3119\275\341\372C\2751\317\210\275BhZ:^\232\352\275A\244\317\274\355\177\242\275\345\035\023=m\025\031=\260\343\270\275\264\327\236;\252d\300<|\003J=\212\271\224=v\n\341\274\331\026\177=\017\307\272;8\326Q=\363\342\222=\000\007\357\275B7s\275\002\313\271\275r\317\243\2757\257\324<d^\260\275\271\021\202=\300\267\254\274&\3640=\262\270\344<\304+\236\274\334\362\275\274p\310\210=\277K\245=o9\274\275\254\027\006=\357\220\316\275IGe=\370\261\236=\375-N\275\302\356\230=^o\362\272\362\307\311\274\236\320\224\275\021\202\226<\366\216\205\275\322\334\372\273\022\232\321\275\027\346\034\272\346\262\034\274\000\367\322=\027\255\370\274\260jU<\344ef\274\177X\246\274u\201\262=\273\215\355\275\335\316\361\273G\225\300\275\226\017\242\273\202[\212\275\3711\233\275\373\007\231<y\356:\275\036z\331\271\313\374\335=\355\004\300\275\203\333\330\275!)\351\275\305\017\333=\227\004\220\275\365-\313\275\000\251\355\274\267b\246=<\200O=\253I\264=\225Q\315\275\345\026>\275\374\2230< \377T=\027Q\235<`Q\202=\006Y\217\274P\247j=M+\346=\253\223\264=\2432\213<R\353\265\275\330X\025\2743[C=[\257m\275\344I\306\275g\321\222=Y\232\250\275\271g\243=Q]*\274\336\261\336\275\212|e\275Y\253c=\034/*\275\232\241\332\2759*\002<[\034-\275\234}\322\275o\316T\275\223\215t=\310\347\335=\373 _=G\216\006=\315&\363\273\216\201\220=\320\032\247;\347\225w\274,:6=\354z\232\274\227s\314\275\nV\354\275\220$\356=\226\035\347\275\326\320o\275\3051\307\275^w\241<\177:\357\275\331;\\\2758%y=\356\250\304\274\"P\217\273\2054\227\274:\220\247=i\301*\274\302\352\335=\261l\264\275\211\202\210=K\036\322\275(\203\334\275\365\212\226\275\226\206N<+\211\347\275b(\241=\205\017\267\275\342\024i\275X4@\275cw\021\275\"_\227\274HU\222=\336k\276\275\246K\325\275\246\021F\274|\246\321\275\242\232\026=\304\231\203=D\363\214\275\275\271];N\217(\275Z\341<=\371\212\361\274\3278\016=>\320\242=\270\272\302\2753v\351=\304\202F=\0061\346\274:B\354<:\371\353\275m\024\227=I\225\203<z\332\313\2751\203\314=\271\220c\275\353p\277\272o\010\257\275y\365\263=\232\371\320\275\374\300\274\275\215c\r=\265C\256\275i\272\240\275\235K\223\275\374*7=\374:\023\275\275zc\275\225nk<\240\374\376<\014\311^\275I\3213\274\215\r\347\275\234/\261\275MYI\275s\373\313\274\tXW:\363\221\331\275\004?\024=\001\357\314=\344\017\264\275iA\212<\234\303\304\2751j\243\275\r\\\313\275K\177}=\216YX=2\257a=\021\315\366<l\210J\275\3727\336\275\000cM=[m\261\275\2369H\274_@t\275R\220\007\275t?\301\275\021\347\232\275/D\353=\004\342M\275\255p\323\275\307\200\276\274\026\214\275=\376-\273\274\340\022j=\212\241\313=\037.\256\275\255\337\364<\024O\343=\024C/\275\374\313\035\275*v\004=\346\320\241\275\202\243B=iou=\316f\210=V\303~\275\270\266\031\273W\231\243\275\326\025\306=/\247\200\275\314\264\330\275\276\321\272\275\2362\035\275\364\255\274\275%q\275<m\310\351=v\306\230\275IR\307\275\030r\327\275l{8;g%\261\275l\023\200=!\370\211=\216\211\323\274\226\312\004\275\336U\340\275\242\264\301=\004)B=\203}\346\275$(\227=\251;I\275\204\\\224<\325x\353=\310\207\256=5\036\226=\224\276$<\321\302\275\275\277\263\303=2\333=\275\275\345\202\275\304\001\300=\375-\001\275\226\220\237=iq\305=\024X\324=d\316S=\211J\002<\264N\253=Q\2142=\'\311\276=C\225+<\356hl\275\'\324\201\275S]\031=\\WI\275N\031\357\275\202\r\340=dX\352=L\0160=\243J7=V\267\036<\016\027\310\275\337k\221\275\ra\"\274\014X\017\273\001\2324\275U\231<\273\201M0<\025\240b=R\177\321\2755!?\275\177\225\300=w(\007=\233\344\312\274\236\222l<\346\333\344=\334\307\302<\035,\240\275\263\310\207\275\217-{<\032\027\206=^9\250\275\030\010e=\370\236H=\3209\242\275\350\364\373\273d\205n\275\212\356\226<\017\253\347<\266\202\007\2722Q\332< \277\225=a\304\223=\210d\236\274=\005\361\275\374\232\251\275:\324\200=-+\222\275\323\331\324=\263\0011\275\361\273\205=`\223\342<\334\tf=\232\343\022=\255\030\316\275\210 \000\275\3739\326=O\267\322=>n\204=\300\207\341<\030\345\321\275n}\355\275\254\2463=\377\201\212:$F\250=@\020\273\275\250\361\265\275D)\335\275\300x\213=\'`\307=d\203g=3\217\234\275I\032h\275\307\316\272\275&\237\004\274W\220\350=p\200\272=\227~\274\275M\250\017\275\266\363\252\275\244s\023<\324c\360\275F\225\321<\016\237~=Z\006|\275k\304T\275\026u\277<\032\'E\273\227\276\267\275\316I\004\275RtE\273\250h+=|\351\264\274\347\353B<\314\247\352=#\332\212=\334\t\203=6\373\224<\177\341\302=j\347\257<\261\260s\275L\256\337\275\202\223\213=C3\211=\372l\206<\217n\274\275\261s\221=\363x\177\275Bt\342\275\273E\345\274\313\024\230=(C\265=\313\266e\275o\226\222\274\262T\001\275WA\314=.9\242\275\022{\223=\r\031\037=\310\343\372\274fH\241=\322\212O\274\024g\256=X\262\237<\241\257\332=M[\225\275\033\230\310\275\013\\\227=\340\347\236=\310F@<\251\376\254\275\372\264\244\275Q\370O\275Q\253\355\27556\225\275\000\3325<\202\030\352\275\nu\321\275\031\001\267\275O\212\356<\246\353,=\n\370a=M\370\334=-J\313=\350\331\033=C\356\257<\224\007\277=\2032@=\030H\275=\262\377\330\275\351\337\202\275\027\271\260=\321IQ\275\342\350\336\275\023\351\305\2755\021K=oJ%\275\201\362\032\274\246\220U<\200m*\275]Ov\275\030\240\305=N\242\217=W\221\220\274h\223\212\275\344\237\257\275\007=\211\275=\314\217\275AL\021\275#{\266\275`+\002=#\336\202\275T\270\360=\322\344,< \nV=<\034i\275[Z\020\275\265\2270\275\223\302\327=AVo=\t}7\275Jm\\\275\365\200\244\274,\360\212=d\207\277\275U\030:=\226w\211=|\331\216=-Q\337=\221\\D\275\250,7=u\r\311\275s\357\333\275R\272\305=\266<j\275\0374\010\274p\201\024\274L\371\320\275\322\322\215=\272)\305=\210\003\317\274up`=\274{\n=\207\223\262\275\000$\221\275\027\021a\275\177C\247\275Z(\346= uW\275\347l\252\274\306\'\207=\300\360\253\275\0170\341\273\276\267\314\275\224I\022<\025\005W<I\177\031=\270\311\221=\375\364\236\275\272P\276\275W\336\343=D\315\274\274\001\006\311=(\215z\275\311uJ\275\351\343\337=\226\202C<\314\241b<\326R\245=Y\345G\275s\343\202\275\177\332\206\275\356T\345\275\374\202X\275\246\211\353\275K\274>\275\005z\342\275+ \223=\241e\324=ZR\355=\364\234\300\274s-\241=6\337\321\275\220\306\327\275\006=^=uD\277\2758\234\033\275+\242\035\275t\262\260\2752Pj\275\371I\247=\347\006B\275\305\366-=A\344P\275\273\t\336\275\323\301\247\275\021\216\253=!\220?=\306}\257=\256f\212<\325\2361\275n4\370\274\236\212M\275<\263q=\006\013\266\274T\202\032\275\014\014t=.eE\274m\325?=\301^C\275\344\266\346<x\351:=\275\275\233<2L\255=|\355\314=a\226\336\275\\\023\216=\337n\003<R\265\310\275\030\"\005=\361\004\t=\376\r\262=\272 \222\275~\034\216<\346Og<\'\347&=\275f\t<\304\303\323\274\033\265\274\275\3524\331=\014\033\210=_V\235\274\3607A\275\211i\312=,N\"=9\363\002\275\330\304\336=\016\013\316\273\363\356\245=\330\3421\275\237\301]\275F\365\255=\232\005\272\274\265\272Q\275\314\022\231\275\306\026N=\035\270\277\274P1\207<>\212\200:(\342Z\275\242\354\317=\0130N\275\t\3271<\241\021\221=\334\213D=\334\313=<CL\361\274\306\201=\275\2244\277=\364\035\205\275\265*T=\020?\361\275Dc\307<\321\256\257\274NU\225\275\021LW<\033\215\023\275\254\257\346=)\237K=\200\264\254:\350~]\272ZS\204\275`\370\350=\\\343b\2749\364\253\2734\235\372\274\235\234\211\275l~\311=E\227\304=\316\332\333\274(\305\003\274\r\251\206\275\272\305\275\2756\273\240\275\244p\221\275\211Z\321<\360\376\315:\303l\241=\233\220\271<\230\261#=\344\222\366<\237\250\006\275\237\306\003;X\200\211\274\033\177\261\275 \206\277<$\274\n<]K\324\274\330\013\245\275\302\260B\275^]\263=\317=\017=H\201T;\232]\326\275\226\017\205<\257\257\206\274\350\035\227\2723\374\321<\013\226-\275\314x\276\275\345\242\260\275\005l\247\275\250\364\350=\325^\275=\367\016\326=\3509\335\275\246{{<\037\204\334\275\253\017\303=\014\273\275=\264\271\245=\037h\223\275&Z\221\275;\300\366<\231\246\313=\214\266\210\275k\343\307=\3024\006=\004\246\256\273\305\220\256=\235\211\201=4z\235\275\005\230Y=/\010\272\275\341\255\220\275\274\363\2049O\306L=6\302r\275\231>\177\275\243d\272\275a?\333\274\232v:<\r\324\314\274^u\347\275\0313\212\275\313\326\262=\342\201s<\233J\310<\375*\274;\235\310\'=\177]\351=\250\343\177\2756T\303\275\307\027&;\356\317\246<4\367\003=\234\201F\274\024]\245\275\250\311o<\352\307\314;XA\330=\340t;=(.2\275\355\230|\274\302-\330<\345\'\215=\346o\323\275\265\211/\272\344\303\262=\205\352\222=\007\356\032=\366\261\340\275\202\t\267\273\321\003<\275\243\212B=\002\340s\2754\327\316\2750E\265\274\311\374\220\272\020\361\225\274\304w\215=\304\006\303<\350\345%=\350>\017\275Kl5\275\376\257\235\274*\271*\273\037<\243\275b\336\016\275\301.\\\275,\264^;\246D\247<\201E\343\274\372\244\356\275\\@\023\274\014\354_=\225fy;\276\354[=\tb\223\275F\3369=t\361\302<\210\356\320=\315\235\270\275\325\336\370\274\336\037\261\275\252p\324=\240\347\355=jx\202\274\362\265\215=\263A\306\275F\014s=\254\352\200=\377\025\207<xn\233=\334\364\213\2753\002\t<\276\364\203\275\2212\357=#\371\335<6\013\332\274G\376\307;)\350\213\275\322\354\200\275\215L\300\274\233\271_<\0024\215\275\316\213\314=\025f\207=\005\256\\=gB\303<\354}{\275.\273\215\275L\356\311=\230K\216\275\324\271\026\275\215\203k=LF\220\274D,\037<\010\310\217=_\r\026\272px\307;\226\211V=\004\264\327\275\265\3644<~z\325=*\241\224\275\370\245\232\273\310\350\201\275T\006\351\275\326b,<\222\221\354\275\265]H\274Jkl=H\226{=\201*\224<0\347m=\037v\250\275<\274\324<\244\026\264\275\252N\210\275Rs\037\273%\235y\274\251to=z\032\347<\355\375\234\274} $\275\n\257\324=\021:\321\275\206\207L\275\347l5\275!B4\275\'\253K<\320(\231=\234\342n<\337\224\314\275\215\240k\275\311$\257\275\307\241y:\261e\235=\324\325\360\275\2541\330=\375`t=\0164\347<ua \275`\367\211\275\316<~\273\344\320\255=\324\254\376\273\326\335i=\224O\317<\204\016\025\275W\332\030\275[\260\225\275\313mc\275\2637\022=\3527\022\275r\352\346=b\307\367;\334\n\031=\366\270`=?\341\273\274z\233\356\275\332\213\256\273\304\300\257=\213\274\265\274 \227\035\275gl5\273\373\022C\275\013\201\272\275hl\224\275\231:\323\275+?M<\231j\306=Z;\234=\225\324\233\275\377\343!\275\376\"\233\275%7\372\274\007\343\333\273\\\331\262=\363\337\250=\250x\303\275\253y0\275Djb\275\361\204\314=\002#\220=\254P&<c\313\257\275\021\037\244=\276b\224\275\340\356\363<k\365\236\275\3053\352\2758\202\314\275\'\013\003\274p\021b=\373wN\275\033\342U=\005\200\257=\233\032\210<\2304\001;\254z\320;\227\214\223=\320\232\317\275\314\\g=\245\261\020\275\326\243N=\021\3700\275Y\200\301=R\326/=3\321\206\275\342\257\002=\353}\017\275\232\224\344\273\3701F=\236\006\324=\335\317\222\2757g\275\275\325\347\322\275\3506B\275\206Y\270={\3605=yQl=\337\333\270\2753Y\253\275\002\237\202\275\345Yf\275\271\242\303\272>/\177=E\277\235=\302\017\304=\037\224\017\2752/\336\274\307\302\007\273\335Hd\274\233\t\314=\221\243\325=\320B\245\275U\265\333\275HL\275=3\354\351=\361U\265=\3648\344<\240\355\275=?\234D=a\006\006\275\217pL<(\370\313<4\362\t<\304\3077\2750\026q\274\335\227\032\275%\037\017\275\215\246d\275\302\023O\275\033\031\350\275\"\241^=\370[\035\275\024\310\206\275FR\307<\251K\305\275\215fh;f\340\277;\325\365\311=\230\314S=S0\256=\332\314\212=w,\341=sF1<\024\373b\274\257 \340\275]yl=oUM=i&\301\275lN\216=\335<\273=zw\236\273\257\343\222\275\344uH\275^\301#\275\001!\217=\220\251\211\275\303t\227:\360v\035=\353\237,\273\226\327\215\275R\313_\275\254E]\275\307\034\230=;\265Z\274\372\232\007<\277\325\037<R\201\255\275\037\350\277\275P\276\211\274\317\300\205\275\227\205e\272 +\257=\323\330\325\272\372\030e;\325\014\036=\306\036\026\2758\005\352\274O\353\336\275:\027\257\275\324\366\362\274\247()<M\021\313=\027\217\211\275\251\007,<i\024z\275\304\275\211\274m\207\334=\225\215\302\275qk\327\275\233`\301\274C\244\351\275\323?\260;\200,\336=\233ln=\230\264f\275\3539\234=\277\343\243\275!v\324<\252\334\304\275\211\037\342=X\320[=\367\306\234</\245\224\275\300X\307=\355\\\335\275\264N)=\247\263\313\274\224}\345\275\360\001\371<s\004\034=-g\317=\016\305\277=Y-\260=\377\357^<\213\003\312;\324c\260\275\313\313\343=\217>\340\2743\355f\275G\204\256\274\020y\305<\312n\000=w\307\335=-1\254\275\256\351@=4\345\312<\230\227\215=rh\320\275\250p%\275\374\026\322\275\200\353\360<!\204\003\275r\375\327\273\033\206N=O\207\360\275\001\3656=^\352\003\275\006+\203=\036\375\007\275\244\361\317=\274\274\203\274\307\303\242=L\301}==\2444=t\262\244=N\325\204\274\210\367\273\275\353Kz=\216\236\316\273\245uO\275=\367\236=\355Pa\275\250ku=\005\361\227\275\376\016\220=\274>\263\273s\023\252\275\343\242\314\274\005\264\332=\340`\350\272]a\341\274\273\263\346\274\315\026\377\274\224\315\354=l\021\267\275;\007T\274\\\021\024\275\261L\225\275\346\356\247\275k9\255\275+\334\233\275\244\350\354\275S\274Y\275\247/\267\275\340q\206\275\221\361y<$|\216\275S`\244=r\304\203=\200si=\333\260\003=\016\305\320\275\301\260\004<\323\332\246=\201+\357\275\305\311\002=\251\204\204=a\3242={\323\316\275\372\325\210<\255\367\214=\251<\010=y\345U\275$\222\327\275\241z0=\034(q=\013VW=xOu\273\374\\\t=\374H\275:\350)}\275]\007X\275\020\360?\275D\027\276=\356\333\n=\277\245\350=m\271m\275\321tK\274\211N*=\005X\357<\250\206\214\274\260\217\250\275\365O\350\275]\177\330\275\330\315\310=\034\212\215\275\t$\362\2743\354\343=\r;b\274\313y\262\275\232\242\r\275\265\t\366<\334$\005\275\223\243n\274H\312\233\275\265\247$\275\340kc\275k\370\'\275g\220K<\005\337\361\274\321\177M=\374\252\236=l\251\004\275\303\324\n=\276\344\346\275\251V\022\2747)\270=\234\211\254=\244\342*\273\374\013\360\275\251\306\314\275\200:\000\275Ne\241\275&\353p\275\301\265N\274\323J\216=\216\010a\275\331\332\227\275\326\341\317=(L\216=\333\320\212;\232\324.<L\345\353=\036\377i\275\332\256\212<x\277I\274\327\226#=[5\246\275\373\237\301\275\365?\241\275\3625\220\274Eh\342\275D\260\356\275\362\275\200\275\240`\271=\243g@<\027\230s=s\177\301<\345;G:F\323\262=\222f\251\275\336\354\263\275\234\026j;;\177\235\275\000\316\342\275\020\025\037<\224\224<\275\304\\\324:\374\276O\274\310\240\031\275t\2202=\242\325\344\275\333>7=\221\311h=,6\277\275<n\357\275\370\034\262\274X\031\224=i\224\300=\265\224_<+V\246\275%:\271<\221\350_\275\334\\}\275c\225\363;\216\254\243\275\233]\323\275\3347H\275\346\252,\275\350lL=H\337\307<\312\373\251\275\362\262D\275 -\356\274Rh\237\275\221\214\341=\240.\311=Rp\022=\321P\004=t\371M\275\210\234\010<\201\022\247\275\244\365\245\274\317\212\247\275r\000\213\275\311\367\266=\032\237\336\273\r\243\356=J\325\010=\337e\342\275\016\227H\275\301o\344\275\372{\025=)r\327=]\274\376<B\237\037\275E\'\027\274\2575\007\275?_\313=\223\3207=$\366\325=s\272m\274\022\342\262\275\274\022Z<\341\006\302=\235,\353<2\247\325\275\252\314\225=\226\232\223=\361G\325\274\364\331w\275\032\000\300=U-\215\275\263a\347=qT~\274\204\003\334=\344_p=\000\215K;6\026\321=\356\027\222\275,\354\200\275\271\000\375\274\352~{=?\014\355=\014s}\275\234\341$=\371b\310=\301o\374<\240N\022\275,\023l\275\036\312v=\243\312\341=\231@n\275E\256\237\274r1\246\275\037?L\274OCC<^?e=;\035\351=\221\025\302=y6\343\275\270\314Z\275\205{\254=\003s;=\335^\253\275\\+\002=}\\\311\274#\317D\275\324/\210\275\233\352\331\273\260\013\345\273\201yZ=\301\245\334=\001\202\034=f)\276\275\203\002\270<]\345\266=hE\333\274\032\253\261< \\\273\275\326\016\265\275&\236\037=\257\027\343=\257\346\274=\367\270\277=\263j\321\275\013 \202\275E\253\261\274h8\006\275\330\324\333=\002`\375\274\317\222w\275\255\017\315\274&s\220<\025d\316<\351\037\352=\241\302\346\275\342\332\272<A3A=\320\377\324=#\275\300\273\371\362\317=W\377E\275A\207\345\2758\310\265\275\324\006\313\275)\240\334\275\003\371 <\353\253\207<z\242e\275`\314\234=\266p\227=C\340\330<I2\324=*]\257=\271\002\203\273\205\323\346\2754\014\205\275\275U\022\2752c\233=\366\r\313\275A\242\325\275\r\031\210=\341\252\233<\362\007\265\275\227\260\324=\024uH=\235\t\246<\232\305\006<(\367\353\275F\277w\274\2043\241=x\305W=\215\353\333=\204$\243\275$s\234\275\255\270*\275\317\305\312=/\351\030<\356\302\032\275g\n\351\275\'\004\\\274\271\006l=+\010\361=\tr\341\275\351\214\352\274\333V\001\275\235(\206\274\256r\244\275\010\277\215\274P\230\332<\313\245\242=\006\2102\275\0167\324=\r[\274=\215\'\323\274/H\270\273\370\252M\274\323v\352;vV\213=\222\331\333<\007\341\003=\343n=\275\243\365r=\264\030\267\275\236\337\215\275\275\224\352=\360]m=\336Ft=\000\371\235=:\340-\275\320k\213\275\217R\211==\210\337=\236q\365<\304\006\355<:h\225=\371\"\204\275\3174\271=b\246\254\275\201q\357=\331\247\352\274\007\223\247\275\222\251[=\005D\211<u\227\245\2752\230\256=\241\330\304<\36068\2753\017\325\275\201\360\314=\\\311\326=\035+\311\275\236\225\321=\345\000&=V^5\274\301\n\312=\310\367\237\275m24<z\236\323\275\360\245\311=\032\227\350\275\351\323\270=o\345\332\275\302\225\326\275\221V\335\275\006\363\333<@\376r\273KkR\275\340)\314=\177.\227=l\362\230\275\236\n\215\275\0061\317\275\n\024\322\275\366\353\"<\233\032\222=zp\234=*t\253=9\014\3649\004\347\263=XIX\273\247\240\363\274TY1\272\030\014\032\275l\t\301=\253\177\005\275\313\0007=\'\234\016\275r\243\244\273\364`.=&0\023\274\370\3230:\276\017\254\2750W\374<\267\255\206\275|Vh\275\357\016x\275\257i\303=\301i\334\275\220!\275=\324?t;O[b\274K\332\340\275|\027\214=\370\030|\275\223\232\213<\360\212*=\201J\340=m\371\210=\253\213p:m\371\t<\'\374\356<\'!\000;O\246B=\266\333\341=\333\306\257=*;\236=[\\\220\275\243\nD\275\375\260\224=\367fi=4\357\266=f\r.\275R\370\300=wK\214=Gu\3378\n\327\314:\007I\331=~\027\214<\212I1\275\021+\272\274\210\032\356=\026\313\212<|\240\025\275G\252\3559Ji\310\275/\264#\275!\220)=R\020\350=gN\272\275\374\005\253\274\2610\000\275\367\013\200\275\300O\016\275\321\360\342=\213\237\255<\362\314G\274\306\t\230=\241\347\302\275\343|J\273\020=\266\274\246<\302=0\317B=\374\361\261\272\2224-=\332\247\330=I\034\000=&\214\227\274\207\254L<\265=s;p\231\250=4\274\331=\030\300c\275Y\035W\275\271\211\201=\256\214\304\274\204q\202\275a\231\305<m\274A\272\375\255\236<\223\354U\275\366,\272\275Q\014\254\275\351\330\265\275\253v\276=D#\305=D\346U<\233\010\361\274\235\314\257\275f\227\261\275\236|\232<?4\030<U\2675<$*\357\275s5\375<p\2152={W\320=[\303\330\275\335\366m=t\016\007=u`\201=@\346\235;\301\034\201\275\351\005\342\275\377\324\006<\n\236\326\275\264K\267\274J\367\334\275f\240\352=\324\374{\275 \207\354\275\377&\272=\327\330!\275\352\313\275\273\310\353\354=\362w\033\275^9\262=\275P\204\275\355\374\351=T\'\322\275\265G3\274&\263\354\275B\177\243=\017#9\274I\327\343\275E\206\360\275\027\240\017\274\304R\354=+\351\214=\204\273\351=\357\363\262\27596g=\344\233\337\275\'}Q\274\0304\225\275\035\204\315=\035\007C\275\007\372\266\2722]\216=+B\006=\354\214\333\274\361\273\304=<\256\312<]\003\261=\312\372:\274\030\3767\275{B\350=\0374\222\275\314\263\350<U\300\206=\214\343\206<\014\357\264\275\255[\243\275i;\312:Cu\361\275\221\262K=\024L7\275b\350\272=G\345\226=\317W\033\275O\240^=\362y\177<YN\376<\336\337]\275\362\207k\274\310\331\001\275\300+\321\275\375nB\274q\264\246=\222\223\220=\033k\203;\242\202\270\275x0\310\273\013Q\377\274^\212\337;\261J\322\275\227>\330\275\310PG\275\033cg\275\022\310\304=\250U\324\274\247\350R=moe\275\031D\351=\362^\177=\276=\335\275>V\244\274\017\\\037=#f\347\275\036\327\244\275Z\334\235<y$\022<t\340\336=>\033\334\2756\251B=\314\'\200\275\201\221\375\274\017\337\263=\362\027\316\2756;\260\275\251\001d=\377\362\343\275XM\237\275\267^\226=|\014\201<\271\225\313\275\335.\321=k<\307<\307\261\r=\325;\320<\031!\315=\222\262\342\275\303\213\311\274V\322Q\275\334\317\316;\336\002<=E\007\270\275\246U\347<\374\217o\275\t\340\256=]Z\225=Cva=\236M\020\2758\340\312=\372N0\275\225ou=\220\':\275\311\000\307=\027\360\027<y\367\232\275\327\347\020\275\301\260)\274\205:\367:X\342Z=~J\205=j\305\340\274\264\244$=\254\256\363<\023\020\245<\257\327`\275\3512R\275#}\211\275\300\025M\275\317S\234\275wL\230<#\003\317=\242\231\004\274)5\216\274\314\033\254<\366[\336\275\377j\206<\330&\353\275\264\306\367</\224\335=\200\272f\275A\300\227<W\311\227=\336\3546=\275\276\270\275\264\233A\274Ah\241<\376\363i\275_\230\337<\256\007e<>&\\<\311LZ\274\375\345\332\275Fz\314=\026\033\224\275\nq\002=\201o\223=\220:X\274#\306U<\377\210\014\2757\333\255=\313\347;=\234\371\353<\2064\357\275$O\023=\020$\304<i\035i\275{6\'=M\006\n\2750\355c<d\352\307\275\2622\332<\244\363\342\275\n\274\255=-\342h=\312\337\213\2757\254Y=\r\322\236\275\323dx=P\002\332=\007\253M\275u\353\274\275\024\316\234\275\2750\"\275w2\243=/6\244=\014\"T\275\270S\271<$\t\232\274\374Z\210=\327\265\350=\324\030\244<\333g\344=\212\377|\275\364\356\343\275\330\370w=\351\021\343\275u\230}\27593\264=\033\007\300=G\366\023<\327\366\234<x\215i\274\326\200\260\274\345u\301\275\270\317\207=>\035\342=!z\200=\304\250\272\274\\\024\305\273F\'\010=\021\304w\275\260\236\222=J\360\263\272\250\310o=\250;\305\275\314\237\361\2742\214*\274\'<Z=B\357\360=\307\347\334\272\300\202\343=s\201\263=\217\224\231\275\346\217^\274K\3364\273\315\323\345=\375\222\"=\031m\276\275\311\332\227=\261\326\344=\372\325\\\273\345HQ=\336M,\275\364\301\232\275\360\233\261=<\234\274\275\335\223W=\034\311\340=nt\220\274\373=\344=\251\321%=\367:_=\367\342\301\274\362\340\220=G\033\337\275U\247\357\275\231\2133\274\370\3170=\364_\227\275\033\314G\275\3026\225\274K\202\"\275F\r&\275\t\236\305\275^\355`\275\030\227\301=\236\230\254=5\346\346<[\350\355=\201\020\271=\031Y@<^\373\024=sy\024=@=u=\204\007)\275\271\215^<\004}\215\275\021\223D=\"F.\275\335o\27093R6\275|A\r=m\303\206\275\024\374\223\275\337\343\237\275\3756\320\274\265\256\344=\"T\311<\031\006\357\275\265\326\237=\"\226\264\275\204\366\317\2758\333\303=%P\263=\277\023\271=\010\256\255\275\\&\023\275\3319\250\275\027\r\n\275\r\275\267:\307r:\273!3r\2754\314\310\275\371\351\217\275\232Rp\275g\250\331=|.\344<t\324\323\275\305S\265\275\177\344~\275O\330\302\275\232\004\260\274\304\014-<cC\325\275\'\236\021=\225n\213\274\267\007\r=\331\235\341;\\\351\352\275S\251\250\275\276\232\320=\347U\262<x\356\260;\205\323\271\275\232\355M\274\212[\213<\027\nt\275\233\005\300\275\356Y/=\242\251/=\260\022\235\274\r\263\370\274%\323\217;q\211\340=O\000\271<\334\022\261<]\214\035\275\250\226\262\272T\366\233=\2431o<\354y\211=\217\216\255\275\263\037\214\274C#\303\275?\202\273\275\242^n=\357L\340;RI\330\275\313w\333\275\002N^\275\256E\214\275jt\207\275\306\316\346=\327\364l=\221S\327\275\262l\t\274\342\240\374:se\314=Ky\252\273\'\313\313\275\003\005\225=1\271\262=\000\252\031=\014\336\205<Gy\236=\241\232`=7W\262=&\252/\275\264CL=\210q\217\275\'T\260=\003`\347\275tW\306\274\n\034n\274x\363\351=\324+$\275\016\001R=\364\025\323;k\t\253<\230\365\222=+\230\306\274\242\264\202\272\343L\220\2751/2\275/VW=\231D\202=\223W\345<\010\234\220\275)7\t\275L\344^\275\322%\216=Y\364\352=\305\225\252\275PE\200\274\235\330\350\274\365x\202=C=H<\321x\356\274\013l>=Wq\253\275\262\314\025=\367\230\035\275\034?q\274\313R\327=w\203\326\275~\210 \275N\316n\275\324y\265=}C}\275*\261\232=\331{\225\275\\\377\270=~\333\260;\302\004b=\025b\001\275*\327W\274\264j6;\024\255^\274\335\223\266=\217\314\006\275u.\303\275\324a\227\275\357\"Z\274d\353\250<\307)\314\275S\265\232\275e\351$\275vS\030\275aE\341=\343\333\361\273H\3055=\255\321\233=i\353t=\321x\200=\342\310\250\275\351\261\226=M\371\257<\253\277\276=^\031\250\275O\215\230=\362\"\250=\340\363\233=k-\224\275\320\200\002\275\210\207\325=\007\352\315=\332\235 \274&\326,\275BR\367<$ga=\240w\240\274u\"\267\275-X\262\274\201`\336\275\367\204\241=I\331\226==v\222<B\376\351\275\245\"\017\275\177\340\211=\201\243\357=\346\r0=\265%\255\275~\251\217\275n\326\227\275\203\035r=p\330M\275\031i\326\275\253x3\275\235g\221\274`\\\211=\242p\305=K/\256=\034w\270\275\303\246j\275\367\274\027<SF\271<4U(\2751\207\371\274\263\305!=\r\316\236=\210G\225\274\237\314\026=\312\307\231\275$\3320\274\325\206\260=\034S\230=fU\265=\371n\267=\350\316U\275J*\346=R+N\274U\373\233=\365\004\357\273\005\362\346\275\246\0168=C1\026\275-\305\032=\324\007\360\275#8\342\274E\336\221\274\275\3549=\027\254\341=\365\322\242\275\340\243\236=\260\301\347=\375\212\310=\372%\240=K@\315\275B\301Q\274\266]o=\021\3400=\314/\264\275\306A\324\275\211\356\351<\003&\360=B\0177\275a\031\305<a/a\275`|f\275\006\213\330=\2240S=Tb <\006\301\310\275\026\035\251\275<3\313;~\336\242\275~\355\260=\373\342m\275\357p\037=5w\035\275>%\344\275\214|]\274rE\251=M\323\203<\224\305\354=\237^4=]\250H\275\3548\312\274\034\301\347\275\0140\030\275 \033\014;\326W\250\275K\271\266:\303\216I=\3703\241\275\324Y\312\275K\017\236=m\374\265\275\261@\345<`\355\020\275\376O(=`\232\316=T\310\016\275M\373\251\275\250\300\252=\203\355\354\275\223\325\261\274\250\226\347\275\221\222\331\274B\300\201=\356\223y\275N\310\201<\235\314\235\275\"\325\360\275M\217\231=\001\257\327\275\272\313\314=O\307\353=\255\"\355\275\377\265\222=\257T\343=B<\277\275\211\315\243\274\334\370\322\275\243\r\312\275\261\327d\275\343\232\360\272\247\275\312\275w \367;\004\r\031\273$\335\304=\312X=\275\227\217\261=I\342\260=L\206\254=\254\235\223=g8\254<\257E\320\275X\246\341\275\253,\026\272\002\332\002=\312w\237=J\3053=\344|j=N\327\203\275I\037\337=\264+\275\275\234\020\246\275\005To\275\300\006\354\275_\253\261=,\244\212\275\356\026\341=S\n_\273\325r\241=\276\021\266\274\020\222\364;|\177_\275\207B\034=\215E\323\275\017\222\223\275\002\207\336\274\340x\007=\271\351\263=\200w\310=\263\323/\275\355u\035=\026RV=/G?\274\nH\356=\021\313>\2752\376m\275\371\223\301=\213?\363<zs\277=\004.e=W\264\320\275z\325\361=jt\270\275\272Ac=\336\327O<\323\330\257=mf\215<Y\372\013\275\r\340\300\274P\307\225=\333\364c;\200\310=<D\022\357\272L\035\r=0u\265\2750\320[\275\276\334\004\275\206w=\274C\340\303\275H\257\312\275\256\257\332=\310;\330\275i\206\302\275\223\320\215\275\032\210\004=+\324k\273p\3653\275O\270g=\014\271\216:\311{\350<N\007\202=a6h\274\333\374V=i-\332=x\345D=e\232\227=go\334\275\375HF\275\235\243\276=\326\357Y=\350\231\356=qnA\275b^3\274\024c\347\275\037\265\232=\207\033\204=\331I\272\274\234\214E=\245GY<\232\243v\275\247\212}\275\221\260\300=Sm\352=\364\263\021<\205\213\277\275\356\034\311\275`\202\316\273)7\222\272\205\354\215=\2174\303<\24623=\223\032\021=,\233e=\327\252\347=\371`\253\275\2737\230\2741\323\263=eT\203=\022\205\257\275s\035\316\275\2357\335=\342\371A=\267j\030=\005\337\036\274\343\334\347<\t\205\232\274SG\316\275}^o\274\371\337\307=V\326\'=\037l\242=s\313\027\275_\031\355<\206>\247\275\214\330\355\275\214\267\276=\312\326+=\264z\346=\245\321\270=\340&\353<d\373)\275\"\377\206=A\222\270\275\210\306\303=\376\330H\275\212J\037<\030$\311=\024\232\313\274\032\021\344<\221\365\266=t\220\014=\234\317\010\275\312j\240=ge\224\275\3269\266=l\007\305\275\354D\306=\346\022?\274\003\214\263=%B\262\275\234\322I=\230nJ<\003YD;\343\230?\275\340\313\231=\013\322\345\275O\205\311\275\326u\247=\251?\202<\014;\276\275\327\336\241\275\375\366\337\274y\352\323\275\356\177\003\275*\262t=R9\242=G\347\301=\274\033\241\275\371W\336\275%\030Q=\'\273\342=\335\377\265=\016m\226<\362\032\350\275\304}\260=\200\336b\274\234e\264\274\005\2103\275(\224\036\273\243\220\037=\344t\200\275F$\275\275i\002\341=\304j\241\274{\236l=f\307\307=C\035\326\275\334\333\200=oLO\2759\222\310=\374^$\275\224\233v;\254\326\"\275\264K\255=\216\317\016\272\237H\347\273N-a\273\233ct=\362@\321=\313o\217\272\326\210\221;_\340\371<\022\356\340\273\020\325%\273\271\001x=\373:\267=\214\253\266\273f\317\371\274\240?6\275\245\205\312=\332\373\256\273,\341\356\275\347\367\355=\320\234\235=C\225\321=\001\312\334=\236\376\241\275\032\307\325\275\000\336\225\275\004\250\202<\223\232\003=\020m<<,\262\010\275\033%\245\2753\030\266\275G\242)=\010\351Q=\205)\327\275\334\256\225=\025\204\030\275FE\232\275\007\n\000=\324\325\343\275\017\204\221=\231\234\255<\201^\227=\353\307\304\275K.y\275\006\323@\275\301\277\246=\243\337\227<\003\352\372<\\\001\232=7\310\306=\260\253\260\275\035\253\234=\335\302\321\275\237\236\024=\262\360\244\275\224I%\275s\227\360=\314i\276\275\302\335\302==~\031=\t\027\275<tw\317=\245~\263=2\351\201\275\223\036\376<`\300K\275E\357\346\275\360\216V\274\370\332\214=\010\266\250\275\314\014\003\2744\260\200\275\326\177\356\275\321j\\\275\245C\361\275C\312\204=\003\177\374:\310\022\312=\305\n~\274\"(\357=\205\325\301\275E\335\355=E\244\334\274U\212\311\275.X\221=\222h6\274G\227q=\2044\340\275\035o\331=]M\250\275\200\366\"\275\330d\025<\353\314\250<\307n1=T*5\275g~O\275q\037\247=H\235\216=t\261\306=\247@\356<\213\306\205=\203,\214<\340\273\227:\274p\230=0\337\211\275\020R\315\274\371\247a<\256\252\365;\315\330\305=\014u\361\274.F\356=K\253c\275\330xy=4\332L\274\006|\206;\214\206>=\224\314\306\274\2445\024<\250\300|=\270A\214\275\213B\224\275\2661F\275?\223X=%\262[=\212\036\317=`\260\303\275\016\343\311=\273.\222\275;\026\317\275\372$h=Vyy\273t\235\367\274U\325\206<E1\242=A\356\036\275\364\323\301=\346q\214=v\351b\273\227\2020\275\303:\211\275\335\300\360\275\374\307\220=\025sh=\220\312\014\2751\215\256\274\303\331\306<8\337\232=\330\021\217=\233g\222<\032$m<\013{\351;\010~\224=\277\234\346<\232\006\347=\247;\241<\245\275\243\275\262\205R=\\JQ=\357Z\330\275\025\215M\275\260\247\272\275\030\356B=\203\323\210\275\316\321\216=DFk=+U\032<q\001g\275\331[\304=n%\364<\005g\210\275\331O\317=\003a\004\2754\027S;\377\246\214\273\032QH\275\215\343\213\2758\002\3409\030i\247\275\271\366\252\275\rk\222=(\236\235\273\311\347\023=\324\201e\275\201\235K\275^\037\320\275(\227S\275\315\204\030\274\363\311\310=6\023\362<\347\r\301\275\014\376!\275g\202\241<\215\217\203=\256\377\261\2755\001\201\275>w\316=9\300_=\313\367O=4\216\212\2752\230\273\274\204/b\275\337x\252=\331\217\222=$ \020\274dt\255\273\032I\234\273I\267A\275C\215\373\274\202\202\021\275L!8\275\247T\226\275\242\177\352=;i\212\274z\257z=\354\205\004\275f\253h=\265\tP=q:\331\274\002\310\340\272:\325o\274\375\031\355\274\216\367\305\274%u\274\275A8\332\275\254\036m=\331\037m=%D~\2742>\024\275\252\000\266=\314!l=\226yz\2751\234F\275(\335\222\274!\265\211=\020\345\372;\353\325X=\210\314\327\275G\177\223=u\341%\275\252\2625\274\242\350\211\274<\353P<\304\266\354=\370\350\341\275\247\336\260=\315\224\361\275]\374q;vqZ\275\026\251r\275\2052\232\274+\211>\274q6\243:\234\311\316=\022j\375<U\377 \275A\037\266\2759W:<@y\326\2744G\332\275\332\"\215=\014x\277\275\253+\317=\356\364\323\275\253T\212<C.\266=\2531G\274\213\000\214=sr/<\324\005\006\275\270\354\225=\346U\322=\231h\370\274\002\360i=Fd\205=\371\256\352=\313D\203\275\3549\260=\226oU\275\331\315\317\275\221\255\266<\363u\222=\316S\212=\031\031\310\275\2606\222<wb\327<\222\205\035\275c\233\177\275\302\327\242\275\006\000\336\274YW\361\275cp\350\275\346\267L\273\347W\340=p7\222=\2133|\275\246Y\366\273+R\254\275d\'\272=;\343\265<P:\340=\004\'\224\275\366\006.\274\242H\341\275w\262\230;\357\356\316=\364\314\311\275\030\327\250\275\177\265\241\274\317,\226=I\252\004=\004\2763=\006\020\340=,\236\344\275\2646\245\275]\372\347;\272\223\200\275C\033\211\275\241\277\320\275+\005,=x\225,=T\302T<\350\001\327=\013\361\\<\316Y\256=\325F\345=\372\303\326\275\227\036\324;\326\003e\275*c\335=j<l=\235\352=<-\372\257=+ \306=3\221\351=\345\224\306=?4\206=\303\005\333\275\216H!=,\203\025\275\215dT\2753\306^=\001\323\026\275\321\321\255\274\241\205\201=\024\244\372<\254,\226=\315\364\227\275\024\352D=M|\005\275\002\266W\274\337%\232\275\210\202\355\275_\032\243\274rtB=/i\246=\026G\005\274\373\036\322=\326S\332=7\303-\275\035\332O\275mM\316\275\342;\013=yv\223\275\266s5\275\312\330\231\275\\-r\274\340\n?\274\206\274\273\273zM\273\275\312\273I\274\350\215\341\275\'\360\215\275\3121Q\275\235\302\317\275\313>\204\274\177\\ \275\212\334\260\273\333V\275\275o\002;\275+1\217=l=\247\274\274e\342;\005\001\230\275a\206\304\275\347f8=P\232\321\275\236\010\305\275\351b\335\274y\235\222\273S\276\247\275\205v\213\272\003v\221=2]\254\275D<\213\275\345\037\341\273\002\343\353\274\001\030k\275I\241\237\273\321\272\341<I2\227=a\006\352\275\034\373R\274-Y\262<\264\006\314\275\205\270\276=\316\030\201\274\265\243\030\274\260\375X\275sK-\275\2360\314\275~<\256=\3346\017\275i\334\240=\"\360\007\275\200\014\334=z\023\244<3\376\003<\323q\002\275\246\222\312\2732JF<\246\304&<\223\330\231\275b\351\017\274\243\202Y=A\263\202<\004\210g=\363W\275=}w\257\275_\314\313\274cf\353=\311i\337\275\3645\013=\356\2437\274W\272\034<\037\304\202<\372\001\346\275\340\270\361<,\322\223\275\224dE\2758Z\217=\030\364H\275\376T\304=\265\025\263\275|\307\320=\376\213j=\013\223\261=36\262=c\326\312\275\367\343\354=\312\362\224\275\233\"\330\275\344\240I=\223\270\314\275\260\363\206\275\027$\330<\356\031S=\226c+=UD\250=\216\370\211<^\326\300<\203\342\357\275$\316\250=\362\213L\275\265\003\335\273A\037v\275R>~9\321*\234\274\261!\320\275_J\215\275\320\204\345=q\023\227\275U\231\227\274\033\312\266=\352\226\030=w\363C\275\371)\271\275]\264`\275!/\251\275\243\202`\275\360\221\303\275\264H\377;\350\222U=\263S\236=\220KX=\273\366\262\275\255\377/=\213\221\262=\006?\021\275z\177\027=\357\3331<\324<\201=So)=?\221\326\275k\320\265\275z\013S\275\n\325\347=,\231\264\275\177M\253=\310\016\211=\267\362\232\275\334z\265=dW\014\275>\273\204\274k\275\260=C>\234\275\326\365\234=\245\333\327\274\345\256\233=\200fe\274\275^\022=\233\243\340=\250\336\356=\332\003\270\275\256h\220=\221\346\245\275p\022j=w\252V=mo\031= \274\t=\214E\227\275\224\210\211\275\032\022l=co\240\274\221,\214=\367~\316\275\363\265.\275&\273\231\274\240y%\275\372YM\275A\267\226=\241\370D<\363\316\302\275\276\251\311\272\\&\004\275\365\246p\275\210{\n\275\312\245\200=\177\215\001\275\312\270\216:j\031\315=\347\346\320\275\344\340\226\273\302{\366\273\370\225\236\274w\226\330=)\220\177\275\277\324\332\275S\201c=J\027,=8y\305=\253n\265=\023\327\214=\024\030\031\275\263\232\277=\245\301\210\274\251\266r\275\233\226p\275\242\340\325\275\005\\\234<`\373\310\275e\301\271\274!\202z=\367\273\n\275\364:b=\025\271\235=\214W\303=Xd\356=\271\314*\275\304s\'=\342\356\221=\212u\001\273\230S\032=\234Z{\275\002\332\330<\367H\207=\265E\302=\236\331\370\274\311\035%:\324\262\346=ot\340\274\223.\243\275\306\326\211\275\213\341\215=\365\275\223=\2124\276\275\021\372\206=\021\227\227\275\017B\317=!\242\213=\260_s=\024U\343=\256\315\221\274\234\360\020\273B\223\311=\353\0009\275o\242\277\275D`\244\275\374\373\242=\260U\353= 6\305\275\202\222\323=\311\367\035=\250\346\017\274X\272\003=z\001\250=3\200\275<\254Cg=fm\202=\357\t\273;Tn\010\2751a\340=\277/\006=\273_\250\275\221\353\3159\003Gf<\021\217\360\275\232\240h=\221\013\347=\216-\236\275\026M5=\247M>=\231\033~\275\245\025\243;z+\307\275\245\337\302=\023\010E=\302c\313=\204\313\207=\356\034\215=\346\351\256=ix\325=!u\362<\320/\214\274\316\344\305\273\rN\321\275\261v\000=\351w\323\275\307Y\355=\343*Q\275\241\027s=\276>4=S\376\321\274\222\264\261=\002\004%=\264\220W\275\225\036\216\275Tm5\275\n\254\350=!\213\301\275\\\330\275<3x\314\275\255Y\216\275U\244\\\273SM|<\355\330C;z\236\033=p7\255\275\263\321\311\275\025)\033=LQ\256=G\203\010\275\212\254\234\275\337\275j=\261~\311=@\024n=M_\302\275\351\312\222=b\254\225\275\017\2526\274\"\325\272=\201\2334\275\"\211\253<\227Q\270<\201<\346=\276\2252\275\345\315R<\333b\251\275\255\341P\274d\3400=\264\321\222\275,b\230\275|\231};^V+\275\263\322\243\275o\005\314<\tMw\275\351\251\222=\0171\000\275\rDC\275\311\304\260=\301\211\245\275\325\337\220\275\254\360\270\2753$\224=dQ\311\275:\332\307\273\331*\331\275\262u~=\220\336c\274\344\t\325=\372\356\326\275v\266\020\274\230|\215\275\334\234\326=>WQ=\0242\325=k\374\325=\206\317@\275\325\326\231=\215\305r\275\231=\316=\365\247\327=\353\355\214\275\236\302\217=\302\216z=\3339\347\274\245\360\r\275;\366!\275\337\267\266\275\220\017\334\2758Q\347=2m,\2758\210:;\221\377\311\275\323\331\243=\\\031\321=\350)\270\275\3567\343<\262`y=\216W\337\275\025\311\031=\022i\027\275\367+\335<\023\367P\275Fy\216\275\313\257\346<E\363\314<Ic\220=cb\352\273U,\007=:P\203= \253:<5\024\313\275\226\233\351\275x\224\274\275I\201\314\275\357\234f\2748\267\233\275\370\2471=\200]`=\363\256\222=&\'7=`\200\345=\306\316\201\275\307\346\204\274\254T\206=@!\265\275k.8\274\235v\301\274\312\236x\275c\031\270\275\322C\247\275|G\336=o;7=G)\365<\353Q<\275@6\205\275\317\240\311;\367C\270\275\245\030\216=O6G=\rj\256\275\020\201\355=\207\356\r=Sf\267\273\215C\255=\207G\203=?P\262=\023~q<\\\251\305\275c\231\210\275873\275\341I\027\275\003f\331<\010\035J\275\311R4\273\331$\325=\266p&<\312\347\271\274\3171\223<u\367x<\342\253\376<;\214\223\275\252\343!\275\350P\341=\243\365\301=\241\271\316;Q_\320<\236>6\275d\237s=\232\276\314<\237\361X<y\332\030\274\342k\243\274\234\025\370<\'k\033\275`\250\361=\2501\340=\355\001\332\275x\"v\275\373\001r;\r\340\315\275\370\016@=\220\225\331\275lD\002=r!\277<\363\242\214\275r\251K=\370\264\235=\374\212b\273s\'\216\2741\001\244\275H\267I\275\356\032\301<\265~J= \241\336\272_r\200\273z\237\215=9\312\323=\r=]\275\370-\337=O\024<;z/\221=\301sn=\327\310\240=`\002\242=\222\016\371\274I\250\232=\r\300\244=c|\t\275{k\307\275\373\207K=\025;\331\275\354\3668\275M\372R\273\210\004\217\275\230O<\274sw\310\275{b\006\275*\030k\274\030\252\270\275\373\270\330\275\307\000\271\275\024\017\226=_\214\342=\t\200\320\274\306\267\307\275(}\345=r\363\037<:\231\241=\311\035\002\275\n\204\013\275\352\024\232\275&(\250\275r\242\361\275|c\250\2750\030\003=:\360\262\275X\305\223=\177},=s\332\000\275\361\037w\275\332q\255\273\206|\354=N\016\004\275\365\243\265\275\370\214\350\274\224\\n\275\037\232\336=\214M\224=\303K\001=\r\261:;\271Y\323\273XT\340<\220(\226\275eW\233\275\022\254\000\275\360\266\333=\341U\327;\216d\227\274H\200\327=\032\276\300<j\237*\275\342S\313=\t0z=\321\246\346\274\221\333d\275\313/\344=*\363\346=m\220`\275\350:\257\275Z\303E\274\360\202\"=\211q\304\274\357\232Z\275E\336\340\275\340?\203=\356\330\217\275\034\366\017\275h\246\307\275b\374\266\275\235\325\251\274Z\311o\274O\177\240\275\353s\362;X2T\275\034\220\266\275p\031\314=\317\227:</0\000\275\250\332+=\236,#<\315\321,\275\334\337\214=o\344\350=dW*\275\313\363i=\231e\375<T\373>=1\035\361\273\032,T=\037\362\260\274\207\344\206\273\025+\006<\366\331\263=y\361\316\274\260[%=\262\301)<\322\350\203= \343\324<\202s>\275[\002\332=E\262\267<Ga\303=\225\301P\275z\254\250=l\027\257\274\237\211e\275\032\213\327\275I\352\270;i\260\327=)s_=\t\262\206\275G\'\256=\240\242t\275]8\360\275K\246z\274\330\032M=]n\275=*\270Q\275%\245\271=yL\312\274\006kl=\366\225\262\274P\326\257\275_<\277\274\222\367|\275S\327\232\275\265\362\227=;\322\313\273\240\023\325\2752[\313=\262f\256\275\246\240\242=^i\233;\253\327m\275\220\220\266=f\377\220=1\246\034\275d\240r\275\315\326\271\275\\\252O\275h\321\353\275X\226\270=om\304=\322\032\276=bJ\276\275\220v#;\364\351w\274ji\207<\317\354\004=\n\317\223\275\245\r\251=\007\t\261\273\211\333\244;n2\340\275\017\224\310=\263\310\273<\026\304\300\275p\221b=\177l\304=\337]\206=qxK\275\262\005\237\274\342\024s\2757\370\005=\361\336\324\273\037\222\242\2758\227\357=\005\372\261\275\264\272Y=\201\010\017<H\202\243=\213\316\330=\252\236\253=\016\300\200\275\251\261\216=?\341p=0\367%\275s\357e=[\010v\275N\022\226=\\\277\341\275\351\261\361;\367\273\232\275\2038\217\274\362\025\357=\2341\313;\231j\243=\334\265\320\275\020R\010\275_\364\211\274\334\225\251=\250W\235\275\304\220\367\274H2\313\275\351,g=\010\254N<\372\302\347<i\352\\\274a\224\264\275L\305\246=\245\274\203\275\327\234\275=\333\226\033=&\026\265\275sdp\275\246T\274=m8\336=\313w\325\274\214!\331\275\231j\254=\374G\230<\ny\356=*\331\033\275\\S\245<\335\2349;\361\225\313<\246E!\274\244Cj=\351n\210\275\223\230\004\275N\247\271\275\376\300\261\275A\222\233;+\304\344\2758\213s=\324@\252=\365l\274\275\037\223\245\274\036|N\273>\263Y\275\216\236\211\275\360\312\220=\010-\026=\361E\251\274`![=M\'\321=\020\337\246<\246.\352\275\245G\247=\311\206\250=\307XY\274\227Y\313\2747\224A<!\177\322=0\020\215\275U\341\236=\221J\276=\254^\230=\312\277B\275\376*`=fv\033\275+\214,<\332\254\245\275\237n,=\3559];XV\222\275\2319\203\275\371j\255\2754\246\226\274/O\313\275#\341\033<\257\343\232;/\363\211=^\026\300=\375t\256\275\266\270\324\275\224\264\356\273w=>=\241\365\006;jF\274\274\033\376\303=\364>\221=\360j\337\275fX6=\346\235\255=6\333\211\275\217\271\212=\3517\215\274\354K\227\275.\363\346=\201-\351=\331/\306<-\256\347=L>\301<\223!\225\275,KH\2757g!\275\354\016\373<\014q\334=\221\321\002<\357\027\237=\020\250\017=\271Q\246\275 \343\224\275\332\344\321=\367T\023\274/)\240\274\274\307\006\274\230\222\312\274\372\352\246\275`\205\r\274\236\031\355<\272\213\010\275\332Z\010\275\230\243\236\275F@D\275K5R\275I\327\225<\257n\224\275\215\361y<\307\341\325=\311I\313=4\004O=<\r\216\275\235F\241<\262\250\346\274\030\341\214\274\307\005\317=\234`D\274\334\035\221<\257\020*::\251\353=\356[\316\275\276O\260=\305\235\235\275\'\334\010<\333;\311\275z!\206=\035\3235\275%\243\030<\255\204\215=BL\205=\316\327\316=\3108\312\275\270Ws\275:\023\217\275fG\035<,\337\017=\300.S=v\255\201\275\033\013\271\275\342\325\200=\313\240b\275\214\224\234<\210\253\334=i7\361=\223\242C\275\t\250\306\275x\030\370<e\026\337\275\255J\200\274\304\226\211\275\017\017\254\275,\322\266\275\t\313\226=\215\234!\275\350\244?\275\233O\303\275\r\032`<%\037\334=\237U\351=\203\342\311=\315\034\263=\035X\352=,\223\022<\206t\213\2744\252\252\275\241\020\241<9r\224\275o,\216<\306H\234\275Z\320\351<\241\3314<\034\312\207=\010kC<\360e\245=\3325\240=\254\036\240\2754KH=\266\231r\275E\311\351<\317}\\\275\361\363L<\331B#\271\276\217;=\344\216)\275\214Y\266=\265\270\300\274\207\342\265:\354\260\302\275\216\367\223<\330\354\210\274\225D\313=b\303\314=\363\300\013\275\357N\351\275)\3400;\001\005\223\274\207\334W\275>\203\'=\036\365\330\275\262Hg\275$P\000\275\212w\323;\324\347\\\275\377\272\252=\\m\032\275\355\213\344\2748\346\327=P\266\344=kp&\275\2467\036\274\236\252\335=\365\n\252\275\317\232x\275-\270f=7C\026\274\373\357\323=i3}=\337\331\322=\243M\312\274\215\207\\=\357F\353=\364\223\353=lH\350\275\300\327\373<\201\257\317=\004\314\231=|\363\275\275\337\000\342=\233\321K=\246\315\212\275s\224\271\274.\220\024\275\231\311\236\274\316\352\222=B\257!=\315\312\272\275\334\211D9\025\206\266\275>I\337\274\241\000\342\2757\204F\275g`\317\275\364=\217=\206[k<\235\r\325=\020\037\204\274{\277\237=Z\023R:\321jG=)e\230=\217\262\310=\257\346\261\275\226\262\317=\212\323\265;p@`\275~\036:=v\243\"=9Y\351\275z\215\202=\006\316\350=\0223\024\275Aw\307<\242d\342=\334U\245\275i\256\325\275\230\2749\275\260\345\265\275XZ\354\275\362\201\265\275\tpI\275{\241\027=\225!\345\275\272\314\264\273\026\021\337\275|\371\262\274\374\226\246=\034x\323=Yy\315\274\0171\273;\370\337\005\275l\304\213\275\242\232\352\275#\033\213\275>7\323=\003\007M\275\330\371\324;\361\014\303=\313\303\210=\252\036\221\275M\264\214\2735\332\233=\017\376\316\274\2445\345=,\367\217\275\034@7<\t\212\273=\374\231\250\275^>\337\275\253\257p=r\302g\275>\314\243<ye\334=\256\271\333=\005\264\203=\252\2237<\342\306\346=;;\260\275\236\270\343\275\221Q\245=i\336\231\275\3367\250\275z\023\310\275\2012?=\350\310\211=0\006\236\273\242\246O\275\024\017\240\274\236\227\306=\211\3467;\024\240\205\275\030\014\314=X\346`\2759\332\355;q\377D<\337\004\247\275\322y\300\275\013f\220=W\323\200=a\220\357<\004\000\322=\225\025\347=*\345n\275\276w\330=bh\274\275\344p\216=\342t\200=\250&\350<\340\022\250=\004\032F=\342\377\265\270\2200\001=\035\273\254\275\201r\004\275\023-\275=\024\252\313=@\216\n=9\364\350<\316\t\277=\r\004\207\274\226\267\325<\'\rc=d[\260\273\332&\354<\272\265\346\275\235\021n\275\254K\341<\031@\347=%Ea:\320\010~<\365\307\303;\351\246>\275\275\321\247=\347\t\334\274\253\220\222\275\243\260\257\275\222o\200\275\007l\207\274\220Y2=T\224g=s\275.;\267T~=\304\003\305\274j\252\267\2757\034\213\275,\335(<u\202M\275\347\"\321=\311z\267\274\016w\242=\023\202\364<\365!\271=\366\267$\275\342\236\315\274\227\372&=s\230\207=\352f\353\275\t\376\032=\310\234]=\033\235\350\274O8\331\275\271\310\330=\314.\\=\317\315\033\275\362\307\302=\2525\254=\253^\251\275\342\347\371<\0261M\275F\372o=\224!\261\275\002#\244=\324\367\272\275\220\0062\274Z\204\343\274\241Z\240=S\271\265\275\247\026f\275\030#j<~\021\330<\314\3728=\014|\230=\251\022\264=\030\177\216\274\376\365\206\275u\255\272\275o\002\255\275\327\202\356\274\251k\320=\240\311\200\275\263\315\310<\332\317\216=z\362\330=v\361\273\275\210+\360\274\276\222\335\275j\001\240\272\367\202/=\330.\256\275MI\256\275\0015\306=\346=\357=\214\357\343=8-\245=\351[\320\275T\271\215={\257\252=H\252\244=\3312\267\275{\220\002=\335\344\240=\317&6\275\r\324T=\235\202\343\275mkE=p\336\013\275\2029\220\273\3322\313\275\263\225\361\275\235P\307\2753-Q=\241\266\353\275\212k\241=\254uh\275m\335\244\274\0208\263\274\353\243\326\274\210Zd\273>\016\352\274N\244\306\275\312\233\021\274\364\367\'\274@\004\274<\272\222#\275\031\265\241\275q\225\220=1\250=<\037\r\337\275d\"\'=P\225\230=g\3703\275\014o\324<]s\336=\335\3778<\264\334\230=\023\216\224<d\000\357\274\277\024\300<\037&\333=\262K\342=\304\343\231=\376x\300=\021\352\033\273\350\003\\\275\361\220\330=\227\013\263\275J7\355\274\320o@\275SC\241=\2669;\274\335t\341\274\034<\264\275\307R\244=\330\030}\275\330M\273=`.\236=\271A\006\275GCP\275l\211\220\275\357`\226=\350\3438=\241WR=\212\375\246;\243\241\222\273\360$\355=\322\357\325=b\266\354\275AN\272=\375.\274\2755Y\t<\265\272y\275\010J\270\275\214\204\256\2753\2709\275\311\006\223=g`\321=\021\233\367\274\203\372?<\246\311\226\275txw<\031\224\214=\332\210\314;\360=\t=\206/\'\275\343s\357=\253\327\237=\005$\236<\377\364\250<Y\257\205\274\200\306\317\275|\250q\275\311\201\240\272\273\215\036\275\222W\206<\346X\216;\342\335\303=\010\224\315\274\267\313\230=\016o\247\275%\312\340=\201\232\245\274\304oq=L\247\267=\300D\200\273C?4<\261j\3319 \302\223=\201I\237=\314\322\354<\021\276@\275\333\233\226\275\223r3\275\234\256{=N\273\231\275s\227\225=\371\372\234\272\220\260\r=H\273Q<ID\200\274Q\340l=S\222&=m^\342=i\310\274=,\236\353;\361 \333\275o\267\033=\212\005\220\273\031\232l<\323\210;\274\347u\200\275\025\235\321=B\373\265<\204n\256\275A\322\232<\027;\340;:\332[\275\353\223\300=F-4\274\220\311\177=\247\251\266\275\014t\220\274\366,\227=\265\267\225\2747yn\275\003c\035=_[z=\013G\306\275\243I\252<\300\356\225\274}\336\331\274k[!=Y\035\302=\346j\277\275\315\344\276=\026\346`\274\215\035\312\275\254\330\252\275I\373v=\035\243r<\302\307\214\275\306\245\006=\372\324u<qfO=\202\n\345=#}%\274\031M\271\275\207y@\275\232\007\350\275M5\204=\203\346\336\275n\345\300;\004\315Y=\277\301\266=d\330\261=\367\026\264\275z\374\306\275s?\225\275\232|3=\2743\223=\355\373\203=6\214\020=\242s\247\275~\376\253\275\376\351`\275k\324\"\274\216\247s\275\032;N=\355\254W\274\317\275r;\356L\335\274r|\337\274\'6\302\274k\330\340=\322n\251\275\005+\312;\305!\312\275\233\267\202=,9\331=\003\221\247\275P\247\253=\227\000\322\275UG,\275@\007\364<k\345\254\275IA\306=\024\247\314\2758\272\353\275\332J\272\275\361\306\222=\353\027\033\275\255u]\275\351\224,<\272n\206=a\023\222\275\'\340-\275\203\014\205=\304\320\240=\201\026p=\234\333\251\275P\356e\275\214\335\366\274\243\246\221<\232\355\310=\210\337\363\273\253\2522\275\036\021g\273\261\257\270\274\325\252;=\272M+\275\257\232\357\275N\366\207=\364\025\227\275\340\231\222\275\332\302\034\275&\022U\275#\246\251\275\024\002}=\243\210\301\275.*\264;h-\226<\004\002\244\274?\342\351\275\215`\315<\037\315\245=n9Y=Z\206u=x\372~\275\232\325\227<h\373\t\274\234\026\306=\327\342\301\274M}\037<\231\370o\273\224\301\t=8\024\270\2749\'3\275U\002\324\274q\345\351\275\'E\235\274\202\356\240<j\014\010=\362\023\222=?\324\226\275\235\267\201=\001\326\255\275\245\2163\275\007b\242=XY\231\275\220\272\306\275[\203\227\275\264)\017\275\036\274\331=\372\010\327=\341.o\274(\'\337=&\222\256\275\031\356\030=6{\351=\341\0228=F\353\267\275\014a\r<LTX\275\340\007B\274\315\347B=\212OO\275\243\272\327\275R\320\273={\301\304\275\265\025\345\275\310\003\024=\312\254\303\275\214\220\355\275\211\241\341\275\350\323\226<l\022\326=l\261x\275\275D\263\275\353\314\370\273\307\306\245=\002=\204=\030q\256<\313\332\266\275G\340\262\275\347]\347=\361J\231\274?6\367\274\2058\353;\365\230\333<\234+\235=\021f3=\320\357\315\275\215\241\236\275U\247\307\274\374CL\275\254\027\310=\220\367\227\275\270\351k<`\323\200\273v(\253\275\\x\241;\301X\263\275\332#\231\275\361\322B=\004u\203\275\223\305*=e}\206\275L\232\253=\310\246R=\370Y\005=`{I<\350\201\372<\231\373\202\274\246\337\312\275\351l\355=\222\371p=\240\215\276\274\335\255\234<\206\036I=\307\236\375\274\306A\336\275\014k\332\275\351\367\346=Q9>=8~f\275|.\306=\366\244L\275\2267\261\275\324T\206\275B\263\356=\247V\256<\330xC\274\367\330\010\274K\226\327=\254\277$\275\3614\003\275\361\n\207\275\033/\226<\267\304\231\275|\266\244\275\027c!\275\332%\013\275%\264\317=\236|\241=5\247\347=\014\301d\272(\323]\275\016\023\257\275V\205|<\272\373\035\275\203\tX\273\210\305\\<\331\353\314=>\010\207\2759\216\374<+\360j=C\264\266\275\322~g\2752\016j\275\341e\271\275\270\374\312=\274\200\001<\014\213\326<\247x\227=\tn=\275\375\036B=^1\267=]\372\310\275\362\225\266=\370\246\\\275\200\345\024<\357\247\000\275\216\t%\275\362]\213=\033\025\360\274\312\262\246<\252@\007\275@\022\005<\203\000\211<\254h\372\274\245\200\346=\004\332\260\275\211\277\304=zlW\275\357y\326=\234\274(=\n\374@\275(&\220\2754\177\n=|O\340<K\243\224\275\367\267\260=h6\331=\333\\\020\2733d\315=\231t\334;\227\316\275\275\263\265\322=\204\007\325<\360e:;\227\035h\275\2617\250\275~-\242\275\250\276\226\275\355\347H=\225\340{\275OH\266\275\313\230Z\275\014\243b\275\027\334\301=\205\030I=\227\022Z\275\376{\304=\370c:<\023\032T=\2376\360=\265\031\274=B\003>\273vW\362<\302\327\346=; `\275\335\\\342=,9\034\274H\t\213=\250\354\207\275ezl=\013\321\344\275\363e\244=\327z\304=\210M\r=fP\333<k\240B\274B\226\017\275\202\023y\274\235k\025\272{\351\307=\3054L\275\351\261U;m\203A\275\027\226\311=\253\"\347;\202)\202=V\002\317\273\313#\272\275\366\342\344=\257\331\022\275\345\370\340<\373\255\241=\263\335\272\274\345\215\236\275d\241T=\235\203\227\273*\346e=\377\313\337\274o\266\036=\200\326\234=1\006\364\274\330<\266=\023\322i<\313h\244\275+\302~\275O\013\017<q\351\235\2759\025\022=\212\327\327\274\330x\236\273G\233[\274o\264\037<\376\327\265\275o\336\212<P\210\345\275\024w\303\272^\276\340\273\224\'\356=\201\t\223\275I14\273\240\027\225< \2571:\341\216\361=GR\304<\004g\"\272K9\313=\252\371)=[75\275`f\225=\005\3338\275\326Q\202=\247\240\364\272\221*\265\275a@\356=\320c\235\275<.\336\275\016\\\247=\322\263\366<0\265r\274\247\343j\275\036\256.\275\2310\206=\016q\321\274i\311\205=a\216\300=\275:\317=\031\244\311\275\\\336\270=b\367k\275\337\254\316;\307\241\360\275f\224\343=\266\261{<w\005\244\275}Y\304=M\312y=\314\272\342=\030q\014=\333D\206\275\361l\347\275#\362:\275_-\t\273\004\201\210<\261|\210\275\232\306\036\275\035?\325=l$\370;\226\341\177<\276q\343\275\031\341\354<\2263\225<\214\243\226\275\200\033\021\274\0371\235;{\336\251<\277\\!\274\0330\360=\344A\335\275\031x\310<\272\275T=j\347\262=\356\256\335\274\371\021\324=6\344\036=\363VF;\272\247{8M\246\221=\243v\014\275\334;`=\244fU\275W\352\241\275\333<Y\275\033\217U\275\206\030\246\275\203\013\264\275~%W=\244\021\032=\2268\243\275\311\252\013\275U\227!\275\037\256\211\275\033\241\274\275\031\274\201\275q\371W=#\373\265=\035v\220<\240V\223<-\231\351\275\207\212\220\273}\260!=~\036G\275\210L\242\275\222\327\301\274E\360\273=\217\204\023<\346P?\272(\246\326\274f;p=D>\303\275\234:\251\273zL\024=\350\225\270=2\247<;U\243\337=\0266\253<\261\303\247=)\321\223=\241\224\221\273\376A\334\275L\314\204\274j\242\211;\022\213\342=\374\342\237\275\024\241s\2758\212\234=V[\217=\341\221\271=\362\256m=x \237=\351_\207\275@\232\304\275-\004\026=lU\336\275\335\372\343<y~\225\275\267t\261\275L\327\340\273\236\264\356\275\255\306G=\355.\361\274#\342\203=X\214\316<\324+,\275\200\316\340<\022\002\361=\366q\224\275\251s\220\275\375\005\271=[\252\222\274$/\277\275j+\321=:\201\207=d\352\306\275\334\0375;\354:\314=\372\263\347\275\277\017\341\275\226\266\225=*M\354\275\334\2732\274q\215\007=I`\247\275Q\337\022<D\016\242\274\327kA<\360G$=\"\322\302\274\343\177B\275[\013\337\275\366\300\275\275u\036T=\36436\274 6-=\027\277[\275+\347E=\366?\252=\270\344r<CY\365<\235\216\244<\035\260\306=\336-\004\274\230\177L\274\322I\272=\032\321=\275H\365\275\274\273;\371;\334A\274\273\215PJ<Q\220\237\275()\210:\032\201\244=\376\313\033\275z\256\252\275\034\212\322\275X\207\312\275o\272\223=\350\367R<S/\317=\373J\336\274\364+\204=\311\315\"\274\031F\260<\232\366!\274MX-\275\345\215\206\275\033\276\347\274\007\035\222\275\310\313\334=/\371\344\273\373\256\312\275\r{[\274\262\306H<\344V\204\275\314\262\212\275\005.\342\275{y\341\274h\327\336=\343\\\224=\017\276\352\275h=\233=8D\227\274\331\200\247<X\350\336=\253\263\244\275M\367g\275\347\307\347\275h \260=\267\300\217\275|d =\242\361\247\275D\304\203\275\027$&<\320\340\214\2757\222\226\275\202L\227\275\234\222\006\275\023\213\245\274\275\253\272\275y\225\'=\345\345\r\2752\250P=\275X\023=0\017\245=\330{\024<\002\242\264<&\262\363\274\310\253\235=_\226\230\275\212\"\211\275\030,V;J\256\352=\207hy\275Yf\335=o\330\207\275W\005&=ie\r\275\204\271\340=a\207\006\275\324\034y=rD\334<\001X\245=\357e\261\275]B\366;qm\221\274\266#\254<a\214\353\274!\270`\275.+=<2Ti\275,\200\266\275\256\212\267\274\240\375\214\275QY\371<d\274\207\275\331\323y\275\203\333\211\274\263%\260<TJ\305=;.J\275+\316\212\275\231\\\215\275\307R\202\275f\352\235<\032\245\037=\234|\225\275&\2018=\210=T<\271\356\302=\010\340\304=s\010\270=\324\325<\275t\373\257=<\330$=\2431\245=Yh\234\275\347\364\307=\214\003\227\274\0016X=\014\341\321=4i\310\275\361e\004\275\207?\223\275\270\340V\274\"\320\313\272 f\360=\212\245\360\275G\317\352=0\'/\273i\023\302=>g\225\275N\357-\275\254}\213=\245\024\274=\357\371,=O\361T=\254\263\340\275\353\371>\275\212\001\220=wB+\275C\362\333:\242\341\303\275s<\253=|\371\340=/\245\354\275\377F\274=\327.\014=v\227v=QS\222=\246\255\266=\221T\213=\345\252\305\275\246\326\235=A\343\221=\245\3005<\224\307S=\252\206\305\275!m$\274\306\232\266\275[\024\233=\001>]=\272\371\263\275E\303\305\275\247\321L=\301\325V\274\312/\345=\214po=\265\301\253=a\003\347\275\nI_\274\275L\337<\371Ez=\365.\315\275\371\273\271\274\321\300\346=\355\007\361=\334\354\334\274;W\241=i\343X\275\014\372\024\275=r\377\274}e\323=\275\027\260;\215\313\030=ND\304\273\262\257\373<s\236\350=\251\213\273=\212C:=L\224\256=8\340\311<\337\322\020\275\217$J\275J:\270=\315\351\272=\021y\360=\360\373\321\275Q;\332<\003\250\026=\265\217[=\224\227\3209=\274p\275\017\345i\275q\332\353=\223A\336\275\377\207~\275(t\273\274\332\220\312=\"J5=\243G\270\275#\215\036=\347S\270<\260i\306\274\311\237\221\275\254\2164\275\261\205\352\275Wz\335\2752\337\311=\202?\346\274\023k\260=\002h\247=H8\206<\300N\306=\001\t\216\275\266<\032\275\214\313l=H*\314\275\245B]\275\t\257(\275R\306y=\303\370\360\274\000\256\315=\266\266\303=p\363\225\274\016\227\352=\252\222\313\275\366\346\275=m8\251=\201\014\242<\373F\006=\360q\221\272\t\t\234\275\236u6\274In\237\274\267\014`:v\242\256\275\r\337\214\275\035\334,\275/|\202=\245P1\275\000\275\244=n#\300\275l\266\207<\370\023\355=\236\337\264\275t*\231\275\266\262\242\274\3033\206=\220\301\274\275\210\346\277<\244;\356\273Np\225=\001\345\236\275\031\325L=\2344s;\204\024\036=\242\301V\275\242Z\361\275\277\tJ9ck\335=\343?\237\275o\027\316\275\365%\247\275\306E\331<Y\035\252=\321\2210\272e\335\204;\024\207\364<!\304\'=M\006\264\275L#\306\275\261\214\242<\035\206\253=\316\277D=vt\236=@\337\350=I\325\327=\2001e<?\013\242\275a\222\223<\242\345\317<L\\\236=\014!7\275\341\255\226=\337-\236=G\2104=bX\236\275\007\205\352\275O\007\340\274\365\353\217\275Vi\'\2750T\322=ad\263\275\273:\375<j\021\314\275ba\032<\272\273\353<\347\207\200=f\301\363<\243\217\025=\017\365m\275\244\360T\275\234V}\274(.\275=\016\255\334\272\256b\220\275\013\007b\275\205\214K\275\326\3301\275yw\346\274\340~\032<\235\342\352=\007i\222=\353\002\310=\373\251\240=\033g\336=S\021\250\274A\265\320;ot\003\275\272^\357=\212\230L<\364U\000\275\375A\r=\245P\265\275\031p\357=\306t\216\275\215\317\302<:?I<XW\213:\036n\335=\253\266\207=\026\365r\275m3\324\275O\257\335=\246\032\223\275\364\261\020=\037\024\033:\037\246\025=.f\305\274\361R\335<\246c\306\275\323~\240\275\017\203\323=\227\3666\2758\0376\275K\346\253;Nv\335\275\333x\323\275\352/\323\2753\305\034=6\300\211=\246\273\257\274\230\351\317=\220l~\274\202\376\265<\340\006\361=\035\306\356=w,\276\275r\203\226\275\272\237\212=\027\224\216;\256E\003=:\367\243=\364G\274=l\260\005\275])\306\275<\326\213=h\003n=6\334\350=\373v\000\2751\263d\275+d\014=\205\212\352\273\265\362y;+\307\032\275\022\326\211=\377\347P\274\2667\036=\177@\213=\323\226\311\275\226\213\375;\205p\310;&\375\240=w\370]<\037\273\227\275+(\262\275%\314\233=\221c\211\275Cc\353\275\305\226\360\275\235\022$\275}\365\237=\214\004\311\275\332\363N=\022\222$<\214\000\343<\201\n\332=\376\344a=\336\3322=\006\276\237\275\3050P<\205\310%\275\250 t\275\274\317\244\275\233\344x\275X\345\362\274\250:\323<W\031S\275\304\224\364\274_\206\322=\360\251X<\374\346\316=D\336\213\275H\225\030=|d\355\275\016\256|=\265\214\304=?\343\034\275+\324\262\275\n\236\260\275\344l\030\275%\256\357\275\256\024>=\205\352\233\275\336\020R\275\217I\273=\035\347.<\313|b\275\336\203\307=\025gV;\255]\005=@\031G=y\367\222\275(\343\325;z\315\307\275\364\\\307\275\216`\245\275p\377\213\275\321\255\303\275\\1\004\274\021\371\324\273\315\\\250\275\266\\\345=a\363\264\275\377\336\315=>\354\337=\255\252\354=\361\305g\275\322|\231\275M@\213; \036\313<B\231\300\275d\017\307<>Gr=\330\014S=T\233\021<\243s\275=C\235\250\272\242\345\357\275\nb\231=J\204\235=\301\032\240\275\232\236;=\'\300\207\275p\327\003;w\014\233\274\265\226\275=\033x\346<}<>\275\353\272C\275\313\274\204\274\252)\244\275\225\2326\275\246\246\022\273\240\253\260=\223\3553\275o\235\016\274\013\252\204=Q\232\346\275\017\217\276\275iU9=\272\202\200\274\003\252F\274?TZ<\023x\233\275\2219\037=OG\272\275o\303\036=\243\272\361\275\251>8=*z\340<P\330\266<\310\221;\275J\t\370<\217]\222\274G\201\203\274\n\263\273=\2164M=S_\254\275\357\223t\274\261\266\027\275\242\276\203\275\273\251\335\275\353\313\332=^tq\275\250E\357\275QEQ\275a#\324=\336\337\336\275Er\320\275\034\216\243<\354\3151\275\365Q8\275\300\212\360\274+f\233=\222;\352=Qo\234<\000\342\316=\006\311\340\275{\230==\034\"\212\275\350\316/=t\326\306\275\246P\222<\366Q\'\275`\315\267\275[\311\220=\005\235\352=.\321\303<y\255\211\275y\264\361\275n/\326\275\310m\231\275\251E\302\275\222i\027\275\305\303\214\275\250\230\305=X\n\216\275\306V\253\275&\033)\274\271\306\230=t].\275}ZI\274\331\023\332\274\357\337\246=\264\203\361\275\322Vk=\371\314\271=]]\245\274ke(=\243\230\257=@=\353\275\001\245z=\020\330#\275\330\254~=\020\330x\275}D\200<9\245l\272\266\016\030\275\202\226\356=\323H\030=\341\216\034\275A\352\254\275\337\026\344<\002\202\000\275\243C\217\275\317ty\275g\375\266<Vr;\275ZO\266\274\220@\355\275\241<\311<\032\224\210\275\216\016\264\2751\336t<-\311\205\273\242@\252=L\000\267\275\300\305-\275\037\327\301=O\336V\275\216[a\274\253\212\333=V\263\205\274*\201\344<\007\r\304\275\226_\216=b\006\250\2751<\241\275\365q\340\275q`~\274jfC\275kf\224\274\301/\345\275\223\355\'=\205\024t=\212\266\331=B\212\232\275M\372\347\275\247f\272<%\367\305<\212\226\307\275N\371\300=M\243X<\027?\217=\\R\200\275\301\324\244\274fW\364<\'\223\026=\022\2222\275\200F=={ew=59\274=\353E\322\275\253\"9\275\245\230\262\275;\333\331=\201\374\255=\263\351\226\274&\177\272=\374\360\201=\255\213\221=\353m\350=\"\037\033<3g\232\275\357\364m=>\347\307\275\360P\277=\317\250\334=\336\242\270=\334(\340\274\367?L\275\006\233\272=r\230\261\275\325\331\313\275\261:f\275\020\227{\274\n\242\244<\177\305F=\223\362\227\275\241\313;\274\177\313\341=\026cW<:p\234\2741\377E\274\2744\323=\350\2628=\001-\255=\337\2100=\321\016\020<)m\240\275\355Jy=-\031\321\275\300\252S\274\200\340\273=`\017\352\274gt\021\275\035\352x=\270\370\304\265\024\303G\275\034k\310\275{\216\020=\370\316[=\3056\300\274X\376\312=?\204\204\274z\257\355=>\266\014\275\336]\210=|\005\224\273a+\333\275d\375,=\306D\302<9\205O\274\005\2563\275\366p\030=x\310\'=\032\234)\275\252\263E=^\374Q=\221\220\212\274\322a@\273:\\\313\275\205\000i\272?\n&=\262([\274|\376\350=\351\256\230\275:\370\201=5\262\254=S\001\221\273[\320\352\275{?U<.\234\255=\"\002t=j\351\264\275]\334\350\275\3721\223\275s\357*\273\025\001\324\274\\\234>=\226\300\304\275\2616\357=\265<\332=.X\237=i\036\242\275\014\000\201=mT\333<\220\302U:?\272#<\\<F<\225\026\210=\205x\177\274\342A2<E\3039=<H\243=B\337\270\275\200\307\302<\340\216\207<O\017\315=\031\013\276\273\017\365\016\274\371\247\320\275\035\353\302\273\364\301^<\350\302k\275G\251\201\275!\222\322=:T\212\274\032\036X<\252\314\273=<OB\275\"\206\274=\252@+\275G\276{\275Y\364\027\274^\353\304\275\273\245\243\275\353\326\274<Y,\344=\350\003\210\275\376\035\313\275s\353\230\275\375\204|=\252\230M<\002\232z=\267\020\240\275\330K\262\274\203]x9Vh\031=\017\036\230\275\237\333e=\006\023\316=N5\323<\363\242\211<\351v\237\275R,\360<\377\305\207=\032\346$=\301\375}=\363\360\247;\205\212\250=D\033\263\275\214a\356<\276\370\255\275@\243\257\2759\243\237\275\025),=\"\'\241\275r\303\201==x\275\275\324\005M=^\311\330\275\013\367\234\275O\177<\275\215\n\230\275B\272\262\275\t\275\260\274KS\216\275\334\254\256:n\205\023=-@\022=\362s\211;$\005\301\274\231-\341<R\032\301=\323\246\266\274*~\234=\271H9\275W\022\007\274]-9\275+\260\314\275\357]/=\014\234\307<\335j\352=\374\003\332=J\261\262=\tg\255\275\300V\324\275\224-\023\2759F\205=\200\343\203\275ah\250<\031\013\\\275\014\317\t\275#\243\220<\230\243r8==\204;\320\2769=\260\220N\2757z\026\275\000k%\275\352}\352\275\266@\210;}\320\277\275\364\335$\275\260z\357\274\252\002\251\275B\225\325=k\220\273\274\027\254\247=3\256\266\275?w\037=\372c\210<\371\233\251=\006\272\216=\234\337\204\275-\221\311=u\261\254=\027\310*\275h].=[\226O\274\n\276\202=`\353H\275)\266_=U\244\330\275\265\373k\275\324X\215=\0266\000=\223\315\216=9\343C\275\303b\227=GiW\272(\026\204\274E\036{\275\350@A\275\326\377\322<\203\276\345\275W\220\331=\\\032\337\274n.\340<\356\010\241\275)<2=\366;\324\275\272\211\232\275\267\303\347\275q\177\247<b\004A\275\004\026:\274\001<\022=\000\tt=\251\3366\275\t\r\230\275)\234\260\275\207\227<\275\352\227\363<\274\306\347=$X8\274\351\343\347\275`)\256=Y\001\273\275\003\222\306=\031\211c\275\321\324\332\275\212^\272\275\223\361\217=\256\225\313\275Ou\230\275\231\252\340\273\373 \346\275:\203\237\275\263\"\326=\022\362Z=\325^\342=]\023\244\275\241\204\242\275/$2\275Zb\330=\220\003\343\275>\010\212=ae\322=-$z\275\223U=\274\030\020q\275\247\216\306<\304\346\034=\233\236?\275\"\310N=\001i\266\275\311\277\350\275\276D5=}\367N;+Mu\275\021\370\261=\336\247w=\314F\201=\270\335\305\2736,\357\275 \010\261\275\376P\245=C\213\344\275\352+\322\275\226\023A\275\277\223\234=3\360j=\025\367\204\275\354]\272=(\212)=\342\026\272<\325k?=\314\324\336\275\320\224\264\273x\347\306<\370\276$\275\026y\320\275b\277\353=\336UD<v)\256\275\365\266\004=U\361(\275\016?\203=\330\235\235=y\215\210\274\272;\034\275\305\357\257=\232\244\250\274\322~\300=\246s\326\274\301k\260=\243I\261=ky\335<\345 \010=y\370\245\275\0208\217<\236\211\316=\333g\210\275;c\353=\026A\013\275.\313\215=\032\222\302=\254\213\332;7\261\330\275\004\206\215\275\232\204\235=\313\002*=\274\354\230=\236\273\366<?7\266\275\315x\263\274\334r`\275\037r\357=\215\271u=\235D\341<y\253\222\275\317/\342\275\317\037_\275?b\032\275ez\255\275\007\242\335\275\347\204\221\275F0\266<i1\315\275e\'\301=\027\367\250<\304\301\032\272_\021\322\273\213\332w=\257\025\303\275rv\215\275\004(\216=\356\350\200<\327\226\314=\233\270{\275\226m\262=\352\332G;\267$\246=gas=s\365\341\275\031\307\315=Y\344\022\275\212^\304\275xe\267=P\r\212\275\316\322\254\274\251\237\322\275\346\327\271=\211\344X<\210\361\320<geo;\304\0243\274\246\244\213=\2437\351\275\030t\351\274M\207\246=*\360\323\275\2022T\275\212\010\336=g\245\266<`\331H=\'\223\316\274\017\031\236\275\304\357\274\275L\214`<-\374L=\201\222+<C\366\245\275;r\230\2752\210\026=\240F\277\274PJ\237\275\363\223\261=\241!8\273Q\022*=\331\225`=03\360\275!(\336=%\363Z=_ \311=\231\303\265=&ML\273P\203\034<\004\315\203=\241\242V\275\r\250\006=\313\251\361=\257\350i=c\376$=M9\033=\365\2364=*\315 \275D\"\254\275MVz<\273\r\017=S\205\217=b\004\331=\013\346\243=\031\302\232=\255xQ\275\'\206Z\275\320\310\225\275\303,z=\322\217\316=\0242\302\274\235\005\026=\037\254\001\275\376\'\210\275\243`\246=\344 \322=\237\356\215=\234\253\377<\344\326\013=\"\374\261\275\003\262\233\274K\224!;-\365\023\275R@\313\27543\303<\332T\327<\272|5\275\246Z\207=\241\210s\274\371\035S=r:\233\275\367\032\354=hI\312=\246u\224==W\330\275r\034P\275}l\213\275fH\224=hc\234=Y\377q;\037\025\304\274\347\006+\275\037e\216=\204\\\217=\250\345\253\274Br\325\274\367~D\275\243T\311\273\270\035H\273~\312%<\224)\017\275\242)\306<\322\307\253=\2757<\275F4\226\275\270\311\272\275\240\361\353=^5\232=\272\306\206\275\246l\213\274U\005\251=q\325\303\274\253;p\274\000\375\204\275\336\0200<;%\343\275\2642\301=\236*#\275\337\331C=\016\007\210\274\0272\252<\230\262\313\275\242a\330=n\016\354\274|\177\310\275\001\\\373<\272\312\207<K\344\213<\375\311\223\275\273\314\355\275t?\035=\253\037\202\275\006\275a\275\020\023\333=[U\217=\2234\006=\017\256u;\032\221\320\275\241\0341=zN\251\275\240M\220\275\212\351\340=\362|\235\275\2573s\275\275\315\274=\211\001\200=\254u\261\272\247\004\010=\271\241E\275\343\304\256\274i?\275=S1\324=\374{\334<\\\030]\275\033|\305\275r\377\340=\037t\267\2740\324B<\276}C\275\177\260\271=p7\314=\326\000\314=pxi=\215\305\340\275\2130\260=\332%\234=3\340\251\275\370;U<6\206W<.h\202\275\351O\367<\233v\351=\003e\231<\265/R\275yt\343\273\335\225\211\274]_H\275\327\t\220<\233\230\231\275\016\262\302\275\004@\210=\357\210\257=\3076\256=\310u\336\274\376=\247<\364\314z\275\214\033\211=\031 X=M*\036\275<\370T=\320\035|={A4\274\304\242\264=\355,\234=\247\252\024\275Y\027\214\274\220P\230=\".\311\275\265=\300\2718*<\275\022\272\315<\275\372\271\275\245V\271\275\016 \263=\"\356\275\275\016+\355=\254\230\237\275\257\\\271\274\351M\257\275\017\272C\275\273x\237=\274u\332<\rN\030<\200XG\274|u\325\275?V\301\274|\370\353\275ts\313<\374\033\237=\000pB\275\233\250\364\273F\373\226=un\025=\203\024r\274+z:\275S\250\263=Z:b\275s\307p\275\025,\007=,\256\341\275O\365$\275\325h\005\275-\365<=\006?\352=bq\226=Xt\000=\307\220\310\273\325\374?\275\t)S=:\247\226\272\327jk=\022\353\256;\013a\237<\355\275\254;.k4=k\335 ;\243\236)\275U\202\255\275\307\303\253=\373Z\330=f\224\214=\230\001\371<\341\321\023=\263\323,\275t&\307=n\371\375\274\250QX\274\255\366\220<\020W\235<\371\257\345\274\315,\256\275\210!\217\274\300p7\274\324\203\255\275H\234\365<\335m~\275\217\267m=(s\026\275\255S\222\275g\254\025<@\006\356\275\222\263\211\275\226\3107=5J\237<\2040\202\275\024\224\256\274@\225p\275\201;\360\275\304\235,\275\370\273\247=\217y\345=\0359\246=\334\265\354\275\010\216\005=\331\321\333\275\033-\027=\371\356\312\275\016(\321\275\314\023\320<\371M\342=T2\024\275?\013\242\273\2016\235=\343\334\252\275\276PY\275Gv\340=\375\005\244\275Xgh<p.\347\275]9\212<\004\346\215=\247~\224\275\302\301n=\333\000\206\273\236\005\202\275y\346\351\275\\r\265=\357\2412\275\273\225\357\275P\343\247\275n\205\345\275S\312\304\275I\215\201:\317;\027\274\033t\237\275#V\270=\262\220\245\275\240LW<02\310\275O\023\366\274~\357\342\275\256RS\275\321%\271\274i\320\225=\002}\302\275\262\205\034\274cU\272\274G\255\251\275|\263\317\275\360#\354=\240-\003\275\221t\271\275\3514.<\275\363\254\275\356\314\334<P\212n=\td\212\274`N\273=\277A~<v\272\232\275\303\350\224=\326\365\t\275\323\264\361\275\022/\300\275\021h\370<\361\026\255\275\211^\263\275\264\274\205\275\272\317\240\275E\240n;\2470\200;\026-\256\275\341\262\304=FO\017;\034\252z\275!s\325=jFu\275\267\306\330=\217*\035:{V\253\275#\366\224\275=Z\315\275\005\331\270\275\270\262\326=&\014\307=\231\013\362\273\"\274\235;D\003^=L\361\344\275\013\302\342=\007\033\243\273\201\324\272\275\016\205X\275\216\340\016\275$05=\233}\257\275X*\326=IY\\\275\331\310\241\275zP\036=\234\327N<\254\200\223\275\274k\223=\371/\323\275\031\343\205=\232\\\305=T\272\373\274\225\224\244\275\016\373\312<\325\231G\274\213\216\356=\313\0100=0P\323\275\332\217\243=\271\271\005=O\305\361\274|#\312=CC\225=h\256\235\275\364l\236=~>\241;\204\211\322\274{e\326=\204\244\273\275\010_\210\275gx\347\275\321\344\177\275\013\014\316\275\033\367\253=\261\312j=m*\206<)*\334<-\243\277\275d6\\\275d\344\317\275\002\373\205=\264\334\323=vy\202\275\212\004\225\274;\307);^\240\224\275x\262F=\"\237\312=?\201\337=.m$=/\246i=\322\302\252\274\260\n\253\275\337\030\027=\243k\327=v\371\322=\254&\315<SiN<\001\331\253\275m\230\240\275\017\214\236\274\345\332\313\275>\t\333=e\361\206\274\270\345\333=\277b[=\027\037\377\274\272\337\264=\"\300M\275\213~\215\274\341tf\275\001\034\226\274\306I\313\275\022\323\274\275\031.\271=!\264\347\274\343\363\336=3\t\266\275Xi\244<=\344\263<\310\226y\275\363\352\275;\355\305$\275\266\204\241\271\354I0\275A-\322\275{o\337<\320h\343=\3346\273\275\312\322e<:`\352\273\030\207\273<N\366\361\273\254\366e=\234[\251=\013\332\314\275\226P\326\275\334|\320\274\375^\034\273\362V\345=H\272\346\275#\342\307\275\303j\302\275\300c\324=\022\013\023\275\226\005\270\275\025 \243=\200\345V=\216\251\245=\340\231\344\274\206\254\236=\027\227\023\273\360[\316=\217\204\270=/ZR\275\013s\344\275~\263\345\275\001\021\224\273\266\274\272<\342]\275=\236\026$=odS\275\314\344Z\275\252d\205\275\r\256F\274\177\250~\273\024q\216\2751\353\226\275\317\347\035;\213\223\212\275^8G\275x\244\010=\232\255\326\275|q\240\275&m\226;\306\313\273\275T5\343<\351p*\275\002#A<_\261\314;>\036\361=\357\304s;m\212\216=\341%\322=P\024\320\275\177\337\256=\257\331/\2756\373\222\275\241\342L\274_\360\240=\233}\022=\036\014\203\274\221\312\323\275\327.L<M\267\235\274O\3567=Q6\006<\261\321\330=\320\016\322;r\236\330\274P\277*;\210\301\237\275\327*-=q\2133<g\341\352\274\273\266\261=;\273\232=\324\277\314\275_\371\251==\210H=i1\354\275\304+|\275\td\201=\336?A=\241/=\275\376\014\270=q!\260==\232\334\275\010\206+=\333\225\221=\216\234`\275\351+\205\275\251nb=\003\257\353\275`\372\242\274\237~\215<q\222\276\273\236\330\017=f\241\221=\335Jn\275\277\345\034=z\366?\2754\024\352=\207\337\332\275\t1\236\275\236\"\036\274O\254\"\275\017\326\221\275\274\225\237\275\244\'\250\275\201\312\332=MAi=\3547B\275\302f\372\274\376\340\212=\2274\323=N\223\245:X\204>=\245\335\275\275\306\014\242=c[X<\321S\226\275\275\220\267\275\021j\346\273\214\265t\275m\000\232=\343\224\371;S\376\331=\204Z\233=\322\334w=^\360b\275\205\273\326\275\207\210^=td\260\275\234\226\021<\304d[\2741\205\326<h\321\306=\203 \325=\312l\204=\017\223\327\273\n\362A<1m\346\275Y\241\271\275\276\300\206=\277\334\207=|\361\336=\213\377\257\275N\364\331\275@\000\020=\312\302Z\275\272\001\214=e\254\320;\200DJ\275\267\014\013\275\261\245\316=\033X\213\275pYD=\177\240\252<\331\323\230=\220^\317=j<\264\275V\270e\275\222z\271=\221t\341\275d\234\026\275\227\356\216=eK\r=\347\252\222=f8u\275\262z\277<\242E\356\275\233@\020\275\241N\200\275\200\014\354\275\3341&\274\337%2=i\351\331=\2029\355\274\334!\211=\341\233}\275\3150\255\275\241\205\314\275\025\346\362\274\003\306\001\275\246j\327\275\351\225\205\275\276US\275\343\017\225=\262@o=\000.\341\274\247\330\001\274kO\271=\360\236\203\275\242zP=\225\320\001\274\200,\214\275\004\n\207\275R\244\376<@\326\347\275hl\354\275\252\372\336\274\324T5\275i[&;)4\204\275\243\213\214=I\367\261\274<\311\362\272\024ob<L\022\360=\353\276\241=.\337\037\275\216\312J\273j\016\253=\350\031I<\367\205\326:5\275\265=\016v\177\275rg\262\275J\206\241<X?G<<b\355\275~)l\275\357\304g<\214\207\345\274}\200\235\275\234ax\275\017s\307<>\344\250=\027e =\020l\315\275\004A\270<\346|\241;\353\345\213<G\346\247\272`]\227\275\344\r\300=\031\271\345\275\004$\255\275!\226\212\275L\266\337=<\337\037<\'\330\334=HP\214\275\302\276t\275\020\341\226\275\330\037\307\274\274\215\326\274\371)\260\275\217T\225=\233t\215=\205\303\216\274,g\214\274s\342\234<\361\245D=<\324\237=\031Z@\275\226EU\275\317\357\322=<s\355=\034\346\261=\036\352\035=\253\003\262\275T\261\253\275\236I\332=\253\273\326=`Y\263\275\224y\032\275\212 \277=q\021\311<\022\200D=\224\304\372<\361\240\211\274\373\342\333=rTP\275\340\033\277\275\241\224\247=j\253\205=\2105\202\275o\276\232<\357\254\252=\021(A\274\247\251\234\274\213\301m<\270\336\326\275b\030h=^\\\320\274\336\021\023=^\343\365<\252\024\242<\217\265\313=^\r\023=/8\214=\365\210\321=\246\307s\275$\276\255\275s\203\227\275\014\0273\274D\313p\273\275\023\232=\354\003\212=\361\314?\275C\324\312<\t\376/=q\217`\275\276\312\220=\241\374\377;\001\020\203=\023$\242=*H\230\274*s;<\240\'\304\274\314~\352\275j\306\260=\323!z\275\330\357\273=\317a\244\275f\332|\27568\376\274\350sW\275\305P\342=\277\261\316\274\244\343\345=2\304t=\000\266\342\273\025a\337\275\372\340y=\214\322a\275\007\234\245\275C\016\351\275d\340\306=\n\034\252=\326\360\320<\234\366F\275\214\000J\275F-O\274\237\316\253\274i\240b=\204:\311=\002\3039\275\226\020\216=\020\355\205=\003\366\361\274\3171\021\275\010\313\311\274\241?\305\275\224;\331\275\300\220\200=\237:\"\275K-\323\275\031X\253=\021!\244=\301\006\324<H3\347\275\205\"\276=\342\225\207=B\242Y\275\330\316\241=M?\032\275\373\306}=\024|\013;\244\376a=\177\346\244\275\033m\023\275\340\344\237:e\360\223\275?\226\342=\014\253\337\273J\331\370<`\272\222\275?_\205=\372\2621\275\373\025T=R\r\224\275\313\263\222=\272I\204=z\203i\275#\276X=\331\327\301\274\315\024\213=\234\034\302\2743o\320\275s\366\307<\2560\212=\3131U\275\233w\236\274\341\337\306\275]\374\232=\034\213\021\275p\013\373<s\252\320=.\317\210\275+\262\307\275R\254\220\274\034\023C;\027N\227\275C\022\313=T\322\002\275\255 S\275\030\362\252=8\372\265\275\204\367b\275\0033\025=s\037\031\275&\351\331=*p\316=K\275\331\274-\002\340=C\2715=)\021\253=\355\370\276\272\206=+\275#\033\346=#{\014\275\010\230\206=\225\201\346=O\266\003=n\320H=\201\214\254=\366\316\266=\255xX\275\222\210\317\275\213\006\351\275P\217\223\275\226\267\273:\273|\032\273\217\230\242\275\222\237\255=\334\207]=\2259!\275\365\026\341=\205\027s<\037\035#\274\364\354/\275\324\243M\275f\006{=I\026\376;\264\242\251<%\324~\2751\260!\275\371=e=\245\226y\274\336!\336\275\367\017\342=:\n\245<\251L\235\275\234\354\375\274\362\303j=\204e\004\275\247\312\225=\2243\331\273\017x\355\274\353$\224=\004\247\204=\023\275\000=Z\271j=\337\226\340\275\013\373\202=\227\200\352=\n1a\275E\227\314\274O\342\227\274\307\341#\275]\275\311\274X\367\346\275\021/\245=b\0100\275w\3109=M\025};V\242P=\241\014\252\275C\355\225=\332\266\250\275F\n\241=\375\346s\275\036\254\347\275\215\230\016\275\302\013\276=\351HB\274\325\303\216\275\213\361E=\024@\264=]Kf=\262\370\210\274\003P\005= \314<\275PH\253\275h\350\014\275g\364\277=\345%\n=\007\333\025=*\227\t\271#\374\365;\254\301i<`\200\233\274\327N\372<\245\344P\274\034j\202\275\240\213\345=eb\214=&\3262=\002\263{\275\002\276\257=\013\250\367<\325\025==\242\002\361=\267<\277=\271\372\216\273\312\030J\275E\000\202=X\022\202\275O*\301\275\250Pq=\2549\273\275\342^\220\275U\354\305<\314\013\253=\341\331\202<\241u\232=\305\216\242\275\200\316\373;\324-\306=\374\215\346=2\371\207=\366\334\326\275\005\234#\274\253c\324\275i\350\\\275N\315\237\275\307\027\351=\266\371c=\344\017\303=\003\257^=\371\325\322=Hp\230=\343\026\244\2737=\325=%:9=k\265\263=\023\002\341:om\233\275m\345\371<\'\271\326\275\315\370\333=\373_\213\275\305\227\234\275\177\3408\273!\254\273<r\305v<\374\017(\275\365|\305<o%\243\275$m\250=[\246\207=\215\241]\275\363\234\257\274\t#\232=\265\214\013\275g{\344\275\2455\331\275\313\215\016\275\334\224\203=\252\377\354\275(K\306=\341K\353\272\002\317\034\275\376\341\037;\307\256y=\014\377\007=\202U\246\274v\003\2079\013\316\233\275o\0028=1\245K\275\322\326]<o\307\261\275\303\204\250\275o\230\271\274\276{\352\2754#\020;s\272\336=h\023{\275E\333T;\311\346\225\274~\276\210\275\255\314\221\274\301\260\023=$\243\237=\320\240&\275(@\325\275\375\210\025\275Y\177t<\001O\007=\316!\275\275D}\003\275\324\tp\274\0351\211\275\244j\254<\034[\301=N\240\010\275\313\312D=\206\215\236\275\334a\303=\317\327l\275\202f\333=!Uk\275\365A\256\275)\362\2109\222\3144=h\372\002\274\2465\034=I7\237=8\346\265\275\203Q\206=\017\013\251=\377\306\301=.v\207=\345\354\320\275\270\342\206\275\344eM\275\205i\333\275a\233a\274\024:\327\275o\225\212<\352\177E\275\2328\271\275\206~\267\275\271\177\256=jq\233\275JQl\275(\213\206\275\245\000\300\274\370\003\277\275~aw\275\032\010\357=A3\351\275\3229\322=^\203\333<cW/=\331(\360\275\272\024\336<oo\261\275$\376\231\275K\322\203=\000]\264=\216\375\302=\3372B\275\347\024\330\275r\277\025;\373\306\264\275\221\317{=\353\333\264\275\367i*<\205^\246=V\3467\275!~Q\275Z\022\\=\343\323}<\245\310\242=\330|\347\275\244\3168=l\370\213\274\350R\342\275e\277\235=%\260\331=\315\252\267\275\261O\346=\r/\203<x\260\360\275\177\231\260=\036U\247\275\376\007\232\274\'a\360\275\202\000\264\274*C\263\275\273\304\265=\336\224\355\275H\300#=4\341\243\275Rxl=~\207\230\275\210\277\316\273[f\211\274\340\335\315\273f\246\315\275\240\333\014\274\017Cv=\354s\374\274\312j)\275\363p\260\275\340\334\247\275\242\234\032\274(\326\264\275\263:\311=\235\311]<\366\230\025\275\374\260\336\275\361\267\024\275\273_W<\224\035\310=\363\276\235\275\021n\305<\214L\223=6\247\324\274Z\267\217\275\022=\245=\345\361\225=\227^\322;\035\315\375<\3534\352\275\372@\224\274\3734\220\275\014^\227\275S\336\343<\020\320\264=)\340^=v\350\324;\350\033\241=\234h\231=|\022\301\275\360~\020\275\260\t\210=d\345\326=\324sX=\372/\306=\001\276\325\275\203Vc=\313l\240=oM&:zc\313=-C\200=O\236\002<\206\006\205\275\314\313{\2751U\250\275M\201\367\273kz\\\274\350\265\204\275\215\321\320<a\235z\275\3638\271\274K\322T=\035\222\340\275\326@\304\270\304u\237<\025-\265< \355\226<\220V\305\275\322&\235=\275\3304<\212&\377;\036\003 \275\203\345\222\275\357j\306=d\271\215=M\341\207<N\261\201\275\343\246\237<c\017\201=\342\351\204\275\350\373\321=&\312\252<\244*\274=\333\301\227;\300q\305=\256S;=|\252\032\275#\253\004=1*\274\275@\3416\275X)\030=`\243\230=\016\255\211\275\233\373\271<L\223\320\274&\227L\275\336\350+=\200\273q=\361Y\324\274\005\276\256\274\333\201Z=C/\225=xN\276\275U\265\320\275\220\nD=&-\310\275[x\270\274\022@\025=\253\227\305\275\000\333\244=sE-\275\356\326\257=\203\344L=\207B\252\275DIM=\312\n\036=\313\225\367\274y\020\306\274SHo\275\227?\237\274\251\036\002<\302\325`\275\306\306\201<\274\365\024<\0231\335\275\224\316i\275\261\350\305=B\017\341\275\013\0166\275\232\034g\273\357\006?\274\204\017N=\314\234\225\275\227X\267=\224\034\275\275\251C\217=\376J\301\274_\034\247\274\304.\014\274&\"H=\206]B\274\3461\201\275*v\351=\372\263,=D\316@\274\004\247\361\275\257}\322\275\266\'T=\273\334q=\217\343\251=\337Kj\275Sfl=X\254\235\275\020\357\327\275\370o\306=\303\210\355\275| \240\275\232H\301\275\246\304\306\274\303?\352\275\215\030\217\275\215t\326=\253/m=\')\336=\233gN\275h\016\235\275Y_\n\275\223\207\375<\254T\214\275\322\317\003=\"\313\207=\361\277|\275\306SA<\345\216\262\274Z\375\346=\270)6\274\001\004\t\275N\016-;\247\337\303=\274\214\252\275Az\344\275\231!A\275\257\343\303\275\010\337\221=\223\022\313\273\306\341m\273aN\354\275\013\\\350\275\007R~=\324\262\261<5\341\003\275\2138\312\275\344*\236\2756\266\355<b\305\277<\244\345\254=SA2\275E9Y\275c\001\215=\307\245\346=\332\370Y\275B%\030=\270\262\333=<P\325<Z[P=\377\320/\275\340\031\233=0\313\211<\324\337\n\275FI\202=|\355\275=}\016\361=E\371\240\275\315\3053\275\252h\342=5}x=BY6\275f\267\311<\362\257\311<Y#\210=\016\276\264<\330/V\275>K\322<\367F\356=\027\001\300<\276\245\177\274d\013\313\275\027\017\006=G\006\211\275\366R\212\275~\247g=\004 \350=\005\004\321=\235\300\260=@\3579\275/g\336\275\356^\341=\257\313k\275\260\006\260\275\027\005\340=hS\254=\260\006N\275\272\017<;\212y\r;\245\247Y<7\203\022\275\035{\330=\312U\303\275\2326q\2753 ~\273\007nL<z\2333=\317\353\352\275\303[U\275\266\357U\273A \347=K[\226\273\244\224\\=a\361\330\273/k\316=\325\273\234\275\275*\346=\273\307\225\275\320\'S\275\360Q\346=s\306>=\r\341i=\261\t\232\274\014-^\275P\323y\275\007K(<\264\026\001\274d\177\231=\"\245\020\275\034\017F\275Z\t\206\275!\331\217\275*\260\355\273G\376\221=V\003\236\275\262\235\273\2752j\357\274S\224V=$\362\207=\3263\346=,\036\214<\257I\353\275n\241o<\230\226\257\275\232\270\266\2742\0377=N\342b=\2321A\275c\270\307=uv\000=\236/\216\275A\321A=8\263\337=r\277\371<\251p\374<\"\211\310=\253\247a=\305\205\211\275\250$\327\275\236\t\243=\352\235f\274\337y\307<\330\332\030=\201\333\031=\227Q\306\2751\304\322=8\333\330\275\"*\343\274t\270N\275\031\207\361=\035\242r\275\200\230\343=\271\344\035\273%\t$<\320\313\364<\275\377\203\275\033\376\253\275\272\336w\275C\r\311\275\340b\332\275\273%\326\275\324xv\275\'\332\240\275qq\r\275!B\245=\020\241\246\275^_\365<E\t\214\275b\274\263\275\314\327%=N\371\317=o6\\\274%\357\365<5\246\211\275\244\210\014\275o`,\275i\251\231\275\370\341>=~ _=\237\351\353=\252\316h=\352\024\323\274\355\326\240=\341\357\351=\371\231Q\275\373r\243\275{\"2\275\340\023\313\275\344\016\260=\"\210\347\275mT<\275:\231S\272+\257\266\274mzC=R\265\244\274e,U=`\"\351\275\010\3523\275\373\314\215\274\000\213\342=\245\341\225\273\310\210\327\275Z?<\274\360\225Z\275\275\255\313<\333v^\274\277\233F\275\361\227\240;!q\314\275\315 :=\243\267\216\275\013\200\235\275j=\272\275\360\225A\275\327o\231\275Z\237\325=B=j\273\313\227\240\275j|\247\275\200\276\327\274\201|W\275\n\270\242=\323\265\031;\353G\233\275X\352\265\275\240\251\016<VJ\202<\251\256i\272\262\034\037\275B<A\275\\\221\361=/\241\202=e\3407=\2645\375\273\\\241\366<\360\345:\275\203h7<]\236\271=\262\220\220\275\314\356\027=[\031\304=\226qy\275\235@8\275\003\323\310\275\006\376e=\343r\216=\307@\366\274]\315T\275w\030\337\275Q\250\355\275\306\322\265\274\253\355\226\275Q\311?\275\202\335\274=trG\274\233Qp<p\014\242\275RD\027\275\2047\305\275\355\203\353=WE\312\273\035(\313=5\377\213=U\265+=\251\014\240\275\237\203\272\275\023+d=\304\367\230\275f\334\257<\023w\207=U\266\267\275{A\232\274\376\022\204\275\220\374\263<E\315\n=Ah\245\274|\033V\275T\r\254\275\304\264\016\2748\005\234=P\217Y=\266e\361=\372\243\356\275\037em\274\332Im\275\001\034v\275i\270b\273\361\333\264\275\036\301k\275\363\343\'\275\r\\\273\274\263VO\275m\320\236\274N\237\346;\217\262\335=\342\231\221=\306\341|<!\355\321\274\2530\302<\234\310\351\275\200\350c\274\300s\341<\t\363D=\352|\261\274\271\252\236=\211\233\240\2753\244D=U\237\201\275\344Mc=\324\220Z=\007t\000\275*\351\351\274\323\274\304\2745\017\002=\226\031\013\275%\366\300<q\274\020=\326\377\312\275\n\006\301=\2013\333\275c\277\246\275\334B\200\275\024(\342\274C\347\273\275\024\227\303=\340\235\272=(\1778<~Xk=\273\222\371\274k\033\334\275\024>\345\275V\376X\275\220\352\313\27519\260\2754\265\250<\2128C\275\242c\320\274\201\317I=c\005\215\275\330w\270\274\310\335Q\275,\246\332=x\377\222\275=\316\244=~\025\247=\234\n\262\275\220Y\232\275\351\331\314=\002I\213\275f\347&\274\366\301_= \305\213\274\211B\316=m\372\001\275Xmr\275\357\224\356=\017\2430<\261_\277=\306\n\222\275\300\252o<\217CX\2755\013\037<~.\252=]\220A<\266T\242=\253j\353\275\232\322\314=\265\256\016=$4^=i4\037=\221\345\356\275E\274\211\275\261\277\"\275\210\306:=@\301\275=jP\273=\\RL\275\253\022\360=\333\205\244\274s*\332\275-g\262=Ts\300\274\232D\007\275\205\030\225=\332\375\201=\362\222\210\2749\274\270\275[\356\307=\341\257\t=\344fb=\t\340\322\275\316\344\224\275Q{\301\275\247\016\353\275\372J\345=\322\007W<\367\'P\275$\332\321\274\256\226\331\275\355\004\267\275\225\"\\\275^\263\247\275\211\203s\2757\274\227\275\376\247\261\274\364\343\244=lZ\257\275\373\375\233=\034\254\277=\027\274\006=\271<)=\213\205\310=Zt\224<7\235\235<\225\364b=\234\321\316=\341_\270\275:1\301\275H\014\026\275\306\205\022=\204\320\201\275\032\3576\275$*R=\024t\261\275|\365\305=\017#\036=\220o\314=\020\222P\275S\177\263=\327\274\003\275Ar\321\275\230\272X\275h?M\273\013\2459\272_\020\323=\372\t~=N\032\r\273\032\000E=v\260\273\275RC\356<\025:\325=\312\377\205\275A\312\234\274Qg\202=}\236\t=\367\204\\\275\017\204\361=\251t\325\275\334\337f==\231\237<\333&\231=\222\213A=\005k>=\242w\206\275\374\305l\275\361\324\260\275(\023\255\275N\034\233\275\307\032\237=\245\253z\275\347ba\275\246;c==J\226\275\326q\344=M\250\302=^i]\275\217\023q\274\253\204\216\275\024d\223\275bo\225=\266DU\274\341h\327=(\320\231=\365\361W=\357\323r=\353pJ\275|\251\316\275\200!\213=\017\316/\275Lx%\275Q\317\357\273\305F\207\275\240S\220=\375\'\360<\267\021\245=\245\035]=q\224\263=n\257\223\275+\0353=a\343\263=\t\325\213\275\247\242\230=:\264\354\275\372\013\306\275\032\351s<\322\254\277\275\236\305\240<\302\315\330=\256x\037\275@g\255\2751\346\245;\005\212\251=\263\213\253\275G\023\024\274\350\205\014=\372\263\252\272\340\225\251=n\020\307<\212}z\275\217\"\253=\0029\217<\037\210\345<L\026\300=\301\335{\275\326\343\232\275\334\272\014=\222G\022\275\273\266\341=1\362\330;4\007#=V\234\316=\203PT<\374\322\250<_\237\310=\252}\271<\373E\331=Y\013\221=\234~\003=1R\243=|\324\237=\033h\354\275#Y\223\275A\377l<]u\226\275M\006\310=l_\264=\032\300\257=\374\366\247=\344\302\203\275\216n\035\2758\n\207\274\354\217\342<>\004\333\275E\222\254=\270\261\261\275\256\212q\275J\326\233=/\212\337\275\005\225K\2741\306\277=\330=}\275!\006\271;4\346\266\2757Rj\274\204\302\256\275\016=\242\275X\367\321\275\357\277-\275\024 \252\274\256\207\331\275\357%\007=\200g\355\274\305\310\307<\241\311\246=\354\3142=5.\237\275\000\275\025=S\234\355=D#\250\275(-\204\274\255*\317=A\214\232\275\203Z\245\275\266b;\275\214\366\236=\244\266\307=\354Z\233=\006L\354\275\225\304\336=4\351\333\275 R\302\274\300W\243\275\025\322\231=\311<\361\274lk/\272\243\204\324\275\275\237\263\274h\004q\275\017\213\224\275\254\331r<\332@a\275\303\274\267\275\236\n)\274R\345\372<e[\323<**\246=\261\373\254=\022\376\003<\306\375\t\275\344y\263=\037\203\207=\025\203\260=\366c\355\275\357\324\360\274@e\340\275v\270\232<$\nu=\372\307\017\274p\222F\275\247\237\205\275MuK<U\326\320\275\267\270\334\274\252\240\210<\215\251\312=\224\242\331\275\322\004\366\274x\250D\275\222\020\256\274`\314\243=\336#\357\275\2174\201\275\333\300\217;\235\214\024\275\310\013Z\275\t\260\361=~ \023=\031h\232=\006\324-\275g5>=i*@\274yo3\275 \001\213\274\205\366\252=\320^\374\274>#\342=*\212V\275+\321\017=\311\257\262<\227{\305;a\247\252\275 \237\304\275\032\020\310\275\002\375\302<\315\315\324=\367\227h<+\017==\312\373\224\275,~\353\275b\243r\275\314\262=\275kp \275\233\023\270=\323@\260\275v\376\215\274\230\230\217\275\367z\313\275&\236\310=u\326\356\275\3021\302\275\026\327\001\275\306\202\250\275\376\250\276=_\330\306\274\241\307\264=?2\221\273\240\213\230\275\304\353\351\275L\"S=>\315\035\275\376a\204=\373\365g=\325r\355\275\262\253P\2758k\321=%\240\250=\317\025:=\346\334\261\275\366\',\2752v\357\275\251>F\274\233%\365;\3514\"=\333\321\257\275s\021A=R\026\254=\213\000\260\275\"\206\220\275\372\305\036=i\232\217\275n\007\236\275\002\016L=\353\217\301=.\337\316=\364F\262=\337S\251=\007\313q\273+~\316=\377\205\264\275\373\310\321\275\'\253\024=\306\257#\275\324>h=KZ\274=\335\255\204\275\341\n\232\273\017\214\241\275\356*\321\275\2061\256=\364\350\371\273\353\234h\275E\340\207\274\001\354\233\275\254\2241\275\223\223\212=$\230d=&\037\274\275xk\241\272e\030\306=\311E\317=\371\371\310=Ec:\275\226/\'\274\233\270=<\235\331\222\275Rt\251=\017\215\262\275\275=\253\275je\254\275\3019\271=\t)f=\213\033 <\354\347z=\230\205\240<\354^\022=lk\252\275l.\352\275\260,\263;\236c\017=t\327\321=7\204\317\275``\370<\262\332}=p\354\355\273\006\270\357\275W\236\351\275R\341`=\233A\336=\236\276\032;\303CZ\275)l\214=\350\230\274=\263X\333\275\375\313\241=\231<\261;sy\326=\362\273\374\274\232Y\272\275\262\244\235\274s\231\366\272\207\271\301=\033\023\274=-x\212=\243\352\204\275\204\362\215\275z\306\251=\304\362\357=<:\344=\347.\200=\332\325\224=\337k$\275\212C\217\274\010\221\242\275\262\017\037\275\315k\226:b\312\210=\263T\217\274u\3366=t1k\275\226\325\225\274\241B\250\275\253\021\275=C\230\233=\204\244\262<\377|Z=\302=2\275o\350\243\275\275U4=Y;\335=,@c=\324\306\342=\221$[\275\260g}\275\266mz=9o\'=\002\375\032\275|y\237=\rm\210\274\204vg\275\276\301\330\2753H\301\274R\265\202<\303]v=p\210\007\274\252\250l=\352\253\274\275\241\201\201=F\003r=\364\335\346=\234[\351\274\235\341\244\275\013F\273\275\302\017\342=}\276Z< \345\355=,\233\313\274q\3143\274\371\t\266\275\277\317\255\275\362\034\253\275p\250D=?Y{=\337A\342\274h\020\301=\305\242\273=\376\225\246=\232\026\212<u\313\324\275\351\306\225=\177\010\357\275\017\027\323\275\352\256\307=\373\023*\275\271\345\222=\201\227\002\275z\337\226\275\275\016\r=\000\340\246\275\274\204D\275O|\320=Tp\230\274\324\226\353=\303\371~\275H\364\225\275\252[\323\275Rdq=f\252\213=\245\205S\2757\226\225\275I\204(\275\014\303\031=N\010\307=\307y\304;\330\314\376\274\343`\241\273o\332\353=w\006\343\275g!\237\275C\036w\275a\005\274<\016\374\231\275\216\247\334\275}\305@\275\264d^\275\213\022\346\274\242\217\027=\2708\"<\265\215\317\274\261*\205=\243\355P\275\2178\337\275\006u\301=\275*\257=\315p\265\274\240=\204=\334\t\251=\005\262\017\275\335\0142\274\177S\323=\021\317\233=\244`\333\275\026\370\220=\277\305r=\2737c=\n\367]\275\330j\311=\271\221\207\274\353\375\301\275\327\361\270\275\361\201E9u\327?<\002\030\235=\217\354(\2753\350D\275!\263\273=\010\353\266\275c\260\354=*\246\337=s\t\235=X\305N\275\250\353\272<\211\365\014=\317RZ<\243\236\n\275\204\212\214\274|\250\353=r\307\310<H\024l=\364j\206\27513\212\275\231E\266<).\332\275K\375\344\273\370\355\006=\205\340q\275\377j\032=l\371\343=\205\353\263=Dj\302=\221\256\276=\n\227\230\275\300\251l\275~\310\321\273{`\361=\217Vz\275\3032\303\275\313Q{<\312\207\032\275\307\352\250=;\332\302=\t\206\267\275\204Z\204=\257\014\337\275\355\032\245=\354\361\220\274\224K\213\275R\336\356\273\262\005\231<ei\002<IH+<>Oa=\2129f\275\325\230\204\274e\216X=\234\343A=\032FS=\331D\343<\236\302\326\274w\202\267\275e\021\221<\250+=\275\264^\211<\305\366\231=\030\357\353=\013--<\030\262\357=\251\365J=\262\340\307=\333?\035\275M\230\202\275\013\320\270=\226\361\253=\336\'\342=vU\202=\035\243\227\275\243\253\333=5D\"\275\325\342\236\275\256}*\275\357rC\275\2463\354\275\274Io\275\236\202R=-\276e\275\267Z\344\275\270\347\255\275#\260%\275\"~\230<\242\031\360=w(\204\275\234\267\301<\3110\353=\033\214h\275Z\306L\275}\225\266=\325\177\006<o\342\204;]t\314\274\330\3458\274\324yX<\313\311\357=\007\200\236\275\247C?=D\253.=-P\227\275&\201~\275\017\2714\275\252\2209\275\005\234/\275\024\316:\275\352\325\277;Fk\304\274\nIT<\0307\213=\234\201\341\275\355\226\323\2755 Q\275!\320\233\275\210Z\210=\377\000\020\275`\272}\275`\033\002\275\264\337\306=\033(\310\275z\275\354=\'I\321\2756\320_=gKp=\2427\347=\364\257\343\275\330o\355\274>\207\364<kC\317\273&%\230\275\360\026h\275\205\340%\275X\342(\275\273\302\024\275\020c\261=\031\270\325=$\3349\272si\263\275]\241\231=I\000\333\2753\363\277\273\264\034\245\275\211\202P\275\010n{=\351\240\336\275\017~$;\206q\357\275\r\230\217=\003\364]=(\024\317\275F\231\276\275\001E\300\273\220z\240\273\223\357\275\275\213\324\232=n\330\220<\201\331\332=rO\326\275\215^.\274\240oW=\026\020Y\275\222\032H=\237K\207=[\022W=\010\277t=u2\213\275\247\022\037<\177z\210\275Q\251a=@ \313=q\311:\274\335g\343\27437\247<j\226j\275Y\332\201\275\\e\325=\2721\225\275[M\231\2758\247\357\274+\'\357=\024\337\343\275u\003\237\275\001\200\270\27547\335\274\007\306\346=\330\\\326<\014\030\260<\035\311\230=~\221\231\275\252\322q\275\331\344T=D\315?\275\306\234i\275\200~\003\275nC\032=\266\216\322<\253aC=\234Xf\275\367\235\251=\214a\327=\233\250\205=\223\337\373<9\265\254=D\025\225\275\"i\240\275x\003\371\274\265h\310\274L(\234=\312\225\030=\312p\251=\225\3234\275/\021\214\275+RF\275e?\255\275\354\351\302\274\343\335x=\014\006\307;\201\217\032\275\021\211\262\275+\260\"<e\2066\275\215vX;\353(t\275\346kJ\2755\304\242\275\361\246\240=\233V\034\2741\321\253\273\244\242\337=c\013\353=Z\254\237\275GS\265=\202:\225\275\346\353\320\275/\302\230=\313\027\255=\313/\235\275\345\3346=6\255\211\274i[\264\275\315XQ=\261\013\014\2756a\337<\372\315\235\274HH\237\275\221\304[\275\205\037.\275u@\247\275\037\036\251\274\337K\247\275\356\274u\275\275\257 \274\267\335\333\275GU[\275Z<\313<X\361\340\275!w\007\275\305\210\235\273\276\\a\275\206\333\253<\001\303\326\275\345\356\027\275\366\336U=!r\224<\355\271\225\274\342\365\323=8f\353\275\007>\345\275\255\311\265\275)\366\204<\007\330\315=\347\303|\275\'E\350\274I\t{\2748^\357\275\312J\346\275gDO=\211\210b\275\225\030\277\274u]\204<\323-\221<A7\224\275\341\366\275=^\340\237=\037\306l\274\254=\355\275S\250l\275\356L7=A\252\341=O\322\325\275\207I8=\252\357H\275\nu\231=\260\232u=O\004\316\273\016\374\033\275\006F$\275!\365\211\275\273\006n;\201\335{=\214J\302=\206\365v\275i\215\267<\343W\352=\2455\022\275\356\231\257=\361\"%<c\\n;\215f&\275G\214\231\275\347\313\235\275\016\032\330=\207\2655\274\236S\360=\024d~\275\303\240\202<\2200\214;\024\221\222<H\224B=\263\374]\275\271\357\351=\300\323\203=\3667\023\275N\177B<\364\214`=\327tN=a\227==\374E\311=\243\202\000=\261E\212=6\251\320\275\275\"1<\375\033\323\274\230\335\037\275\374\344\303\275\035\300\235=L45=\306\n\302<)y\270<\023!\374<\332)\346\275uS\200\275\'\352~=\243\243\241=\205\024\337=\235\022\223\2758K\234\275\263\345\026=\354W\300\275\n\371\314=\254\237\253=\006\n\t=\213\317^\275\2304\300<\352&\350=\341@\306\274oz{=lo\337\275\177\030\366<\210+\317\275\\R\275\274\334\354N=\357&\276=?`\345\275\342)\300\275\323\363p=\370\376\025\275=\204&<S\r;=-\021D\275\037A\232<^\354\347=\255\374\343<\0331\302\275\240&\231<+\372B=\240 B\275\346|\216\275N7%\275R\247K\275\366\305r\275&M\360\274\360\335z=\003\026\305=\265\347\034\273\236\264\005\275\253[\357\275\377\337\344<\307\\\n=MF\342=\321\372\201\2758.\357\273\004o\343\275\3513\026=m\351\275\275\026\2676\275K \211\272\355\253W<\002Hv\275\037\317\241\275\317\210\327=\203\352I;\374\016\320;sel=\217\352c\275\025a\227=\330\215{\275h\317\333\275E\220\313=A+\254\275[@s=\332NZ=\336\305\241\275}r\232=\215<\'<0\322\221\275\343\201\316\275q\2638=\'\321\337=S\036\232\275\205\245R=e\240\354\275`\212\214\274\333\322c=o>\211=\340kC=\321\214\321=\014\343Q=\251$^\275\352\177N\275z*\013\275\020\311\241\274\211\263\353=\312\371\205\275mL\206\275\000\236\240\2754\222\344\275\031\214\201=\271\251\252=\020\277\'\2758\206\246;$\362(\275X\270U=\210\020~\275\322\255\203=\212@\226\275\014\226\336\275:\034\210\275\252\341\013\275Y\235w\275r\001H\275[\343\214\273<\365\314\275Ok\355<\357\200\344<\301\3504\274C\241\n\274]\032\313\275<\307\316\275(\244\327\275E\035w=\333u\250=g~\023=\001\240g=\361S\210=>\222\335=\207e\227\275:\312\013=\023\374-\275\323\216\302=\301\275;\275\017\2510\275\360\265\271=\200\200^=4\364\240=\330\320\270<\345\2455\273\317\377\340\275hz\367\273\270\252\327\275V\311\320<\344\004\016\275xB\346=\016\251\302=j/\017\275]l\031=\362\307\311=\302\336\252\275]n<=\003n;;\211\312\312\275U<\207\275zk\227\275\002\367\215\275\234\236i=\234\247\025=\007\3546=\021\212\322\275>\257\256=\037\356Q=\304\364\260\274\320\340\354=\023\224[\275\037\324\310=\037\333\271\275&\314\006:mD\250\275\240\202\343\275+\304\301\275\025C\303=Sx\263=/\273\226\275\230\201\212=1\373\266\275\2401\317=\377t\220=bA\372;\025s\036\275\352\325L\274\221\277\321\275.\337/<Y`\332=\'\271\267=D\312\335\275G\314\310=\351\303\033\275\034\212!<\252G\201\275\246\306\304<|\241\027:\335\354\264\275\346\225\303<<0\260\275\262\222m=\276\212\207\275\215\331\304\274\017A\222=\331E,\275\037N\214\275\307\353o=\317\300\212\275]\214L\275eM\255\275\220\277\234\274\303O\231=2l\216=\017[\326\275Y@-=|Kb=\267\323:<\017\260\r<\007u\263=\267K\220\275\032\202\007=J\360\302=\247\304(=G\277\336=N\327\000=\004\227\020=I}\326=\265=\t=J0\343\275U\326-;\235\251\311=\305\221\266\272\037\374\356=\234\030\313=\0263\336\275O\372\372\273\375\344\211\275\025\"\372:\235\215\267=\030\275\306\275\307xb=\204\330\327\275\214D\275\275\021\224\003\275h:\233\274\036\322v\275n\352\242\275.&(=\264\363\310\275\351\310\222\274\243\277d\275\247\210\003\274\305\236\204=\0046\256=J\035G=\343,\\<\202j\266\275\266\244j=\201\217y\275\032\177\266=b\212\342\275\r\235F\275\202\367i=(\202\272=\206\363\225\275\326\333\306=T<\276<\\\327o\275\243h\033=p|1=\260\213\236\274\275%\030=/g\223\275f\t\260\275\256\302\220=\336\360\213=w\373\273\275\375mH\274\211\263\352\275Wx\207=^\334\331;Z$0\275\326\335\222\275\023|\307\275J\365\014\275#l\300\275\246\332s\275\326!\226\275=\340D=j=\235\275\270=\204\275r\004\005\274iG\350=\003\223\237\275g\2060=\010\307h\274\347b?=\362[\313\275\250\257\236\275\215,6\274\242g\256\275\266\021\231=\327C\352<\317\217\210\275\326\343\005\275\300\206\232=\021w\251\275\215\315\305=\210\034E\275\302\261\305=8\265\254;\300\251\201\2745\177\036=\252\301\355<\324\327\325=S\013\322=\033\353X\274\246\002\323<Z\243#=\325\251\317\275@\017\375<\356\230\206<\036\225\340=\211R\321\274\200\271m=\210Ts=[\tN=\177\234\336=\356h}<\325{\334\274\310\271\201\275\213\020\215\275 \360\253\275\212\310N\275\331\010\234\274\224F\215\275\320\222b=\372\303\335=\274\330\247\275\210\302\322\275\324\316c=\226L\210\274\260\210u;\302\031\235\275Am =n\224\317=\265\3715=\370\273=\275\314\3771=)H!\275MV\022=\340Y\025\274\231\221&\275\332\001\266\275\274\246Q\275\256e\344\275E\327\214=l\303\245=\232\004\"\275M\320\334\275\212\347\177<$\034\'\275\273\317\000=;)\200\275&\234\312\275\236\304\334=\364\344\260\274 \261j\275\233\216\235\274\370\360#<\367\376C\274\217\014\177=\350d[==\207\355=Qi\326\275{\334\313=\326rz=ph$=\227\323(;\273\277\220=A\344V\27539\237\275\234\351\327=\211\227\351=y\361q\275+\033\317\275\226a\241\275\343/\232=r\271r<2L,={\003C\275\017\253\350\275\220\312\343\275L\017\236=\254\020\333\274#i\250\275\024\000t<\224\001\264=\241\\\327=!\001\233:\227\nR=\324I\324\275\201\341\234\275\333\363\213\274\270\303~=\000X\035=\004f\344<\242U\200;N\300\371\274\013\034L=I\351C\274\256\226\267\273\207b\325\274\262\201\341\275)\317\262=+\315J\275\206a\336\275~.\010=\r4\270=\241\034\311\275A\035x;@2Z=$\035\354\275\322\225\300\275 \220\301\275\325\311\331\274\000\223\234<@\223\r=\352:2<C-\n\2747\376\331\274\244\306\250\273Q\225\235\275\014C\272=\006\276\316\275\372\350\224=\004&x\275\004\203\354<R\216N=\234#&\274d\3267=T\247t\275C\210\330=B\355\265\274\337\263\271\274(d9=\377h0\275\374\355/<v\365\335\275\026\307\345\275\035y\207;\024\332\261=\327\276\265=\220\227\324<\251\257\263=ZG\217\275S\026k\274,\206A\275\326\224\233<\307\352:\275_\004\307\275\201\364n=\326\023\341<\332\353n\275\023\354\360\2741\026z\275\221Y\274=1\223\226\2742;\211\275\244]N\275\363\211\374<\213O\035;\303{g=\032\323\260\274\007@O\275\227D\221=w4$\275\000g\270\275\017\205\254=s\310\314\275\363\211\023=\016\367[\275i\223\303=,\345\267={\267\356=>d2\275\333\374\300\275\177\322\245\275U\356\206=\227p8=$CW\275\033\257\274=\354&\216\275\2767\203=b\340\210\275\026\r\345\275\373\000W\275\r\210\223\275\002\271\214=\355\260\234\272\235[k=}\224+\275\302\372,\275\332BX=1\032 <\267,\"\275\026\034s;\213\226\260\275\2475\356=b\202\271\275\301\327n=\272-\240\275w`\371\274\310\341~=$\356c<p\231\353=\003\201\271=\347\355\303=\326\352\352\274\235\020\022;\331\000\350\275\n\366\213\274\020%\307\275\247y\346=R\355\312=y4\307\275=\277\020=s\210\301=\355z\314=\242\225\206\275\2165i\275\271\335:\275t.\257\274h\276\335\274\203\007\225\2738C\026=\025\032?\275\250a\245<\244\013\377<\013\271\246=+\210p\275\367k\346=f\304\004\274\2475\260\2758\336\027\275S\301\027\275\251\314\200\275l\177\225\275k\t\314\275Y\254\362\274\226\366\224=3IJ<\270K\310\275\354\237\261=\261\t\247\274U\202\203\273\264\365\356\275\001\234\356=\332\275\250=(6\221=\264\000\365\273\344\032\341\275\347\233\271=\261c\225\275\026\000\204=g\266\r=\024\003\201;\227\"9\275\242\037\315\274\320\020\311\274\275\344b=\263I\253\275\352h\t\275\304).\271\236V\255=K%\355=<*\375<W\313|\275\256\025\227=\237j@=\261\036\234=\333)\206=d\262\302=o#\224<*#1\275\241+\264\275z\2054\275G(x\273\271\227y\275\311\250\031\2756\224\253\275\241\245\334=\362P\306\272\335Mn\275\277\311\321=\322\'A<\277\350\\=\221b\317=\265\261\236=\016\335\223\275\021\275_\275b\006N\275\007E\265\274Jz\273\275x\257\332;\264\304\251\275\301\0001\275;\315\271\275\333\035B<{S\225\275\232\350\326\274\223,\004\273\353\372\355<m\265W\275.i\006\275f\305\273\275\001_z=\216j\221=\312I\336=\204g\000=p\326\317\275\000\205\360<\024/g\2751q\321\275\256Kw\275\256$\237\275C\322\210\274\002e\334\275\342\361\216\275^\325\334=\003\203\274\271B\237\355\274\263\301\206;\256\320\326\275R\375\021\273\221\255\354;m\330\314\274L\245\210\275\303\265\351=\302d\321=\225\216\347=\261k\256\275M\307\256\275_\276\302=/ \276=\267\274\316\274\\\005M\275C\226J\2748\250\275\275Z\260\215\274\317\214\216=\322SP=\371\337)=\005\023\203<\262\200\216=\263\374\\\273\365\241\252=\263b\267=w\277\177=\031z\324\275\"\2570\275\205\277\330=\305\314\210=4\020\253<\266x9<xi\027=\245\205{=\022\312*=\"\003\036=\342)\315\275\215\225\225=\021\3113=\306z\374\273i\321A\274>\340\264=\212\350\323<\311~\250<4 \206</\357Y\273\346\262\254=\362\266\224\275\234q\345=\023\367\255\275\237\302V=\234\206&\275_\357\270\275!\204\330=f\254D\274\371\263\351<\365\221\275=\017Cr\275\035R\317=\374\304\277<`\316!\275\356\034M=r\006\352=4e\317=\033q\n;o\037\243=a\010\361=\201\323\301\275\231\211\263=l\342\001\275\227\357\221\275\333\213\"=\227\353\312<b\311T<\246sk\275[Q\350=\315\203\230\272\203\273g\275_\037\311=:\226\234=\021*\203=\351\333\224=\272\304\316=\016%\250\274>-\244<\214\316z\275\344\240\027\275\363z\264\275-\263\303\275\232\321\334=\362F\026=\350#\273\275\232\232J<,V-<J\371\302;y\2522\275\006\363\276\274V\002[=\024\245=\275_X\236\275Nb\301=\272n\217\275J0\222=\273\214\177<\344_\304\275\230X\007<eo\241=%\341\372<M\306 \275\220\313f\274\362\215\177\274\000\321#=\250\302\350<\340f\335<\004!\225==\301\243\275\301h\"=\201\275\333\274\227/\330\274bF\314\275\237\341j=v\274\201=\263\367\217\275v\260\217<\266#\343=\327\321\251\275[0\356\275\327\265`<\310oG=\235\2701\274\213[\315<\r\227(\275E}\336=\200\220\305\275\354QE=\324TI\275\202K\355=\204\272\016=a\202\032\275\306\342\222<\366Q\302=\027\000\346\275f\350\002<\247:\346\275zx\312<\034 \327<\0034%\275c\316\274\272\333S\252=\203\002\237\275\222\336\226\275P\201\352<\037\313\236=\212\305\346\274\021O\350<!\335\";y\311\310\275\363\003\257<vP\355=\255Y\225\275S5\307=\345:\005;r\275\213\275tK\305=R\362\303\274+\n\212=A\226\374\273}1\272\275{\210\207\275\031n\264\275a\252f\272\242TR<\305R\270=\230z\265\275\033\231s=\020\317\277<IFR\275C\276\351=8\014\344\275\224\262\300\275\030\003\020=\n\016\003\275\313\365F=\323\020\341=_D\272=#\301f\275\346\202\324<\333\231\266;\020\274\373\273\276\376\275=\251\003\301\274\272\224\252\275\303\322\366<3\262\351:\203\206!=tU\221=)\351\264\275[\030\000\275.\306\231\275[\314\324\274\237\270R\275\016\203\"<=\n\320\275Y\007\203=3.\204\275\255#\322=W;\266<S\223\327\275\376\364\264<\212\365\307\274\020\3349\275Wr;=d\317\326=/o\354=d\222_\275e^\211=\303\\\232=c$7\275\305\254l\275G\361J\275Z&\260\274\235t\202\274\261e,=\241\326\032\274\360\317\016={y1\275QH,=\222`\261\275Bk#\274\2209\300;\377\251\263=\371\004\316\275\2173\217=\234e=\275\034i8\2753\327\333<Vd\355::\'\347=\370\251\227\275\364=\274\275\377\311\253\275\236a/<a\251\004=m%\240\275\351.&\274\301J\303\275\036\205\003\275H^|=rT\212\275\014\202\216\275\007H\333\274\360\363\347=\021\307\241\275\375\264\307\275\037}p;6\331O=\220\\.=\344\272\276\274\204\232\275;\354\352{\275\347\361X\275\365\204\256=\362\006)\275E\310\200\275\202p\307<\022j1\275\313|\214\2754\202\247=\031\304\233=\356\342%\275\r\263\207\275KG\316=5\"w\275\304\373`\275\347w\243\275L\366\350=\247\216r\275\360\032\310=\227t\264=tC\330=cB\375<\240k\300\275\307\315\361=\300\273\274\275\373\033\'\275\275\264\217\275\205\022\311=S\202\250=\035}\217<\202\333\257=un~\274\230\034\301=\322\204g=\250s\210=X\273i=\021\353\266=\306\254\273\275\3003^=\003\3112\273J:\010\274\2746@<\014\353\311\274\356\312\274\275df\300=\257\252\2107\024\274u=?\374\257=\001\321\360<:k\322\275_\324\322=\031T\200\275\005\204\322\275\234,\266<w\211\202\275\320\207q\275G^\227\274\014\332{=\306g\270\274\302m~=\222\036m=\315\351\326\275\236\312\033=\006\003\225\275\265Z\210=#\215F\274\336\337\302=\335\344\246<k\247\220<\021\301#=\303\235E=\027\3573<\331\202\230=\215\220>;\277}\261\275\310\362\216\275r\205m\274\224r\263=\207\307\345=v\204\335=\323J<=m\210\332\275\217d~=4\252l\275`\372Q\275\021:\231\274\203\013@\275\375\376e\2758,e=(o\254\275\275\210\272<\262I\320=K\214\350\275\010\212\254\275d8\341=\373%\223=\\\363x\273\3779\036<?\031a\275\032H\273\275@N7\275\017`\313\275K0\326\273\263n\300\275&7\027;\021\315\337\275\200\r\002=\3103\310\274\370\214\036=\312L\301=#d\\\275\226m\206\275\277\335R\274\322\353k=W\362%=\375\017\371\2743\365\257=CG\335=t\261\350=`\',=\363W\220:\264t\304\273\364j\322=`\257\261=\004^f=\300P=<E\"\030<y$\305=\352\267\032=qz\252\275\030\327\240\275h\345\262<b\362*<\245LD=\030+\333;\336a*=!@\207\275\363\r\326\27538\332=\251\212b=\";\274\275\314\213T<\031v\302\275\322\324\26581\310\200\275\365\254\256\275A$g\275\360\355\337\275\267)\234=\214\267\\\271\342;\230\274\306t\017=\365\213\342\271+\250\256\275\010g\261\275\335G\032\275\357\033|\275?o\302=j\365\244\275{\244\200=\320R6=\023\232\314=\355\362\200=+\336\017=\035\220\260\274+\332t\275\331d\007\275\271\002\220<\213U\202=0\000\212=*\370O\274\333\370\210=\214\373,=\021\351\374\273\255\256T=\034\236\343=\375\030-\275\345\023\355=&\202>\275\210\271\255\274\234\334W=\r\003\274<\365\335\317\273{!\217=M)\313=\301Jy=\207=o\273\"OY\275\247\375\270\275b\300\270=@\261\302\275\313\013\251\275\312\230R\2754\377\212<\246\255\355\274\212n\213=\002d\323=\n:\360\275\345>w\275\207\223 =\337\245\246\275\036D\237=\340e\354\275\372A\241=\246\361>\275`\002\035\275\344$\315\275(d\301\275\364{\355\275\250\257\273\275\233!9=\303\246\312=sj\221\275\360\245\352\273@$\320=O\270z\274\"\036\231\275\242\316&\274\264\024\252\275\210\372\233\273}z\202=~R>\275\033d\277\2743\241\204\275\260,\213\275\033\024\211=\302a\200=cp\316=\246(\235=5\0213=<\013\336\275M\023\303\275\301SN\275\214HG=\215Y\222\275x\010}\275@\376\320\275g\2139\275K\215N<;\023\346=\234\360\002\275\005c\241\275\371\"\203=\233\025#\275\322m\226=\236\016\342\275~h\352\271*\246W=\362T\204\274\323&\310=Bj{\275r\005\344=\226\203\233<u\256?=\314w\253=\271&l=\177\223\360=\257\276\314\275\231\034\342\275{-\341\274\216\235\302\275:\330\331=\177J\026\274^\310*<w\222\331\27558\234=y\276\340\274\336\001`=d\275\246=E\370\204\275\343\242\200\275\314ZK=h\037\225=F\300T=\0006\337<\264pF<i\311\274\275|\033\237\275\325\006\231=#\034\347=9\0362=s&\205\275\213#\322\274(m8\275\306\310\337\273\225\334\235\275\231P\315\275\315G\345\275*\\\262\2752G\237=\377\206\024=\010\025\310=\373#\252\275#Q\365;\233j\036<\336n3\275>S\260\275\341\303\346\275\257\000\250\275\354\350\321\275\321\010\322\274\324\204P\275D\207\002\275\231]*=\370\277m=R\337v\275-\020N=\030r\206\275\376\351\204\275\000\205\356\275@\262\237=\314\020\224=\210=\005\272\3679\224\274\203MD<P\310\027=N=\243\270cP\267=\276\310\354\275\017/\254\275+\300\325\275\r\"*\275&F(\274\300\264\221\275\310m\335\275\024(\245\275\037B\270\275\216, \275\306\272\332\275\341\314\244\2755\240\351=\026z\346<4W\274\275\035c\267<%\377Q\275l1\266\275\213\307x=g\006\324<.\251\366<\367\271\323=\026<\322\2750}\340<\226\000\253=\200\361\333<\037S\316\275\341\031\215<\366\316<=\260z\301=\353e\326=X\354\274\275\231\026\345=\274|\024=\303\261\267\2750l\340=^\251\236=*\273\234\275\341\247\357=\205\333\306=\250X|=\no\252<\211Z\013\275\237\003\243=\221\357S<\273\t@\275\036\325\235=\345\032\223\275c\362&\275\263\367\334=\213\253\324=\333N\316=\351\025n<\312n\000=u\246\267\2756,%\275\365\315\032\275\006\361\223<\325\355I\275\204g\324=\330\270{<\203\024\025\275\332\205\365\273K\355\227\275\024:\320=\010\\F<AL4=%\334\013=B\037\023;\0066+\275\276\326V=\337\255W<\035>\233\274[\360\224=\222T\360\275G\271\257<\342D\215=;\377\331=<i\376<\312la=nZ\001\275\206\264\264=\232C\360=w\214\361\275\013\233\204\275\247\017y\275M\212\257\274e\252\355\275\204\370\254\275\275\"Y=\301q\026\274M\267\276;\010\025Z=\035\224\327\275\016\376\224\275<6\302\275\330\335N\275\201\364H=\002\256\007=\240\033\226=\036\354\232<6\014\306=\363i==d\341:=\354\342i=\310\333\336\275\373\020O=\331\242u\275\026`y<g\324\314\274\313\r2=\350\331\223=%E\230\274t\305\t\274\322E\251=\332\226\357=dv\315\275Okn\275\343\3527=n\254\265=\035\304K=OK\272=/\361\312\275\271\360\267\275\326MB\275\245\354\277\275\311L\240\275\362\376\323=`\231\266\275\3160\300\274\320\247\031=l\375/\275Ap\312\275\346\334\254\275M\347\323=\322r\327=(\266l\274\217\276\227\275\2122D<\2156\037<\265\223\234=\001\000\325=V\271\t<\262 6=\027\255\031=%\317\304\275\312\207\310\275\003\356>;\301;\302\2756\353P\275H\277\277<zd\261\275\027\005\021=\227\237\250;\243\243\357=\3368\226=\370\\\277\275\031\035\230=\357\253\326\275\225\276\333\275\257=\356\275A\037\216<\226\256\021\275\351l\223\275\335*\357\274P\277O=\343\222\210=\330\251\231\2750\261v\275\205W\214<\037\342\334\275\277\362\017\274\013\230\354=\0004\226<R\361\267\275\016\263\026=\222\233\201\275{Z\332=uz2\275)(\277=\217\014\223<E\2165\271b\237)=,\315\243<\261v\251\274\246\207\357\275\035{\331\274HV\277<\031!\333=a\003\353\275\'\300O\275Q\036h\275\312\365\027=\350\213\260=\313\016\364\274\204\220\022\275H\303\002=\323\003!=P\343\244\274X+A\275E\374\004=\024$\243<\224\025\021\275B\"\236=\364}\350\274^\374\302\275C;\245\2742\270\300=\236W\347\275_\000\232:\347\300\014\275\033\\K=T$\211\275\257\243\265=\035\220\247\275\371v\201\274j\016J\273\032\345\307\275\367g\275\275(oE\275\311K\346\275h\311\374\274M&\223\274\016${=\257Sr\275:\361\331\275V\345~=*\247A=\'\243\014\275B\357\343=\006Ra\2759\260J\275D\242\345=\317D\302<\257*\256\275\t\252\272=\334\261\232<~\354\277\275\327L\220\275\020\345\221\275\357\262\355=\375\215\317\2759\365\266=>\312,=\317\235\247=\253\2045=Wt\'=s2\257\275\003\340\267\275\013\017\214=w\034\346\275\200\014\235\275\372\275\272\275I}\365\274\255\202\022=\355\314\313<\326\037\034\275a\243\343\275\340\240\324\275Pp%=x\320\222\271\330_\336\273\362\322O\275\223\361\216\273g\215\337=N\212\360\275\341I\347\271\366\032\233=[\333\356=\346\200\253\275\006\303\235=\242\033\273\275\217s\212=[~\345\275\361\205\234=y\306\230\275\265\017\213=vG8=\313)\347=\352\020\351=\331J\343=\261\254T\273\254\372\272=\331\t\230\275\255\251k=:\256#<liF=\377\335\030=\007\272^<T\221\353\275\375\024\301\2748\305\250=5\220\307=*L\343<b\317o:\237\207\311\275O\177\230=^\271\277\275Zl\212=\203\247\272<j\010\026\275\020\317\275=\005\2331\274bK\374:\210r\251=<\362\350\275\334;7=o\233\263=\346\315\267\275\007\354\205=\360F\250\275u\315\361<L\327\305\275\305\321\353\275\3446\210<XX\361\274.\217\304\275\331\336\320\275\260f\027=o\344\357\274\253\000\032;\221\016\207\275\317\n\303\274\272\221(=\031\324|\275\327`\002=6\252i=K\234\244=\362\371\031\275\274\251\357=V\264J\274\302\200\021=\341\222\207=\204l\322=0\330\t=\036\342\240=8g\025<\034U\001\275v\327\037=\372P\351=\333g\276\275\300\261\266=@\030\302\275\'\227\006=\202\336\303\273\314~\277\275d\036\305\275\351\306\000\275Y/4\2758\317\333<\016\016\177=\'\241\317\275DQ\371\273\240}\326=)\312\016=$\021\331\274\260\220?=\322u\356=\231m\243\275\266g\340\275gV\221\273N\351m=\r&\276=\204\225\370\273&\006\320=\250zJ\274\213>P\273\371\236\307=\372E\232=\211\276\315\275\313\237\357=\3277\321\275\006t\007=\373\332\245=\016\216\202\275{j\346=R\330g\275\024\374\"\275\005\210e\2752\370\276=\362~\262=|\010\301\275Y\'\0018\235G\306\2754d\245\275\203\273\035\275PWx<\254z\300\275&\342Z\274LW\337=(S\304\274\364\216\344\275\264\365\200\275\302\r\356=\321\372K\275\325\027y\275u\350\030\274\212\253\243\275\0138\324<@\006r\274B\007\230=\371T`\275B>\224<e[.\275\376\264\225\2752[\307=\240\354\"\275\026\346?\274s\235\310\275\234\345\260\275eg\302\274\205R\324=\377Z?<\0232\034=\021\216\313=uc\355\274<\205\006=\243,\341=\374\372\206\275\0218\321\272\344\207\235<\226H\220;<\026\212=\017om\275\357W!=\2669Y\275!r\343=\202\304Q=\036\347\247\274\342\240\206\275O\022\225\275T\352j\275\236F\013\275ywG\274 @\202=CH\243\275\334\035\211<V\324\304\275t\352c\275\276b\002=a\357>=\"\375\321\275\305\\\230=;9\330\275\340A\240\275H#e<t7\247\274\316\376\270=\001\006\215\274\222\262\301\274V\351\240=\210]\352<\347L\'=\233TI=\037`\361=r\241\266\275\300\031\027\275\031\345\242=\301\356\366<\276\202L\275\347\305\357\275\017j\325=\266\205x\2754\300\026=\312:\207\274\'\225\277\275\r8\023=\005\010Q\273\374\310\230\274\016\303\250\275H[d=-\222\360=H\247\341=)\264F\275j\300\320\275\"\373\251=\262\277\321<xsp\275\273\377U\275\017\312s=\316\022\217\275\377\310K=\037\007\235=\365\314\363\274\t\323\260=\253\372\306=\335K\300<\342\034\335\275\307$;\274\n7m\273\337\343\271=\013\230\217\274\021\376\250=\177\013\247\275\334\321\241\274\334\003\275\274\372\271\342=Y<8=FLT\275^\220^<\017T[\275\237)\332\272V\225\277=\247<\016\273\215a\271\275\032!\323\275\237\243\376<\363\002\346\274\327\267O\274T\300R\275\025\030\215\275\2678\271\275\302\013\232\275\352\254\303\274\316\010\263<\232\003\336=Y\376\345=\244\366\004=Z:\272;Z\243\307\275j\353\232=\377\331\032\275\206\021\217\275\001\360\217\275\355\207\243\275\230\271\201\275%*\325=B\323u\275~\225\203\275\032\363;=r\256\215\274\306\037\230\275\343\214[=\377\255s\275e\3501\275\177\327\177\275b\267\303\274X\304\231\275\214\343\334=GL\321=\r\257\254=\363\262\264\275}|\023<\310kz=q%\333\274\331mN\275\311\311 \275ddQ\275\304;\224=}\243\210=\332P\021\274\014\\4\274\3429\263\275\256\371&\274o}\317\274_\033\222\275\310\221?=\264T5;\216\225\245<\242\353\307=m\354C=\301[\313=\002P\341=\212R\241\275U\233\022=\236\250\205\275.\247\321=m\'\231=i\205\321=T.\026\275\347\2541=+<\256\275EH\334=\366\376\210<\276\356\254\2755\375\236<Ge\311=\217\261\313\273^C\204\274\242\366\252\275\357,T=>\317F;m5\332=<\325\350=w\3052\274\267&\312=\\\2053\2759\276\230=\223\225\301\275\220\021\223=C\025\350=n\266\240\275\232\002\203\275A\357\331=\373\272\314\275\275\326x\275\035\221\213\274\334;\354=\263\274\312\274y\203\371;\352\322W\275\017\360\313<\337\020\257=fY\265<XP\217\275\361P\244=\315Q\345=\223\177\244=j\222\234=UKo=bdg\275l\313\361=\201\"\266=)\025\347\270\354p\240<o\215\270=\0050j<_C\265\275\033m\230\275\2254\226\272\316\277\001=:\255\037=\322\025\230=\033\341o\275\\&\265\275\247\034\325\275\352\020!=\377\274\037<\214\330\257=-@!\274yV;=L\252\215\275\210\r\036=\216\227\361=\024\361\243=\251\337\331\274\301\237y=\252?\245\275\354W\356<\262\271\325\275\306\251\003<+BX\275\225\2667=dmA\275\273\266\355\275e\225\223=\212\037\322=\336:\222<[v\240=z\rc\274\036[\324:8H\202=Z\203\226=\311\262\232=O{\177=1\305g=\326\220\345\275\300\034\037\275a\242\207\275\353>\017;wW\257<`%\346\275_\355\276<\014\223{\275\321vD\275\370\230W\2751\327\215\275\334\373\"\275\210\322\270\275\340\355\200\275s\362\332\275\003\372\233\273\025\370\333=?\005\337\275\177\037\253=+A\322\275m\270\316=E\361]\275\232o\271= 4\333=0~\304\271\332$\300=\034\034\271;\254\004\243\274\036\274\031\275\276;\030=\320I;\275\372A(=i3\025<\303\344\202=\323\227J\275\260~\206\274j\240\244=\334Q\256\275\002_\'=\303\327A=\004\351\252\274\276GQ=s \266\275\364\201\205\275\213s\\\275\344tK\275\326\002\275;\232\367\330=\252\013\014\275\035,\250<\303\244\210=\376M\254\275\346&g=:\017\271\275\325\252\326\2752\256\222\275\273,\304=\210D\312\271\210\272\300=\231\331\005\275T@S=9\352\344=\370\t\324\275\037J\215=\026\325\217\275\004\300\204=\224\001\307\275(\304\021=\350\210\364\273$\t\310\275\255\341X=\236\370\t=\377\357\367\274|\r\\\275\235\224\370\274\330\244\205\275\316\r#=UK\272=\033\326\361:0zJ=\202\221Y=\230\310\260=S~\332\275\026\246\021=r\r\246\275\307\223\321=\203e\251\274[\010\316=L\272\014=\025Zm\274\365\2303=]M]=:\316\267\275\246 \202\275\2552y\275\326\'\270=\211\027\007\2749\232\347=W\346\206\275\230@l=\271\361\365\274\316=\240=qF\353<\276\211\330\275i\345+\275\250\301\271\274\032.\365\274\322M\341=\177\255\253;\032\025\264=yB\235\275c\372W=\275V\351=\310\033q=\004M\347=\033\374V=\'\333Q\274\035\302\250=\247\005\312=^\232\232\275.pj\275\371w\265\274\315bT=5\276\253=\255\264\200\275\301\342\314<\024O\031=\001\247\322=\220\247\326=\346\364\335=\370\tQ\275P\336{<F\200\230\275!2\003=yq1=\253\252_\275e\177\355\2752\252W\275\010\342x=\222\231\033=?(\210\275\'\037\315\275\340>\027\274\260(\357\275\352S\025\275\213K%=\316f\335;\255;\232=\2238\331\275\177v\303\275\353\017\022=\334Z\336\275&\206\004\275\026\263\203\275B\037\355=F\022\347\275\034\343\242=\331}\214=\2172)=;\345\204\275=\276\356=\033\200\241\275LB\226\274f2\r\274\324\215\241<\221h2<^\307\245\273\234\2224<g\230\235=\322\230E\275k\007\226<\032B\027\275x\236\036<\363\271&\275\256;\000\275_\334r\274,D\317=\251\263\201=?\257(=5\261\311=O\033\352\274bIm\275\203\372\333=\234\311@=\201Q\247\275c1\273\274\265\315\332=\202f\212=\241g\177=\314\227\256=\323\213V=\204\325\177\275ako\274\367\310M=\301\207/\275\203\310\236\275\245`\233\275GU\231=\344\272\205=G\206\265\272\371\002\326\274\310\202\035=\336\346\254\274\223\254\264\275q^H=d\334Q\2759\327\334\275\006\324\354\275q7%\275\270n\222\275\275[\307\275\304Z\200=\r\317\360=}\354\025=\370\t4\275\335Z\240\275\342,\332=8\364$\2750W^=E\'\261\275L\326\245=\216\260\300\273m\314\\\274\024\373\000=0\350\265\275\024\355\000=\022Fr\275\2168\213=\215$\333\275\227\242:<\300(\361=\n\235)<\367w\036=y\267\274<\251V\213\272\307\274\315=\2360\360=\245\325k\275.tO\275\215m\203\274\314B\224\274J6I=\353\304\\=\013\264\214\275\th|\274FR\305\2746;#=s\376\267\274\323\307t<\334`%\274X0\353\275\342V\244=\365\317\236<\003\203\317\274\325\203\320\275\204\025\344\275\223<\265=c\313\021=\0316R=IA\270\275\362\227\361\274\205[x=K0\272\275\256\223\335\275\0038\311;\3523\226<y}\324\275,;\265=\\O\314\275\250\360o\275o\\\337\275s\214Q=o\"\227:/?}\275\277\240\001\274\312\323^\275:m\262=\307 \231=g{b=\365\216\230\275\303v\325\273\316\036\016\274\007\214s<V\235\250\275\346\303\337\275IT\227<P\022\240:\241\3640\275F3\027<|\037\326\275\347\342,=\371\000\177=\254\\\205\275\356\365^\273\254\355\352=\340k\303\275\310/\301\274\317!\325<m\3271;\234\374\353<\241\200\316\275\376\344\302\275\017P)=\2600\210\275\355\347%\275\246X\247\274\255\306}=1\222\304<\355\007\275=\270\324d=\351\0243\273\000\327o=\0257\213;%%\267\275\0006\036;\361\223\335\275\247M\322<\230\262\326=j\352\333=\177\034\323<\201.\350=r\362\261=\244+\"=\377\377\304;\352\213\251\275#\377\300=\376t\267\275\336m\340=:\010L\275A\315\027=O\222\325\275-\336\010\275\017\301\203=\\k\271=|\212\205\275!j\247\275\007\302\030\275\304\214\373\274\306\021\272\275\032Z\372<$w\000=`\201q\274\214\247\200=\236\035h\275\213\010S\275\326\341\320\275{v|\274\367\022\247<\273\260\213=\346\\\226\272J\226P\275\370\275\360\274\323\240\335=\370\260~<\014*\335\275\253\306\223\275\230>y\275\\9\246\275\202=\240=\027\227q\274\335x\014=\005r\226\275\320\227&=\353\260\330=%\215y;\027\355\306=\226\301\320\275\254\203\236\275\342\2064=\344\310\206<XI\367;\223\313\360\275Jx\022\275\201(K\275\326B;=a\177\252\274\372\203u<\271\001\3419\n\266c<6\0213<\006\211\3249=6\333=G\337\336<\367\335<=p\252\327=\353\352\257=\025-\344\275\342\202\234=9\3433\274\203s\272\275\214gU=\0348\035=\355=8\274\370\243i\274r\243\013\275q\330O=Dk\332\275\013\365\n\275\316\002\361<\351\225\206<\225$\237\275\305C\253\275\213y\243=f\334\021\275_\351\231\275\254q\006\275\304\2763\275\007c\273<K$\370\2743\356\357\275-S\301\274\332\325\312=m\301\325\275u{\023\273\270\262\356=f\317Y=\037J\275=\211\201\352<\302s\026=\245\212\312=\035t\260=\032\352R<\277}\022<&\020\277=\246\251\315\274eA\222=\345r\030\2752{\273\275\211`\2159\014\013\253=\365\367\207=A\212\361=\234\200\357=j\345A\275\312)w=\372\r\343\275\002\215\241=j\230\214=#\235\334\275\022\276\215\275\253C4\275\277u\266<\327f[=\347Q\256<\240\013\313=\027Y\275\275o\326\024=\237\341\317\275\352\265x=t\202\315=\373\261\351\27165\342\274\362\036\205=\252\213\315\275r\016Y\275\250x\374\274\251\346\236=YOc=\177\216\321=\244\274{\275\253}2\274\261v\312\274\333\377K=\335\372\007=\214\220\374<i\225\314\275Z\274\177=#\226\016\275\252\227\247\274\267i*\275\007\316\200:\220\206\240\274b7\271\274T\010o=\032\261\210<\2459\324<\262\237\216\275^8,\274\025X =B\'!=\330\223\340=\254\203\'\274Du\026\275\036Li\275:\263\274\271\271\215\221=;!\327=\257g\346<\270L\272\275\013\352\355\275\354:\221\275z\377\261=-\017\356=O!\247\275\023\347\325\275L\231@=\361w\313=\206x\251\273\374\315=\275`\206\014\275\2241\246=@\201\330=\340\037\340=/d\226\275\221\232\312<<D\020=\347W\217=I\313\217=m\2052\275\260\001\331=\317p\365:\310\006\243\274\210Nb\275\241\210\215<\300\366\315<\306j\244\274\236\227^<\307h\220<%C\233=\322L\306=\003\032*=\037+\330\273\341y\203\275\342\257\257=i\234\344=\271UC;\243\335x\274%\216\223=\316!\300\275\220t\324\275ezZ\274\353\340\350\275\n\277\266\274\031\373\274\275\n\313\222={\253\030=\024YT\274\027v\244=\"4\214\275q\331\217<\267\"\270\275I\002\340=\020\374\010\275\021]\272\275\363\362\241\274\211re\275m\335\303=U\236\221=\020\017\235\2754\357h\275\323\010\021\272\246\210#\275\331R,=\027\255\271\275y\2029=w\361\325=\r\220K\275\315\241\003\275\356x\374<\005\016\327=\276}\357\2756=\303<\014\025\240=\326o\206=\002\024C=\177D\253\275~\234\352<\250\352\223\274\223\211\314\275B\343\314=\236\335\036\275\324\331W\275\"g\313<\355\250\317\275\315\225\035\274\240\327\343=\240>\272\272b\231\377<A\357\021<\r\227u\275\235\211\334;+UB\274\321\217\240=o\326\211\274I\325H=\262zD\273L+\025=\316H\323\275\200\177\350\275IpH\275\227=\233\275\210\375\355=\351/|=\330X\234\275\302\262\000<\360\270$\273\343\007\\\275.\0017\275s\375\320\275\362\265b\275$\3119\275\021\026c\270\333\241\321=\025c\253=\204#>\273&\331\305=f\355\026\274\334x!\274J\267\203\273\202\212\247=\204u\214<\317\020\203\275=M\252\275D\261H\274\027\313\005\274\241\206\351\275\220\230\327\275_R\352=k\225E=\006\025\303\275\331\264\223<\336h\345\273\260\271\007\274\271\014\007\274\327\335A\275\266\357\216<\252>w=Y\020\266=10\361=\223\325\257=\344\235\336=c\000U\275\374g\200=FI\376<u\275\336=\003\245t=\016Z\020\275\310\214\302\275\316C\326\275,\022\314\274\373\360\252\274\0001\037\274>\330\207=Y\242\237\275\213\325e\275\256\342%=\237`\200=d\t\337<\356\"\341<3\246\231\275\223\360\303=\323\262!\2701*7<q:\221=\301\211\327\275I\215\220\275\321\226==pX\227\275\205\200\244<\374\321\224=0\243^\275\267[\245;\261\220]=)\241b\275\343\203\307\275\220g\004;\024\305\355\275\317\234\021\275FC\247<\215\307\325=\034P2\275\250\236\035\274\367\233\251\275\335\027\366\274?\010\235\275c\2567\275Cn~=\367\270\355\275\326Gf;\246\320\277=\316<\263=\323q\234=\025\215\000\275\275\r\271=@qh\274LM\264<\251X\340=\236\333q\274&D?\274/\326>\275g\323\030:\257\363\203=&\326\036\273\2469\346=\342s\374<\004\275\000\275\374B\262\275\303\333\271\275\316\372\334=-\n_=\372\010\377<\345\351\213\275\245\"\226\275\205Y\310<\246\034\271\275]\177b=W\302-\275\302]\032\275)g:=t\024\264<L\331\237=\212\315b\275{\014F<D\244\221<r\330\210\274\3256g\274\267^\346\274\211,_\275\200\371\265=\222d\321\275O\335_\275 \021g=\007\0246=\354\032\245\275\355\010\324=>\225\322=\334<\177\275k\3006\274\265\006\225<W\217\245=yb\262=\250\242W\275\363\246\374<a9\316<\264\204\361=\221\255W<\323+\216=\317z\204\275X\263E=\306\273\313=O\323\234\275\037GR\274\246\000\214\275\177,%\275\316\367\315=C\036\347\275\315M\312\275x\222\271=\243\367\301=\037\251N\2752&\346\275f\033\252\275\370\023\205\275\311\376\204\275\215\211\225\275\346l\313\275G\025\027\275&$,\275\006\270k\275G\272\205<\226y\350=\333Z\330=\257]K=\263/\226\275M\215\275\275=\243l=#\007\330=~\032\010\275\207\031\025\273x\216~=\236\001W=Q\363\023=_-\354=\323\317\245\275\310\336\221=k\373\376\272\0140P=h*\264=\027\003Z=\221~\320=M\273@=\026\345\267=\342\244\020\275\347\356\311\273\005a\307\274\373\353\274\275u\211\222\275\240a7=\251*\342=^\367)\274\201\236\217=k;\374<\223\210{=%\223\311\275M1\263=x\306p\275\340\267\033\274\0036\300\275\267\367K=\271\216\204<\374s\316\275m\335q=\031\354,=\215\226\210=\267\017\340=\275Z\300\274\007q\212\275\252\350E=Sk\243=g\216\\=\254\256\242\275\276]\273=\214\202\262:\250hG\275\322h\225\274EB\221=v\034\245\275\232\233\270=\353Q\217=\317\271\007<\375\236\272\275?\031;\275\031\036\300=\343\307r\275t\313\'\275\234j\217=\362\312\273\275\324l\240<\"{M\274\265\351\274\275\023\013\231=\216\252\370<\013\323\255\275\023$\212\274\306\362l<m\364\022<\276\322\306=\350K\351\275$\301\333\275\203e\311=\ro\216\273\271\327\214\275@s\215=\321\240)\275\343,\214\275T\264\213\274\246\241\332=\372~!\2755\320\352\275-\001\227\274\023|\306;\220\255\354\275C\272\201\275\304)\210\275\366\360\222:\002/\352=\373\020\026=\334\306\341\275T\331\324<G\013e\275\"\211\233\275*K\320\274{\352\234=;\212\230\273\310a\320=\261\330Z\274\212\234\247\275\235\334k\274\266\354t\275\277}\325\275P~\022\275\221\343\177\275\307Z\016\275M\200K<\024\232U=\022P\226\275=\216\325=\330\364\224=\317\214>\275\300\267\333<\003X\023\275Bq\356\275}Hx\275\220\256\307\275\252]_\274\364\206\375<\033^\210\274[Ux\275q\030`\275\032\243\354=qR\271\275\317a\326\275\022\217\221=O*\225\274\370\021\343\275\227\037R=\244\360s\275\2031\000<N\270\376\274\223K\235<G;B=\013\021\252=jnH=\3267\355=\260\r\200\271\353\220f\275\005t\273\275\274\010\262=\2730\361\275^\265\226\275\242\230\324;\230\360\207\275\262\300\331<<\245\267=\024h\222=U@\252=\254cP=\3478\270=4\020\373\274\024v\250\275\306\210\026\275sI\240\275\372.\354\275\243\037B\274\240\307\300\275$\366L=|u\272\275\"\346\212;\220\231}\274\360J\313<\273g\210=\000\223\242<\031\223X\274?\300\207\275\0045\265\275\"\245\334=\260i\206;&I\240\274\025S\244\275\016\350\314\274K\311\211=f\361*=]\031\201\274$\371,=\243M0<\275m]\274N^\310\275#\"\240=\355Q\346\272\274\240\022\275\346\224z\275\2177\251\275y\036P\275\334\322\364;\253\021.;#\013\375\274jYg=g\033\352=p\306\236\275\325A@\274\276V\\=\241\315\302=QG\302\275\0140\024<b\300\370\274\345\023F=\375;\014=\211V\313<\rV\235\275\201\243\262={\371\356<\tzV\273\371\366\347\275\302\216\207\275\3756\361=\221\305\343==\004\014=\373*\353=\355e\335=\025\346\217=x\276\214\275\3021l\275y8\007=\227]k\274m\327\356\275\210\257\213=\345r\241\275\324\031\227\274\021\247\347\273$\333\005:\304\220\273\275\303\274\213<\310\227\367\273\304\'\325\273jn\215=\010\233X\275\256\252\364\274\320\231\300=\214\314\247=B\320,\275o-\227\274\203\226\230=\336>g=U\224\016=\335\"\315\275`d\365<\316\307\273=\246\326f\275l4\247\275\317\377\313\274e\324\200\275\240q\243=\005\375<\275\306\024\201=\332K\242\274\007K\267=w\341\231;O\203\222<\204\305\323=UY#=l\200\236\275\327\305\300=+\311\251=\373\017N=4\245\351=\007\027\216=\230U\251\275\2504=\274\020\246\231\275\027\271\304\275\317\200\354\275\244*\322=n\307G\274\365\246\004=\242\005\224\275E\266z\275V\371\241=\354\327\177\275I&i;O\304\221<\364\032\344=\321\370\241=\325)\210\275\241[\267<\357n\305\274f->\275\203$\252\275\245\253\305\275\260\031i\275\330\276\275\274\020%7\275\325\214=\274\0012\236\275U\024\311=\nR>;\320\226\277\275j\000X=\2144\340\274*!\304<\236,\350=\"\364\374;\360.\222<\033\027\353\275\356\373\365<V\327b=\250\024\361\275\242\327\341=\"\232\325=\026\235\206=B\205\360\275%\326Y<\311F\266\275\304r\326<\222C\361\274\3322\003\274>\365\353=q\037g=T\311\342=\024\000U=qU><\000\205?=?\035O\274\231\326`=\233\223m\275\200:\321\2757\311\317\274U\357\332\275\217\345\243=\313\377\244<a\030;<%S&;Z\343\347=a\240\312\275\327w\223=\257\257\342=o\235\310\275{t\350\275\2402\323=u\027\215=\314\221p=\201X\225\275\255j_\275\347f\253\275\366]\213=\'\025\344\275\257\253\325\275\322a\003\275za\322\274?\274\n<\003\207\330<\324\333\305\275\316\247v\274m\313\270=k\031V\275\265\353\314\275\026M\r\275r#\353\275Z<\202=\211\323\201=M\224\332\275K\030\346\275K08=\256\235\356=\360\037J<\32731\275\202\312\310\275\377w\240<\322\362*\275\223\251\246\275\204\252\377;~?\326=\260\337n\275\355^\372\274M\350P<\376\034\317\274\th\301<,\302\201=\037n\030=\335\361\223=`\t\034=\035vZ<`q\277=m\221\244\275\036X\t\275\365\017s\275\300\244\306\275\014\256\311<\317\020\263\275\365\272\353=L\030v\275\260X\235=T\360\341\271\035\373\300\275Un\237=V-\002\275=\021\224\2746\234\304\275\217\265\023=c \343\275\n\347x\273i\020\007\275Y9\305\275e\177X=~\200D=,\022\350;\024(\205=\236\274Y\2758\353\227=h\022\362\274d\t\357\275#\344\352\272\033\375m\2751\244\205=H\r&\274\333Y\021=x\026\245\275\2533\021=3\347=\275B\214[\275\325\305}<i[j\275~\264\301=\2057\326<\277\232\325=\233I\247<8m?\275\237\333\370<\004{o\2756\250\226\275\321?O<}\370\337=\233X\223=\223[\324\275<.}\275\237x\323=\207\301\362\274\211\006<=]1\243\2758\330\277;y\027\226=\350a\226=\223\245\274=\347\n\334\275[\232\337\275Lj\223\275\177N\271\275N\321q=@\371\273\275\223Lz\275\n\275e=\340\240\274<\243a\265=j\203\315<I\236\243=\255\246\321\274\213\2472<\332\344d=\211_\276\2720\337\030=\017H\310\275v1B\274\317\274u\275Z\207\277\275\016\214\235\275\361\355Z\275\344\313\256\275\211\251\003;\302\246\360\275R\217\032;<*Y\275+\\\265=\226\n\321=\202P>\275Xa\206=\301\334\031<\370\270\037=\375u\017\2759\260V\275\001w\242\275\261\014\273\275\336;\351=\266K\214=\213\020\325\275\321B\030=}\\\340\275:\001\010=\316E\261=\325\312{\275"
      }
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        tensor_content: "\270\212<>\036\373\202<\262\323\327=\377\231?>ck\210<\002\233\253\274G\024\301\275]\342W\276\037\2055\276\376\2506\275V\2603\275\342\307\317\275\352\222\316=\351\004\023>(\304\274\275\316\267\035=G\234\004\273\3553\037\276\254\367\202<1\352\240=\2363\026\276\276\204\032>\200\355*\276\036\344\021\276\255DU>\241l\016\276+`\245:S%\201=\304Y\255\275\213xS=\356Y\n>\204\255\010\276g\260J>F \200\275w\357\225=\334[ \276Bl*\276\025\326=\276`C\270\275_<7\276g@\032\273\211\033\031\274\030#1\276i\364\223:\334-\311\275\363`\r>\242T\311\274E\032`\275\t\0258>\212B=>\242\2512\276\271\316?\276T\247\000\274\021\021\214=l\315D>\241\313\343\275\313\277;>\243\025\324\273i\021E\276n^*>\'l\016\276$s\344\274\240\371\210<\245\337\005\276Q\300\276\274\244\n\347=\325\217\005\275+\n`\275\264\301*\276\025\022\333=\260\352Z>\323\203\205\275t\240[=\330_7>\202\304(>6\035\026\2763\022\335\275r\343.\275\257)t\275\210\233\023>\n\213\217=CuO=V\376\277=\223\255+\275Do\034>\003\004+>X\027\236\274\273jF\276\236v\001>\370/\223<M\247\377\275\262\023\374\275\000IA>}o\027\276\220\273\300=\004\373>\275N\2162\276He\235\274i\032\\=,\331P\276\362\354];GD-\275Q0\002\276\033\301*\276|\374\005>\202\tB>\325p\260\275\324\005\200\275\342\375\226\275\217\266\252\275\326 R>\272F\230\274}\347\346=\235\256\376<,\266\233<\035\265\001\276\230\307;>\231|,\276*\342W>1P\021>\030m\354=\237lP\273\326\221Y=}b\027\276T\256W>x\337a\275\350\260Q>\360\277(>\211\255\260\275\242%[\273aX4\276\242R\000\276\356\273G\276\365\025B>\244mx<\3356\202<\331\264\031\276k8V>\356\035\021>\nT?\276\210\226=\272\304\261\007\276\326\272\314\273\n\322\013\276\200\320\324\275\336\211\315=@\\\017>)\377\340\275/|\r\275,)&>\273\374\247\275\212\210>\275\220P\364=B\2169\275\202\213\203\275\346dD\276\224T\222=\363\224 >\376\204E\276%\375/>!\272\355\275\350 8>\337|O\276\t3c\274m^H>\220;\017\276\234\322M>\302\331\271\275Vi\313\275\363\233\220=\002W\037\276/\322\017\276\323\216@>\265p\326=\312\2153>/\253^=\230o\354=^@\017\276\007\336\331<\013\001\023>\\%\203\275z\031C=\314\372\224\275\353\234\304=M\245I\276W\341G\276\"\235\000\276\006\213\263\275\225\315\370\275\316{\002\276T3\317\275s\216`=\373y2\276I\271\010\276\337\002r\275\3112Z<\0142\301=\360\377\013\276\005\323\024>\227eR>>ai=\016\001@>5\004\346=\201,\375=\307q\237=\233Lc\275\360\177\245<h\005\331=q\3445\275\373s4\276\234\010\216\275Q[\226<\343\224\032\274\272\2014\275b\355\306\275\206-\032\276;j)\274\230\367\242=\232\025\014\276g3U\2768\243\357<7\211\256=C\234R>3\203\347=0\365@>\226\234\366\275\003\317\037=\353\325<\276Ms\010\274)a\034\276\254\310\320=\306~7\2768\013x=]bV\276\'X\030\276o\255\033>\207\037\265\275M\202\r>)J\355=\226\363\264;9\020\007>K\222\220=\230\235\214=\263\215\334\275\372\277\031>\350\261/\276\241\021B\276p\372{=b?L\276\344\355\037\276\263nr\275\317!/\275u\216!\276n\026\267\275eHK\276!\347&>\004\301\267=[(\020\276Jv\316=\230\320$\276\264\356\322\273\326\014\314=\215B\024>\035\252A\275\313\272T\276]\254K\276\232\315\207<0\331[\276T2\021\276wv\370=\021z1>a\306\017=\t*\021>zy\027\275%o\004\276F\270\270\2757r\330\275mY<=\002\021T\275\262|\025=m\336\344=U\321\013>WV\002=S\240\014=\300\363{=\004\332N\276\346\2263>\031\257\215\275\263\352(\276\377\316\324<\300JU>=$\n\276u\024\361==\350\021>\224\207Y>x\013\275=\003\244\013>\310\"Z\276\371\255\t\276\226@\365\275\230kX>cM\177;\305\226\366\275\251\256!>\362F\003>\253\022\212=\262\226\373=U\033\352\273\357lA>\346+\351\275\350\276\305=\240\031\274<\r\231\t\276\255r4>\271\361\024\275\360\231?\276\252\234\023\276\317\003J>EJ*=4\253\035\275^m\274<\276-B\276\377(\030<\201e\024\276\342\253\207=\243\360\332\274\177\265\252=\372\317\031>d\326\244\274\251Uj\275\\\312V>f@\242\274g\220\352\275\323\321\322=`\361?>\265B6>@\347\245\275\0026\177=\205\311\276=;\323\301\275\222R\313=O(Z\276\336^3\275\211\311\306\275[]\307\275j\230\020=!\375\025>\\\001\273=\264\323\033>\177^\316\275\203\317C\276\215w\">\007\312\001\275}.\207<\300\262\205\275V09>\242J:=\233\320\335=k\311\325=\362\221R\276T\"T\276\316\365?\276\000\024 <\373\t\237=\035\213\356\274\320:<\275Q\240\004>5Z\312\275\240\335%<o\252R\276\372\343\337=\334\320K\275\237\246\252\274\366\222\002\276\000\316\304\274\260\371\232\274\357\246\017\275?\372(\275\177\n\001\276\001F\002\275(b\024>WE\261<\217^\212\273\312UV>(\227,>K\256\240=K\2519\276\237\017(=\024\342\205\275O\r-\276\315%H\276\354\327E\276\257\207\'\276\001\201{=!\210\023=\307\257\003>ys\347\275\305\006\323=\3239W\276\005\307\t>lB\234\275\234E\350\275\027\330\024\275\236\033f\274\335\":\275q\366\277\275\256\365~\274r\002\260\275c\220C>VoO>f^\330=\214\344\224=M\211c=\326\362z=\356?y=\277\217\371\272*\302#\276\\\304\213=\352\032k=\216\0053>_b\247\275L<\273\275\251\352\307=\243\034\247<\332;7>\317jS=\260\225\344<\245\304\010\276\364v\352=I\2128>v\021\300=6\212\217=\347\241\252=\005:\212=\353k\035=\334\215u<\'X>\276\033\243\312\274\205\033\020\276|\215\226=\221\372\330\274\310uD>;q\323=kL\260;\240\230\000\276\243\2137\275\3337\275\275\204\351\337=-\202\224\274\324\204\353\274#\212T\275\236\354K>o\301\255\275Y\253\257<Z\006\237\275c\240\207\275N\356,\276\244\035\343\274\241\345\210<\273\037\277=kn\204=\235WE>6\002\013\276\023\277L>\2707H\276\273WF>g\315\375<\355\037@\274G\242\222<Ol\225=\274$B=\017\222\037\276\001\263\340\275\\\360\234\275\0033T\275\030\230\264\275\277\025W>\322\307\030=\013\322#=)\256O>\323P\006\275W\026\323=\205\340\261\275?\373-\276zY\033\276nh\273\274\265\022\036\276\342W\267=\261\256\027\276\347m\221<6\360\202\274\364\033\315=0u@\273\364\332\025>\353\333\355\275\024\215A\276|r\345=\364j\r\276rt\230=\221|\302\275\303\341\307=\251Y8\276\353\253\003\2761f8>St\002\276f\016\006>\205#\022=uUF>\035H@>\333+\351=~\314\245=\336\366\310=m\235Y\276\032\231\267;\006\003>>\204_\215=fgT>\230_0>\262f\234=`\031\032>\032I\216=\t\335`\275HR\304=\202\233\321\272i\237\025\276\341<e\275\254H\n>\236\\\037\276\214o\034\276\366X\206=L\267^\275]\334\217\274\375>.\274d\354D\276#\253\214\2754\214\020>r\215\022\276\306\243*\276:\r\277\275*\037\253=\250\026\034>\350\226\004=w\270=\276G<(>\t\'X>\241q\265=\017\023\025\276\213\301\013\276\366\024\022<)\020\023>\022B\375\275P\rG\276\376\275;\276\375\332\310<\2124\366<\302\005C>\014\323\035\276\247SX>\336V\010=r\026Z\276l\355\211\275F\\\003\276\346\004.>\027\n\022>\344\332\272\275B7\372\275W3#\275\024\231\022>\027\304\232=\342i\206=^\302\036\276\003\247\035>:\3006>\023f,=\352\331\036\276\"\234O=\231\232\370\275C\370N=\356`\016>\257d\366=\262\306\360\275(\0234=\2334\005\276i\255Y<\325\200t\275\204\253\272\274\370\020\243<\334]\360=rUA<>\016m<\323\030*>j\006J=\351\003\321\275g*J\275\301\233F>G\032h\275\320t\275\275C\230\217=Z\213\307<iI\364=q\202\205=\214\222\032>\233\340\366\275\200\364\005\275e\356\006=\016\365G=\373z\342\275\027CU=(\214\366=\276d\310=y\233K\276f~\203\275\233*\213\272\365\n >/Q<\276\020\t%>\021x\"=\01492>\370`\000>\304\264B\275h\333s=\234J\264=\257\2777\275\3029\362;\360\200\020\276\323\n\205\275\023\014\"\2766\2630=\303%\206=1\037!>\030)\010\276\371\375?>J\254&=\363\231*\276|\201#>#\265\300\274\362]F>\n\344.\275\302\307V>\246\2751=e/\034=\026\035o=\017c\255\275&0\247\275\030\320\320<\310\027\257\275D}1>\253\311!\275b\205>>\241\301*>\257`i<\364v\r>\251\357\202=f\022=\274U\312\003>gT\303\275F\3725\275k8[>JK!\276u\330\244=\342\315\037\276/\266<\275\203\301\316\274J\264\004>\231\314\022=\032q&>\362\355S\276D\020\022=\230\3179\276\337QK\2764\206\340=\233j\226\275\211\020\020>Q\313\277\275\321~\303=L\367\327=!\217\374\274mM\034\276\'\271\236=\'\021\307=\262\267f\275\341\333)>\016\002}\275\345\271N=\205\315B\276\300\3237\276\262\372\025\276\"U\236=\277m\255\275\r\336\323\275\017\271$>~\034O\276\20445>\036\246\221\2752\013R=\225\335\360=\324\262b=!\0149\275\200l\210=\242N=\274\022{\373\274^\326\217\275f]3=K\216e\275\244\274\305\275\263\345\013>@\037\235<\343\3377\2763\035|\275\010\200\374=oxw\275\3071\246=\347\240)=o^V\275\003\213\'=nu\204\275-\0003\276\221c\031\276\\\023\255\274\233\263\340=\360\260\276<\'EE\276\214\341E\275\347\327\025\276\3402\t<\234\'\322\275\005\244\355\274\022<\017>f\205R>)^R\275\201\263t\274P\264\032>\023\272\240<\024/\207=S\302\321=DG*=\353\312\013\275~\262\327\275\005\3055>\216v\025\275JW\036\276 3\263\275d\254g\275\201?@\275gS1>\352\224\217\275w\315I\2755\273\367\275\303\363\252=2\262\035\275/#\313\275\322\024\241=\310I\331\275GM+=;J7>\021\3104\276iQ\035=\316\030H>\317\267\255\275I,M\276\377\242\304=N\270#>\335\027\025\276\025\262\324\275\321YD>P\315/>{\247L>\374sG\276\2248n\274\331a\213\275J\265\207=\336tZ\276\3541F>Tb\013>\227\r\004\276\307F(\275\241Y\347\275\317\326Y\2753I\023\276m\370D\275\000H\255=;\023\261=)\343\036>\351\223\030\275V\247\254\275\266 n<R\371\200=b\306\217=\251\271\251=\255\361A\276\024\220\354\275\353`\t\276\177\215W\275\305\243T>\005\335\215=\251\213\223\274\306\302\373\275\226\315\005\275\300|]\275_\333_\275\241\n\237\275\373\207Z\276\231g\225\275\370J\013\275\272\366^=3`{=F\0202>x\322\233=\271\304j=\207g\222=`\321T\2765\265\n\2746\373\200\274\373\3149>\364\264\361<x`N\276\031<\201\275|\350F\276\271\376\345<\266\030P\276\326\273,\276r\372\272=}\027\347\275\336\326\233=&\2226\276kB\024=\314\014\277\275F\201\310=\350$7\275^\203\022>\002)7>\332\024D\2765*\225\274\263\330W\276\312\232\323=r-\026\276\017\205+>\212>\227=T\034\274\275\345\265&\276\313U >\341\335\377=\345\013(>\007.\315=^f<\276\326C\235\275\022D0\276r\301\214\275!AT\2767\006\"\274\210)\334=\241\330N>\"I1>\341\367\016>>\217C=,\213\375<\322\200e=6\232$\2769}E<\345\202\216\275\240\355\230\275S\363W>\352\371\202\275V\322\202\275\266\004\017>\002\216N>K\225\257\275-BN\272\316u\224=\251\351?=a\375\267\274\244\220\274\275\267i7>TSg=\205N\">B\215\013\276\\\372\006\276\233\334\003\276$\274\261\274\246]\270\275\2240\314\275E\245\353\275(\270\023<N\206\252<[~a=\312\300@\276\312\035\226\275a\327 >\002\350\224\275\020\025\035>\232+\023\275\332\207\037\276\210\266 >\353\367V\276\217\232(=!\3057=E\336\'\274\252\347\006\276\210\252a\275h\337@\276\027[\241\275.\2448>\021\301q\272\303\245\333=\t=4>n\244\354<|m/=\370\363\223<\036\2201>\212??>\035\200(>Z1\335\275\335*\350=B\023G\276\256\222P>\206X\016>\216\r\035\276\036\n\243=\2349\371<\326\037\266=\360\233\025\276\311U\017>7|\271\274j\\\214=\346\371g\274\361\201\316\275\352\210I\276,\352\254\275_V\027>S{K\276\277\264F\276\332T\331=h\306T\276\036\250\316\2754\030\332<\217\246\\\275\\\265\335\275W\023\366\274\031|\327\272\021K\034\276v\031.\276\347\'\206=\310\020?>\346L\236:S\016\001\276\243L\014\276\335c=\276\026)\013>\t}<>\275\251\223=Q#6\276\363w\246\275\031\315\244:#J\020\276\362}N<\360\0147\276R\211L=\200s\t\276\304\324\">y\253q=\227,4>6\026)>\220\036R\276\n\342.>\271%\344<02$\275\223j{=V\234\236\275\347\t%\276\226:\010\276\025\250h=\2012\312<Gn/>\005\203H>\332\211k\275\000g\233\275\375pu=E<T=T<?>\346L\341=R\252s\275!\017[\276I\225\246\27553M>\374\240\035\275\003\016M\276\217k\321\275o\377.\276\022U/>nx\366=\230\305\220<=|6>vz\257\275\3039!\274\037N\200\275\201\201\t\276\355\231\017>\361\220\034>:\3258\276\330\037\334<\257\210.>\227\224A=i\373\231=\314\300\021\276\303\372\255\2755\357K>e\3320<\274\234\001\276\365GY;\357m:\276\025\277\'\276d\'K> ?}=.i=\276cm\200<\363\365|=P\367\270\275i\232(>N\3409=S\014\301\275!\326\345\275g$\360\275w\004\023=\177\005+\276\010\273Z\275%\301\313\274\255\246H=ts\352<z\245\367\275\260=\031\2766,0\276\335\245\330=\256\026)\276\270\360\240=\331a5>\013*\311\275\022\362T\276S\272S\274\230\226%\276\005\312V\276[\264\266\274\034\266\247=0[\033\2762\024J>\326\363\360=\216\266\260=\305M\346\274\270\372\376\275\364\204(>S\225\003>c_\215=z\236V\276\260\313\314\275\234\306d\275U\362\326=\225XL\276\310-\361\275\035\033[\275\031\261\027>\372\nE\276\014\033\220=#3\234=m\352\017\276\2344\375=M\013\021>\243\025\262:\335\332\344=1\013\276\275\005Q\031=\264\001<\275\352\234G>\352\3343\276\007\027\216\275\243\024\023\276\301\3419\275O\031i=G\377\017>\227\337H\275\021\305[>\322\000\225\275#2!\276\375\023\222=\230\226\213\273\316\'\320=8\257->\22208=\247\264&\276x,)\276f\\&\276Z\037\205\275\212\317\021>\220\030T\276\265\301V\276v@S\276\341\033\002\276\373\204\213\274\360\317x\275\342\267!\276\024\334K>\014\000\324\275\265\030<>3\351f=2\332W\276\352t,\275\345\272W\276\332\246F=k\354\006=\272\216S\276\2618\025>\271\210O<|\206\017=\017\375G9$\210\261=\317\345\321\275\036\3070\276\277\027-\276SS\020=$%\036\276\255\212\330=I\037\363\275\374J\224=\024\201\230=\020d\244=\027|$\276i\367\221\275E\013\221=\277\230K<\203\206\032\274q\001\264\275\304!\211\2757\324\262\275\034{\025>\325\2549\276\031\263\221<\033\320 \276\016\302\300\274v\332\301=\323\353S>\223\303\246=\262\332\200\275w\304J\275\3200\337<Z\352/>2L\013>\274\034\306<\25453>\374`r\275\220\206 \276>\3741>*Ws\274\216\322\253\275\237:\313=\226\213U=\374\252\341\275\030\373~=\347\250Z\276\260\212>\276YP\276=@\311\217\275B;\021>\2373\203\275\3712Z>\315\250\226=\353-\372=\351fY>^\005N\276\000\200|\275\252\261\005>\352\211\207:^w\024>iX\250\274_\2558\276C\205\371=\245\232$\276iWA>\333\024\326=R\010\032>$>\r\276\377\255\211=`$\014\276P\257\036\276R \022>\204\203G\275HxJ\274c\223\207=p\366\004=\204\213\201\275r\375\022\276t\255g\275\006\205z\273\353\244\363\275\344\331\033\275\366.\303=@O\355=\273\032\317\275;\264\270=\030\331l=}\324\372=\244\270\230<L\024\211\275m/\'\276\007\370\034>\345,\216\275o[\357\275(`\017>\200\225I\276\337g\225\275h\300\013>Ks\243\274\256b5>\335\254\026\276zT\271\274\337\345M>7\241\253\275\024V\232\275\212\275O\275\'\2601\276E\334O=\230\347A\276 \304\202=\242J\344\275H\252\234\274\322\364\017\276u\001W\275\013\r\377\271vd)>\357\257\374\275:K\352\275\001\'(>\371\213S\276#u\006>\3065\354\275\rwF\276\360\313I>\006\005L>\360\227\220\275J\321\213:@\372\322\275s\213\025\276M\343~<\002\361s\275\325\224?\276I\311\016>\320\213\246\275[\034\245=\235\3134>vPW>\247\230=>\013\370\360=\301\271\330=x\265!>\217\275G\276~h\246=&\305x=\307\2539=\177W8>z\220\312=\236\315\222\2752\336\035>C-\236\274\221#1\276s^\326=\276\340\216\273W\323\030\276\366 \264\275r\025f\275gg<\276l\017/<\336X\031\276t^4\275M\214~\275\345/\347=T\n\022\276\"\n*8\304\025\035\276\301h;;\267\370<\275\303g\326=\227`3>\375u9>4\3044=w/\r\275\010B\266<\031\234\031>\210\021Z>\007\2757=:]\014\276u{<>1\\O=h\2341>\030s\307=\214\275\373=y\242\200\275EX@\276BYN\276CoJ\276i\345\303=<.B\276|s\030\276\221\321\021>\351\t\024\276*\317\002>p5%\2754\\\">\035\270\342\275\361\345\204\275~\326\233=\026A\325\274?\214.\276\322\300\027\276AG\347\275r\022\335\273\252W>=\354\217\277\275\352\037\034<Ju\215\275\202\214D\2769\364?\276\034\206\003\276\375#H>\302&F\276\355\276N>jZ\373\275\235\251>=*\rM\276\310\003\277==\272\377\275;\274;\276a\200\005>\264\0225\275\271(G\276\373\225\332\274\274\027*\276\232\253\320\275D\315\026\276\352$`\275\265\006\">\205y\216=\004\332\002>\001\354\357\275\303\346\275=\0173\037\275\n\265\257\273\330\333Y>\23011\276\213\321\007\276\374\010[\2751\337\">+;\022=\371\241\032=\020\265K>aZ\332\275\017T#\2761\217\027>\317\315R\276*\341\'=qX\202:\255\254\311\275\rJ2\276|\330\277\275/\333\254\275\327?\206\274\326\005\236=\032P8\276q\315\301\275\253\203?\275*\224\207<\353Y\210<\024`\006\276,eB;\377\252$\276\344\250U>\320G;=\277\200\361=\243\303\017=\332x\030\274X3\213=\'\264\360=\334l\032\276\223\\\356\275\367$\372=\360\327I>\322x\021\276\n\2134\276Ge\342=\033\305\206=\002A!\276\340)\372=e\031}=p\253\302\275\353F6>\014\325\014\276\213K\322=\360\315\303\273\266Ed=\305\344[>\0203|\273\255\265\022>*\316K\276\033\272\330=\273_n=`\276I>\000@\231\275g\243\201;\262\006\005>5\301A\276NM\r>!\036\227\275\275\227\037>\255#\267\275j[/\2765v(\276p~G\276,z\373\273\000\374\026>1\310\336\275\016W\301<\0051\335\275\222\334X>\356\036\305\275\023.\365=?*\360=\217\177:\276\034\215\265=\023#\256=Im\241=\323H\351=Ux\024=\031\356)>LpK>\204$!>\023\203\037>\210$\016:\237\210!\276\tmQ>\226\255Z>$\336\343=+c\311={\275\307=5\376\034>\205\351\337\275\030\331\313=k\316o=<\030\321\275Fy6\276\370\032M\275\212\366\200<\215u-\276\234r\332\275p@\'=\223P\030>\370:\245<\217\230?>\0037\356=\374\004\202\274\240U\215\272\3728c=\371\235\001\275\366PL>\225\237\245=\206\350\260\275M\365\336\274\215\036\346\273\223P\346\275<\300Q=FP\032\276\270\245\221\274\221\026Y\276\333\036N>&\334\267\275\324=\213=\243+G>\324\225\314\275\361\303*>\004\270D>\306s5\276\301\000$>/\312\335=zwY>\250}\017>OV^\275\177]\272\274\005\\\006\276\313\242H\276pw\017\276\211\232F>\206 U>f\337\227\275\211W\035>\346\377\216<\357\004\225\275\352\0358\2758\302\203=\023\r\014>\023w]=\315\005\331\275\333\337&>#\256R>ssZ\275D\251\021\276\277\330\307\275]\213W\275\277\271\224=CgV>\271\0246>6\310\344=%Q\020>\322=4\276\312\026\377=\016\245\306\275\211\2657\276v\311\377=*\261.>\207\377;>\327\030\302<T\r\034>\234\004\010\276\373\244;\276\026\272\335\275<|!=]\231\256=\010a\014>l\222\n\276\211l:>d\"3\276X9\362<\243i\r\276#b\321=\347\206\355<\177\223\330\275{P/\2762D1\276\366{\275\273E=Y\276\257Y\323\275P\2137=\272a\245\275\202\222\035\276c{R\276\254\221\034>\224d\325\275}f\303=\276\007\340\275\244\253\301\275\346OM\276\206\201\262=\013\335 >\tF\n>\363\025\246\275\346\375\025\276\363OG\275\\\360\356\275\306\303H\276\230\223\016\276/\321+\276E03>i\230\321\275\255\254K>\335Z\376\274\022\302\221\273\356\013\237=\241\204@\276b\215I\276gA\254=UM\022>\202E@\276\243\023\233\2752;7\276\266\247\357\275\356\020,=\345O\n\275\250WY\275\341\377\025\276_\200K>\373\376\020\275\212\026\033>\336d*\276{C\323=\253h\255\275il9>P\272\377;\356u?\276}n\036=\352C\246<\201!\206\275V*6\274d\230\207\273Qj#>d\307\3479\211\275#\276b\207C=\306\326\021>\030\320\\=\364\007\366=\tH\026\274#6\221\275\342\242&\276x\253\265=F\013w\274\230\337K\276\006A%\2768\203<\276\333:Q>j!\367=!\263\265<\033\322\274=\206S\010\276o\027t=\233S\275\275I\375\364=b\030\323=\266\224&\276v\241\037>Un >\222z\264=\255\001\253<\353\035\r\275e\227t=\r9\255=\317e;=i8\036\275I\265\032>\320\317->F\374.>\237\036\252\273\264\'\307=\274\021\213<]\221S\276\204q&>%92\272\177?\200=\013p.\276\3335(\276R2M<YlH\276W\305W\276\262b\242\275\357\245\255=\327K]=Wb\370={\362\031>U.O>\n\\\010\276\274\262\002=Mj\355<\000\2308>\236\034F\276\013\001*>\023{\036\276)\313-<4\356\231:\037\004C>\t\371\210\275\264Z(\276\033\025\221=n\r\'>\033I%>\2011\343<\340\2114\276\276Z\026\275\227\373\303=D\220,\276<`\363=\376\217{\2754\375\030>\311\376\001\276\351,\201=s\304\010>\230\016\030\276\371\355:>\203]B\276\\:\016\276\336\000E\276F\375\010\276l\206\224\2750\272\037>\364\252\240\275\237\241%\276\002\220\023\276dV\325\274\277d\327\275\275\r(>\331\3525>\276T\016=\336Y\326=\235.\273=N\2072=\312q<\275\363HD>\322\374?>\303\022\236\274zIG>\355\242\266=4\333\021\275i%\331\275\371\270\021>\221f\314=\315\n\023\276\311e\213\275) T\276\272SM\275f\231\023\276e\236\370\275\021\350R>\316\333\242=\244\321\025>!M\242\275\032f2>\253\236\356\274&51\276\251hx\274]\356Y\276J\310\343\275)\240\362=M\244$>h(\001\276g\025%\275O\367\217=\211\214\232=J\275\311<m\373\302\2758\203\321=\371\304\000>\204\367\233\275\332\336\234\275\035j\025\275\270\004\007>\354X\030>\256\316\217\275\335\3751>\030\014Q\273:\025 =\252\004\255:\345\336K>\303\3333;\033\364,;\272\204G\276*K7>\016\2609>\255\325\274\275\270\022\311=\013>Y\276*s\365=\340\3760\275dS/\276jq\232\275F\223/\276[d\014>\364\010\252;\251:\030>\343\2463>\374\2276\274\277\342\301\275\372)\250\274\014E=\276\225TH\276\246\231\366\275\354\010\252=\240\341\356=CI1\276\366\347\204;pM\325\275\260\241\305\275\337\235:\276\376/>>t\307\345\275\246\233\321<\202\320@\274E\356\177\275[#\006\2751\246S>\363%\313\275\201V\313\275\251\364\021\276\304\356O>\304\025#\276\246.\335=\275\237\007=\266\001\225\275\365\333\321\274\332\365\334=1v\220\275[i\033>V\223,\276\307\354\367=\311\314\354\275\032j\271<\213\373H=\013F\\=<=\004>;\354\255<c*\322<\375\025\327\275\242\237C>\262\0021=:\325r\275\254r\006\275\264P\031\276\243\317\212=\021X\202=\323d1=\352\271\312=\007\"\241\275\200\036\242=\036\233\216=\344M.\275\330\030+>.\340\363\275\213\2265>7\362;\275`2\325=%\273\224<\004\036\361\275\021\007\276=\353\264Y>qi6=\001\245\207=\274\306Y>Fj\207=\205\252I=\234*m=\016\315X\276*r\273=\033\206:\276\"\317\030\276\212\207I\275\32547>\020\017\330\275\234.5>\272\032U>~\236\307=\364-\"=\303\370\317<\337\2677\276\220t\341=\300;\023>\001\307S\276\355\207N>\030X\301<\037GA>\t\315\n\276q\266\336=\210x\253<\246k2\276\3501\\\275\347\302\027>\227\355B\275e\212\032\274\316\373\014\276%\007X=\362\216!\275z\202!>\0042\000\276\215\300^;\264h\242\274\215\330b\275o!\254=\326\021\000\276\341\306M>\355\277:\275s\336)\276k\225\027>\314\312\234\274-\027\017\276\324w\364<\371\003<>\366\372-=T\362 \276\221j\276\275\017\200X<\351\016\231<\003*7> ?\001=q3:\2759\024\017;\374\357><\305\366\274\274\256\300\310=\205\314%\274p\320:<:\272\353=\3460\000\276\307\230S>\352G\231\275\'\247S\276\215+\250<.5\320\275\nZO\276\007y0>\253\374/>\021$\000\276,L9>\371?\001\275\030\207\305\273]\337\027\276\230Z\367\275n:[\275\223\207\334=Y\254\324=`\207\335=\357o\275=\243vV\276e\315\354\275!\230F>?\263$\276\376\240\314\275\237\210\346\275^|\030>\356\004\346\273\027w\007\275t\232*\276\241\331b\274p\205K>\224p$>dN\233\274\320\3675>\243\331\027>\312\371!>M\357\307\275\236\\*>h\316\376\275\001\2267\276@\367_;B\304\027>\221\271\007\276\203\006\032>w\'D=\374}\'\274\231\221\267=7T\342=\364\213\212=P\263D\276C\353V\276\340r\034>\241\350\n>\265\231\316\274\325\356J>\320-\346=\330z\252\275}JR\276F\005a\275u\016\275=X\'\022>\350\374*\274\207\336O>\224\2351\276\211\265\273=\303\320G\276\024\324\304=g\321)\275\323\000\033>\013\360\335\2756\311\325\275\251\246R=\211\216s<\026y-\276\273\241\033>\223\021\315=\010KS\275i\010[>VC5=\014X\340\275\223`\325=\013\244\210=\327\350\325\275\253w\233\275\002\336\242=V,Q>\373\246\263\275\317~\215\275~\246%\276\231^L\275\r9\301\274\302\210\326\275)\333\000>Dr?=\237\213\016<d|S\276\304&\271\274\315)\333=L@R\276\231\013t=\006t\006\276\300\331\305=\301O\266=\371\3543\276_T\343=\324tZ>\375=\202\270iy\003\276\234\206\306<\025X1>\240\335\312=w\335\361\275\375\322E\276c\327\320=\234\275N=\374\3202=\031\231\001>2\230>=\373\305/\276\340dU>\341\360\007\2764\375H\276\315p\026>W\311\336<A\326+>n\340\326\273\321\304\t>\340/M>\343\345d\275]\223\005\276\253\202\356=o\213M\2761\207i=\272E\362\275\030F\306=c\275\311=\036\332\246\2759&\325\275i\2105\275\200c\026\276p\003\035>[m\037\275\014\334;>\300VA\276\352A\013\276}\320M<W\032+\276Q\022\260=F\354\212\275Bi\032>\353\310V\276\355\367\017><\307M>\331\352\027>\236\314\350=\263\226$>\313H\032\276X\014\220\274\350\220(=[\333\276=\302\353\267\274\n\346\255\274\001\235\376\2750\021\303\275\033\221:\276tI$\276\333\346\244\275nxF\275\247\216\252\275\363\337|\274\036\366J\276\311\023\033\276\315\013K\276\330\376\252<e\271\256\275Xl =xB\003\276\307\254\014\276c\321\026>\363d\222\275\222\367\036\276\013\375\032\276\271\034\305\275\355#\002>\033\303\000=\240a\032>\257\302\030>\332\226\373=S\006\010\276\333\233\324=&$\360\275L\017H>\303\262\250=&\300\256\275\376\237\001>\324\t\177\274\215\236\266;<.\242\274\251G\'\276\\A\273\273\242T\260=\334AI>K\236<>\021]\002>~\231\020>F\223\336<\326H\t\276eZ\035\275\035\002\334<t\362==\03581\276\021\212\216<\234Q\263\275\300\304\372\275\263\360\256\274\216\354\350\275,\310_=\025\201\004> @H>\270\261\020\276\364\354<\276aV\341\275i(\211=\250\300-=L\360O>(\233\226=\350\306`<\3261\212<\223\314\254=\266\231\374\273\016TX\276*\037d=\324\313\024=\032\353D>\226\254\206\275O,G>\206\227\312\275$\3231\276\243t\333=\010\022Q>\031tB\276\3312\026\275E\2352\274\263\330\371=#\323\317=\242_\207\275\325\311M\276\303\227\212=\331\353$\276\221H\335=\026\352\017\276\007\021\260\274\365O\306\275\232\226\024>\270\364\201=\034c\253\274h\302\010\276\205\0239\2765B&>*\204\353\275\027\271:>n\365\277\275\266Q(>\2273\315\275\226w\377;\372\337\347=\334c\245\273j\300D\276\311\264l\275\362\3146\275\235\252\320=\256WZ\276S\264\010\276\227\007\367\275\321 \362=R\231!>=\325b=\251XK\276!\017\313\275v\314\026\276z\300W\276\255\252I>\321iL=\371\362\244\275\247\245\371\274\360g\377\275e\375\252\275\304\236*>R@N\276u;\216<\017\260Z\276\273t.>F\261\335\275\327\352F\275K\302\033>\3475\332=`\264H\276\225\177R>o\034T=@C\032\276\237\216\270\275]\270C\276D!5\276\315P1\276\336(\242\27556#>\036\220\327\275\031_7\276\372\304;\275\233RT\276\022\3350=\226D\016\276\374\274\313=_j\203=\361s\325\275+>_\275E\240\242<u\203\273\274\010o\350\274H\252\t\2746\023\245\274s\\I>\306\350N\276\203\216k=X\200M>\346\233?>\362C\026\276lx\254<\3113\246=K\310\315=\3214(>\242\373\001=\264O\352\275\005\"!\276\226\216\302\275\324\3348\276j\351\341<\266\260]\274\330\016I\275\347\375\350\2750]\177\274\230\213\017><\316;\276Bn7\276\265\305\272\2743\022\327\275\342\031Y\276\345k\323=\2426\332\274^\005\306\275XV\221\275\253\3605\276-mK=\017\005;>\227\307)\276\r\214\373\275\023\314<==\340$\276\r\360S\276S>-\276\261B\222\275B\360O=[w\365\275\325\244\013\275x\032\224\275\302L\341\275\037\031T>w\307\007=s\254\265=\030*\n>\3076\343\274\235\0046\276\221\273\034\274\327\250I=\234R\201\274\234\000&>\213E\274=\010\271\335\275\251i.\276\370\227\247=\333\323!>\330\353\006\276\337\240\023>\013\353\253\275\326\273\031>a\256I\276f\t(<c\024\322\273+C0>\200\t\3239\217\027\356=\365<&>70E\276r\324L>\315\021\332<\251?\035\276\357\227R>s\036I>qxJ\276O\354\216\275\300%4>\367\256\t=\303\023@;\325\032S>y]\t>p=\000\276\237\373\247=[\324\213\275\277\214\206\274$\371\033=\352\214\n\276z@,\276bH\236\275c\035J=#6\037\276\240\361\212=>CW\276\202\005\035=\356;\371<z\245\n\276V\231\332=\025\010%\275j(3>9\003\217=~\ta<\354\376\350=\334\312\261=\317\213\361\2752\024\354\274\336\355\341\275\314\030=\276+\332R>Q\203\361\275\206\305\031\276\202U=\276\200W\007>zL\257=\332\013\201=\014\003\240=\213a\031>\325\3708\276\311\352\255\274\214\255\037>\0074\021>\264J\227\274<\033\032\276u\240\366=8\215\251\275H\300\253\275U\003\002>Kgw\275\232\373\025=\323\031\006\275\026\021*\275\307\3520>@+->\227A\226=\025\303(>\017\036\217=-\032\263=\336X\t>\005\014H=B\222\333\275J\260\275\275LD\362\2756g\036\275P\tK\276\036\264\247=\370<\266\273hhP>\374\226W\276\251,\320\275Z\023\363\274\327\217\251;\256\3261\276\356\324\315<3\347\024>\266\245\214=\027\361\370;g]\213=\263\370 <\006\201\r>\220\320L>\005)\267\275\257\231\245=O\273\352<L\264;>\373\346\227\272\314\207\311\275\222\023\227<?\203\233=\230\204:\276\251\305b\273\373\315F>\3608\315={?\030>u 5=\303MX\274\367\303\022\276\276\002\223\275u\\~=Hf=\275\205\246@>\337T\003=\231\337V>\202\020\266=\034\232\332\275\357\3436>\263TF\276\275d\022\276\265r\037\276\031\216H>\003>\002\276\355\177\372=\327\030P\275\352\316\027\276\277\nC<\311\343T>\341\202\267\274\243\311->\375\343\303=#_\215\275\376\376S>\226\342\351<\257\323L>s\321P>\342\025T\275Fs;=p\3428>\327\037\302\275\376\\9>\355\023#=~K\251=\030H\304\275\334\013\307=\013T\242=\357\t\202=f$\306\275.R\250\275\371c2\276\021s\351=\345\313;=N\351\362\275uh\276</\253\016\275aT\'\276\240\000,>\314\354\352\2733iS\275hv\000\276&\007\202\275\006y\027\273<\005;>)\262x<E\341B\276kB!>\362\007\013>\321\033\273\273$y\005>\212\3609=}!\036>\315\261F\276\"\375Q>\305f\202:\021\332\213<\207\222\252\275\010\277y=\360\201S\276\376\3374\276c\217\014\276eG/>\212\352\347=\333v>\2762{\t>\234\270\310=-\355\356=\355\001\230=\037\377\354<\235\202\302\274\317\207\207=\330\374\230=`\360\303=\3763\322\275[\317->\271\327\226\275(\036\204=D\'\304\275\326\304\373\275\\>\342=d\325\371\2755)\257=\000\265\322=\326\210+>\216\334B=q:\237\275\313.\037\276D\343K\276\3260C>\321nE\276G7@>h\351\027>#*$\276=\255?\275\0206j=+\245\025;\326\352\037>\344\002[>F1n<],#\276m\264\024=\276,\361\275\315\010\330\273\020\"Y\276\216$.\276\201\325M=T\214\203\275\315\365\020>\0132R\276\n\364\t>M\211\362\275\265\310\360=\273bG\274\343\244\025>ar8=<\323\">\213\254U>\244\300\205\275\270\300\005>\261\275C>o\200\204\275\030MM;8 )>\017\253Y\276K\334R>\305,s\2748WE<.cf=~\256J>\327\223>>\236)\234<\034\366O>\rpZ>\0345\343\275\241\263\r>}Ya\275TD\000\276\n\201$>\220\361\301\275\365l\002\276K\270G=Q\360\r\276n\3130>-zP\276\255\373d\2740u(>K\376\033>\330\210l\274W\037\251\275|\'Z>\277tL\275A#q=\362<\021\276@\031\206\275\3374;\276|Y\r\274\325Q9\276\022A\262\274*Z\372\275\344\300%<\004\355[>\240-U=\247ol=\345\200\234<9\271\361=A\247\374=\273\027R=\016\364o\275\214?\255=\323D/>\300\301\016>\353\230\203=>]\006>\374A\330\275\303d\177=\256\273i:\007\2716>\347%\003=\3429\227=\241\030\267=!\0178>\235\226E\276\377X\321=\367wb=\332\016;=\273m\270\275\312\030Q\276|U4>\273\365;>\375\023\374=i\350\002>\214\026\256\275\007h\031=\246\177u\273\267;\335\274\016\270U\276?T\350<\254=\256=\255\320P\276RA\003\276s\365\"\276(\350\345=N\2126\2763\210E\276\013\221U>\\\226\241\274\266\372P\274\276\326\023>h\210\244\275\017!\375=\377\206\262\273\327\rJ\276\316\203$>#\267\264=\266\211\336\275\226B\301=\227TD>\302\231:\275Z\017\023\276\334\262\020=[\312\017>d&\342\275>\n\031>;\364,\276.\245\021\276\273{R>zPS>E\211\032>+&@\276\001\344\020\275;C\014>\306\037w=C\345\352\275\263&\024>\r\001\204=5h\035\275\212\373\350\275\247\203\242=\365\300\267=MeF>\355\224\r\276\335[.\276r\335\354\273\037)\346=\265\n=>\344\"\344=\261}\n>\276\234@\275\00208\276[\311\317\275\375y0>DaJ\276\224-\310=@X\030>\206G\022>]\023\241\275\223\3668\276\031N\035\275\365C\256=\315\376V\276{`P>\314\326B\276\030\n\270=\357\306:=\263\2549>\223\000\035\276\223a6\276\232\322\214=H 5>CL\014>\035\245+\276_\031\345=e\204\225=\031\020C\276\312\253\243;\337MD>\371\207R\276\305D\217=\215\310(\276*O\202\275\005\221\370<\235\216i\271\262\261\264\275\375\330\367<\n\225\003\276\215\000\300=\353l\035\276\r<\357\274T\037T\276ra+=%\362\344=\305\354\n>3$\303\275Z\232*:\212b\253\275\005!\367\275\252N->\rO\312=\314\277\264<?\321\036\276,\342\252\275d_\357=\357\226C\275E \323=\210\271\305=BU\324=\243PB\276\"\375U=\347B\236<\231\356\272=\235P\325\273Yk\277\2717\374\272=\260iO\276\000\331\220\275\366T\355<d\264*\276\331t\317=\213H\374<\266\330F=\016\222\010\276\320\234\226\275\275,\233=3\205\222=GL\003={\262o\275e\356+\276v\2466\276\3416\241\275\236\250S>\314`\024\276\025\034\340\275\204\215n\275\000\314\006\276\247J\025>\212h\372=\240\177I\276\371\231\027>P\375*>\253\203\263<Q\177I\276\261\031*;D-\340=\360\013\274\275a\010K>Z_X>\334kw<\355\253\307\274\344\373\001\276\204Qi\275\257\203Y>e\245\316=,OZ>\303\024\034=z^I>\1777\257\275;\362\205<\273\'P\273\205\362[\276q\262\363\275\316c\036\276\375\024\013\276\333\212->\223\345\323\274H\234\217=(\224/>\030\273\'>\010\2724>n\353\374\275\276\360\362<\237\362$>\201\312\215<6\337\025>l$\203={u?>&\352\222<\355\254J=\233w\026\275\0324\224\274T\2339\276\337MY\276l\353\315\275\316u\2248sM\270\274\257/\214\275AD:=q\0252\275\317\274\374=u\321\013\276\276\t[\276\317\002(>\025\200\031\275R\020=>b\226\031\2769,\363;\005\371E>\306\257\000\276u\267:<X\364\255\275I\303\t>\366\177\025>?\246\215\2742\271(\276\325\200\225\275\010o+\276\352\006\301\275-\3042>\261\254\314\275\223a\361\275H\270P=\376SR\276\344G\017\276|`\335=\347\247\336=\331\344\315=\337Q>\276\251\320\"\276\220\026\274=\"4\310=\335\303y\275\tS*>\262\227R\276+B\350\275\241O\366=]\324P>\'\330\264=\347\243R>v\031m=[<\276<P8G\275\27425\275\325\342J\276\217)\373=u\005\265\275\204\362*\276\021x3>\360$\327<\024o\222\275\340\001=\276\264\0274>\327\361\221\275\254\214\252<\001\361\214=W\347:>\230U\214\275\323\254\022>\222\377\311\275\311\263\377=\243t\000>\346(%\276\023\026\243=\007z\333=8\302M>u\233\354\275\325\364\004\276\205Z%>\204\235\244\275\313\361I=#x\000>lBC\276\236\337C>2\224O\276\232r\227<<\016\001\275)D\233\2754nK\276\326\226~\275/\343\255\275\371\2408>7\215J\276q/>>\247\206\000>\375X\243=C\373\r>\353\321\031=\334\372*\276\004$=\275\307D\017>\272\'\245\273}\322\001<\272\247\253\274\203\037Q=\010\373O\275\263\203>\276\263d\016>A1\257=\261\035\013\276F3\316=\351\210\007>fs\004;\351_\340\275\312z\007\274\214n\032\276C\357L\276\236\303\251=\214S\303=\250\224&>\330&(\276v\234\266=M\200\337\275\375[\377=**?\2767\304\031>-\363\001=\316\"\020\276XJU>5\316e=\357o>\275(\362.\275\252\322<\275\036\234C>d!Y\276H}\005\274\243\350.\276<{\000\276\263\254\230\275\017\334\034\276\236\202\253\275\227\322H\276\003\232N<+\031\263\274\177\371\016\276\350\317\215=\276v\226\275\333{\002\276Y\215G\276a\311\177;\366}\n\276V\335\007>\236\177\037=s\235\244\275\"\223 >\257\025\037\276\363\254V>\014\217\037\276\r\003\013\276wBD\275\316\2765=\221SH=9\034\312\274\376\353\365<\n\037,\276\027\025\304=\341\3642>\214\342\246\275\370j\325=\325\022{\275\363\032s=;8\360\275U@\253=3(~\273\\\370\226\274\036\032\362=v*\302=\035&>>\r\262\277\2758\247\314\2755\271S=\334-\357<\210$\n\276\317\0209\276^9\036>1\005T\276\351\3624>\227Z\377;\334\3775\276O\003-\276\370U\017>\2352\277<H\201\232\273&\222\213\275\037\316\016\276\367\350\374=Y<\005\276\316^\313=\005(\362=\2417\270=\003\356\344\275\254l\344<\002\026\001>\226\266\010<KR\020\276\300I\301=\r\\\247\274\353Q1\276\271\025U\275\274\264\211\275[\340\005>u\251\033\276\342ED>v\3308\275e\350+>\260}\327=&\373^\275>\025\005=Q\252\323\275\303\227\030\276\3512\352=N*(>\020.\330=\251\304\273\274r\370)>0\256\t>\362S\030\274(\341\350\275B(2<\027\332I\276\001\266\247<N\240\006\276>\361\332\275-\023\026>\367Z\006\275@\255Q\274\207\341L\276\000)\373=\347\375=<\241\325\324\275Yq\022\275uN\334<\236\030$>O N\276\337?\n\276\001\326\017\276\321\311O\273\300\023\000\276\0378\326\275\350\221=>\277l\200;\377\356\334=\206\374\000>\022mO>\024+\017\276S\030H>/y\346\275G\342.\275\304%\343=\242\t\373\275\010!\023\276r(\017>N\377\035\276\213D_=}E\002>@@\340\275zH\220=\013L\230<\004\236~\275x\216\316=\367([>\026RH>\274\262X>\236ni\275Y\0008\275\257\2112\2745\342\260=a\032\214=\010xx\275\207%}=\225\2504>\177\"\247=4\320\005>\260@\227=O\207`=R6\213\275\326\330\262=\340\365@>\203\020\025>D\024H>\322`\226\275?\014\244\274\367H\217=\250n\340\275\217\001\231\274\002&O=o~\261\274\217&%\275\321\010!\276D\266\331\275\306\372\345=>\335\032\276\254\354\022>^w\320;\002\213>\276a\026M\276\343L\260=\352\371|=\014-\256=3\024\t\274$D#\275\311\343\037=\026\001[\276,\240\241\275|\010\245\274\230\367\321=\362s\316\275~Lg\275Sp%>\346\230\271\275\260\253\272=\357\327\024\276\251j\271<\237^k\275\242\341(\276\002%\251=h\2313>\263;\205={2E\27629\212=\000n\233\275\232.K>\272\235\272<\310i\273=\034\250A>g\025\331\274\242|\004>7\267\344=\221\206\343=>T\304=\'\267\334\275Q\245\216=/\217\200\275\313\002\026>\333\005\330\2752\371\341\275u\242\020>\206\256;\276(\302\217\273\366\036\253\274\310i\004\276\204b\205=\242U)\276\226\030\262=\244J8=\246\211\221=*lI=\346\305\322=\301\366T\276\016\367?\276\302a\232\275\235\312\025=\340\300V\276d\220N>H\210\026<[\240\005\276\313\024J\276\320\325\204\275\204l\330\275D\227G\276X\026\034>\256\311L\276v\230\001>\3111\347\275\253(;=\332V\270=\333\300\\\275\3426{\275O`\322\275\036\314\032>\203\254\037\276]4B>\000q:=\371XK>\220+C>F\245F=\036\233\241\275\210\232\235\275\246A\271\275\027gX\275\373f\213\275b\203\000>+\247?>;\2124\276\361\037C\276h\013/\276\375\362\006\276\331\036\273=7\247\"\276\214a\313\275X<=\276v\020\017>\236|\007\276U\206:\276J\275\007\276\251gs\275\304i\000\276\2444\225=\007\304:\276\202\253\355=\234\0049>\317~)=\246\206W=\216\372Z\276\332_\355\273\307\036\014=\362u\222\272\001Q\333\275.\227\325=\033\340\300=\004AU=\036d^\275\025P\244\275\'\363\026>wU)>)\204\204\275_\3342\276&\355\'>\372\270\030>\000\242\374<Y\201\025\276O\332y\275\372\342\322\275\356\343\245=\230T\013\274D\3501\276\351\314\023>}\214\340<\261)\223<\307a\022>\210\246\263\275\331]\311=\312N\363\275\316\311\334\275\263\260\335\275\223\331?>\366y5>Uw\230\275F\325\332\275iS6=\351\010-\276)\243\257<\235e\017>b\217\206=\336\345\331\275O\215\335=\234\312i\275\330\266!>\020\353\246\275\031\266\035\275\367^\326\275\360\313M>\270\031\353\275I<\345\274\203\377==\016\2627\275\177\032\'\276W\007\3179\261\351\317\275\000\304)>\303\335\013\275!\346h\275}\227\347\275\351/\255\275\262\247f\273?\216\231\274\013i\223=\332\2277>3~)>\236~\031>\312\3057\276NW\203=b\365T\276]~\010=\002/\214\275\343\314\032>\020\223\316\275\345i!>\031Y\003\275\225\\\211\275wW\314\275\033\212\035\276:\264/\275\371\270\276=CV,\276\345\303>\276\235\273\000>\330\n\022\275-[\324\275\027\006\021\276O\225>>\371\3007\276\261\303\035\276v\222\352;\365\206\373<?7O\276\333}\217=\272g\006\276b\244\326\275!\345M>M\253Q>\302\377\232<ER3\276\350Pl=\213\027\025>\313\364\000\276\r\265%\276\306\332\026\2765\016\221\275h\344\352\2750\237\n\276#\334\322=\026W>\275|\351\300\275uO\"\275msK\276\205\235\263\275\370K\034\275\323\243\206\275Ux6\276\371\027\234\275\006\201G=\240\254!\276\305M\n>\241/<>\260\315/\276\330\242t\275\2601?\275V\250\341\2752Y\240=\276l9\276\\\261\024\276\275\014\301\275\376\r\221\275\262\210\002\276\351\357\205\275\033\313$>1\234\">\274\031U\276\256\031\375=A\017\337\275aDJ\276\373\200\n>\315z,\275\247j:>P\212.\276{\372w\274\347\312\343<LME\276\310k\246=ATP>\214\033V\276O\362A\276\374A\010\276V^\036=d,J=\313\0146\276[\354N>\302-\016>\016h1\276\007\247:>)\034@\275\013\2104\276[\305\220\275be\251\272\357-\361\274x!\023>(\250T>\214\364F>\213\n\306\274\244\235T>\277z\370\275\023\316\005\276\260\301#\276\002/z\272\322\312\007\276\376\313\241=2\230\204\275\n\3046>\205\264\364<<\210\027>h\271&>\346\374}<y\2033\2767\223\206\274,\367)\276\301\346F=\336tL>\367\342+=\335\200D\276d2C=$\n\033=\004\n\000\274`d\254=w\217\250\275\202[X\274Kh;>\271\346\365\274bS\351=\333\005\315=\325\304\360\275\342\'\235\274Q\221\256\275^\200\254=_5+\276\200\'\324\275xD\331\2754\273W>B\243P>#V\255\275\355\261\007>U\244*>\346\320\213=\023:\212=\003e\013\2767\370W>b\005l=\344\335\225=\0362)>\035\367D\275\333\266\245=`t\021>\375\2409>\0375M=\207\214?>\"]\363\274t#->\226\331:\276\330P9>y\342\010>\006|\252<\241n\006\276\300\341\231\275\3079\300\275\255\177\010\276\211\242+\276|\312\'\276\332\301\254\275\310#\327\274\2033\342\274\201D4>\264\325U=\356\257]\275\2066\024\274\276Q;\276\177=\014=4\007_=;b\010\276/\220H>\273)P\276B\205\355\275j\333E\276\367\327\021>\262\256Z\276[gQ\276\t\013B>\240\357\000>\327s\244=.\263\025\274k#V\276\377\026\337\275\n\341U>u\005*=\332\3201\276;\'\013\274\021|\235=\364\2578\276d:\035\276/\2722\276\207\315*\276\306l\330=3q\246=:\361\025>\333\237G>\256=\275=g\024\373=a\331\223=z?\006\276\237?R\276\017w\215\274\254J\234=b\2419\276\032\2236>d\030\260=:\014\263\275%T\\=,C\201\275\006Q1\276\202\202<>\32462>\006\251\346\275\267\250*\276I\335\240=\247\304\235\273.s\213=\010UN\275\020H\347=\354\262\253=\335\300\261\275=\324)\275\275%\027\275\251\340\034>\037h\340=\216\000G\276\243\nT\276A\320\020=kY\307=\315s\036>u\221\310=\370Q\360\274ef5>\r\027;\276\317\316\305<\203\373J>\2015\275\275CiI>=Gx=\221\2210\276\177\233\014\276ZF\">\362\340\334=\350\311\221=[2\020\274X\023@;\203\362\314\275\351\227\025\276\361Q:>-$\023>\233\362\337=\214\377\">\270\372\361\275[\231\374=Xp%\276\3733\262\274\262q\017>w\210\271=\037\222;\275uN\320\275\021\220\240=-O\240=\210\232z=\311DZ\276\210\237\t>\350\010F>\273\357D\274\215\1779>v\024\017>R\310G>\263\254J>\377\027\305\275\204G1\276{\244Q>\2603\033\276\177\246\211\274\002\264\314\275|C1>p\364\371\2752$\310=\325\"W\276\320\rT>q\241>>\214\030?>aU\036>\241\211\312\274\304/\020>\020\306\233\275\250\370&=-r\006\276\335\321,>\374P\312=\211J\374\275\013yS<h\237\242\275\226n\205\275&\375\004=\271L\321=\336\363\236\275{v$>\377:?>\272\314\257\275T\370\000>$\302D>j\036d\274\370PV>\222\333 >\026\320Z\276\217z\303\274\321\026\005\276\252\266};/\222\332=\334\307\262\274\357Y\030\275\374\314T\276|V\302\27565\023>\236\312B> 7\021\276-Q2>\352n\247=\313\267\034>\274\222\211\275\2412B>[\3022\276\275|.\276q\302*\2764\215H\275\2657\200\275\315\337\233\274\340\035\302\275\322%\355\274\212\001\307=\320\354\312\275\t\232Z=\303\235\017>\201\325[>\340\r\315=\305\027 \276X\177$>\250\336&>\rQ\020\275\232\324\205;\005\272\313=-;_\275\273{n\274tE\270=\346\212\357\275\223\253~\275\0101!>\353U\372\275\036f?>k\354\305=8C&\276\025\003\320=M:\026\276\014\227l\275_\373[>(\367\363\275\334\274\230\275\243}==\243=W>R$\036\276\340\242C\276\350\032H\273}\330\326\275\265\201\'\276\312f!\276\375\3120\276\322N\251=5\375N\276\211\332\035=\367\021\024=\265\225\337= \315\363<\001z+\275w\013X>)\257P\273p\343\206\275\3277\234=Y\271\000\276\275U\204\274n \266=p\357,\276\273\013\261=\314\321\363\273D/\263\273\322%O\276\341\217/>\023\200\243\275\'\367\000>6\306\262\275\240\226 \276\254U\335\275\376\001\226=\212E(\276\270\2478\275rX\355=\223|\032\276\370\253\273\275\224\2414\276\204y\335\275A4\326\275g0\220\274\337}C>U\364\r\275\205\307\r\276\346\216\206=\346\234F>Z@\272<6\200\373\275\260\005F>\373=\366\275z\224\265\274o\020x\275)HD\2767\331\364\275\205\210\316<\261+\270=a\t/\276\250\236\256=\347\023\007=\267\221\342\273\024\231#>\257\035C\2765\020?>\242&\021\276\221+O>jB\037\275vI<>\214\'F<\273\325W<\201\3322\276\365.\006>\301z\265<+\264@\276\216\317\223\275\336\230\036\275,5B>\247Sw\275\002\227\377\275\273\\\031\276]k3<\355\000\324\274\240\313\002=\312V\240\275R\000\350\275M-$>\002\347G\275\0066\331=\"\232\200\275\317\r\001\275\004\001\023\276\271\270\027\2763!\376=H\261@\276c\305\275<\221\241\255\2751k\377=P\221\354\274N6\367;\234\322\034=\200\365.\276^\027\356=r\300\021\274\033>}\275\256\335\027\276\004HR\276\243\033N\275\247%\201\274\n\301\277=\365\221\262=1w\007\275\207\340\314\275tM\035\276\"\006D<T\363\321=\226r\033\276F\271\255\275\303@\307<x\241\005\276\243\376t\275\tt\003>T\247\n\276b\274d<\270M3\275\013:,>\330\006\230=o\343\003>\316e\016=_\223\373;s6\025\276X\343\251\275\nA\253\274A2\313<DZ\326\274%\220\024\276\000\014\r\275\262\351Q\276\2253\026\276f\261M\274,\235;\276\341\216A\276C\256\354=\n\257$>\225\2228=i\371U=U\241\375\275\322j\225=\260E\335\274G\211\347\275\251J\350\275\312\304I\276\013A\277\275\357u\335\275\227\305\334\273\222\236\254=\225j\027\275\245t/\276\372\276\033>hL^\275x\033\277\274\004\270B\274W1\355\273\00714=\237\253\301=`f\253\2741\023\327=>\222\'>\276\246#:\323W\010=\322\2531\276U M>\037\340?\276u\320\233\274\365P\001>>\036\t\276\036\334,>\207\307\365\275(*t=\212]\037\276v\236\375<\232j#>\272\254~=i\261\204=\260\325/\276\233z0> \356\010\276\357kP>\364]\325=(i\004>p\336O>^S\r\275\367-L>-\373,>G/=\2764\007\234\274h\2340=\316\365\251\2751\323\">\241v\235=n\225v\275\013\247S\276\353\333W\275\352\264\233=>g\317\275\270\244\264=\250\363\311=\217\242\214\2740\357\025\276/\334\237\275\223\207\020>\300\241,>\204\312\021\276\365\215\257=d\\\305\274\317=C\273\226\3578\275\242\t\001<f\357\274\275\260\321\242\275\335\002==\205\010\325\275\247\025\377=j\356U\276=\001\004>*\003\324=\302\236\025=b1\207\275\212\243\007>F\3752=\002\031\331<\232\025s=\233B\213=\205M\210\275\236=r\275\217\350\260\275q`\003\276{\025\345\274\362e\302\273\227\3071\276D\360\304=Y:\204<\322{\221\275\305}\260\275E\236G>U\337\276=\256\231\213\275\374\0100>3\372!\276g<K>\366\337Q=\355\253\314<\025RT>?\312\356=Y(->\263\333\366\274\303\244+>\352\372\\=>\320\374=\000\257\000\276\207\232;>I\364(>\215\357->\306\254\346<\2367\304<P@\341=q\004R=\r\230\340\275\232\371\005>o\314\362\275\243\277*>u\377:>\343\005F>\216\246.\276\265C\305=;\3717>I\377<>\\\267u=\323yt=\312[\234\275\r\314\333\275\206%Q\276m\236\273\274\342\365$>Q\233 \276\370+O=)\001\237<\322\217\003>Da8>\353\345\266\275vf\276<\347\026\337\275\276\277\253\275\177\032\001\276\024\306\023>d\254\001>\257\205\036\276\206\255\374\275\357\344\232=\303\231S>p[\037\276\345\203\030>\321\217\254=4\024\026\275\310\034\315\275\331M\233=\321$X\276\222\342R\276\225\236\343\275\212\025>;\260j$=0E\301=\234\207\007>\\\213\335;l\363\016\276\342\013Q>\304\342>\276\330\322\005>\244\211N>\345>\026=g\364\302<\001\356\014=\177\333V=\177\2055\276VK\317<\233HJ>\022\310+\276\237\212\343=i\274\204=\231\234\037>\357N\353=\260*\004>\377\260\016=P\205x\274\203\224X>\325\\\t=\3470\370\274\325X\370=\034\026\006>\346\236!<\246\231\365={\355#\275\321\351>\276ud\032\276\246\376\001>\336R\t>\000\361\002\276\030\362\270\274\037!U>w\r~\275H\236\305\274\345F\017\275\371\344\261=\024=$>\223\'\210=+])>\344)\374\275{\003@\276\177\374\023\276\335%%>o\272!\276]\200\316=\347\260$>H\365\345=\357\367\340=?&[\276\220\013\331\275\217\331\263\275\n\363B\275\356\004\014\275$\351\245\275\227\223W\276\352\252\036>\204\'%>\215+-\276\366GH=5r\023>\262s\032>\242\266O>Z\250[\274\376\265\031>S\250\325\275\352\370N\276\265ck\275\271\013J\276\221\3579\275\032V\321=\307_V>+\242]=l\026\363\275T&6>\332\221\257=U[\253=\017\032$\27688\261=\270\254\307=\225\364U=\\\233\330\274k,\253\275\r\3207>\235\335\212\275\277\330+>\360\341\257\275{\260\023\276\332\275*>\363h7>\201\035\035=\026k\337=\315\346Y\276\200;\310=\022\3470\276\365\310\225=\037G~\275|\251;<L((>\3517\213\275@XD\276\020\254\253<myT>@\2447\276e}\303\274n\0054>\274\320H>\n0\322=\365\303\352\275\257\220\276\274\016k{\275\371\0041=\215G\322=\230\266\307<\354*\213=9_\t>\223\033\326\275\345\216E>\243.\204\275R\350\022>\357\304\016>l\202\277\275i\032X=wV\237=\033,N\276\273\236V>\275\322\226=\027\330\017\276\010c\t\276\323\315\257=>\260\205=\224;\212\275\27311>E\225\241=w\277\234\275\213\314C\276\311y2>&\025p=%\314\360=\000\321Z\276\220\216K\276;\202\t<\035\027\036\276U\216\027>\025(y=\013N\007\275\204\217=>8\200\010\275\263{P>\360\026.\275\336\223\035;nTl;,\341\004\276:[\360<\302\367\344=\351\207\206=\325\3638\275=\305\037=\026\201O\275\217\346\251\2756\205 \276\271D\007>\327\253\323\275\344wG>\305=F>\255Y\r>\315\326\243=\200`3>\354\321\327=\265\362Q=a\255\004>X\245V\276c1J>>\3748=\241\334\264=Y\031\240<\221\201Y=\026>\210\2752\243\026\276\033\241\260=\275V\022\275\266\315\230=\321\002\002\276L\364\022>cI\252\275\313\215\230\275P\241\026\276\364\253\235=\014\210\013\274\326\205 >\206o\017>\330\303\257\275"
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "K\000\000\000K\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 39
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 49
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  op: "Div"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  op: "Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub"
  op: "Sub"
  input: "avg/AssignMovingAvg/sub/x"
  input: "avg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/mul"
  op: "Mul"
  input: "avg/AssignMovingAvg/sub_1"
  input: "avg/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg"
  op: "AssignSub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "avg/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "avg"
  op: "NoOp"
  input: "^avg/AssignMovingAvg"
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/mean"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "control_dependency"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  input: "^avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  op: "Neg"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_2"
  op: "HistogramSummary"
  input: "HistogramSummary_2/tag"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_3"
  op: "HistogramSummary"
  input: "HistogramSummary_3/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_1/pack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/Rank"
  op: "Rank"
  input: "global_norm_1/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_1/range"
  op: "Range"
  input: "global_norm_1/range/start"
  input: "global_norm_1/Rank"
  input: "global_norm_1/range/delta"
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/pack"
  input: "global_norm_1/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_4/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_4"
  op: "HistogramSummary"
  input: "HistogramSummary_4/tag"
  input: "global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_5/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_5"
  op: "HistogramSummary"
  input: "HistogramSummary_5/tag"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_6/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_6"
  op: "HistogramSummary"
  input: "HistogramSummary_6/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_2/pack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/Rank"
  op: "Rank"
  input: "global_norm_2/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_2/range"
  op: "Range"
  input: "global_norm_2/range/start"
  input: "global_norm_2/Rank"
  input: "global_norm_2/range/delta"
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/pack"
  input: "global_norm_2/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_7/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_7"
  op: "HistogramSummary"
  input: "HistogramSummary_7/tag"
  input: "global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_8/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_8"
  op: "HistogramSummary"
  input: "HistogramSummary_8/tag"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_9/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_9"
  op: "HistogramSummary"
  input: "HistogramSummary_9/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_3/pack"
  op: "Pack"
  input: "global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/Rank"
  op: "Rank"
  input: "global_norm_3/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_3/range"
  op: "Range"
  input: "global_norm_3/range/start"
  input: "global_norm_3/Rank"
  input: "global_norm_3/range/delta"
}
node {
  name: "global_norm_3/Sum"
  op: "Sum"
  input: "global_norm_3/pack"
  input: "global_norm_3/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_3/mul"
  op: "Mul"
  input: "global_norm_3/Sum"
  input: "global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/global_norm"
  op: "Sqrt"
  input: "global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_10/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_10"
  op: "HistogramSummary"
  input: "HistogramSummary_10/tag"
  input: "global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_11/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_11"
  op: "HistogramSummary"
  input: "HistogramSummary_11/tag"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_12/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_12"
  op: "HistogramSummary"
  input: "HistogramSummary_12/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_4/pack"
  op: "Pack"
  input: "global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/Rank"
  op: "Rank"
  input: "global_norm_4/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_4/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_4/range"
  op: "Range"
  input: "global_norm_4/range/start"
  input: "global_norm_4/Rank"
  input: "global_norm_4/range/delta"
}
node {
  name: "global_norm_4/Sum"
  op: "Sum"
  input: "global_norm_4/pack"
  input: "global_norm_4/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_4/mul"
  op: "Mul"
  input: "global_norm_4/Sum"
  input: "global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/global_norm"
  op: "Sqrt"
  input: "global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_13/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_13"
  op: "HistogramSummary"
  input: "HistogramSummary_13/tag"
  input: "global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_14/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_14"
  op: "HistogramSummary"
  input: "HistogramSummary_14/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_15/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_15"
  op: "HistogramSummary"
  input: "HistogramSummary_15/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_5/pack"
  op: "Pack"
  input: "global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/Rank"
  op: "Rank"
  input: "global_norm_5/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_5/range"
  op: "Range"
  input: "global_norm_5/range/start"
  input: "global_norm_5/Rank"
  input: "global_norm_5/range/delta"
}
node {
  name: "global_norm_5/Sum"
  op: "Sum"
  input: "global_norm_5/pack"
  input: "global_norm_5/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_5/mul"
  op: "Mul"
  input: "global_norm_5/Sum"
  input: "global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/global_norm"
  op: "Sqrt"
  input: "global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_16/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_16"
  op: "HistogramSummary"
  input: "HistogramSummary_16/tag"
  input: "global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_17/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_17"
  op: "HistogramSummary"
  input: "HistogramSummary_17/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_18/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_18"
  op: "HistogramSummary"
  input: "HistogramSummary_18/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_6/pack"
  op: "Pack"
  input: "global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/Rank"
  op: "Rank"
  input: "global_norm_6/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_6/range"
  op: "Range"
  input: "global_norm_6/range/start"
  input: "global_norm_6/Rank"
  input: "global_norm_6/range/delta"
}
node {
  name: "global_norm_6/Sum"
  op: "Sum"
  input: "global_norm_6/pack"
  input: "global_norm_6/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_6/mul"
  op: "Mul"
  input: "global_norm_6/Sum"
  input: "global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/global_norm"
  op: "Sqrt"
  input: "global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_19/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_19"
  op: "HistogramSummary"
  input: "HistogramSummary_19/tag"
  input: "global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 375
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 375
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 375
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 375
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Loss is inf or nan"
    }
  }
}
node {
  name: "control_dependency_1"
  op: "Identity"
  input: "CheckNumerics"
  input: "^train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CheckNumerics"
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^control_dependency_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
}
versions {
  producer: 9
}
