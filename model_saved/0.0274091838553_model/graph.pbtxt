node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
}
node {
  name: "input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "output"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "X"
      }
    }
  }
}
node {
  name: "HistogramSummary"
  op: "HistogramSummary"
  input: "HistogramSummary/tag"
  input: "input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "y"
      }
    }
  }
}
node {
  name: "HistogramSummary_1"
  op: "HistogramSummary"
  input: "HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 450
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 450
          }
          dim {
            size: 55
          }
        }
        tensor_content: "\355\013S\275m\343\253\274\312\305v=i\325\233\274q\010j\275\254\002\234=S=\267\275\273\260\220=\t\226#=?\370H<\333\020\332\274@\277\t=\322\224\254\275P\003G=\230X\244=\364r\"=\341\254}<v\356p<\332\340\013\275{\020\207\275\020\320\257\275\272S\240;\357K\010\275\016Y\212\275\360M\273=\035\347\244= \000\312=b\366\304\275A\313\376\273\025\272\220\275Vj<<\361\314\246\275&&\247\275\303.\201=\354h\242<\350\203W=\200\275(\275\306\370\310\275\242\332_\274FT\222=\330\2256\275jCU=@F>=`\007\362\273\357\306\255\275\314\364\314<\250T\251;\252\t\222<f\215\316=q7a\275\302\311\352\274UQw=\224,\243\275f4\326={Pb=\002\030\341\274\245\314\325\275\007\306\210<b\005c=\013\270H=\265\3611=\314t\331\275p\317\t\275$z\213<\270\037\263\275\360\234\265\275J\331\325<B\300a=\214G\257\275y\225\355<\267\236^=;\333\203=^\344\255=\211(V\275R\252\023=\210]h=?\352\006={\233\206\274\361\027\226=\264\224\227<\327{\315=A\\\274=\351\003\034\275\317\313\342\274\360d\315=\274\224\317\275\207\200\232\275q\362\n\274\254@\230=qd\313=\202\223\244\274\357\200\313\275\305\234\252=\034\312h\275\263\304\225<\207\337\314\273\340\212\277=:g<<@?>\274\205\225/\274\354\221\255=\314\201\324\275\0003\204=\373m\370\273\301>\313=i!t=r5\233\275\204\267l\275\342.\227=ns\264;\306G\034\275\224Q\366\274\353\344A=\027s\326=\227B\202=x=[\275\240\226\024=\350\003\266\275K\224c\275c\035\226=\032\331m\275\025\014\"\2743\256,\273\000-~<\236y\276\273nr\325=\246\201\n=\322\252\335\272\017\2571\275\037`Q=eSr\275\251\303\250\275\236\272\223=\310\354\314\275\307\313\216\275D\020%=\272\265\323=1\372\022=\3405\252\275^D7<\301\274y=\215\347\377;\346\341M=\234\347\335\272h\260\'=\217l\331\274\003UN=\322(\270\274\020?\314=\\&\267=#m`\275\337\003\231=N\\\251\275\013\017>=m\354\306\275>C\323\274is\330=\276\027E\275<@\232=?\203\310\275\022\221\332\275\203\001\031=N\3469=`\036\324=\202\354\241<c\247\035=og\223\274\265\272\342<rE\205\275\373\247\007=\204\211\271\275y\331\231=\203\345c=e\255\271\275\307\354\222\275\200\004K<\340\021\256\274\345\235\254;\243Q\327\275\036\276\'=\227\014\223=\375,\377\274H+9=W\353\243=\227~0\274\361\374\270=\315\340\232=1p\364<t\303\232<\344M}=pvw\275\227\263\213\274\200\2053\273\276\t\304=\334\357n=q\255\036\275!\222\224\275T\365\312\275\305\205\010<%\355\323\274\366\230A\275\221CL=$\321\252\275r\334\376<>\252\310=\342\251l\274\026X\206<f\312\307\275TZ;<N|W\275$\202\'\275\010z\001\275\2252\230<{\320\342<\242\233\031\275\312\356\247\275\202n\205=H\'w\275pOl\275\312\036\266=\202\3034=\235 \016\274\336\363;=\360\001\n\273\374\254\226\273\373\r\036=\242>\337<\222\346\304\275b\310R=F\315W=\354L\037\275=&\224=\277=\313=\225\321\033<s\336\255=\033\233<\275\241bw=\253\251\260<\250c\251<\2350\261\275H\262\022\273\310\033\030\275r(&\275Lxr\275\210\227\342\274\310\277\364<\322\206i<\363Ko<\345\316\257\275O\306\266=\336D&\275\000\361\250\275A\355\211=c\374\337<\370\336\220=\r\364\311\274t\003\300;\016\rZ\275J\027\206\275.xe=\227_\256\275\254\311\230=\317<\225=\006\366\222=\'\313\253=*\n;=\344n\306=x\360R=\304\2409\275UB\244\275\2001\024\275\334\220\226\275\r-n\275\326\364\357<\302YA=l\243\245\275\264Z\330<\272\356g\2756\0048=\234i\267=m,\316\275\305\006w<R\177\363\274\266\031\334\275As\010\274\250\201\204=\344\364\"<\204\200\037\274R\013\361<`o\272=\372\233\227\275\266\357\271\275\375<\237=\253:\262=\325\"\213=@\200\265<\375\304\237\275~\273\335\275\376\377r\275\375\254\235=1\177\202\275\244k\002=G\242\230=\351`\353\274\345\245\253\274\243&\024\275\351i\t\275\212\376p=i\302\330=\2333\r\273\222q\270\2758\370\013<oEj<l\3034;\231\020\256=p\3677\275\311\273\313=\177 x\275\300A\356<\253\271\013\275\241\231S=\205\350Z\275\201$\314\275#\030\226\274\260\246\350\274\356\225\340;\345\300\234\275\300\333X\272\267\023\225=\270[\314\273\252\257\'\275\240F\243=\331QV=\341\272\263<\267\035,\275\343-\315\275\346\367w\275\022k5\275[\002\321\273 \311\332=LZo=\255C\370\2724\202\213=F\276\036\275%\020~<\017v\277=\275&\222=\213\033R\275Ow\216={\331\312\275\"t\333;g\t\316\275S\207H=\020\332\220<\366\315\003=\0221\005:\277D{=\304\365\203\275\316\361\233;\360\327\321<\245\026\300=\274s\276=\337\021|7\213:\274:\2230v\274\320\371\300={\341\021<v>A\274\325\3720\2728%L=\357\213\331\275\330\352\270\275\026cB=\327\342\260\274|\004\330=\302P\317\275\023\310\256\275\006\005\263\275au\267\275_\223\376<\266p1\274\331\360\333=\357=\001=\316\371o=\361\232\245=f\244\250=4\255t=o\312`=ktw=\325\231\257\275\341\216\016=\201\211~\2739\020D\275\244c\276=Q\250\270;\273_\2359\367\014\027\275\001\230\004<=\272\217=\203\305O\2757\247\342<*\'\304=#\002v\275+6\177;9\315P\275\274N\206\274\345\261\207\275\265l\325\275H\202}\275\360Z\312=\260^\004<\261[\271=\231\314\222\275\373\352n\275\211\026.\275n\222\326=~T\326=pl2\274u\023b=\035\320\357\273\272\371\216\275\227\352\244<_\366\237=\303\347\343\273\213/\317=\377\365\275=f3\2139\277\201\314=4zK\275\031o\237\274\232\n~=%\254Q=s\265\332\275\354\366\340\273\035\nJ;\215\334\327\275\"\302X=\350\211\303\273v\254\326\275\327\262\177=\357\177\244<\211\036\334\275.Q~\274\000\263f\275!\365\037=\233\255e=A\031\313=\365\200\203=\262bw\274\004\373\206\275\000@\344<\r\210\230\275|X1\275\372\227/\275\022\212O=\2528$<\263\n\240=:\270\311\275\340?;<\252A\325=i\202\n=\203\327\304\274`2~<1+\250=\031\311\251=\327E\262\275q\014q=\014\224\275=\267la\275\260sL\275{\350\020\274@$\325=\207\231[=\220\327\333\2755\303\331=\355>\332=\357\t\214=~\004\313<S\010\305\275\210\236\250<\2628\275\275\247%\224\275i\036\243=) \266=\362Gm=\202\361\250\275\335t\202=\216\263\220= \032H\275\302\020\010\275\373\342\n=\322L\237\275\3049\353\273q\253\031=\350\032\264\275\200\256\240<?\334m\275mo\021:l\002\250\275.\333\245\274\347\241\303\275\037)K\275\205\335\310<V\240J=\273\240\324\273-\212\010<\336\263\314\274\016\342U\274\364mc;\367p\246=j\355\314\274\r-\217\274\311\203C=2`\320=gS\367\274\2047\216\2753#Q\274|[\245<\224\217\210\274\311\222g\274\343+v=\\qk<\217e\312\275\226\330=\275\214\237\033=\200\264\324\275\314\324\336= \345\270=\321h\001\275:\004\272\275\023\027\302=;<\225\273\357\257\201\2750\365\215= fD=\0016n\275\311X\332\275\356\274\334=\226ul\275\237\214\330\275\205!\260\275\347\265\021=\315\250\261<\230\373\236=;A1=\344~a=\347j\037\275|\000\001\275\245~1<\024\212O\275]\305\334\275\'s\030=\345\372\277=\014\246)\275k`X\275\330\245\222\2756\325\234\275_\376`=\253\231\212=Y\326\234\274O#\313=+5\303<\267\026X=q\342S\273\3202\235<>\r\206\274\265Bq\2754\230;<i\253\232=\351ve\275F\375\223\274\266w\233\275\246&\203<\223PH=\030\r\321=k\343\277<\277\361>\275:\353\242=xx\212\274\003\234\305=\031\207\311=\351XT\275F\330s\274&\213\262=\327\254\'=\033\251\263\274\3512\n\275\344n\322=\014ic=\263Z;<\333\345\206\275&\361\026=\340\252R=\177\272\354<\242\266\230=\246\331\007\275\"\220\275=C\204\265\275\336\\\261\275\353\017v\275\031S\020=MKr=[R\000=q\234X\275\026\273\324=\336\034\203=\020y\337\274\344\350\262<\303\257\210=\263I\234=7_m\273\212\375\321\274\236\321D=\240V\224=\313D\271=\354Dj=\002\336\030\275d\272\266\2752\327\002=\247\376]=\342\246\001\275=\2035\2741\302\271=\r\252\277\275:\262w=\303\371\325=[X\001=\334\252\036\275e\314\251=\3248\342\2731\365\306=\006\027\234\275\215(\314=\377\277\020<\005b\372;ML\302=cg\246\274\351\202\244=\344\344\210=@\210\200=s\017p\275A\272$\275\313g\003=\376\006\244=\260\035\275\275/r\261=\207r<:Z\374\325=l\244\016<\356]^;\236\336\212=;\270c<+/\016<R\"\217\274<Y\340;\317]\237<\263(\336=\227 \330<\324\2077\275\315\374\272\274\004;\220=0\325\213=\336:\325=\271\366\243=\245\313\200\274\321\003\036\275 ~*\275\201\307k=\246Y\203=\333\315M\275\364;\223=\244\366`=\307\017\215\275\303\361\332\275L\326d=\304\371a\275\256\035\205=\"\005\233\275\340\366\2159\r\235\326=\316/\276=\034q\233=\276\231q\275\260a\220\275\302\036\224=\365MD=e\374L\275\237\216\271\275\241*\222\275A\253\212=qp\213\275*\204\201=\334\376\237\275\234\340\260\275\250V\237\275T+\213=\325Z\332\275\322-A=\234\370i<\2406b=\016\235\335\275\373\275\265\275\340\035E\275U\311\321\275*C\277=\221$\t=0\267l\273\231qB\275D\370\233\274\ny\241=G\201H\274\214\305\000\275\210\351\342\274\343\001\306\275j\013=\275\tB\272=i3\'\275\311\2719=)\036\177=]\214\312=/>\242=\216\217\310\275L\212\240\275\266DI=zRA=s\232\327\273J\0214\275\241\200\321<\206\353/\275\250N\031\274\014\262Y=2a\214=%h\260<\216F\350\274\035\346V\275wx\271\275\305w\263=\002\3237\275\265\236r\275\270+%=\332\023\337\275\\F\302<opi:}\213\006\275\003\361\261\275}@[;\366\252\336=Q\331R=Zr\r=\275*\034\275\001\225\t=\000\035R\275\027\250\250\275_\021\3408\257\265<\274\366c\211\2752\377\254\275\271\347\016\274.\r\252\275\023\031\212\275\013\007f\274\253\306\016=\210\325\2719\333\261\221\275I\000K\275\n\223#=\035v\345\274\030\025\200=\277\255\234=\177`\265\275\003=\313\273\265\344\217=\275\265\025\275\233\010Q=\235\276\310\275\001v\322:S\354\336\275 \333\206=\030X\330\275\357\'$\274\035\300\331\274B\223\304<\267\n\252<\351\231b\275\205\034\306\275}\022\371\274\200U\261\275\262\261\332\275\232\314\364\274\213X\004\275\027\233\307\275n,\200\273t\343L=\351\236\306=K\236N\275\326)\326=.\312\203=6\267>\275\370S\347;]\267\260=\203\352\255=\317\213\234\275\223\247\210\275\305i\265\275\014\343\262\275\363:\320=}.O\274:\345T=\tE\216\274CA\214<\305d\322\274\003\243f\2752\301\026\274\266!\231=\223\247\352\274\3037B\275\326\367\202=GA\261\275\265v^=\372W\252\275\244\246B\275S\342=\275\254t\223\275\213\245\251=\022\234\332\273\200\034\323\274\313\246\031=\013\221\034\274,tH\275\037\203\320\275\315\302\227=\304L\023\275\222=z=p\244\004=X\3128=\316+\\=\221\366\255;\313\324y<\300|\034=]\310\260=\255\306\266\275n\220:=1gl\274Y\000\222\275\252\207\255\275\364\201\205=\335\027\237\275\314\265\025\275\2254>=\336\335\240\275n\252\262\275\257\307\210\274\225\266\253=\347\320\301\274\003\022\244\275\004\316\227=\027\2122\275\330\365K=\372\326\272\275:\217\372</\372\021=\217*J=\"S\221;1\023\311\275\306\350\331<\307a\275=l\002w\274\265_\231<\363\027\223\275\347J\252=EO\251\273.\237\357<9\213\250=I*\230=8.\'\274\032N\250=\321\273J=\244\302\276=\214\034e=\022\323I=\\\253\271=\204L\207=\034A\334=0SH\275\316P\363;0\256\312\275y\202W\273\242>\202\274ME\334\2757\007\232\275\n\247\332=\'\363\262=\253\254\245;\177E\031\275o)\305\275\177\371\203\275\2408\226\275\227E\037\273\361/4\275P\321\222=K\277\n\275|\306\317=\307\213\330=\007b\200=\361-\037\274\332\023\214=\322a\370\274\370\277\252<\034ow=\000\311\221<\026O\234=\235V\253<\"\323\212\275\353\342R\275i\372\345<\261\276\334\275\034\311\331<\352\007:\274\341&\n\275\241E\312=\no\245=\210\032\313\275\223\251O=bs\343<\265\355\327=\031\361+\275\256\350\213=\251\277\036\275\367\204\271=\310\222 =\375\234\276=\262\200\307\275\323\376\217\274\021\r\032\275\035\303\302=\223o\305=\010\274\334\275\232\016\201=7!\340\274\320\223\310\274\347.\204=\276\247\231=\217Q\243= \351\213\274\345\255\'\275\025\226V=\217\344\200\275\213\353\006<\234\351^\275 \356J;\3010\t=Ak\247\275\267}\234\275{\262\242\275\361\357\312=\217\031\254\274\365<\201=\234\3557=\275\364\253=\023\177l\275\026\t\221\274\315A\272=\317\274\234<a\227\"\275-\322\312\274\345\017#\275\324\363\264\275\212\200\256\274\264\370\253\275\326\267\247\275_\000\3759\345\333\260\275;\004K\275\372Q\321\274\345\347\316\275#\002\304<\246*\241=\036\356\001\275\255\271F\275]\361\313=-mc=\023\004\200;\273\371\233=\331\343\210\2759\316R\275\034\302d<\362\030\234\275\3161\240=\375\325\330\275\252L\013\275\302\000\255=R\261\r\274\301\301\267=r]\025=\330\342\335\275\274X\316=\345\366d\275 Ve=\334\357\217\275yf\004;\363\020F=\307\224\250\274\000K\265\273\323\024c=\253h7\275\260\274(=\304\232\267\275\t\364*=u\226D\274\343~\227\274&\213T=\203&>\274\010,\274=*-\260\272\014\257^\275\317t3=\356\215\220:\337\262\\=\211\224\254=\273R\316=\246\350\247\275ZBF\274\017\007c\275\004\326\371<(\224v=\3373\216\275E\257#\275Pf8=\304\001\335\275\321\341\372\274\346r\330<2\256j=q\t\231\275\005\030\304<\243\203%=\277\021\245\275k[\224<\330J-\274\307p{=\335!4=6$\001\274\333C\246\275\221\310\"=@\370\302\275\345)r=~\006\355<\010|\004\275\004\010\250\275j\220\265=$4\337\275M\217\335\275\027\336\227=\257\034\246=\333\304\236\275\300_x=\232h\315\274\261u\314\274\224y\333<\353w\236=\003\242G\275o\003\025<\343Y>\275^\'\212=~\231\274\274\030\370\316\273\025K\253\275\030\032\311\275\255\235\302=\"\366\201=\364u\247=\013\rM=B\206\323=\336q]\274\024J\036\275\377^Z=\357\365\307=\343\025\263\275n\366\226\275\3152\237=\r\314\\=\276\264\021\275\227\314\022=\032\277\231=\035\344\314\275\005\221#==\245\254=\235,\246\275O\345V<\376\324{\275W\000B=;\260\322=\272\340\267=\237d\300\275@\361\224\275\373X&\275\236\236\263;\r\266\376\274\363\325{=\315\271J=\201H7\275\222\001W\275\325u\213=E\202\207\275<\247\216=\276\305W=\374\231\323=\370\333\305=,\223\240=\366\273\250\275\324\264n\274\023\220)<\320T\257\275\245\300\306=\354p\241\275<d}\275\217g\250=\316KK=\246\032\355\273\2117v\275\267L\320\273h\326\221\274\243(\024\275\222\274\032=\tw\232\275!(;<D\201\311\275\377\316\255\274\267\002\270\274I\206\211\275s\224K\275,\307-\275\273X\205<\2737\333\274\277V\275\275\352\010\233\275\311\354\215\275\n\336~;\r&\023\275\243)\253\275 \225\267=%?\260=\001\0036\275,\325\222\275\r\027\343\274\322z\'\275\251\327\306\274\003\353\250=\222{\323=1\316\"=\242\355{\275s\036\252=!\213\225=3<\313=mm\323=m\010\306\275\233\330\252\275\261P\374\271W\315H=\270k\033\274\231\213\213\273f\330l\275\004\246\274\2732\026\203=\r0\337=Q0\210\275\3235B\275\304\020{=m\372\255\2750\274\033\273\r\263\242\2752\334\357;\211\353Q\275w)\377<A>\261\274\260o\210\275\300v\';\034@\346\274\276\215)\275\006s:=m9]=\356\305\334\274r%\201=,\221y=\255\367\245=\202q\200\273\214\350\022;\221\243\250\275\360\024\312\272\320bO\2740\312\032<\367\313\253\275i\363G<\2429\317\275\"V\030\275\221\301F\272\005v\310=\303\312\204=\004\210\016;\337\037\020\275Y\212\235=\361t\314\275\302\276\240\275@Cn\274\235=J\275\201\320\325\2759\031\307\274\220\310f<\354\002\204=I\371!\274\335\222\217\275\364\010f\274g\312-=\373c\200\275fr\330=\301\217\251=\350E\233=/\334Q\275\353\314\365\274 V\234\275e\373\014=D\315\317\275\013dO\275\337 \202=\254\0073\275\n\027\335\275\023)\370;2\005\272\275\203\323\205<\246=\305=\350\223i=\243u\304<G\377|\275L)`\275\3558\306\275&<i=i\323-\275\324U\253=\302\027F\274\257\375\355\274\007\227\271=\257TB\275\036\n\201\2745|%\274\231\371\277=4q\275\275h\246\221=\322r\217=\253ts\275\336\237\241=Y\246\214=\327\217 \275\371\326\251=\3509\261=\362$M=\346o\362<\247\225b\275\3078\t=\225\277\304=hX\271=f\235A\275\3267\013\275\367M_\275\346i\322\274\374\273\213\275\246\272\250\275\306\t;;=\263\224=B\007 =\243\001U;=\257\340;Q\211?=\215>\260=\373\035\022=\201\r\316<\025M\245=\352\027\350\274\210\\\324=q\217W\275\253\222\206;^\024\233\274\006\330\206<t\265\013=\002\216\326=k\254\203=\352\225\262=\332\032\320\275q`\316\274q\"\036<\270\312\300<X\017\276\275\010\262\325=[U\237\275\213!6=\223\006\301;\342\021\307\275\246\211y\274\2208G=\027\306\321\275k\361\217\275\332\366\246=\350b\022=\321@j=\307?@=U\262\364\274\254:|\275\n{\301\275\350\327\244<\212\217\221\274\014+\035\2743u\325=\231\307\263<\357\273\223\274\013\332\235=\003$`\275W\211\256=V\370\210=o\014#<F\245\222\274\335\265e=\376M\n=W\331\365<|\242\271=\217\273\020\275pi|=\370\200\276=\305\206\014\274\223\271F\275\376\310\377<\302\017\240=\355\307x\275lx\236=\207B9<\230Z\351;iQq=\345]\252=\246\300\177\275\014\234\265<\236\026\270\275\226/&=4\223\232\275\331\232\207<\006L\247\275nk\001=\215\217\273\275\037\022~\275:L@=_\242\212=H\021\240\275n-\202=\336D\346\274\321\030\005\275\234\016\335=\340p\322\275\357\355\r=\206j\035\275I[\277\275\263\277\203\274\311\353\233\275\314\021\030<\202U=\275\361\227\223<\2459\313\275Gq[\275\373*\221\275\232\000x=C\271\267\275\204\372(=\212\344\331\275\270\342&\275\312\tU=\017\034\306=I\224\217=\002 V9\363\036\235=\316z\000=\232\247\316=k\300\240\273+\2014\274\256uk\274\207\350\326\275\343-\331=\024te\275c\204\320\275\234\204\274=\216\027p\275\362\315\226\275?\374\266=\212?\306=\236\233\263\275o\247\234< \241\312=\336\t>\274\032\323\262\275\222\003K\275 \007\261\275U\356`9\"\177\271\275\203W\200=D\204)\275G H=,\371\026=\235\036\245\274P\300\216<;\324\021\275qz\014\2753\304\204=\353\315c=\374\325x=\336P:\273\0261\216\274\227$g<Leq\275_\234\246\274}\001x\273\202\210\035\275\336\256\325=@\250e\275\363\216\277=d>\235\275]?\344\274q\352\227\275\326\307\225=\'\232\033\273\235\263\005<\302)\025=\354j\033\275&\356\252\275\220\217\302\275\267&\210\275Y\307\232=\2265\324\275\203w\222=a\275\240\275+\236(\275\277\031\333=\n\3201\275\251K\317\275h(_\272\271\311\243=\005\231\327\275\207\356\246\275O\202\327=\277^\313<CO\362<\247\350>=\266\365;\275\214\203\324\275\026\306\221=\023\2628\275\233D\305\275\302\322e=\2252z\275\320\333\263\274\303\325\257\275l\2235\275\341]\316\275/\202\301\275RY\357\2747W\313;\343\177V\275N$8\275\031\354\217\275\023\233\240\274\364\316\311\275\353\301\335=u\200\016\275\023>\357\274\244\225\202<\307\322\314=\341\006\240=\211=\315\275\026\004A=\206P\304=_A\300=.\004\261\275E\022H<\217\036\315\274)\265\322=\276\215d=\375\202\205=\207\021~<\343G\334<\030\270\322\275y\204\325\273\030\312\177\275\365H\252<~\376\010\275N\'\337\275)H\216\273N\3018\274m\322<<#@[=4\205;=\317\357\003\273\272\213R\273j\304b=\2205\324\275x\\\232\275dW\250<\344FP=\271\325\206=\261\027\300<\250\263{\275p4\221\275\2455e\275\265\325X;\376\266\277\275\237\333\247\274u\316\340<[\020\211\275\256\233\252<\376\235\213=\350\001a=\3578\257=i\366\225=\262v\266\274\355\213\272\275x\001\234\274fP\010=~\327\367<\367\337\235=\362{\255\274\334<\321<\205U\211\2735\356\300\275\365\024\326=\307\203\316\275\206\237\302\274\315\351\201=\027D\327\275\340u\272\275\274_\220\275\375\305\242\275h\344\324:X^\226\275\316G\022\275\376U\343<\025\206\037=Nw\263=\003d\206=Q,\221\275\350z\222\273\342\221\357\273\243\237\350<l\335\030<\247#]<,\355\214<\257\277\312\2755\226\225\275O\257,\275,\270a\274\205v\215\275\360\256\033\275\225V\205\274~\000v\275D#\266\274#kc\275<t\310\275\264<\232=\267\032\374\272\243\r\221=3,\365\274\250?R\275Z\007S=\221\337\317\275\345e\026<\257\345\256\275\327\021\205\275\274\232\377<\311\031e\275\027\362\315=\357\002\260=\247\234\300=qSH\275\304\260\217=Y\274\211=\304\267<=\302S\027\273\343\336\266\275\272\252v\275+\321\226=\033\230G\275\246S?=\017\251\320<\2268\311=KJ\277\275jo\216=4\315-\273W\231\036=&\303\260\273\275\007\271\275Q\372\263<\373\014\204=*2\270\274\316k\362<N\344\032\273\353\241\307=\216\266\272=\213\034\260=\016\331\261\275\006\0203\274\366p\237\275\227C\031=\242 \347<\220\035\263\274\260\025U=\361\301\037\275\273\021\027\275:\204\304=\212\010^=z\301\330<\226\2612=h\363\315<\316<\273\275w\203\250\275\340Y\345\274\027d\200\275\325\271\327\275o\253\321<\231\301\332=I\300\272\275\310\251.=)\\\242=\311\017\240\275\2456b=\206\333+=\264\345?<\227\356\201=\023\177\310=\235\355\325=\034\267\274=M\355h\275\016\024\366\274\325@\307=)y<\275\014r\214\275\201\337,\274z\037\372\274\027;t\275\207u\246=\230\271\235\275\373\n\233\272\211\265\215=\207\243\327=;od=\325b\034\275\034\377\225=\314\341n=\2532\002=\375E\207=\320H\351\274\306\352^\275\310R1\275\036\364\016=\225 \323=\325;\307=\361\021\303=\245[\315=\307\357\226<\377\254\314\275\375\370\232=\322\\\004=Z\322\255=?\026\202\275\312\202h\275\363.\220\275\302\302\254=\335\364N=\0065\217=\222\360_=p\204k\273S5X\275+?j\275\"bt;\007\344g=\206\030\333\275\204S\254\275{\205+\275\17721\275LyK=Nu9\274h\022\204=<\013Q=93\326=a\027\301=&\334\266<\265oJ=\003H\312\275\307\203\204\275\207\272\240<\355d\003=A\324\346;S\252\274=q\306T=mA3\275Q\310\007<7Y\251=\232lB=\032\351/\275\312\330q\275\3020{=\365\rQ\275R\016\000\2757\235==\t\"\031\275w\332w\275\357\367\317\275oS\354<\371\032j\275\032l*\275\tX\274=-\256\325<\355\033\274=?\327\327=\r\013\233=\305\266q\274x2\254\275\374\037/=\217\275\304<\321e\300=\362\350\303=V\010\336\275hH\366<>\324\247<\376\215\035\275\307\327\362;\314\220!\275\341\331\276=h2\335=J\274[\275\217\000\230=JGb=\206o\244=H4\002=\361RX\275U\375\203\271\260\234\207<\355\236\307\275\004\315\021=\210?\252\275x\200\001=\322u\334\274\n\243&\274tK\003<\267\307\201\275T\331\376<\326\360]\275\377\201\206\275\244\343\253\275\n\240\237=\311\211/\275\222q[\275\031\250\267=\264G\000<{\307\211=%\013==YI\016=:M,<\327i\241=\026\222\314=z\024\303\275\031\225Z\275y\"0=\233\312\003\274\361\324\240<\275\353\242=\3732\244\275!\234\274\2755\305\277=Wo\217\275c\346\304=+E\267<!\242\305\275H,r\275\270\347\010\274u!==\341\344\336=i-\264\275f\242\257\275\352l==9z9=\310\366\205<\177\370\017\275q\304\277\274:\322\327=\303l\234\274\371\372\221\275\316\274\223=~\264\335=\312\036\253<%H\006=\273\314\315\275\326\266\325\272<n\243\274\017aK\275d\321\271=\2216U\274\210%\260=oj\250\273s\263\306<V\262\240\275\376H\206<\363&{\275\237w\232=D(P=\177\0368\274\373\212e\274Vo\206=\034my\275\204L\221=\006\272\370\274%\317\336\275\267\025\325\275<Z(<\2057\220\275\335&\264<m8\316\275q{\312=l\003\177\275\373\345\254\275\034M\247=S\200\315\274h\270\231\274\226\307\211\275\271lS\275\343\264W=\311Q\251\275\270\305\224=V\004\253={T\215=\226W\215=]\323\306\275\320)\'\275%d\212=mJ\224<\206\275u\275\250g\302<\032\325\242\274\000rX\275\242g\221=%\274p\2742t\271\274\200v:=\273\204\264\275H\221\272=m\205\220=\201\001\217\275\224\270`=\241\r\272\275\020\215\332=#\344q\274\304\ry=\212M)\275\230\355\302=\016K`\275\303M\220<G\234\323;A\237\323\275\233\315==\223\372m=\223\301\277=q\335\266\274\373=v\275\264\336\316<H\223\205=Q$\210=\270t\200\275}m2=\236\207M\274\220[\314\275yS\262\275\256\317\324\274V\200\256=\331\373\265\275\313\302\314\275\256\333\201\2752E\315=\r\2400=*\020\206=\270\364\257=\020n\222\275u\214\263\274\217\177\255\275\2725\226\275\323\373/=o\274\005\275\034m\203=\3352\262=E\332\241=\370\212a\275\331\225\007=\337\204\227\275\353.\337=,\r\035=1dU=u\264R<4\331.\274\303\271\211\274\002\371\261\275a\372V\274>P\215=C\251\312\275\311\3565\275\340t\323\275\027_\026\274>S\243\275\355\273m\275\023\202\224\275\357!\227=\3273\200<\321\270J=\215\302\237\275m\022\235\275@\210;\275\010\\\245=\225\214\260\275W\314\307\275\321\225n=\220=[\275\206\244Q=4\246\314\275\260J\310=UC\214\275\025 \334\275q\203b\275\346\252\257<\250\367\214=\000-\235\275~\034\325<r\034\241<\277\3345=>\314\212=qb\274\274#u\235\274\213Q\230=\021!Q\273\330}W\2742\354\255==\306\210\275\303b\030\275m\002\326\275\270\033\240=\253e]\275\306\220\371<(\255\276\275\212=\243=97d\2750\214\327=\211k\362:[\201\213\275}\t\220<Y\321\263\275\221M\276\274\225?\351<k\333\261\275\370\270I\275\332\341\330=$\025j\275\264I\310;\245\362\240<2\340\265\275\270\243C=;\250(=\371\320\333=UX\t\275\rx\021\2756[\005=!\330\235=};$\274\210\213\t\274\007\307\227\275Q\210\217<`\010\254\275~\021\213\273\343s\251\275B?\263=e\234\013;J\205\330\275=P\206\275\025\002\330<\346\233\201\274\271$\026=\017kT=\201\016\334<\362\217\301\274\211\264\205\275]\232\261=\222\330\236\275\306\007c=n\247\241=\241E\276=\335\230\021=qv\201\274\35464=Z\203q=\310\020Y=%\277K=\247?\221<\271\302\205;\330QW=T\001~<\334\333\356<\365\034\021<y{\217\275\350\177\265\274\036\372\336\272\203\322N\275FD\277=\3762\220\275\367\202\244=\376CC=\231\031B=M\330\357;$=0=g\305\247\272\373\014j<xb\207\275\021\267N\275o\331\211<|$\222=\022\311\235\275\352\276\230\275I=\320<\341#\227\275\345\362\013<D\317\257<\3163)\275c\325H<\320\274\315\275\307N\216=\227b\253\275\227f:\274\227E\315=\t\261\315\275\236\377\345<\204\225\245\274vv+=m\002\217\275\301\301/\275\335\206y<\275\235\311\275;\217\272\275\361\224\266=\244\273\331=\031\331\242\275\2421\276\273\246%^=z?,=\002\252:=\305G\232=\275\202#=A\310K=\177~G\275\325\241L=\330z\313=D\274\332\275h}\207\275,p;\275J\034\250=\2101\346\274\211p\020=l^\346\2744\214\333=\354\253\t=\327\2018=\247\3060<\374\r\217=\240?\227=\022\001\226;w\362\035=\246\225t<\033\373\257\275\230\276.\275)\220\323=2\207\220\275\213\233\264\275<e\236\275_\0074<mV*<\337\002\022=E\272.\275\033\035\336\275\261_\345<\036\365\340<\006`\304=\315h\230<\272\010\247=\226N\261;\364\321(\274\320F\230=\261KA;\330\260\235<\344f\r=\342\014\227\275\266:\332<^\222\203\274\347\215\226=\267\326\213\275\377\313\247=\3056\312\2753;\317=OU\246=\244f\201=\205\377\246\275\221\344\331\275\3745\355\274\023\207\013\275\207\315\222=\\\256\221<,\371\320=c!\203=S\377~<.<!\275)\357\215=}\360A;\231>\313=\013Y\223\275=\242\320=X\377\334=o1m\275^r\\=A\353\017=\t\224q:X\266(\275\r\'\320=k0\034\2751\251\221\275\234\214\276=Xy\277\275\253r2\275bB\305\273\340\260\304\274\177t\002=\355\372-=\022\037\202=\0361[\273\'>\315<($\323\275\225R\306\275J[\244\275\335^\326=\014\376\004\274\217HA\275\3274\330=@g\241\275\220\272\254=\035\030\324\274=\032\203=\270\303\270\274\345\030\013\275O*\331\272g\314V:\237\316\246=\r\276\221=1D\245\275\234\303\000\2740B~\275T\303e\270`\371g\275\310\002\337\275\034%\227=\311*\277\275\240>\301\275W\025A\275\215\214\317\275\236|\214=\205\342\257=^\243\350;\313\267\275\275()g\275v\324\243=\315M\021\275NV\035=?\335\311;\227m\241=x\007\276<\366\270y\273_v\227\275\"\300\006\275\314M\232\275!\355\204<\354Y\366<m\325\256<\361\204\324=+\356T\275\340\232y=S\303A\275\006C&\275\231\367f\274\252h\277\275x\0251=\366\257\264\275c\306\240\275\023\335\302\275U\255\260\275\t\017\324=\274\037\360:\203w\271\274\346\334\013\274\013zI=.\2174=[|\226\275\250\245\265\275Y]S\2750\374^\275\211\337\234=\242\n\t\274E\365\\=\351\337\215=\250\363\303\275\037\324\323=\346\224\246=@~\205\274,\266\'\275M\301\267\274\305%\263=~\270\225=\365q=\275\343(\237\275!\205\203\275\353\270\260=\024s@=9\350(;\321x\247\275w\372u\275\375\346t\275ME\266\275O\226\377\274\001\363%=\315\253\330\274\236[t\275k\024\333=\021\234\201=\036\226\217<S\2634\274\333\276;\274m\035\200=\347c\256=\207r2\275q\373\226\275z\327\270=\004\315\022=>\020\230=\360\300\321\275\010\0275=\304\027\237=/\234\221\275\024\363\226\275\324xo<G\270\224\275C\302\277=s`t\275\376\350\262<;\370\273=6\177\262<>\367\303=A?\243=W\332\350<\340\206\310=\315{\\\275\307\013\023=S\257T=\322\rz=CH\231;aB\264\275\005\265\211\275 mu\274\321Z\343\274\325\234q\2758%\225=\021\326\034\275\"\315\003\275\261\273X\275\230cv\275\177\022\331\274\374\344\244\274\36743;%\235\260\275\362\034\301\275\341\364)=2\030\321=\216O\246\275\035V\213\275\221\216\310<\\&\327=\367\343Q<\031\264\324=\202\236\317\275\\\201\231=\002\243\270=p\356l\275\212\200\313=Y\274&=\363\037l\275\256\322\312\270l\342\322=\206$@=\030\254\330\275:\r\346\273\222\2356\275P\214\264;\022\0047=\021\333\'=@h\000=\t\320g<\260O\273=\265\272\230;`\377*\275\275\251I=\337j\327=PCk\273S\272\017\275b-{=\376@\261\275rGV=\374\311\206=\203F\336=(\355L\275\276\031!\275\007\277M\275\313e\311<\0377!<\320\034\037\275\333\277{\275\004?d\275\311\336\232=#\227\325\275G\'r<\321\305\230=[\332l\275\322\272\261=z\366\214\275\266\332\3479\2448\263\274t\021<\2757\327\244=\3750\024\2753>\r<\\\260\255\275W$j\275\022\377M=>\324\211\275\244\343\336\275\026\307\257\274`J\211<\276\216\271=\334\342\256=\217)8\275\320\3723\275zb\227\274@\200d\275V\226\267<\233+\213\274\274\352\360\274\003@\260<\361\323\224=|\034\242\274w\'\352<\240\371\223\274\345\236\250=\251+\310=\272\330\005=\251\217l:\220\324\230\275s\207b=\"\300b\275\213\276\257=@\0035<|I_=gOw;\322U\201\2753r\261\275\001d\302\275\217`J=3T\241\275\342P\037\274vO\237=\0001\364\273\344<\206\275\306\223\314\275\'\017\245\275Dl\202=F\215\330\275h#\333\274<\204\242\275p\330\207=\312\210$;\211\306\265=\206\343/\275(:=<\3527D=\366\310\263\275\354\001\'\275\267\226\270\275\374R\261=au <\306\037\362\274g\367\023=\330R\t<p\363\224\273*\357\007\275\314m\204=\251\271\251\275;0\013<\022\355\242=\225y/\275\317:\232=g|\355;I5\022<\212w\335\275{e\230\275\274\223\307\275\370r\243=bq\224=\316;\225\273\337?8=uj_<W;\203=\000\014\266<\030V\301\275mH\r=Vg0\275\030\312E=-#\337;\026\210{\275\243\203\271=N\345A\275\334#\276\275_\206\205=\202\366\276\275Y\313I=\021\336\021<\r0\310\275\tA;\275M\352\375<\036\276\310\275m\241g<\030\177\273\273 \327\246\275\"\216\021=I\322\317=3,H=\342\353z=\315I\277=\340<o<w\0066=\016\252\266=\243\237\277=\252\224\021\274\244,\265\275\006T\214\273\310\271\001=\203\265\320;\346\013\262\275\216\n\267\275\272\363\021<~\307\333<\303b\020:B\271\235\275\2652\263\274\220\2003\274\360\320\202<\023A\303=\251\341C\275\200\325\321=,EC;06H\275=\204\240\275\003l\240\275L)\330\275K\207,=\302$\256\274\004I\345<\263>\313=\237\337\225=\035\010\256\274_\253l=\242\220\335<\276\t2\275eG\362<Bu\247\274\3042\221\274l\234\276\275\304\2565=f\321\252\275\262\014\226=\216\024\311=I\212\'\274Z,F\2755-\310=\316\214\265=\350\266\265\275\360\227\207\2747j\261=\242J\211\275\211\356\032=b&\250\275\376:\201=\266\300\335<\277q\241;\n\001\257\275\3379\245<\205\3168=x\t/=\212\347==&tH\275PH\'\275\034\315\236\275\317\234\266\275\255$\232=\013\301\251\275\027\023X\275\3432%\275\033\303\203\275\355\025\270\275\340\356H=.(\301\275\331\255r\275\2161\256=\004\364\277\271\341r\246=i\017\240\275\206\031n\275=\314\237\275\005\256\261\275\347p\310\275\352bA\275\0079\351<\250\351\234=\006\021r\275uqR=\205\327\317\274K\036\335=\022\206q\274\013\331\006:9B\330\275\026\310\313=\215\334\200=\004(0\275\213}I\275d\336\231=\306\314\311;*E\301<\357\307\000<D\330\031=\221\027\265<\311K\304=\346\366\263\274\245C\005\275\370i\303\275\"\353\370\274\253\331(=\260~\236\275\323\237\202\275\273\357\302=\343\367S\274m\211\225=t\227\264=\262\026\004<\346\000q\275\322\266\013=\374^4<\210/\267=L\273G\274\256\250\253=#\230&=\271\266\255\275\252\343!\275*5\207\275g\317\203=\246\245#=<\376\211\275;\233\363<\014c\323\275&\251>=\341\200\271=kO\304\275\013\227N=Q\233\200<\235\035_\2758\270\350\274\225\223C\274ZA\207=\312Z\271=\016gz\275 \371[=c\214\267<\001[\220=\330j\215\275;)\241=\231\001\312\274Ns\262\273-\006\264<\364Z\214=\3649x\275\323\224\322\275\263y\242\275/\363C=\202\243)=\327\233\255\275\306<\244=\354\330K\273$m)=\233\243\257=`\221%\274\2338\231\274\273\000\213\274\367W\224\275\236\335\276=\244\316\265\275\314 \001=?\'\265\275\2415\207\275ie/=\014n\202=\254\321\263\275)\272\260=\253X\\=\317\322\017\275\307p\230=\246\312\305=\371\035\3459W\277\244\275d\210\256\275\2507\275=9t/\275\231\312\023\275\376s\356<\344\216!\274\252b\252<\370U\206\275J\244~\274\213\333\270=\320\254\232<\337}\324\275qF\214\2750N\371<3\311\036\275\013\177\256=>_\344<~p\224=Ct\317=\307W<=\276F\306=\360\342n=\271J\272\275I\342\252=\345(s\2753[\216;\251.j<_\2715\275\221\032\337\274g\366\266\274\313\302\010\275\'q+=\251:[\274\023\3043\275\247\340\010=W(\313=(\377\247=\200\2675\275D0\374<k\212\226\275\246\314\217\275\315\362\017\275B\300\257\275T\316\243\275\240\2435<\366\331\266\272K,\233\275\333:\260=\004\211\321=z\023\320\275\003\007\245\275_\014\331\275\200\341M=\362`\202=\375\360C=a\241\324\275T\341\311=\303/\321\275?<\260\274\t\264\036\275\226\341L=.i&\275a\243\'\275\251)=<7mG=\331Y\365<\307\n\226=\315\202\375<Fn\034\275qU\220\275V\321\207=_\3474\275\177\036\257\275M\245E\275\244\330\240=\231_\255\275\026\265\345<\356\236m\274\376vh=\234\317;=_\036\362\274\325\265\223\275\263\201^=2\254\253\275V0\262=\250\367\275=2\217\306\275\276f~\275|q\034=\3119\213=y\022\304<\255\017\315=*\274\240\275\002\004\032\275\021%\002=r\345\027\274>\201\272<4\321\317=\265=\366:0cJ\275\333s\235\275\324\204\364\274\014\243\266<\331\265\302\275\353\025\337\275\326S\252=\211\205C=O\246!=<\306u\275\224\367j=\250\036k\275\3071\224\275\225\335\231\275\347\375\271\275\"B#\275\320d\215=\025TY\275\313\024\304\272x\3059\275Z\230\244=\247\252B=>2\245\275\334\370\314=\265#\270=\321\226\254=\316K\325=X\030\220\275\030\377\223;\230\257\232\274\303\343\211\275\204\033\220\275)U\330\274\360\001\261\275\335\355\027\275\265\256\206\274wO\244=\233\254\327\2754\227B=\331\362#;\230q\223\275\006\375\001=\320\261\377<?\034\202\275\007\207\014<\032\310u\274\324\316\277\274\035\236\264\273I\343\267=$3\323\274)\243!<\321\255\037\275\233\316\341<\356\'\320=\303\307\312\275\326\266J<\376\207\225=\341\312\006\275\210\016r=\313\216\360\272\016\300\235;\310\367q<\203\354\211=\215\330\223=\nf\257\274\374\347\216=fs\366\274\016\003N= r\206\274\314K\200=k\231\312\275\332\276\225\275\370\353L\275\336l\247=e\317\210\275\225\232\322\275\231w\313\273{\360\000=\032\017\266=F*?=\031p\233=\024\024\260<$\326\236\273#z\204=\006U\223=T\322.\275\205\025\337=\275:\332\275\025\001\235\271\322\037\254=\263=M\274\230d\374\274Z\237\275\273\335-\227=\364\370\225=@\253f=r\014[\275:\200\210=>\374\340\274\013\257\244\274`U\"\275\3719\311\275\350\224\333\274\351=q\275P\260D\273\222R\315\275\3200\255\274>v\345\274*\257\344\274\177^K;\301\366\214\275\357\312\204\2754\213{=\261\'7\274\243\204N=\010\243\242=]\r\215=_\\\311\275\02217=*\236`=\030\351\030=\336\306\232\274\037\342\263=e\252\300=B\314\317=r\016\212\275\2457\205=Y:\'\275r\3740=6\006\262<\254>Y=SVu\275s\326\232=\255*\335\275\220\217\302=\354<\251\275\033\242&=Az\274\275c\377\266\275\201n\320\275\026\342\225=\313O\331=l\342\023\274m\010\206=\236\237\025\275\375\276D\274\256[\004\275\'L\264=D\r\t\275\007:I\274KM\002=Fg\016\275\317\3126\274\265\236\254\275s\003t\274\327]\"=\253<\227=&4\023\275\03681=\211\257y\275q }<\334\013\031\275i\017\231=8\263R=\345\257U\275R\374\230=\232l\272\275vw\234\275\361\221\n=\320\244\313=\006\035\255\274y\206L<\026b\375<ieE=\344\215F=vtw\275Z0\236;\276\261\217=\254\231\202\275%\2757\275\331Qt=\243\021\350<-W\256\274(g\312=\022\354\246=jS\254=DM\236\275\177\000j\275\306r\204=/L\345\273\313=\252\275 \326\305\275\2000\032=\205#\264\273&\275\300=\'\264\256\275@\204\326\274\247\353\001\275\326\253\303=\236\315\343\274\236\037\321\275p\214x<0\267\262\275\3361\030\275_\366\310\275\031\3019=\023\247\331=\271\204\231=\265Z\251=\326{\336=kJ6=\256=\322=\375\035\244\275G\272\306\275\n\032\216=G\037\205\275J\227\010=o\246V\273&z\313\275\267\240z<\303#\034\275\357\2269=>6\346<\253C\203\275\355\0004=!\250a=\347l7\275\033\n\203\275\255\213<<\261\226\312\275\211\2234\275<\027\257=\223\265p=\375\270\\\274\311B\226<\245i9=\037\n\260\275{\350\323=\355\"\242\275\275~\027=\317\033\330=\332\016\267=\0214\263\275+\374\306=\304Y)=\233N\200\275\021\313e\273\203\262\217\275\"\035)<\005\343\300\275#u\036\275\211=\327\275i\366\335\275\363\016Q<mq\217\275\326\007O\274yRP\275\231\021\022=H\362l<\t\322\357\274E\301\244\275\214\307\305\275\336\317\372<\240\222\020\275]\236\277\275\314\325+=\2562\335=\214A\276;\016\272\252\275z>c<\026K\244=\002+\254=\007\032\240=!\224x=H\022\320=\3408R=\275J\252\275\340\275\020= \375\r=\244\023\377:IX\021\275\024\320\"=\324\251\264\275\216u\007\275\376<B<B\237\366<\215N\337<T\274\274\275\227\235Y;\231y\226=)\024\276=\276\270\267=3\367\004\275\244zm=g*\247=\022-\244=G%\257<\326\317\212\275\227\230\270\275Z\233\224\2751\373@\275\347\034?=\337\007\300<\'\\\301\274\234\025V\275\017\337\301\275\330\257\231\274\236\325\200;#\256\316\275\3060\301\275\325\030\361\274\277\371\224=r\031\317=\313\201\312=\233\366\303=\246-\265\274\222\337\022\273\3665\251\275~\250\230\275\227\351\226\275ST\374\274Y\374\"\275\023\3635\275\262_\007\274_b\204\275\017\334\252=\302\323\223\275\005\010\277\275eU6=\177;\323\275\344\033*\273\253g\271\275\257\377)\275\351C\261=\022R\224\274+&\206\275go\230=\332c\330<i\322\262\275\250\351\244\275\342\300\n=C\003\211=\006\205\366\271\214\226\223=v\376\035<uJ\373<\374\036\210=\275\0229\274F\257\333\272\344\316\261\275\312\201\327\275Y@\212=Q\316@\275\\\037\324<\231v\025\275\207\207\235\274\364#\313\275?Rq;]\353\004=\365\330\201\275\244 \204;e\263\275\274\237\364\244=\257\226\214<8D\356\274\321\3126\275s\013G\272\231\002\267=\361\017L\275q\273R\275q\231\253=\376\341\253=\2638\217\275#\202\204=\306=N=\025\035\r\275\372\3063=_\342f\275\376n\017\275\260\013H\275\n\345\232\275\034\247A=\345\315\277=\031D\r\275\271\355L\275*.\266=\255P\203=\3343\227=1\240\305\274\251\243\346<Bky\275\261\237\300\275Aa\324=\246\304\301=\342y\343;\350i\321=Ad\213\275]t\266=l\300\326==N;\272\n2\255<\010j\334=\345i\252=\334MB\275<0\324=\t\347\177\275\374-\205=)U2=\327\003\257\275\370\237\013\273\020iK\275#`E=A\262\301\275\035 \332\274\370m\275=\202L\227\275\\2\230<!\273V=\3451\307\274\363\321\242<\330\"\334=Dg\320\275\230\003\317\275\365m\276\271\025\230u=\355`\211\275Y\000\034=t#\260<\352\270\316\275\021\247\200=\244\312l=$\336\376<\223\315\022<X\355\211=\210\363\274\275k)\261<\315\017\261\275\010V>< w\240\275u-\330\275gb\324\275*\237v=\220\202\274=\026\323\021<\216\337W\275\237E\260;A\177\210\275\374HW=\304P\331\275&Ap\273\365\3303<\316;\220\275\343\001E=\374\374\233=\'\300\032\275\272\271\307=\031\t\334<Q\347\273\275\225\252\261\275\036\215\262=m\330)=\355`\306=\313\253\307\274e\017\303=\n\266\313\275\264x\351\2749m\243\275\034&\t=\177\203\277\2747Y\212;3\004\017=\333\202I\275\232h\036\275\001\324\335\275\223\037\257\275\326\320d=\271\017\250\275\2042V\273\202a\025=\264-\306;#Uf=\021\301\t=\307GC=SC\232\275\341\344\234=T\350\300\275\227\006^<\321K\210\273\336\357\274\275p~\000<\"\034\244\275\203\241\207\2750nB=|\305\237\275\333Z\332\273u\221\231=JQ\217=Yc\252\275QuR\275\347@\031<h\323\213\275W\242\212=iVK\274\273\232\322=o\321\261=M\332\267\275\370\036#\275\356\374|\274\007\253\315\275\017-\236=\344H\351\274\200U\227=e0\030\275\252\301\033\275\226D\377<.\203\215\275\333\207\021=\342\353\251\273y\277\207<ja\300\275+\177Z\2757\214\013\275\007\226\221\275\2240h=\274y\316\2751\321a\275\375?\215\275em\211=\374|\315=\362\034\340<\003\373J=B\242\027=\330T\253;RI\330=\346\344[;\340\223\032\275\n\320\273=\357\311\301\272\354\371\254\275:R\274\274\337H:\275S2\\\274n\321\267\275\341\004\240\274h\234\314=\314S2=\003\n\251\275\346\323\021=/22\275uX\'=9r\300\275hL\262=\3439G=\364\216O\275\264t\000=\333\310\335\275\2064\261=\327\241U=\316\362\327=\007\r(\273\234\362H\274\225\350\022=u8\306=\210\207$=\263\376\305=e\3241\274\r}\350\274\344\031A=\216\226\232\275\240\017-=\234a\304\275 \371\335\275%\201\264\275\360t\251<\0016Y<\2202\261=\345\376\275\2750\2361=\236\343\260\275\210]\272<\264h\n=b\316\204\274\233:\246=\375\254\327\275,!8=1\366\230\275\031\017\236;\263%\331\275E\320E<|\027\'\275\270\342\201\2754\225+=\343f\230\275\376k\301=\313\314\255<\277`\013;\266\277\233=\215\035\237=\3247\240\275\247r\255=,?9\274v\246\210\275A\177\234=EC\367\274\036\000\336=h\247\226<-\226F\275\333n\"=\304\261\233\274\341\341x\273\2667=\275\320qz=n\376W=\324\321\035<w\200\305<\370.\254\274Lr\325\275k6\227;r\324\020=+\315\265=\0214t\275\226z\326\275\343H\271\275\010-\261=\345?\302=\317\360b=\314\277\317\275\377\324z=t\301\240=\362V3=\230O9\275\"\357\303\274\002\025\363\274\212\233\005=[\203\026=6pY<\253\221v\275\315\355u\275\003\354\204=W\352\224=\202\276B;\312J\245=n\337\256\275Z\257\334=\251\206j\274wb\303\275\305\206\333\275\n\247\t\275\333iT\274\310\0066=\334\373\2149m\000\352\274\352#[=IE\272\275pwZ<\243\3374\275\333\221\007=\374[\233=\'\256\033=\374\270{\275E\235\300=\311\264u=\260\353\\9\335+\034=4t\"=9}R\275JH\262=~\213\000\275(\337\214=qCC\275\2762\202\275\031\017\327=\220\375\300\273\300w\301\2755W\366\274\252G\220=\235\017\031\275(\353n=\243\344\265= qp\275\017\312\215=\200\014\275<`\257R\275_\250\265\275U\271\014<\372\013\247\275=\267\026=d\364\267\275\244\253\016=\363\206\021\275\001S\320\275\262\037\302=K\313\232=\'\356v=%\316\245\275\276\257\306=Ex\255=t\215\334=q\220\253=\305\263\234=V\302\002=\tM\253=\t\035\262\275\210(\215\275\000\222b\275\334Z\017;\272\n\262\275d\306\003\275\346\222V<\215{\022=F\013\342\273\207Ay=\233j\314= \370v=\334j\302\275\262%\307\275j\353#=G\352\246\275*\"\246\275\031\353\300\274,KT=#lM\275Q\024\303=\017\322\353\274\267\323\263\275r\017\2279\260#\254<\202\233R\275\006\354@=.\327\r=?\027Z<\266\034P=\370\035\232\274x\215e\275\356/|<\346\016\304\275\317\270\024\275\305\243\030:BE\301<%\374\333=\377\260\243:\220\277\314\275\014\363\r\275\255\233\331=d\033\220\275\251\370\037=[]W\275||h<:\2747;\334L\034\275\023-\n=\207\305\026<\006\353\225\275\230\341y=r\370\255=\267\213\003;\253\255\360:;\033\213=\211r3\274\"\254{=\324\006\322= \035\337\275\343\204\332\274H\246\226\275\\{\274=&G&\274K\325l=4\251M=\202\347\300\275\206\023\255=\210\221!=T\355_=\261\355\212=Lk\226\275\\\027\240<\017\320Z\275eIZ=\3070\263\275{\366\265=\300>\214\275\207\316\036\274\336E\027\275\215b\327<\376\322\'\275\312\016\311=e\334\230\275\272V\214<\204<L=\251\'r\275k\034\231\275H\322\257\274\225\004f\274\312/\251<`U\274<\n\343B=2\343\210\275\023N\215=3\226\260=\014\301\301=)\020\230=*\330\200<w4\001\274\276\361\310\273\213\304E\275{;\261=\217\203\251\274\264\371\200\2742\356\305\274\271\367V\275A\356\327\275-S\277=\313\246:\275\232\001\223=_8J\274\201\007^=R\300@<O\363\'\275\332m\207\275\315\023j\275jT`<\341\037\325\274\027\320\344\274\262\251\305\275F\331\241<\206\3129\275J^\215\275\327\334C\275\2561\232\274$&\316\274\221\333\232\275\355\372\272;I\311#=V$\275=\273\014G=\033\024\260=l\260}\275{\213\203=; \311\275\301\276N=\\\300j\275}\226\231\275[\020i\275D\262\323\275\016\260\006=\3404\272=\036\301o<r\263\\\275n)\276<B\010\241\275S\356\246=\205\213\371<\313\033i\275s\327\272=\207M\360<\013\304\226=p\004\200\274!\036\344<\270\213\200=m\000i<\341\306\326<\3341\314\275}\267S=\257B\313<e\335-<\nI+\274\024_\023<I\3563\275\323\3441\275 0\273\274B\267\305\275\271\226n\275\362\276\257\275\3138\260=p\310\202=\212\245\356\274R+\222=\331\361\'\275\003\310\321\274\0101\\=\266\370U\274 \031O=\350\343\024\274)\234_\275\201\302G<\352st;k_\303;W\305\333=\211\361\211<\304\300\322\275\230\357\201;jy\220\274\227S\354<\235Q:\275\331\326\204=\275d\225\275\333\350\275\271d\027\247\275!n\251=S&\300<$\273\007\275\320Vb\275\377\262N=\025ym=\003}j=5\007\333\275\013_\213<\264\203\252=\264e/<j\273\266=\254\351\002=Q>\002\275\356W\002<\220\036\246\274\364#\031\275\3143v\275|\260h\275b\361\202\274\373\212\225=Yi%;d_\261\275\350\'\324\275\270\005\214=6F\360\274R8\212;\346B\005=/E;\275\177\302,<M6\242=\370\303\363\274\327>\314\275\246\010\270=\226\224Y=\212\327\274=\263\226\236=\215YR\274$\265M<:3\226\275\030\370\215\274&\020\213\275\207-\203\275\003u\177<X\"\300\275\236\317\310\275\330\241\260\275\np\271\274]x\272\275D\ra\273==6=\212\036J\275\245\001\305=l\000\265\275\231\312\272:?\362\236\275`\023O<s\247e\275\223\314\314\275\332d\243\275\311H\221\275\017\324\203\275\233\226(\275\0051q=,\223L=\202\273n\275,?\260=\031:\236<\261\253\312:\301F\306=\355\352\301;\026\316\256\275cN\232\275a!\325=U2\231\275-\303L=\324n\260\275k\256\251=M\363Q\275?\207\335\275\326V\370\274\010\361Q=\231\257\'=\346\216\036=q@\200\275p\177N\272\257v\225<8\327};\025\227\332<6\337\312\275\317\250\326<\205\375\240\275g\265\273\274\251X\241=\247y\324\275\332iZ<r8\207:\264\024\230=)\247\272\275\250p\313:\210`\346;W\220\026\275\342\336\037<#W\241\274\006\201\203\275\014\207\025\275\345\204C=N\333\240\275b\224\001\274\2340\317\275d.\252\275\343\303\243=\335\177Y\275=\322\276\275\260 N<\305u\233=\271\301\314=\302\247\037\275jr\336\275\215Q\304\275\266\204\016=\246\251\224\274\243\265\214\275\244\206P\275[S\350\274\316/\271=}\034\217\275fS\250\274\244\356\213=1\036\035\275\342TL\273\337\032\002\275\"k\340;\376\016\230=\254\000\307=\r\257>\275\020T\247<\003\236I\275J\336\014\275\223j\317\275\255\\\004=!u\274=\322\302\214;{;\212=\365@*=\233=\206=\177\340\373</\224\326<a\355\255=j-\235\275\302,\000=p\013;\274\241\330*\272\320\021\000\274\260\311\022\275\352\316\323\275\241&C\275\364\005\234\275T\250K=\305[\206\275\215\300Y\275\241J\252=c\035?\275E^\270=%\246\230\274\217\316\225\2757$\316=o\273;=\002U\327\2758sa=\203@\320={\023\236=\022\213\247\273\3269\321<.\277\223=V\251\203<\213\253\242=\031\211\002=\021\270\010=\222\377R=\037\355\322\274\354\362\005\274\303W\002;\253\362\230=\267\252\013\275\272\221\377\274\205\314\312\274\343\020\325\274\017}\247\275/8X\275\231d\037;\003\376\232=\337J\221=\2735\020\273\375\253\315=\357\335\343<9\205O=\276/\023\275(\026\232\275\245L\206\275N\302\213\275\000\352\247\274\3243\275=;\200T=*\2321=\020\320\253=;\325\211\274\336K\214=\337\305\272=\277{\216\275\267*7;\363V\231\274\362/&\275\033\202\023\275mU\247\2754\246m=\366\356O=bO%=\255\350\207\2743\267\235\275\361\2406<5K|=\207\\t\275{^}=\035m\240\275\315\272\244\275\372 \201\274\2022\306=ce\320<{\245_\275\375\r\264\275|-\251<z\177\322<\022\250}\275\270\031\305\275*\257\\:\n(\315=\026\214r=\363\000\332\275L`\031\275\234#\376<\204N\330=\013SO=\317\302\224\275\303\361\347<\341>\212=\202b\026=u\"\324\275\014P\301<\243,\232=\320\312\320<\235\310\245\275\350\237\036=18\322\275 \3176<\233\003\303=\256\010\"=\225hl\275LS\005\274[-\326\274\226Jg<\tk\274\275D\365u\275\2114\220=0\354\371\273\243\336><v\r\235=\n$\336\2747`\317=\243\344G=\356\303\'\275\375!\202=!\345\313\275\350\030\323\275\206-4=\276\366\312\275\374\'\023\275\345\202v=T\271n\275\006\276\264<\177!t\275\367\035H=o\254\\<\250s\256\274\354\007X<a\022\214=\334D\265\275\261\023\326<1\300\210=j\200\034\275<\200s;\200\364\202\275\307\213\303\275\026\250\337;\336\311C=\014\231%<\264x\305\275\013\372\236\275\reb\274\265\204\253\274T\030\314=\\\212\312\275E\262w\275*\002\206\274\002\352\005\274\'\345\320\275\005\253\320=\006C\336<A\252\241\2759\3357<B\367\245\275\277\304\023\275\316\303\343<\366kr=\2750>\275\030\022\271\275\010Y\241\274\225\ty\275i\366\241\2750\215\202:\300\351\205=yH\254<\271\313\221\2756\226\236\2740\377\215\275\002\322\240=\366z+=\227u\211\275*\002\255\275\270Q\207\275\267h\324=\320\311\321=z\301\3577\"h\260\275\277\007\010\275\356\257\331\275\236\022\303=\223S\266\275\324\257\370\2742\032>=D\372\206=;\026\013=\006s\370;\203\210\325<\321O\177\275\245\230\213<?D\236=\320\345.=Q\334\352<\372\035\247<\"\224\317\275\0101\266=n|\262\275$\376x\275\313\306\206\274\247\376\251<43{\275\301_M\275@\264\332<\311\026\232=\316\311\314=\247\212)\274\341\370\034\275\315\223\266\275\366\344\235=z\245\227\275\276o\241=[\276\363<\321\217\335<\0369\276<\321Fx=WK\246=\006\256\035\275\010U\302=\203\004r=\362%\351\274\316z2\275\216\351\310\275k\342&\275\275\225^\274E\315T=\321\273\223\274\213\337k=\223\254\250<\177}\247\274\2330\036\275F\326\177\275\372\216\313=\305\274\362\274\2754\t\273\037\257\327=|Q\232\275\224}\227\275\024\335\322=\311\302\'=b\314\264\275\311i\237=\234M\300\275\276\247\333<`\022\271\275u\2261<J\034\311=\032N\225;\374\027{=\367\264\245;\253\327\212<\270\200\340<\325Q\255\275\240\030\034\274\345\307\225\274\265\353\245\275\322\306\007\274\n\025\333<\3000`=J\231\322\273\376\307\312\275\022\326\255=\204kT;\222P\320\274\317(n\2758\266\300=\242\266X\275M<y\274\034&,\275!\332\274:\317{\221\275\327\256\331\275\371\3739=\345^\240\275\247\231f=\3475\201\275\036\324\314<\314\246\214=%R\312\275\020\261\262\275\010a\321\275\026\243\214=j?\330\275\t\026\316=vv\000\275\327@\317\275v\'\031<\032\200|=1\"\326\275,9J=}9\200<\226@\007\275\277\013\254=uc\215\275\246\307\212=97\217\275\302u\234\275\342\267\254=U\020T<\'\351\220\2751\322\246=\337Z\351<\246,.=\245T$\275w\375S<aC\331=\322\016\351;vV\265\275r\234\213=\324\343\030\275\201\313\334\275f\222\332=\031U|\275\315^\\\275\353\246s\275\202\223I=Zd\212=[ f\275\212\004v=fx\244\275O\356\016\275*tL=\214\203\035\2756\353\246\275?\351\276\275\252\247\260\275m_\t\275\000\212\224=gm\177\275\306\220\304\275\0229\307=\201\025\275\275\277\233\031\275\275\300\360\274\375%\231\274#\342\314\275r\251\244=\255s\240\275\201\310\277=\254m\262\275\360\201\313=\316\214\000\2743\202A\275T\304\202\275\373\0353=a\321t=w$\230<\354U\215;\001\024\177<\tXU<?\246}\273LH\022=\327\356[\275\002\252x\275\'d#<\325\023i\273We4\275\032 \205<\271\303\034\274q\324\335=\276\003\201=\337U\362<\303f\275\275\343H\264<\n\347\257\275\253SO=\232y\273\274X\263\267=\256\347\262;\2045\230=i\207\245\2753\225\257=\331\016\227\275\217\332\356\274\344\243\226\275\206\220\227=\356\252\215\275\345Y\030\274cg\005=\037\310\306\274J\251\260=\246\240\231\275\255n\007=\2302c=\nh\245\274\354>\301=y\221\272\274\267&\327=z\005\\<Y\310h\275\327\362\235\275\350 )\275\215\332\251;}\307\244=\316\t\325<\332\310\340<@C~\275|\367\305=K\316u=\262zw=\331\2245=\216y\"=\355\374\250=\370\366\222\275\222\271\203=\340\021\302=\024\022\232\275\230\341\313<\247\273J=\307\226\027=6\204|\2755\200\343\274\223!\212<\t\220~=[y\271=hG\245\275\371Xp\275M\033\030=#\240U\275o\272\216<s\2677\275\312\237\205<_\r\302\275\327\345n\275\271*\212\274\314l\206=\205\010\321<\267\264]=\264\351\312=\037\341e<\261\352\320=\250S\232\275W\212\302\274dWY\275&6@<\310\347\307<p\317\306=\003\305\216\275\"\005i\275\341\206\305=g}\235\275XQ\257\275+t\267=\036\375S=O\002\251\275(\351\315\274\211e\243=\004]\'=(\006\255<\025\025?=\317}\266\274\013\316\206=k\235P\274\231TB\274\214T\213\275\303\267\002;\265GL\274\353\206\330=\320A\226=\271\325\320\275\206a\t\275\250K\246\275\027\032\241\275H\027\277\275}\271\002=\315\335\t\275\226\206k\275\212\377\006=l0J\275\313\326\347\274\321\306s=UF\002=\0177#\275\277\205\312\275*\264\325\275\253Z\211=\025PG\275\031\250\261\2758\275\333=\214\205T=\300\203q=z\317m\272\tl\312\275\365\324\222=U\364\240\275\32022\274{\240\236\274\251\370\321\275\226\005C<\310\007\274=\326^\205\275\317\003\236\275t\277\200\275\300\302g\275\310\307`\275{;\036\275\316\370\303=X\332\032\274\326Z \275c\023\n\275\237R\207\275==\221=;\236\207\274\300\327\324\275\334z\024=\203\205\370\274\320\314\r=\224\373\317\275\321\303\037\275\023S\010;\352`\214=\302qC=\232S\210=\242\013\037\275\357a\201=\205\004\316=+\202\203\271\300\300\001\275\222 \321\272\367\250\276\275\013/\233\275\302\366o\275\220C\230\274OR\334\271\241f\230\275\331\000\332=\026M\242\275\245v\013\2748\261\224=7!\364<}^2=_N\217\275\344\256\225<\301\261l=\263h\214=\236Tz\275\312oe=\030$\306\2759\351\237\275\306i\225\275)\376W<\230\377\334\275^5J=A\201\245=\016\276\030\275\371\347\253=\351O\236=\271\016U\275)\344\217\274#\316\225=e\225\232\275\330\274\312\275\343?8=\0107\307\275a\325\321\275Tb\305\275\374\226\313\275\340*\037\275+\365\252<\333\303\264\275,K\004;\235\235\254=\325,g\274v\010\250\275j\2259<Sw\373\274@\034Q=q\342\333\274\277\255\333<B\211\245\275\n)\226\274}\301O\275GY\233=\366\216\274=\371zJ;rr^\275\002\234\350\273p\240\322<\302.\250\275!\213l=\276\376\325=\254w\243\275\277\242\266\275\231\314\214=\354DZ=\211\356\r=\266\200\324\274\210\207\237\275e_\337<\257\0253\273\342\026\315=\305\243\021=zN3\2759@\235\275\203M&=\210\030\302:qV\233=\303\006n=cR\252\274;\034\003\275\260c\202=\006\200\214=g\336\010\275\247\336\254\275\335\363w=\204^N\275D\271\325:j\314\343<j|\332\275\177I\224\275\216\177c\274\363-\223\274\3127k\275\304\301\261=\237\375\330=\3248\"=\300\214\264\275E\341\033\274\374\255\311=\034\341y=\215\037\254=\014Q\247\275\245m\202\274\023A\267\274\344\341\214\2756\370K\274\371\314\007=\023\014w\275\305L\007=d\036m<\366~_;|\035\375\274\034\255\204=\274\215\201=,W\213<\003f\t\273@\262T\275\2729\204;\303\330\233=Ev\254=?\264\200\275\270|\016\275/\003\200<\"\3102\275\377\305\314<[p`=v\247\236=\004\336-=\303\026\003\275\215\377\334=\274\307\271\275u\250\240=\302Y\272\273\235\304\343\274\252o\271<\330k_\274+\031{\275\206o\275\2750\206\r\275\3148\034\275Ey\301=\220\211\217\275\337\000\370<\307\266)\275\236;\223=\236\373\324\275*G\001\275\030e\311\274\325\242L=\326d\333\275\367\2224=G\021[\275$5}=\305\343\014=\262\235E\275\306\214\032\275\367.\240\274|\013\251=T\262\273\273R\314\236\275\341\237\311\275\021!\265\275]~\324<L7><\202\253^\275;\272\310\275E\025%\275hp\231<\261dV\2749m\016=\276\230\331:sGH\275\375\265a=OFB\275!\256_\2759\2528=\253\220W=\010\352\265=\315\353\312\275\365\232\336\275\003a\336<\257J\261\275\177]\263=\032n\331\274d@\026=\377fi=\217\340\223<\372\232w=8\001\033\275\270\304W<\302X\317=\035\314\310=\312\333<\273-\354P\275\204\274\362<M\224\277=\261`o<\035e\226\273\214\340 =\215\017\014<\217\016\322;e\0326\274\225\021\204=~\230\323\274\242\006x=\317\022\207\274\027\256!<\024\336>\272\213=\216\275\235Y~=\257\273\274\275\016m\021=U\203\257;\255\254\250=)\2740\275\334\006\210=\030\276t=a\325R=\220\003\335:\271l\r=nA\320<p\330\336\275\031\005f=(\363\236<2\220\023=FBJ9\367IG=\315\302i=L\242I=\2571\206\275Q\350\346<\251\006\340\274\373|\303\275p\351\301\275\320\204D\275U\312F\275\027\373\311=a\177\303;\350D\244=%\252N=T\342\257\275\247\314\275=%\277K=\301W\270=\014\361\242\275;\214N\273\305G\201\275\303\376\306=*\326\271=\n%\323\275U\372N\275`\375\366\274[\341\025=a\330\334\275{\310\373\274e=[\275\353+\301\275\021\362\315\275\000z\234<\317\316\304\275N\330y\275&\350\330=\260\"Q\275,\274\036\275\361\355\331\275h\231\222=A*Z\275\245\314\204=\330\232R\275X\267v\275*\264q\275t5\214\275\\8\215=z\221\262\275\2016\313\275\367\207\332=C\034\253\275\303\034i\275\021\254\327\275s\272\220\275\215\276m\275\271\013\305\274\244\340\007=K\003\260\275\341\027\353;\366\200\336=\237W\210=\036\003\247\274\273m\321=\255\334\355\273\3219\250=6TV\275\036\004t;\022\222d\2727$\240\275\006\252\303=i\317\257\275V2\241\275[\360a<\375\021\236\275\373\003\026<F\037\250\275\224\204N=\024\342+=A\355\320\274if\355\2735\325\302<\232\004\270=\332U\226\275\342\250x=RD\205\275/\315\336;\303\010\272\275s\370\226\275\275AJ=S\273\272\275^\270\027=rR\324=\027\033\034\275I\325\250\275\263\027\254\275t\204\331\275:\256e\275\014\272,\275\020\322\267=\023\2225=*\275\222=\351(\270=\277\245b\275\241\234A=\332\340\207\2728\342a\275\255L\377<\267AW=\365\307\274\275Nf ;`R\270;\372\276\320\274\034\257\310<\270)\206:$\351@\275Y\343\321=bs\306\2753\027y=\371\243e\275\025X\t\275\374P`=\230\037\245=\310\'\257\275\204\013\354\273g\305\\<\276\321\367\274\354\235\304=\303\243\007\275\036\211-\275\215\204\255\275\224\345;\275\347\366p<L(\'=\245</=-\")\273\022{\201\275\260\237\324\275\306\004K\274\025\013q\275\250\014\204\274\251\276M\275\t\300f=\353tx\275l\267\354<\237\352\253<\327O\202=-\316Y\275\\w\330=\363\214n\275d\337l\275\3221D=\254\314\312=\302\r\206\275?\261\236=w\242\373;D\306\261:W\\\010\275\276e;=o\204\300<\026}\222\274Y2\245\273\332\200\335=~\243\235=\212e\273:\257z\007\275i\274\202=\n5\020\2758\361\243;\274\246\230;\375\t\266\275\310\027W\275\317\227i=\212\210O\275\347\241\000\274\356\254\223\275\003Y\332=\306\211\020\275\372\3371=5\r\331=\230\220K<\2159\202=\301\356\275=\031\367\214\275\351\r\330;\264|\210=\321i\236;4\266`\275RW\324\2752\343/<\007q\200=\371\331@\275I~\013\275\217\345\212\2752&!\275*\201\211=n\377o=\310\330\027=\0375\310\275\034\023-=\244U_=z\370\222\275\353\201V<\320\222H=\257@\t<j\217%\275\272\336\310\275\210$W=\000AO\275\031\267\335=\021\3541=\216A\266<u;\220\275\020\031\202\275\337\212X\275g\212H\275?_\221=\244\215\213\275\243\223\034\275\224\223\255<f\215\022=]\205\027\275\311~g\275\217\177w\275\026\375\306\275Z\322\227\275x\303\266\275\246\321\206\275\201S\267=\275\234z\275\253\264{=\243\026\262\275x\257\336\274\347\215\215=\220\270\230=\235U\210:\302\306\354<\377\2405\275\373z\203=&*\231\274\202\245*=KBn\275^]\367<\243F\334\2750\214d=\214X\206\275\302\257l\275\212\252\033==ml\275i\321]=\221\332\250<\233*J\275\323n\236<3v\234\275\374\340\216<\214\3103\275\316\321\032\274\317\341\200=:\017\257=\030\264\301=\004\253Y=\217\213\273\2750lT\275\344\357>=\300\013\330\275S\267\204\274\266\367\200=gf\263=\377\207n=$\364\312\275\3412?=\223Oe=1\235!=\351\366\004=\022\233\206<o{\302<&\014+\275t\317\236=U\370\350<-\234\210=\005\372\277=B\200\254=~\300\257\274Tr\275= \036\200\275#t\256\275\336\320e\275\025\276\221=\3059\234\275\253\022\200=\352\270\252<S0P<\2431\035=op\244\275k\204\307\275T+V=N\'T=\003\'\'=;\262(<D\203\007\275\310].\275.\037\340<w\242\206=m\205\036=,\332\212=\017s0=R\177\227\275Y\351$=\2400X\275\262o\266=\225{+=\370QF<Q\004$\275\272 \261\275\376jq\274\225\335 \273Z\257O=*cW\275\016\230\t\275\035\344(\275\312Y\250=\236&[\272e\373\220<M\350\210=\235Z\311\275\277y==k\331\000\275\014\301\315\273\213\277\024\275\254d\242<l\201\325\274\266\306\036\275\227y.=\312\243\226\275\023\301\311=%\312\265\2745l\243=\003\270o\275\337\221\177\274\343\014\263\2757\241\371\274!&\214=.\3167\275@e\365<\305\342\222=\226\236\254=\350W\001=\376HK<\361VL\275\003\252\361<\220\003\313\275\026|(\275\251\273\014<\302\247u=%\246\250\275Q\007\263\275\303_g\275=t\273\275\255\221p<\220\223\254=\003\016\216<\2066\311\275K]\330=\300\257\324\273\2043\251=\026\242\234\274\022\200J\2750q\252\274\277\273\216=T\357\260\275\250\344\241=g\341==\363U\316=\031tz=n\307\204\275>\032/=\'Rp\275\261\033&\275$\324c\275\0246\216\275\340\271\250=Qi\354<\331c\303=\241v\314\275\260Y\215=\325\305\254\275\226s\236=\243\004\205\275\344\224\317\2754\334\321<+3\232\275\316\341\201\275\222\321\001\275\334\021\3249\365\332\033\275\327\240r=q\214\211=|\223\204\275x\222\244\275\211hw\275\224\306[=\264.o=\233U\302\275(\200\216\2757){=\022\204O\275dHt\275kN\273\273\315\364\316\273\3545\243\275x\251/=\367\241\322=IIv\275\366\362\n=\036s\372<Q4\274\275\342\277\325=\3552\243=\n\001d\271)!\217\275\340\325\256;Z0\275\275\001\334\220=\357p^\275l\\\276=\t\347h=\327\324\022=e\233\004\275\313Q\343\274\352\177\222\275\274\246\206=\200G\327\274q\325\005\274\344|\331\275\272\231\215=;lt\275|\302\203=\323F =\350\266\230\273\310\234\306=\013\302\231=S9B\275\334>\226\275W\370\221=\331\272\233=kyH<\204|C=\225\305^\275\231\215\035\274\025\3265\274F\001\225=\2634\233\275\261\"*=\274\244r=\315;\320=N\206\240<\375R\010\275\273\370\332\275\321\317\\\274\216_2=c\243\033=\203\\\260=\215\325\227\274\311;l<:\276\254=&*\325\275~\256\313\2751\305\367\273\033\001\210<C\374\020\275\017\216F=\307E\006\275MX\014\275I\236\274=\260\234\222\275\020>\317<?\242\207=\3519\230=\235-\355;\"4\331\274\003\216*;r7\177=UL\211;\257o\023\273\2548g\274\021\242s\275g%\322<U\200\275;=\235\264\275\217<\274\274q\335 =0\203\334=\034\204\260\275\373\321\333\275\204m\215=\243\0276\274bq\016=\320\323!=B\032\334=\3522\267=\027\356\036=]\"^= \001V\274Jp\320<\236\336Y\275]\003\275\275\237r[\275O\'\321\275\340\262\271=\tk\021=\0244e=<B-\275\206x\363\274\364\322F=[=\332\274_\264\202\275\334\013\231;\201\022\317=\260\240\353<w\r\022=GG\212\273\202\210I\274\254\247\244<\325\274\215=T\364m\275\245\340,=unw<A\323\312\275\024\332\016=\357\325\210=\322\r\326\274\033\315\222=\225t\255\275q\260\304\275\223\354\222;\026\024\311=G\013%\2747\016\033<Y\336\004\275\220G7\275\212e\334\275\303\332\t=\337\036\020=JX\216\275.\305;=\330\253\300=M\2605\275\236\327\n=\250\027r=\233/\264<\226\366\213\274\274@x\275\231\372\302\275\231T-9.\024\265\274\236J}=U\352\315=P]C=cj\316=\321\357\226=\331\\\227\275\345\372\251\274\371 \246\275\031\212a\274\237c\314\275\301.\241\275\205\005t=\267 \201\275(\210\217\274\204\243\315\273\273\241\212=)\026\233\275\257\367\025=\264/X\275%c\257\275\347}\325=\347\343\231\275\252f\002=$-\337<\322GJ<\276\241\364\274\274\273\307=\'\003\206\274\353\261\034=x\204\353<\235\316\221\275j\255\340<\'\217\247<\030\252%\2741\177\241\275\006\276\264=Y\327\030<\213\327Y;@a\235=\272<5\275\275\2334\275g<M;gL\272\275\357\227\217=\311\335\363<\243p\227\273X`\022\274\016BL\274\002_\206\275E\365\274\275\345\030\327\275\260\206\023\275\323\232\204\275E\305|\275OK\246<h\271\310=H\347,=\200R\330\274\317%\252\275Se\252=\321\246\250<M\251\263=\345x\221\275\231\270\211\275\223\325Z<`\326\276=rP\326\275\213\220\257<XS#\275\025,\266=V\013\313<&&C=\023\337\351<2\251\260\275\316\366\240=y\274N\275z\245]\275\312\037\232=\370\3316\275mA\225\274!\202\363\272PB\351\273\310c\300=\332Z\254=]\210\007;/\027\214\273\304\371\263\275\377\342\330\275\t9\035\2755\000T\275\234\336T\275\010nr\275\260\255C=}c\325=\221I\271;\366\327==\027[\214\275|\3418\275\017\001D=\\\360\230<d\227\304<[\221,<\331]\250=\344D\323=0w\207\275\201\2638\274r\244\210<y\264\355<r\270\255\275)G\254\275\177\036\240=X\242\010\275\224\372k=\345\337\354\274\231\205\022<\217\251\311<\341\271\373;\221\316\215\275\333\361r=\351@\020=\314\206\276\275\246&\224=qf\305=\323\326v\274E.9\275h\001\266\275\274\273J=\364#\255=\253\026\331<S3Z=\037\302\245=\206\341\265=\255Z0<\237y\034\275\212\335\330=6R\242=3\367\234=V\227\201\275\206]4=\374\236\365\2745-\325\2753\265\357;0\234\200=\262\362\014\275`\275\272\275^\357&=\373LF=\326\303\210=\270\344\315\275OT\270\275X\013\023\274J\375n\275R-d=\200\237\273=\n\031\305\275\362\373\232=\223\251\214\275\253\024\232=\321\360&=\202\375\n=[\036\256=\337p\214\274S[\322=A\246\304=\353\201\251\274\223\333h:k\301\335=j\r\357\274^QN=!\216j=>\272E\275\202r\320=\220bT\275@X\034=\320\203\242\270p\005@\275\236p\007=\n\031\n=\221\256\346<\2769\201\274\351*\206=\370o\243\275\232\200\302=\324\305\026\275(\010\277=\223\362\'\274^n\272=#N\330\274S\243\245<\360\274\223=K\365\211\275\255\311\223<\227c\022\275z\212\334=D\252#:\375\232\342<s*&=\324S\262:\241\275n\275\277\002\210\275\374\355\307\275\270\010n\275\263\251\316;\337e\351\274 \327\032\274\353\206N=\032\230\301\275x8\250=\306\344`=\317\305\337\272\345\274B=l\343\347;\330\030\236\275,\230h=\237\356\316\275\"\342m=\234\027\222=\024\2023\2738\315_\275\007\276o\275\256\315\272\273=\n\240\275Z\340\207\275\354\021\314\275\271l`\275\2171\250=\\\013\212\275\207\222\231\274\261\345.:u\010\276\275\214 \005=\251)\310\275/y~=i\323b=\0070\n\275\346\233,<]2\301\272\212\325\341<\321n\301\275\316\2060<\271\210\013\275\"9\334=\\Vy\275\202\311\262=\321 \245=\210\222\250\275~\255\247\275\312\357p\274\206o\253\274%\314\242\275!\246\317\274\224Y\260\275\357:~=\314kl\275\200\372\231<\016-!\275f\215\250\275\005\321M\275z\010\337=\273\234o\275jv\324\275\352\370\260=\276\330\203=\211#\230\274{Z\333\274\233Y\221={&\306\275\252V\005\275\275TE=w\316\004\2758\267\335\275\274D\313=b\364\305\2759>\214=\007\356\305\275\245\357\007;\013\317\002\275Z%\031\275G\001U\275\002a\002\273\027q\261\275\265\372\010\275\322\266\320<g\251\246;\305\267\317\275\225\302r\275)\021/=\373\353\036=\023m\r\275\036\225Y\274L\224#\275\030\351\331\275\372\217\335\274\270sl=\324MR=\177\371\300\275\312\210\202<\2458\376<0\037\337\275\357\215\250\275\353\221]<\270\206P=\322\233\365;\214\001\257=?o\226<\215\214\242<f\357\265=\025\034\253=QY\304=a8\242=\364_\242=\350\026\211\273\313P\025<U\023\235:\304\376\223\275\325\215\n\275f\010\320=\"W\334=\261z\304\275\373\"\247=\272\035Q\275\t?\225\275K\013\246\274`\235\217=\252I\363<\345\200o<\273\240\257\274\320\255\210=\236\273\311<\203\326\256=,\023\220=\030f\334=a\2408=b\332L\275xK\323\274\334>\335\275O\343\321\275\325\202\236\275\"\334\267=Zd\030\275`OV=\026\233d=\265J\323=K^J=\006\030\002=\217\002l\275r\267\346\274\327\372\375\274\202\200\263\275\2454\261\274\345V\235\275\366\203\364<z\242\256\274O\\\227\2753H\224;\007L\023\275\357\305i\274]\2170=9(\203;#\035\337=R\321\340\274]\016\332<F\024n=hV\264=\305\243!\275\347\315\026\275\237\021\315=6\371\311\275\227f/\275\236\252;\273\2663\037\272Z\321T=\232\2021\275\330v\233=\327\254?\274J\327\232\275rm\031=\345ui\275\240\224S\275}6\225\275\236\231\212=\357\272\246\275x\tS\275\3645\021=\272l\244=6z.\275\2120@\275\0168\205\275\336e\246=\227q\332\275\203\255\254=\304\311k=\213\260J:\237\226\275=\3445\206=h\246F=\276m\237\274\3038\353<\364t\257=[1\356;\023l\257\275^\026\304;\230\337G=w\307f=\003\376\311\275\222\325\260\275|\324\314=\\\037\334<\315\252\311\275\251~\020\2737\177(\275\035\"o=\354\335\254\275\251\277\261\275\213\366\246=X\215\335\274\017\ri=/!\353<prl=\241u\270\274\321Q\336\274\177$\354\272\211\354\323\2737,\257=85\201\275M\201\020=P\247P=e^X=\200\344\207\275sa\222:\333\031o\275\003 \263=\235\364\306=|\034\235\275|a\211\275\364\205\244=\001bR=t!\326\275WA\241\274\213\217\257=\315\206\033\274\3537\256\275X1\016\274\272%e=\351\277\031\275\274\367\027=\326\365\005=\371\357\374;\025i\016=\214]\220=\246\332\276\275<.z\275.v\r\275T\322\023\275x\210\324=\243\340\001=\366\376\244=\234\321\315=qk\200\275\340\253\250=\260M\316\2747C\277\275i\027\030\275\244\2365\275\241[\222\274\327\345e\275\311b\326\274[\030~=P\004p=\001\357\220=\227f\350;H\243\233=Yj\265\273v\227\275=\225A\024\275!\002\274\275\261v\343\274\227z\277\274\342\034\211\275b2\213\275\211H\002\275$\316\242=\276\250\252\275\352\340p= RO=]\rS\275\343\210x\275\0209y\275\257\225\023=XK\207\274UcI=,u\320=\356\253\266=:\031\337\275\342\301\211=$y\034\275\022\221\243<\222\374\220=E\206\214<\317n\342\274\346\316\023=9\237\200\275g\220\272\275\222\351\272\275\360\235\264\275\247\013\216=r\271\206\274\3623\337=\212c\210\274\207<\272\275\001\000\240=\315f-\275>b\366<\321p\352<\345\211\27795\354,=\332D\312=:qU\275\355($=\026\363&\275\360}\361\273(\312\256=\3645\312\274j\200\247\274\360-\200\274\270.\244\275\306<y\274o\217\215\274}\373\261\275\305\'\266=\205G\311=>\300\302\275\356(\353<_g\002\275K{B\273\357\220\220=\316\375\204\275\213\t\201=\236\367\033<\246M\025\274%\020Q\274!\335v=\037\211g=Nu}\272=\234\300\275Xh\266\275\250\237\326=T\224A= X\315\275\326\030\272;\350\0349:\322\346\261=y\2175\274\370T\332=\314\264W<\250\221 =^[\035\275\367]b=\311\014\210=\261\n\323\275\017S\220=\331\245\207\2755\305\277\275\003\230\244=}h\325<\303\232\307\274\003Z9\273H\333\271<<\263\262\275`zj\274\340\n\320=Tv+\2759\216\001\275/\036\323\275\\h\022\275\331_\312=(\265\377<\010V<=\356\274\221\274\007}\231=\336\010\251=\277\364\246=q1\237\274\2235\244\275\233\245U=;\322\362;\260;\275\273)K\335<\347i\211\273\246\310\306=\217\210\205=eB\204=\nWn=\352u\032<p#}=\367?\334\274\364\210Q\275\035\273`<\263\020\367\273A\342\273=\351I@<Z\001\251<\301\000j\275\266\202\303\275\010\243\202\275H\347\027\2740\003\006\275\311\ni\275\372Ft\275\344\000\323\275~\365%\275+\016\010=t\t\257=GA\204\275\275\320\215<\340\261\265\273{\336\225<\323\234\020\275/\263W<\312I\360<\244\327\203\275>\022\217<^\375t=E\214\304\275 k\326=\231\250\226\275\251\222\310\275\304\256r=\222a~=+\266\\\274(\224)\275B\032\033;aaW=/\025\257\275\251\223\365<\317\324?=5\267\314<E\332C=\271|\261=[D\206\275Pp\307=\213!~\275\221\220f=\210J\026\275+\345\230\275hHR\275\242\253\300\275]\305\342<^\316%\275d\264\250;\231\007\303\275\371\346\212=1\200\233\274\325\243 =AfY\275\327~\242\2750\243\304\274\316z\250=8.u\275\211\361\275=|7\214=\242\'\232\275U\300j\275\264\000\243=\222\223\204=O\322e<\232t\217=\0202\001=[\002G\275\342\217\n\275\306\t\010\275M-v=\033\214e=\355\020\\\275\246\331\270\275&\215\n\275\353\352\004=;\3220=\360|b\275\364\267K;R\337b=U^\305\275T\240c\275\272\227g=\032\257\254\274\203\024};\033T\003\275\"\365\352<9\\\255\275\365&\211<\322A\244=n\216/\275\321i\023=\255F):\030\222:=[_\314\274\300|\207=a\274\314=h\267T\275\224\371\241\275%\302\254\275\366\244\255\275AfL\275\233\202\016\275\271\206\234=j$\361\274N\244\230\2736\276c<\326!=\275$\030\221\275\251\326\205<\2307\320\275\265\322\243\275\226n\\=;\200(\275\307\321a\2748\222\246=\267E\017\275\303G\310\271\277\021\247=\236\243\177=UUK=\036i\275\275\305\335d\275S\314\235=*\202\262=\025G\311=[r\234\275\270\357\322=\374*\275\275\230)p\273 \262\037\275\332\370\263\275z\1778;\020R\301=\340<\217\275\034;\275\274\350\352b=\tR>\274T\007r\274\210\271$=2\305\334=/\t\251=\'\035\251\275\266\301\274=\002\304\273=$\203\247<\255n\244=\324d\221=1\353\213\275\000\035\264\275Q\353\323<\354\005\245<\205o\213\273\273\003_\275\037\265\234=<\201n=\360\026\260=\321{\235=\037\245#\275\307t\237\275nX\322\275\202a\327=\"\360\022\275\335\344\246<U\\7=\030\023\231=\023 \331<^z\265=;\245\246=an\201\274\013\205;\275N\231\333<\243\311\313\275\335C \275\0174i\275\326\247\255<\tn\307=\352\353\006\275\035l\321\273\322N\225\274FT\243\2751?\326\275\026?6=\245\362_\275\211 Y\275\333\023\231=\311\330\243\273\307\211\323=\025\002\247=\332?(\275\001\2115<\200<,\274\311%+\275\334\216,\274\353\362c=\365F\001=\016[\331=\346T\304;\377\312\320;\363\317@=\222m*\275\344\226\010<K4\260\275\220\030\257=\204\007\227\275X\223\341<LA\205=\\\235\302<\213H\221=\034h\335<\327\274\243\275\237\035\314\275\005W;=<X\322\275|-\342<\277w\333=b\222\314\275\214\344\224\275\227~\010=\306!\016=mY\276=\213\367\307<.\362\326=\346\324\313<\2502l<\006\005\221\275\260\022B\275\240\242\215=\2408\335\271S[c\274\341[U<\306\\/\2753\272>\274\341\010\221=\361\361\227;\351j?=X\0215<F\263\326=\360S)\274s\312\316\274\021}\263\275\037\203-=q\224\322;\276\227j\274\'\251\205\275\032\250\314=\223\r\003\275X\343E\274\276\331\217;\206\335\"=$.V\274\352\237\335\275\312\022P=\343\323\234;\266\220,=\024\247\332\275\305\264\317=R\3322\275\341\017\007=\302\270\317=\316\304\256\275\"\231\203\274(\300)=\224\326\276\274\3310\252=\'iJ\275\272[\230\275&B\304=\177\003\227=\2478\372:]\220\256=\240\241$=\022\367/=\265\376U<\2769\336\275\\\275\317\274C\003\231<b\371\223=4\330\221\274-KA;|\203\213\274\256\325\201\273V\037\206<\350>\330<5\353\221=\"P\'=\253:/\275\346l\204=Ke\247\275[7\245<R5\227<\201\260\207=\375\014\002=\346.=<\224\313\324\275\351Wq\275\274\241{\273\311\242\227=\036CJ\275[\217\323\274M-\305\275<\317\215\275uQ\221\275bd\320=\337\303j\275\231\250:=\356\364\034\274\260(\300<\332\232\000\275\231o\026\275\365^k;(\013\210\275\004\355\205;u%M\275\363t\317=\335T\312\275\036{\005=\337\350\212\275\257@U\275IE\037<\227\352\314:\260\302\t\275XdG\275\224\364\014\275\217\307\332<\343\205=\275\270\377\310<\303\245b\274j\273\321=\206`\226\275\260\371\305=\200\242\256\274m>\322\270w\365<=d\3403=@\337)=\036\\\211\274\314~\321\275\337\000\213=\233\241\267\275\200\254q\275\3526\206\275\334\005\336=b\253\222=f\371&<\251\377\236\275\375\224\t7\335\2548=\361;a\275\302Y\333=\204I\333\2752\310\222=,\255\271\275\017H\010\274\347\030\260=\230\247\324\274@\201\310=\307\237\211\2755K`<\334\250\365<Zy\212\274B\234\227=2\006\201=_ao\275\003\024k\275\307u%\274\366\361*\274\327\033\231\273\320\375\317<\350-z=\2446\326=y\221\002\275\234\351\320<\311\005\\\275\207b\242\274\024\301\334\275M\277\246=\306#\324\275Y\256\257<pm\017=I\376z\275<\320\314\275\317xi=h\"\304\275\302\364W\275\033\000[<K<\262=\360j\270\275\310\271\227=\342\\\306=\372s\263<\365\262\321=\001\256\365<.m\316\275} \326=\333\250\030=\302\017t:S\316\214=d6\314\275\376\357\t=\2034P=[\334i=5\2749=Z\321\334=\200\026\034\275!`r\274)6\240\275+#\307<\226*\r\275\"\021\254=\314\303\210\275\366D\027\274\266ej\275\364\310\"\275\t\231\013=\310\312\353\2740D7<\367{*\275P\303\'\275\316rE=(}\245=(\203s\275\376\263\201<\350\014\240\274\200\t\253=\363!\277<\325\273\200\275\342\224\n\275\3021\367\274\314\337\300=D\017\320\275\020\177\336=\353\307\256=QtO\273\221#E\275X\377\212=\003\235\227=\250O\007\274\306\255\313\275T2\020=\005\306\224\275XE\203\275\250\267\305\275\004\367\300\275`\351(<h\211\315=\n\351\215=\3440\223\275\345\374\271;lv\302=\026\301\r=\001!V<\257y\272\275k\340\374\274bgZ\275O\254\201=rd\267;J,\336\275\335\305!=QW\203=\023\213\302=\323<\315=\263\353\356\273)\243\251\275\331m\231\275\233\3151\275j\316\360\273V\202\266\275\213\325\223=x[\317=\373\035\350<\177f\032\275\005d\206\275\205\275\360\274\250RJ=\226m\034\275\264\367H;h\267\230=\214\250\345\274\356?\301\274\244\324\245=N\330\206=\205Q\240=\343%\232=\270\020\005\275\327%\237\275\321\222\316<R)\250\275\037\233q\275\r\007\201\275\301\354Y\275\n\037\371\274\375\2449\275OUe\275\312\002\255\275\366\033\222=|=D=\233@\202\275:\342\022\275O\004V\275z\207F\275\307\317\231=ek\226\275\240\267\211=\274\310\004\275\213d\251=\371<3\275\007M\223=\3708\272\275,\201\322=\3629\262\275\021\204Q<\027\014\320\272\344\340\375<\343w\224=\001(h\275\006K\274=\316\246\333\274\203\240\227:\315\027\272=;4 \275\217\205\247<U\273\333=E\363\330=\005\211\320=3\003\240\274!\363\222=|\036\301\275\021\2774=\341\322,\275=\030v=\304A_=}\347\324\272\214*T=\235\236\357;\033\227\235\275lY\"\275\263)\317=\317=\236\275\245y\214=\306/\364\273\301#\256\275\3141\316=\226\022\270\275\210]\310\275NU\222=\312\370\312=ya\217\274\300\233\242\274\205\221\032\275O\214\240=N\020\017\274\002B\316\274kB\273=#m\270\275\350\362\014\275\031\"\336=\332\004?\275g\037\221<6\007>\275\260\322\t=\323j\201\275\370-\336< \214\273\275\021\013\276=\254o\246=\002\270\300=<\231\305=$p\324=\364\203\306<\242=\221\274\272[\255=\341\247?\275\036+\307=\031\203\024=\206+\233=\362\301\333=^\212\034=\341]\373\274\3216\2669\304\271n\275\027n\313\274\205wr\275\270\223\333\274\372\226\214\275\'k\007=[\214\023=\313\221\361\274\316\204\017=\255\361\326\275\256\013+=d\217\263=\332\014\223=\375\353\242\2757\363\213=\370\360X=\313\n\242=0\007^<\201\312A\274D\352\203\275g\376\254=\002\367\327=\237\351\334\275\016\000\260=\004\362\032\274?&\270=m\310;\273\261[\221=\357\000\250\274\276\363\215\275\303\007(\275\352\r\251=\033\331\216=\375\357C=\215/\275\2750\026V\2753\207\326\275\361I\314<\250\372&<0\222Y\275\273x\255\274\202x\345\274E\275\036\275h\006\311;&\037K=//\326\275U*Y\275\350F\253<\200\301\227\275\031\0374=:\250\222=i\215\016=\347\344\207=\321Tq=\026\232\334\275\242I+\275q\370\037=\267\034\205\275\315\220*\275\303a5<\201m\231\275\014\2141:\240M\213\275\227\221&\275|\372\246\275\021\270\240\275;T\031;\312\274\020=\365\023\233=\222\277e\275\273\314\201=6\253\026=^k\305=\234\250\311=\300\303\333\273\035\'\355;\234\304d= ]\001=\353\337\225\275>\274@\2740\214[=@\221\264=\371L\335=\270\320\262\274\334\343/\2759vg;\254c\"\274mu\372<\034\336\205=@z\373\274\037{|=xu<=\241\217\234=\374\027\313=\254;\227\275\344\340\222\275\267X.\275\346\t\274\275k\'\014\275|0\233={\214\325\275s\270\335=\374=\006<\360D\n=\tj\303\275\3372,=y\310\004=n\254\216\274r\263\213\274\327K\263<\261\311\244\275\300y\021\2742\263\273\275\204|\350<\207\370\263=\266N\242=\002k\313\275\230\212n=x\232/\274\356\002\226\2759\222\266\275\314w\212<,\226\314=\010]\333=\242\241\256\2755\216\213\275\002V\260=\'\254\261\274l\250,=@\265\322\275\037S\333=\020*\225\274\r\210w\275\036\201\001=\245\313\224=\333\211\217\275E\306\r\275\034^&\274>?\207=\243o\213\275\3023|=U\214\\=\311\334\236\275\310)\241\275\037%|\275\255\023\266\274\220?\217=\362\205\360\274\371\334\310\274\023\002\272<\253oO\275\207\357y<eZ\262=\2020\201\275\t\352\320\274\255\261W=\333\223*\275<\243\321\275\213\021\241\274W\006\305={=D=+\226;<C[\270\275~\274\260\27346\320=\32284=\005\336\323\2755\207\207=\270!\252=\256;N\275\005#Q<=H\221\274\325\340\237=\241\332\304\274\231\314\\<\264\0300=\241\303R\272\240\204\245\275k\007\310=\270_\321\2733\254\375<\005\004\014\275Zrg\2744\265\247=\365\016\250\275\177B_=Y@Z<\351\020\236<\316\030\317=F\357\310\274\013jB=r\353n=<V$=\273\267\031=\235v\247=\255\266\255=\014&\001=\354\215\030<\226\363\262\275P\261\212\275\301\002\314<\211\245\233=$\274\246=\223\243\253=\203\333\257\275o\325\236\274\233\020\252\274i\252\222\275\321\215Y=b\006~\275\303\027.\274\022\207\261\275\2521\217\274.Z\304=\246\2015=\212\350\220\275\231\226G\275\360P\375\274\356\r\300\275\034\271d<&\320\333<F\323\373;\033\335m=\226\203\261\275o\326\336\275\3722e\275Y\237+\2759\335\322=dh\260;\025)\363\274\366\303\263<\201\350g\275\215\235\000\275\246]K\275\364\222\304\275\250\355\264\274\223\312\364<\275\207\265\275\234Z\212\275\204\033\342\274\320\267\273=\323\025\241<^\300\335\275\246\022\277=\247D\240\275A&-<\322\307\327\275\207a\225\275\224\344\223\274\231\203\365\274\334\324Q\273\'\312\240=\004\312\307=\373u\333\275Ah\261;[\253\366\274\250.\203=\373*\026=\220\313\201=\314\205R=\311\344H=\314\310u\275\322P!\275\341v\316=\"\277\243=j\223\260<\320\306%\274ij]=\305\235\315\273\231g\261\275\211M\306<`\251\232=\262r\210<8n\244=lq\272=L^\224\275\"\237b;\206\365\213<\220P\326=\210\221\223=\263!\340<\300\313\230\272z~\177\275\360\370\307\275\322\211\230\275\315X\2069C\205\307=,A\313\275\315v*\275\207\335j\275\r\265\241<W\251+\272`\310F\274\217j\"=\256F\241\275\331\213\215=\242\331\316\275\361\364\224\275\241F\304=P;^=\216\253\313=#A\377<\252Zx=\017\031\320=\356hY<\342\203P=\353\227O\273\007\214\230=Hav\275\226*\220\275\237\263\226=\200\323_=\260\354\367\274\330d\200\274\371^\263\275\305Tp=##\325=\272q$=}:\277\275\2455n\274*\242b\275B\'\350<}O1\275\'H\220\273\016\344\327\275\212]\320=\te\r;k\263\202=;\032\235\275\221\270M\275\232\014\227\274\036\346g=\215.\346<\377R\036\275\310\002\332\275\301\201\332=\350\003\304\275\037\227\203\275N\230\225=0\306\232=\274\237\324\275H+\316\275\014Y\204=\311%\277\275\270\220\306\275\030\002\275\275\375\334\207<\032\251\322\274\342\212\264=4E\273=s\tw\274}\365\215=V\270\271=T:&\275M\260\252\275l?\351\274\274\225\241\274\304\265\204=Y\303*<z\017.\275\023wd=\270\253\013\275\375\260\014=\337\030\315=O\2376=\277\307\217=0\242U=\340%\256;\220\353h\275\361\244\276\275\374\335\222<na\325\275\024\204\256\274\254U\304\275\236U\234\274tzb\275\252\325\270\275/\267Y\275\302`\263=\302\361\355\274\361<\232=Tk\340\274P\223\036=M|T\275\247\227\300=\271D\205\273\225\275\373\274R\"0\275\026~c=u\264\247\273\210hb\272\035\254\005=Q\354\260=n\300\244=\347\002\326\272\264\205v=QE\032=\3478\255=\367m\225\275\023A\'\274AX;\274\326\240j\275L[\274;\357?\n=\353#L\274\221\261\202<\247h\336\274\330\323\322\274BK\224=\236\375Y=\034\240O=\'\2003=\335\240\036=\014m\317\274\247\014\265\275\231\226L=\333\017\230;\327\3209=+T\253=Ai{=r\tb=_\367\272=\033\370\273\274:I\344;Ur\317\272B\272\216\275\253S\001\275TC\351\273\254\232\335\275q\234=\275v\035\231\275g\254\257\275\224q\246\274W\334\331\2753\204\222\273\365\234\301<\316[\035\275\272)\267\275\310\0323\275V/\300\275\271\211\210\272\255\356%=\335B\006<\356\3170\275}\242\256=\\\370x\274a\332\276=I\031^=\3106\236\275k\204.\275\032g\277\275\":\207\273\334J\017\275\324SP\275L6\320=\334.\203\274\t\361\320\271\342\302P\274\257\233\217\275}\005;\275\001\316\261\275\032l\211\2755\200\221= \031\223\275\317\251\314\275b>\315\275B\037\330=5{\"= \002\326<p\030\356\274#X\223\274Si\257\275\033\254\024\275\nM]\275\210\355\231=Gr\333\275\355\340\370\274\270q\355:\223\201E\275_\375\270\275\355y\001\273:R\304\275\302c6\275\224\353\220=9#\277\275wH\367<\230#7\275\027\324i=\242C\254\275:\320\310\275y\322\244\275S3\"\275\013Q\254<\340\034d:\000\315\014=\257\001;\275X_\234\2753\334}=Vo><\320\274\331\275\340\226\017=$L\022\275\332\272a=T\234\215=\272\335\252<5\001?=\013\227\204\275k\3626\275]\335;\275y)\n\275KN\177=b\247\264:\213:\232\275\236M\325\275\252n\221=\002\020\227<\236s\325\275m\271\233\275A\304b=]6\033=v\253\260<\340aF<\314UD=-\317\261=\r\034\\\275\260\213\261\275\330\034\020=T2\240\275\207V\267=\275\310\204\275x\013\r\275W\252\265\275s$\205\275^\032\315\274\331W\346:\204\220Y\275EE!\274\006`{\275`A\336\275W\327\036=\0036\213\274\355\371\212\273\317\222\303\275\034\310\026\275?\356\330\275\373\270\222\275xh\250=\214\333)=J\353:;\211nt=f\276P=egU=$\373\030=h\007\330=}\217*\275M\370\276<\220\000\272=\336\373\336=K\356\330<\266\374\262=;\361\316=\253\306\245\275\021\325\203=g\327\231=\211\232\325\275\331\201\247\274\256{S\2759\336h\275\236>c\275l\206\323\2758\216N=nW\275\275\302\370\335\275w\250\336=\323\022\346;\\J\343<\344>\224\275\303\'\010\273\333\346\242\275\000\247\244;$)a=\035O\003\275\022\251u\275\236\310d\275\204\n@\275\037\217\204\275s~D\275\233A\353\272\006\014\220=\001\000\334\275\330o\324\2741\323\317=\215L\266\275\202_\t\275O\213-\275o/K\275\202$P\274.\254\335\275E\335e=-\351\320\274%E\225\275\010\033\247=b\246\300\275D]\226\275\310db\275\"\217z\275tQ\013=\2418\317=\204\3426=\363\206\003=\016\360\324\275\021Gc\274p\346\201=C\220\261<\226-\242=\345][\275Fa\376<N\376\204=\253\033~<\213x\024=\301\210\313=\037\230\345\274&\t\370<B\370\335\275\3439\216=u\242f=\211~\201\274\340\261\251\275V+\306\274|-\261=\022\031O<W\305\222\275\202\021\264;\370\325\317\275(\020)\275\255s\005\275T\310\365<\345<\231\274\005\275\244\275\373T\233<\277\260\330\275\n\313\330\275\350\320\222=+\237\241\273:o\312<H%\303=\220\001\325<AM\016\275]\004\224\275\271\357\223=\314W\033=1nU=\232:\216\275\215)\226\275\t\326\333\275\347\366R=\372\177\224\275\177\202\333\275\217~Z=\2155\214\274\367o\324\275s\037r=v{3\275V@\325\275\022\"\306\275\023\232\232\275\222\206+\2755VO\275I\377\200=\263\217W<\240`[\275\256\020\223\274\035\002\022=\020\342\334\274\255\240P\2742\000\260\275jE\231\275?+\334=\313\301r\275\324\346\340\274\270\240\207=\232\310\244\275PK\200\275*\022n=B\364B<\243+\010=cl\244=o\346\271\2753\327\315=-s\251=\375\277)=\303\210!=\272\220\245\275\350U\267<\207_\211\275\203*\306\2759\224\020;\347\334\270<C\265R\275I\342\023<\026\014\327\275M\235\306\275\320\203\341<\027\371\346<\272\352\212=\326\021\305=\034\212\263\275\340\332\311\275v\274\216=4C\323=\2306\213=\204\275\263\275\006fB=O\323\205\275<1\322\274\026\321\221<\000\027\260=t\331\322\274\031\315b=9\237\206\274\363 M\274\260Q\326<\177\327\201\274$\002\302:f\013c<\000dd==\363\237\273\036\243\037\275\376\036\213=\311\247J\275\345\337m;x\0137\275r\257\316=V|{=\324\031\350\273\216\322q<\355\364\3469\030up=\300\373\315<\023`M=\365T\236<\363\236\234\275\246\206\216=\r\\\377<%V\204=\004\257\341\274\312_7\275\257}U\275(\336Z<2w\000<\253:\330=\263\356\324<n\365\232\273\035G\361\274\326W\013\275\027:\336\275\231\000\310=\211y\252=\nC\234=\231\267\224\275\027/:\274\202\244\267=\276\224\311\274\026\225\006\275\325\234o=e\271\260\272\355Y\300\274\ruY=\307\225\260\275\030eh\275U\370\312=\370\217\220=\220\307c=f\362>\274\002\347x\275xi/;$\004\322\274\242\221\022=B=I\275\361\346\005\275\000/\250=\371\001\277=Ap\210\274\020(\227\275\3065)=L\027\274<$\271\312\274\303\001\007\275\004\022C\275\3666\216\275)1\245=\3744|\275\264\310>\275\374\331\314:\370\350\007=\305\327\214=,\027\301=\277\207n\275\345\t\207\275\363L-=\264!\337\275$\317\247<\275\337\350\274\224\200J=\r\332X<\244\316\016=\363q\244\275\374\317<=\255|\261\275\211\256\313\275\226|\006<x\265\216=\005\310#=\025r\202\275j7\352<Z\255\311=\211\341\201\275\260\214\014\275\03686\274\311wc<\323+\201=\020B}\275\306\004\203<\265\362t=\211\262\217=\335\341\204=\2376\331=p\252\233\275\002K\206=\335\332\267=\223\213\314\275C\262\205=oV\212\275a\334\022\273\277\022!\275\"\207\243\2755\261p\275A\310\251\275\220r\272\275\200\022\202=\326V\334=\204\2361\275\335\031\305<\224%\305<\322\326\202=\306\276+=\216\220\030\275X\037\216\275\357\264V\275\234}\316=\317\373\232=\312T\317\2733\324\202=\023H\262<!\017\240\275wM*\275\202\026\023=\337\t\245<\351\202t=\357\001\206\275\376QW=\360\037\265<\316\352\375\274\005M\226<\353-\314<\250\214\255\275 \245\255=\313\376\231\275!\252\031=w\025\261=\300\243\337;\370\346\256=\302q\020=\013.\230=\334\207\034\275\263\330\275\275\326\255\334\275\304\312\020=\000a\327\275\244\213\270\275\244\017R\2756\201 <\036\027\301<\006\275\306=)m\336\275.\342\235\27525\'\275tj\211\275\247a\323\275\371w\234=1]\225=\3328\302\275\210k\222<\3710\256\275@A\330\27579\226\274\036.\262\275\204Dc\275\002\001\337\2751\020\217\275\315\035@\275\2562\026\275\rh(\275D\330\322=\215\202[\275\332\313e=\325F\247=l\316\312\275\326\362\033=z\255\215=\327b\317=\221\320\312\275\355$\237<\001\320K=\026,\202=\341\346\000\275\216\034u<\007\341\303=\300\317\300\275\026\241\016\275\301\310\250=3\223\203\275\222[\214=\245,\273=\031y==\207\242\216<.\361\347\273\004<\"\275\017\222\n<Z\365\200\275\021\341\262\275aw\247=-\300\345\274A\032\302=\030\332\314\275\035\001\277=Pd+=XYZ=\253|\311\275}r\242<B\237\265\275\335[\321\275\377/\222\275@x\273=eJ\260=\021\366Y<>\356\014=\301\036\354\273\224A\317\275?8\235\275\323\372\302=\217\220M\275\316\037\211\275\310\205\311=\331\203\202\274\321\255G\275B\024\304\275X#\255\275\355\006\334\273\217\000\266\275\247\323\204\275^\221\215\275uG\222=z\345u\273\322\307\223\275)Z\271\275\356\222s\274J\221\254\275\353\373.\274\177VU\27559M=E\3376\275)\323\037=\274y(\273Z\203\314=\017\031\224=\312)\203\274j-\007=}\243o=\213\001\027\275\\|\327=i\3403\274\004\333\202\275\226\311\205<-M\025=W\2249=\224\271\323\275o\003\263\274\001@\030\275BG\207\275\023\214]\275LW\301<\023#\320=\214\261\n=\345\027\335\273\312\311{\275T\217\305<\320\272\310\273\002\321\010\274\0029P\275s\374\231\275P^\243\274\030yz=\354\354\227<\222\336:=\377\223\256=i\250\275=\206\255\301=\324\021\034\275\3676\213\275\370{d\275\266\230\004\275\325Q\030=Y\254\245=\305\002h<\007\234\331\275*61\275\013\\\274=\375\255\212\275\364N\224\275\321};=\303\313\262=^u\336<h\357\242=\330Z\271=\270\316k=\316pn=\300\256\200=^\002d\274\313]a\275LhH=\257\026\325\275\255\245v=b\341\231\275\342\275l=\303\257]\275s\036\372\274q\361\023\2757Ec\275\207\354e=>2\260\275\366\301N<80\265\274\243>t\275s\371\260<U\212A\274Tk\025\275P\357\231\275\233\022\312=E\217Q=\nW\220\275I\212\215\274?\315\203\275\256\225\314<\261\220\320\275\230\261\230=\036\371\330\275\355t\036\275c\005\274\275N\202V\275\372\333i=\375^\300\275\325X\024=\275v\265\275T\243\245\275u\224)=\246\365+\275Kn\231\2751v\310=(\360\244\275[\016\232=\206\027C=mr`=\236\227\023=Z\344\210\275T\007\262=6\363\350<7\300\203=\000\372\216\275T\264\252=d\370\312\275\207\006\254\275\253t-=A+\034=@g>={o\217\275[\246\256\274a\313b\275x\330\312\275\332\242 \275\2728\334=\252\334\234\274\267\310w=\340\336\002\275\257\323\253<\324\371\231\275\201>A=~\036\'\275C\037\212={\366\336:\246\037\321\275\204\325\036\275@z%\274\263\243\233=\262I\335\2750g\317=,\020H\275\265e\221:\260\240\245\275 \222\371:Y>R=\222\334\242<\213\361\024<c\364\305<o\275\255=\255U\202\274\257\030\227\275\034I\323\2750\256\234=\264\306\366;kAt=j$\216\275\242\265\215:\261\243_=\306\3428\275\037{\276=\335K\274=\210\210\321\274}I!=8\343\301\2751G\212=4\234\276=\235@\017=j\315\316=\250T =Z\376\354\274\205\200\236\275<\337\251\2753\2757=G\204\335=w7\336\274Q\000\237=\353~\261=\360\231\243\275v:\225\275\376\272\334\275\322K\303=\212\275w\274\277d\247=5\346K=\236\006`\275\244\253\243\275\272-\313\275\277\257\'\275\2220|\275id\333\274\271mC<\204 \266=W\032\267=\351^\r=\341\024\310;\275\300\202<\246:\213=\013o\305=\242>\320\272c\'\201<(\313\n<\331b\316\275L)\330<r\334_\275\377\327T\275pn\350<\365\r\030=\304sF\274\313L\325\275C\236`\275+\013O\275c\212\013\274\361\225Y\275\352\034y\275\315\325\225;\016\224W\275\270\033\354<\371AH=\235\362\212\275\034\n\300=\357\264t\275Fw\205=\322\320\207\274\351-\224\275e\200\236=G\201R\275\365\014\354\274X\236\032<\3004\031\275QC\216\275\305\356\217\274\355c\310\2750O\335\275;lN=\r\306H=\322m\272\275\353\363\254=\306X\235\275@\345\267=\"Z\031\275\310\025\010\275r\324\256\275\216\0135\275<\231E\275\210\356}\275\211*\211\275\014\242\226=\333\314(=\024\\\215\274\246\212\335=\252\371\244<\320\020q\275\252_\305\275f\036\365<j \004\275g\367\212\274\302\013\301=Y>\001<\"\314\254=YP\213:X\222\243\275\224\211\364\274\220\231\333=\373\262\264\275\351\243\030\275.$\024\275\225\204\322\275\271\256\n\275\346)\226\273\250\235\267<\022\305\331\273D\344\256\275\027\351d=\366\265\256=\326\016*\275\366\357\211\275p9\335=\025\"\214=R&\277\274\322*\330=\020\021\244\275MR\026\275F\017\206\275\331^\317\275\2073\010\273!$\263\273s\275\303:\2040\264=\343s\022=M\013-=\244.\307=\357\354\221\275hBy\2724\025\222\275/!@=\005]\273:\035\306\021=\350\277~\275\352\242\353:?\253\370<\271\357-\275\251\236\225=E\322\321=\265\364m\274M\365\254\275c7#\275\276\361;\275\204<O\275i\223\246\274\302\220\037\275%\331-\275l<\032=\233-@\274\027\361w=-\265f=\334.7\275\276\363\201\275\034\214\013<m\337C\275\303\014<:\201\t8=\020I\000=\332\336\226<\337\372\203\275\023\357\334<c\234{\274\247\302\266\275\355gK=\253\316H\275\250\026\324\275\217\320-=>\260\334\274\344\257\271\275\275\246\214=Z6\215<\304\314z<\221\264\222=[\357\234\275\200\002U\275M\202\247=W\347\\=\344l\216<8\303\t=\263\305\304=\366\361\325\275\256\352d\275b\307\261=\2743\375\274\370\235Z\275\010\021\240\275/\251p\275\'f\006=\010\320\251=\247\001\206\275\360,\220=\\\351-=\374\027\037;Q\337H\275\370\214\304=\302N\260=\303E,\274\277\274\262<\203D\267=!\263m=1\301\003\274\275\360\275\275$_\333\275\'\310^=\251\260\251=\205\335\241\275j\270\371\274R\330\367\274W\223\273\273\203\246\326=!{\236=\242g\035=\302\324\311=\034T\240<\213\'\007\275\340\371\002\273\363\236\313\275q\344\005\275`3\247=I\216\223=\305c\"\275\344\316\245<\255\346\324=\021M\336\275\t\227\261\275\255\236+=9\310\243\275\344\005\232=\277\246.=\325\305\343<H`;\274\244\333\315=#\302i\275\200\363\273\275\360\372L\275\265\021\303\275\370\200r\274\271M\267\275\366\360\230\275\363\310\230\274j\001\232=O\263\203\275L8W\2751\276]<IX\254\274\2037\270\275\rW\220\275\036\347\207=\227l\330=\017\313\256=\241\\\226<\326\004\365<\220\204\332\275\032\227\317=UH\335\273\374+V\275\024?\t\275\203\017\267=\000\304\032=\000\035\354<\257p8\275\201\342\244=:@V\275\037\036\263\275\212\340\205=\227\203\304=\216\225\265<\207\261,\275\222\374\026\275\317=B=\0068\021<\231\237\204\275\307%\244=\215\312\271=D\253\211=Y\220k<\211\232\201\274\332Y\327:D\237\311=b\363\227=\303L\201=\245BP\274\232\267\243<!*\325\275B\370\213=\251`\242:\211l\311=\242S\232\272\016k\201=I\254\023=\360\253\277\275\244\311\244\275\216\334\262=H\323\025\274\004\3052=\025\313\260\275\264f\300=-\373\007\275\311\027\321\274r\305N=^\032\302=\214\362\314\275\312\307\317=>1\217;Q\250_=\347\313M\275Y\024\213\274\3008\221\275\313\034\002=\352\320\227\275\241\376>\275e\t;\2759\207\203\275<\323\250=\005\211\255\275x\005\230\274\003w\213\275\331\316\275=\361\330\330=l\225\333;Q\233S\273\300p)\275\225p6\275\r\032\213\274\222\305\227\275\274v\223\275\224\'-\275\324b\212<\'\030,\275\204\016\277=\252\r\207\275\251\010\010=\226\366\327<L\214\264<E]V\275\223\036\376\274\222D\307\275m\323/;\376tF\275dC\273\275J\227\207\275\370t\327\273F\"\267\274\365|\332<\342[\260\275\366\324\033\273\241\303\254\275\273\251\246=l\005\177\275\2243\376<G\252\021=u\'\323=\321\242\027\275\334\0361=<l\323\272d\322`\275M]b=\244Q\025\275tH0\273(\262\321\275\377N\231=\216v\371;w\003\001=n\245<\275\275^\226=J8\260=<d\255<\356\235\260\274N\315X=\343\277\020\275 \316a\273\220q\311\275\217\227\267\274fd\271\275[\270\357\273\276\273\335=\036EL=M\232u=?\330\331=:\346\334\274\221\3215\275\256\230\252\275\300\276\275=Au#\275^P\336=}f\212\2758\016)=\270\320\201=\375nd\275\000,\243\275\300\320\254=&N\250\275\t5h=\340\322N=`\313\340<[\320\002=\325\232d\273\010Ba\275\315\302\230=A~7\275\256\317f=\230\320\030\275\2733\245=\230\362\262=\304[\327\275\272\027E=\370\242\245\275\246\037\246\275\335\264r<\177\303b=)H\260=\343\213l\274\3354\232=l\240\225\275Z\250\022\275\205\013\271<5\237\235\275\017a\001\275\205\264\022\275Q\235(<\032\270^=\026\314\244<G\370&=\260\212g=_\223\201\274\331\270\256\275|6@\2743\317\336\274\3761J\275\305\344_\274\373\026 \275\311Y\245\273\330I\222\274\325}\246\275\364\245\237\274s[\023\275\337\246l\275?\344\276;\341;E\275\234_\240\275B\334\321=\306\013\224<\375\033\254=\036:\207\275\\\274\200=\256j\277=R\013\226\275\206\005_=\027\324\321=bFi\275\340p\266\275\035\211\267\275,\022\213;\250o\241\275\240\351\327=\261\003\272\2756\261\314\275\251A\263<m)`=:M\005\275_\333m=\337\240\201=\363\240\310\275\351}\261\273\354\230\253\275#\254\271=\314\311~=\001\342\240\275\346\374\276\275\206\",\275\340j\225<\222\315\026=\262\260\253\275\t\253\207=\'YA\275\257eM=\212\242\265\274)3\371<\221\022\204\275D\210\221<\250<\2538\310\257\224\275:\207\204=&\354W\275\246\375Q=\312k\327\275\354\224\363<\321\035\320=\207\031\341:\204\022T\275\230\322\214<\336\327\260=\204#\273\274\351\336\210\275\207\375\204\275\263\010\270<\325\320\322\275\246\032\255=\316\013u=\241\301\221\275EB\316<\321\250\020:\025k7=0\n%\275\204h\240=\233\220\332=\300?\276=\301\326\263\275K\034|=k\253\334=\365\306]<}k\254\275\002\026\200==\022\375<B\177\277=5\231\004\275\324\021X\275\314\230\370\274\307?\232=.6\273\275\374\023\311\275\231w0\275\222\376>\275!\037\203=\272\260\226<\375\254\223\275\006\331\331\273s\323X\275(\004[;\207\'N=\3506\374<z\373>\275\021\205\035=c\247c\275fc\253\275#L\231\274c\374\253\275\276?\236=\207jj<g\177\273=\300h\232\275\205\2732\275\206\347\364<\016\274\243<\224\215\374<!@8=7\033m=]\243\001=\230 \313\275\031\267\207=\3457\277=\205C!\275C!\257\273\373\247\230\275\364\264\240\275\002F\276\275\275\220\220\274\355<\255\275\354\371\253<\205\367%=!~\325\274\252\226X<^\277\270\273\361\346?=\003%\230\275\310m\224\2759\376\226=,\217\277;M\025\331\275L\271\025;\000\254\261=Wg\251=\350\253\240=4c\233<\004C\316\275 V\213=\034W\215=\021\302\227=\266]G\274/\227\250\274\237\031\245\275\321z\354\274\206\372\253=1\271\225<B\323\n=\006\247h\274D\364\211=\305\256\027<\013\007\372<\301\212A<UCh\275*\214S:\275\016)<&\220\232\275f\r\261\275\342\301\217\275\216\365\016\275\035R\177\274\314\351\211\273\t\314P\275\314\321x\275\213TX\275\270\303\311\275@S-=\333\223\334\275\204O\263=y\022\203\275S\341\250\275jE\303\275\022}\304=\337\257\205\274d\344~\275AvL=\314\311\374\274\"T\272\275\212\347M\275\000\226\241=`\315h=\177\031Z\275\203\376\220=\032\020\030=\275O\350\274:\243\230\274\312r\237<*&\216\275\370\367\232=\313L5<9`d\275|O-\274\210\252\303<\001\251u\274\322`\033=\217\226\322\275+J\005<v|p\275\205\242\247\275[\006\270=\220\311=\274\253\003\252=T\025\254\275\177\232\275<\224{)=\017\326\213=L\266\260<\332\020\231=\236\034\242\271l\232\005=4F\247\275\350\330\217\2731\264\215\275\t-\231=\251+\036=\316K\251\273~d\231=y\243\010\275\247\346R;\336\007\203\275\267\234>;<q\302=\373\016k\274\223\022G\275\262w\217=!\305\336<R\026T\275\243\"\"<O\223\300;\241\305\036\274\310\377\272\275\340\212\217=\340\353\224=\313\r\243\2753\222n=\323{\335=\310\362\343\274\235\354\261=\266\230\263=d(\202=\257\366E\275\250\356\315<\206\214d\275{\273\205\274\202^\022<~\244%\275$7\260\274J>\347<ZQm<\303/\276=x\350H\274\263\007\332=\231\276\210\274\026\336\007\275\246\356\251\275J\037\254\275\226\221C=\033\335\243\275\214\254\000\275z2\r;4X\245\275^\241t=\024\217\332\273\355\"\320=\007\373&=\217\017c=r\253\252\274\361\266\035=5\361\260\274D\010\221=\213_\241<\233\261\033\272\007,\221\274\366N\363\273\343s\313=6\315\315=\222n\017\275\321\311\307=e,D<\3712\373;\037\227\203<TA\316=o;5=\363\230\331\274\224\370f\274`9;<\013\023\245\275<\016%=N\315\216=s\034\310=\037\346-\275\362J\200<EC\325<\302R|\275\202M\350<M\240l\275\356a\266=u\200\204\275y\203\246\275,\231\227\274\"5\325<\365\207\'\275-\355\275=\226\307\227\275\237>\n\275\"Z\257\275\334\315\321=\241\037b\275\323\300\244=$\310O;\246[\320\275\006\372\261\275\342\311~=\323\341\311<\376\t\204<\t(\000=r\331\2149h\300\230\275\235\212\350\274\007>\305\275h?[<\207\365O<\347#I=z\215U\275\037\031\263=\003\346~=\263 \300\275\334\334_\275ak\266=\206N\263=\334S\207\2754\346\026\275\035r\267\2757\226\250\275i\266\300\275.\373p\275\235\330\234\275\342\220\242\275\316$\322\274z\006\034=STO;\025l/\275Z\247\212=\'\021/=\026F\275\275\346\267\357<L\247\235<\307\334\260\2756\316;=\264\367p\275s)d\275\246\335\257\275\366\te\275\352\337\004\275\031\333)=Y\364\225\275]\372W=\364n*=zZE=Sz\220\274\020\375\202\275d\000\265:UP9\275\027^\330=sn\277=x~k=Kit\274\034\275\005=\236\\\003=cB\372<\362\021\212=QBO=\0060\265\275&l9=\275\005\261<0\357\227=>\365\213\275.\266\305=X(\236\275[q8\275\343\365\235=\277\274\202\275\n\264\314=\3426\013\275tq*\275\223N\224\274Q\337c\275\000\233\275;\350\262\231\275\302\020p\274U\3714\274\223\005\304=D\211\302\275\003k\215=\307q\251<Z\344\033\275C+\316=hkv\274?h\010;w\204\327=\262\266\204=Y\273\234\274\"\374\233=?\227I\275\031\325Y=N\256\t=\357\272\363\274Y\030\271=\231Z\270\275\332\266\271=\247\321\275\275$\210\323;\277\245\327=\234\'p=0x\257=8\036\247\273\177Ub<h\003\324\275\031b@\275\025\374\026\275x\344\026=;\220\031=F2\244\275N}\312<\340M_\275!\355\274\275+\325D\275|v\377\274\001\353\337\274i\035_\275]\022\204\275~B\227=\357,\311\275\257\024\376<b1\241\275\252\022L\273L\273\014=\327\001\315\275\304\325\003\275\033j\236<\312\360\235<4\"\241;\177}\260=Tlh\275y\376\213<\256\203E=l;a\275\302\357\367\274=L\253;\300\301n=\3715\304\275\325\277\010\274\341\236\237\275\364ad\275\364\305\317\275\313\251D\275\247h\203<F\327\262\274\221\337]\275\223)\336=\230\303\177=\317\'\020\275\014QY\275?\306\272\275l\231F\275\370\374\256\275;\216\276=\027\013\304<s(\261\275r\277\241\275\227\004\271=\206\256\276\274Gu\260;\2762\330\275Y\363\002=\205\317\331=l^\307=D3;=\233\237h<\276\373\215=\340\336\330\275\310\343\315\275g\252\263=\2246\302\275\323}\220\275\365\233\274=\370\322A=\237\005%\275\277K\362<A\357\240\275m_u<0a\347<\214n\205;\216\346\310=6\307\216=B\315\'\275\322:\322:\031L\013=K\356\262;\251\247\277=\270N\242\274};\223\274)E\334=\306r`=\311\352C\275\366\230\014=\263\001\271;\032\006W\275iR\354\274?\304\237\275\272+ =%D\260=\"8\345\274\257Vo=In\225=\234\n^\275\337\266q\275:\214\337<\032\341\316;H\3206=\236\272\224\275\177\r\226\275\243\314\271=3\352\243=\263\364\207=\".\220<`\211J;\260\255\244\275\016\222C\274(\305\323=gf\210\275\020\002\217\275\340\321\034=\231\255\257\275\317\335.\275\311\347\314=\264\226\332=%|\025=\361\307;<\265\241g\275bZ\201=\364\333\274\275\276Be\275\247\220\236=\361~\263\275L\314\020=\371\374y\273?\265\312\273\020\264}=\365\266\005\275+\211v\275\007q\214=\204\234\300\275\203j\302\275?\270\330=\264\353\316=9\375;=?\265\323\274\251\324\230=\034\273\210=0)\234\275\224\006w=\304~u\275\355_\005=u\030\333=D \216\275\357\246\304=\355a\307\275@s\007\275\273\352\275=`\317\362\2745D\333=\203\376\237<\344\005\036=\005\tX\275#\365\235\274\024=\026=\301\374\311\274\265\027\347\272\025Oe=\246\260)\275\357>\331\275#\300\204=\372\244\372<O\326!\275\216\025k=\213\316?=g\3672=+\354\317\273\034\250\356\273\220\362&\275\031[\242=\231\347\354\274+[\265=\2436\227\275WW\363<\tK\220;w\224J=\251U\256=:*\256\275W\316\351<@9\213\273\372\321\242=\2535\024<}\256y\275>\366\240=\260\\\300=A1M\275\014\276\r\274M\374\276\274W\367/=`\316\276=\312\275\203;\222\343\267\272>\013u\275N\024k=\215\013\242=\t\351g=\234w\003\275\217p\306\275\243\267w\275I\337W=\203\260\310\2753\304y\275\n\273\322\275\227\033Q\275\264\271\315\275\305\216y<\313s\353\2740#9=\336-\321\275\373\252\265=\302{]\274\336\353\322\274b\032\325=\270\365\214=\315gz=\'\n\333=\330\252j\274\227\310\242=\270u\226\275]\001\224\274\305f\276=\034#\014=\014\270\371;\313Yp=6\017\027\275u\221\245\275-R\234\275\217\214\262<[\226\366<M\270\006<\260P\356\274R\310\252\275\311\307\335\275p2\305=\035y5=+\261\272\275\347\221b\274c\246\212;>=\335=\250d#\275\222\245\301=\225\372$=\340\250\326<U\240Q=mo\256<\360\026\361\2731\365\316=\363\r\355\274\241\312\374\274\332F\371\274\365\325\204;{\256\230=\373\364\207\275\373\327\026\275\203E\302=&^\267<\373r\021\275^\357\263=G\337\300=\026P\317\274\315\205\352\2740\217\032\274CtM=M\262\266\275`\321\201<u\003\210\275\344\325\310<\205\\\231<\003\255\027\274\326U\232=~C\227<\332\247?=\201\325\223=\211$y=\335@~;\265i\241<]\367\250\275\021\016\251:\304\312\263\274E1\220=\227\267\016=i\266\264\272\2713\206\275R\204\247={%\305=\371`A<\350\240\262\274\201 \323\272\221\206\211\275\201Z=\275-\271\207\275[\335\311\275a.\327=\233&c\274\023Sz=\370\233\271\275\207\344,\275\'$\206=:\345\023=L\032\252=\t\177=\275O\005s\275\363\250\316<!;\370<\265\212v=\250\232G\275(Dm\275\313e\261=v\305\205=D\234\221:\245\t\264=\003\227\224=,\217\000=\352\246\332<+\337%\274\214?\317=\320rp\275.\211g\275O\317\205=\347\362\263=In1\274!\321\272=\3417\256=\014\350g\275\223h\361<\034\352\312;mL><m\225`\275\366\301\245:\222J\361;\3245f\275k\376\303=\335\241\202\275\\d\205\274R\2155\275o=\274=\267%\231= Vn\273,y\023\275\257\302\227=\005d\312\274\000\342\311\274]\215\320=\241\006w\275UfD\275\307)\231\2747\002\"\275\273\216\226\275\246\251B\275\3013\006=LYL<\251\202\177\275F\242\252= \370G\275\017\242G\275\207\000\314\274\375h\236\275g\376$\275kU\'<\353Z\366;\267\207\222\275\010!\003=\366\370\253=\032Mj\275B\274b=\311\030\010\274\317\366\317;\270xq\275\306J\321=\247\365G\274\250\022\207=\\\347\222<<\370\264;H\003O\275]\337\261<\251D?=>\"\265\275\357&h=\253m8\275\365\324\314=x\025\326\274\023\335\235<\005\307j=G:\372<5\025\231\275W_\233=\344\211I\2756\005Y\275v\344==y\0070=\205\322\335\275\3759\241=\331\325\304\275\005xs<zl\206\275\337\364\216<\354\253\246<\357)]\275\261%\235;\031u\377\274\211H<\275\361\361\245\275U\247\301\274\362\373\254\274m\300\317=\016u\321\274\325\361\200=\307\346\t\275\206A\226\274U\334{=\026\330\270\275&\035\331\275\350\266\317\273AM[\275BK\270=P\231g\275*\021\302<\t\347\323\274\247e\242<\207@\306=\230\211\031=\263\000\n=X\276\000==\320b<\2025\273\275Y\215\276<\323\353\266=\322\002\332\275\r\017\035\275\027$*=\361/H=\271\303o\275\355\000\313<\324\323f\274\007\341\254\275nsT=nl\213=\204\3538\275\274\035\335=S\231\226\275\007Y\203< }\231<\017\031\261\275\366\213k\275q\234\226\275\266\010<=S}\213\273\353\227d=`\255\304:9\314\302\275\332\247\366<3\312\213=\222K\341\274\2440:\275\232$\332\275gi\242=\nr\277\275\002.\202=\352\221\306\275\343\231w=9\036\243\275.\365\340\273\013[\222<[\272\304\275\377Y\274=\017\320\'\275\213<d=\303w\330=\207\n\335=\245\214\346<\037\375\265\275iB\220\275dy\363\274\314qF\275sL\305\275\003cj<2\355\217\275\022]\324<=y\333\273\3745\026=in_=s\340\336\275D\032v\275\363\352\257\275X\277n<cZ\300=0\202\311\275\207Z)=\351o\220<I\2025\274V\221\274=N\314`\275D!\357<\275\0347=\275\271@=<\353\004\275\362\277g\275\213\366\203\275\262l\220\275\273\242\302<\000\377f=\347\342\323\275\020\332\017\275{\022\'\275\267:E\274\333\251A<\357s\254=\307\317\n\274\024<\010\275\200\031\202\275-\303\316\275&\262\251\275\033\343\217=\272c\014=\377s&=\200\363\336=,\003\231\275\2064\2569\257\316\220\274\0028\005\275\370\263\202\275\224\213\205\274\334\235\237=\327\r\303=\370\334\234\274\340_\233\2744{9\275\357R\266\275?6\\\274\240\342\270\274\214\375\336=\237_-\275\006\036\247=#\275\204\275|\333\010\275\"D\036\275<N\241<\266\337\276=\013V\'=\031c\303=\2037\003=\344\341\300<\234\253\250\275\361+l\272O\025\315\275\'\235F=\226\360/\275\236$)<\266N\242=ke~\275\233XZ=\377K\335<\367e\302\275\342s\251=*\202\311=\247,\317\275\354\342\340:\236\005\243;;\365P\275\215|\322=\265\t?=\331V\324=\332\231\206\275h!|\274Z\017P\275\311S?\274R\313B<\302^\007\275\250\306\304=\212\323E\275[hf\275-\036\034=>\002\322\274\261UO\2751\026\305\275\005B\243\274\322\366\017=Gj\025<\221$\312\275\254\357{<\240\200\316\273\272\036+=8\327\305=7\0013\273]\037I=\305\244Y\274\211\356\004=:f$\275$<\247=\366o\304=g&O=\177\313\346<\372O5<\237\020\233\274E&\t;#\244\n<-\220k\275G\002\220=\345\225\003;\351\361m=Uw\327\274\014\330N\274^\221\207=\261R\207:\201\260\204<Qv\306\275\200\306\327\275\275\234\027\274}\032\014\275=\251\201\275J\303\217=\\\217\325\275v\262\273\275\372\000\016;^o\236=\210\217\212=\323 \307\275\253\345\316=\305a]\275\252@\024=\333m\032\275\370\360\205=#\354\326=\'-\215=3d4\275\205l\023=\303\275\225=\237g\370\272\245\014\330\275\200\035\254\274R\341^\275\365e\330=o\321\243<C{\253\275\023\336\203\273\331\306\310=^\341\224\274\263\276\310\273\"\204\305\275\rE\220\275y\024\213\275Q}\030\274\021u\256\275\314r;=\334E\317\273\227\320\016\275\2662\215\275~\331i=\211\255\274\275\355\360\267<\320\"\307\2753\"\273<\014\020\223\275\272\235\240\275\025}=\274A\2555=\177\230J=\003\315\307=\345\220J\275\356\337\333\275L\351\253=\3119\204=aM\353\274\025\350\232=\224\2531=V\224\340<\316O\321\275\022_\357;\336b\272<\203\310\322\273n;\003\275\230\373<\275\025d\274=p\244\317<L\'\342\274\365\340c=\345\027\251=\345\307\242\275/\266N;2\222\353\274-\363\210\274\265\332\302=\251\364p=M(\265<\360^\316\275\347\271\203<,y6\2749i#=Uu\240\275Z\312\303\275d\024J\275\025T\235\275\232\021\213=\351\234\337<\022\324\263<\n\005\260\274\002\020\266\274IT\357\2745t\300\275S\'^=\213\301\244\275j\032I;\335\215]\274\204\023\317\275\302\362\327=)\321e;\243\264\033=\314,\315=\321.\005<|\271m\275#}\206\275\262 \340<F_\334\2751\256\236=\200\021D=KU\260=/\022\242\275\335\205\304\274\315\236\260\275I\342\226;\370V\007\275\356)\336=\362R\244<w\321\020:\374:\311\273\235\315s\275\027\257\200=\014\356\305\275\2214\305=\216\tq\275\333\301\261\275\325~U=j\351\247\2755\261\235\275\3036;\275;\201\224\275\001Nu\274>\033\334<\255o%=\022Tw\275\273^\236\275n\230\213=\221{\006=\260z\214=r\300`=\301\362\237\275\034W\277=nY\221\275x\261\275\275\372;\235\275\304P\004\274Af/<+\346b=(d\200=y\303\223\275\354J|\275\230\354]\275/\246\200\274\315zm\274\273\354\304\275\363[\322=\256\235\325\275^(1=\227\202\320=\215\017\216\275\362\025\021<\036\017j\275%\365r=\2254\n=\217\212b=\345rN\274\207O\332\274\332Y\234=F\255\334=\232A\247\275%?I=\017cz=\373\372F\275dF\235=*\3427=\007\353\377\274\034\223\202=\232\237\273\275\267\013\336\275\301\212\007;\344ec=\245\006\335=M\321\246\275\366\034\217=EkE\275\346\002\304\275\235K\205<\220\033\202=-A\326\275\"\227w=\014\341o\275\025\333\001=\n`\002=\225r\217\275\016\363\240=\360\333\025\275\313\034w=\331(\312\273A\031\247<z9\303\275E\002\327\275\266\030,\274!H\251= q\214\275C\307\255=\214b =U\366\224\275 \023^\273\017\212\210=\020\032B\275\220\217\213=\026\272q\275\237\234\272<Af\336\275\005\223-=\271^\202\275\343\000C=\251c\310\275\227\241r<\2172\036\275\033x\212\275H\247\257=\306\225\320\275j`\310\273\334\203\363\273\234\374G<\237!\376<\335Y\320=\304\213\326=\266\334\255<\031\007\331\275\300\214\220\273\026;\316=wlA=\343\376\316=G\360\030\275\205B\204<\362\257\033\275\3007\322\275\032r\301\275)\304F=\216y\031=(k\235\275`\274\003=\252\252U\273HY\214=;\327\031=\361x:=b\315\214=3c\027=C}g\275i\3248\274T`/=, \224\275\2277\221\275&;\317\275\320s\\=\207\361\316\2744\275:\275x\007\201\275\354;\333\275=\0370\274s\207\037=\360\366\264=t\305\336;C\327F<%Y\235=\253J\210\274\242\276o\275\224\"B\275EH\003=\300\332\203=\221\021\240\274\017\221k=$\310\276\275\025\225\330<\241J\247=p\246\215<\202\265I\275k\207\275;\347/\301=\227>\204=(<\"<:,\254=SV\251=\221\365\324\275\253\374E\2750\367\335\275\274-3\275\210\305\254\275<\320\270<Q^\363\274\226\251\235\275\037\373\361\274\351\340\210<\375\350\210\275\363\300\335\275\203\247\314=\317l\247=7SR\275B\021\211=\273]\331=\341\036\031=\346-\225\275\332\344\241=\357K\245\275b\024\224=\022F\256\2745\210\332\275\002\2377=\375\212M<\331u>=\223\332\224\275\334\242\303\275P\332\"=D\260\277<z\024\202:+\253\224\275\007\240\021\275\360\362I=\311\344\266\275\032\252\207=\256\376k\275\316[\273=}z\022=\213\376\275\274\203X\000\275\251\007\277=\206\205\324\275\236\300\231\274\336\240\221\275\276\344r\2749\356\007=\"\241\222=\220\021\':\261\333\014=\264\200v=\253\243P\2759g\250=\267\030\250\275\257\241\211\275\274\323\310\274\004\023!\274Y\006\277<\364\301u;\2457\272\275d\365r\273E\205\331=[\nu\273\275M\316=\334)\227<\330\200\226\275\314vD\275\204)\034\275\027K\310<0s\330=3H\202\275\372B\265\275\213\014\357\274\351\247\307\274`\340\245=?<p\275\001\356m\275\270\372\216=d\324\266\274W\331\272<\215\016\322\275\0319\327\275>U\022\275\377V@\275\210\300\000\275\346\227\347\274\356\007\257\274\270\242y={\316\202\275\306\337\226<s\337-=\234\240t=\315c\"\275\331\016\256=\275I\227\275\275M\351<Ys\226\275\005\244\342\274\257\365\211\274\307\350g=#\314\n\275\314=\251=j#\300= \220\016;\315\326\024=q\241\227\275\366\021\227\275\264;\330=\265\320\241\275\367\254\226<\273\333P=\370H\250\275\343b;\2730zf=\202Y{\275\353\377\264=\257h\257<B\000\310=_d\270\275t/\247=\275\337\324\275\252\362\264\275\336\241\330\275\351\016\013\275F\024\334\275\213\221\200\275\371\272];\213U%=\376\037T=\261\355\203\274GD\002=y\215\303=\336r\261=X\312\304=w\241{=\224\305\370<\360\300\375<\266\330\242\275\272\326\327=+\331B\275\374\264\037=\366\022\273=v/*:$l\327\273\236m\343;\271\356\324\275\264\305\216<~\332\205\275]\324\202\273\213D\232=\371\2207\275z\302V;\023\324\247\275\025A\243\2756\340\275=\332\373\317\275\027D\317=\2417\200\274l\344\257\275K\243\330=}\024\215=H4[=\376\321\362\272<V\225=\364d\230=%/\254\274\306\020\307\275Q\2170=\314\321\221\275OC\227=\321\017\274=\333\205\006\275y\227\200\275\035\004\245\275\026lG<x\013\335\275%\004B=\311U\237=uCw;*gc\2756v\320<~\257\035\275a\246\333=\222\316\211=\334>\013=\367\265\273\275\200\025b=\206\032\005\275|I\310=(\ni<q\352,\275\346\025#\275\334\257\220=\317\n\264=D\353\271\275\252\263\304\275 \325\334\275E\342\226=>\264\226<\261\026\307\274|\302\236\275\350C\314=\342J\273\2744\306\026<\212\303\026=\337\363\262=\326)Z=\305a\273=\310W\335\275\233\214\264<\213Xx= \217\273=\260\315\305\275\315\201}\275NF\005=\332\343\346\274n\346^\275\247\307\264=\312\341~=\274\200\023\275\3023:\2756\254\211\275\323\252\262\275\274,\250\275\272\302\252=\010Ff=?\351\026\275p3@\273]\334\233\275\273&\233=\270\3222\275\234\301\274=\306\373v\275\007\\\237=\256\035\366<\'x\255=\3528\035\275C\2648=<q\322;U\322\265=\001+\031=\272\353\026=!M\021<E\370\273\275\355\313\373\272\325MQ<UX\336\274nY\313=\320\210l\275-\261\302=2\306~\275\267\261\261=\023W\034=\262D\324\275TI^=E\317U\275G\351\264=\n\244\227\275 \235\263=\027\346\336\274\234Hx\275\346\336\305=g\342\331\274\327\216\257\275\245#<\2754\211\031=\332\316==\260G\336\274\232\360L\275\031\020\026=\360\351\007\275\027\216\321=\3509$\274\372\313\263=>\330\234\274\222U\261=H\326\256\274L\241^\272\231\342\370\274~\242d\275\215\n\303\275\241\016_=\215Bx<\313\231#\275R\241\336\275\307S\351\274mA\'\275\3233\240<\014\355\324=\016oa=\317\257_=\036\024\206\274\003\021\223\275{\325\374<\255\222[\275b\022\373\2746@\254\275\223\341\306\274\227\317\353<\200\325\201;\216\025P=9\334\271=\233a)\275{vy=\233>^=&\272Z\275~\3610\275\026}\031\275\203\024\374<<\216r\2756k\\=\373\237\230=\020\311\257\274c\'\240;a\342\177\275l+:<^A\325\275\325\317\305=e;\202\275C\305\302\275Z\366\241=j\232\213=\224\354\033\275\303\001$=D\233\224\275\014\263\266\275\377\357v\274\306\013Y=\252\263\220\274t\276\263=:O\257\275l\217\256<f\251;\274\370;\246\275\325\272\\\274{\272\313\275\214\016{\274\014XB\275F\364\346;\346N\334=W\002A\275\353\360\211\274g\337\220<P\026\306\275\305\253M\275\246\2124\272\330Y\301=@M\221=\225=\265\274N\027\251=\365b\033\275\006V\313=\277\2008=u\265\307<\"Z\344:\030\356\206=\242\370\303\274\rey<\327\357\276=\231\177P\272{m\200\275BR\244\275\271x\246=p\225\334=\020\272\247\2754\031\213\274\240\037v=\'\326p\275\r\205?\274k}4<F\035\316\274\324\\\334\275\004\215\243=tZ\275=\344\313\241\275\273\374\317=4s\265\275\310\213~=\256\335\031\275Ok\312\275:\333\357\274\324_\177=q\302\016\274\234\323\244=\313\003\347<\027\224\205\2752qJ=\200[\300\272l\033\326=%\325\271\274\236\354/\274\004\205g=p\321\225=R\0365=J\337\302<\211\365\272<j\270\322\275\334\032\017;\317c\311\275\376\347\304\275\333\263\307=\261\376\213=+\365\224\275&\321q\274\201#s=\022B\254\274\371\242\373\274\253u\312\275Y\345\240=\264\036\213=-B\212=\361>\313\275=\346\261=H\265\300=\233ii\275b\211\302=Ul\265=\026\232o=\211;\221\275\267Q\n=G\310\303=Sh\266=\017/\266\274r0Q;n\316\366\274\332 \021\275d\203`=\014\220\211;2<\035=f\241\315\275\320-\035=\222H\210=\002Ve<QE\255=\007{g\275\264A\205<Z4\323\275\344.\261\274Z\267\313\275\346X\260<\257\336\270=\355{1\275\325e\312\275\216\323S\273\006\324\343\274\356\025\013\275\tJ\320=Y4\242\275L\232\257=-n\263\275\244\216\007<\204\031\305=\244\325\245<\037\014\312< O\263\275]\024\324\275h\305\245\275!\021\000=\212\363d<ZH\224=\303\267\000\275}H\352<\356\201\201=\014\344\270=\364\341\237\273\036\202b\275\263T\333=4\241\210=\267\201\326\275\322\0176:\341I\326\275Bs\323\273\020\240\243=x\316\222\274+\253\035\275D\256\322=\272r\250\275q\033\232\273o\230\331\275\005\377f=O\367Q\275\223\341\223<\257\333\206=\322y\262=\342\243\200=W\231\017\275\353\017\230=\310\215\306\275\242:\346:?\271\211<\t\001\026\275\226\257\213\275\206\262\236=V\321\002=\306;\376\274\252\374\301=\224^\037=\211I\240=UH\023\275\256\2050=\366\353\202=8\202\022\275E\204\264<]\353d\275ab\332<M\262\210\275L\240j\274\273\266\210=\3200\230=\017\377d<\021\204\240\275\360\r\301=\261\367i\275\243\356\311=D\205\370\2739\251\307\274+\200\327=\222\254{<\260>\263\275h\361\234\275\212\'\277\273\317\265\261=\271 \241\274V7\304\2753W\013=\324L\263<\203Cg\275\364\025\326\273`\037\234=\303/\301\275S\026\002\273\033\273\322=j\271\336=\202\330\001\275\306\330f=3\204\307=\260\250\020=\350\362%=\177<\220\275\030\r\321=\300\252\256=\237|\013\275O6\030=\252\255f<\345\212V\274\371\2542\275Q\311\300\275\235\241\270\275=\307\236=e3D=\016*\221\275c\271\252=\017\006]\275\026\014\316=s\302\222=\352\375\223\275\257\234\215=\266y\323\275\002(\305=\232^\016=\0021\314=rx\004\273n\372\370:\260\331\313<r>\013\274\324\343m\274\314\274Z\275Fl\330<\022\214\266=^\r\334\275\241*\247=%\256\242=\331\006\311=z6\374<\033\316\271\275*K,=\367\251\233<b\031\257=\367\000\"\275\237\314\231=\320\360\271=\345\220\300\275\226\355\256\275\226T\260=\362\234\336\275\323D\374<\347\237\257\274\307\377\242\275\316\250r\2758m\222\275\220K\330\275\311\306\245\275J\241\356\274\210\324\221=\336\365\'<\331\t\373;\017ME\275\313\036\311=\340\202b\275H\335\234=\347jD=\257\017@<b\026\274\275\216\020\233=\321\275\313\275+,\221=?\246\213\275\341t\305\275\031#x=\206+m\275N9\001<\210[)<\207\364\327\275\024}\024\274<j\307=s\376\221\275\326.\261\274u\"\263\275\274.*=\317\224\262=\321\020\314<M\000\266=YI\245=^\353a;E\020\232<\200]\221=\241D)\2755\221T\275\251&\256\274\265f\334=:\340\317=\034\022\352;\177\314\271=8\342\224\275\006\372\007\273\364\217\313\275Li\234=\3319z=\246\304\246;\202\274\317=\354;b\275\211\001\"\275\371\035\317\274\201y\302<|\005\374\274^\372\301=\033^\236=`a\006\275`\2405\275\355\265\245\275\2074Z\274\301\377\266=\000\203e\275m\375\320\275\235\225j\274\'(\312<\r\342S<S\310+;O\252\255=\255[\\=\215\260\260=\017\027\217\274*\274w=\303\241\024\266\344\235}\275g*\317<\226\235\252\274\r\206\213=\227\252\325\275 \300\321\275\001\371\235=\224\330\270=\211\370\310\274\367_\203=P\016d\274\270D\301=\272\003\322<a\236\254=\257\007\325\274I\263\301<\1777\214\275B \323=\301~\267\275\215\003\370\274Xt\247=C\016\335\275\303\217Q\274\345\213u=<Z\250\275\264\340\322=p*\322\275\362$z\275u\247[\274\030\032\255=\376e\323=5Q\204=\370\315z=\037\374J\275\322\021\001=\337\316\010\275\243\253\344;+\320\243\275}*\257\275*\010f=\343\312\257=\305PG\275\016\373^=\332\007\243=\0326\241=\356\364\022=|\373\205<\356\r\301=\242\007\027\275\273A\263<a\265\207<\007\025\251=A\263\360<q\241n\275\301\373\202\275\270\340\225\275\314\213.=9\017\311\275\300\317\267\274\372\\A=\256\257\241=%\214s:\006\302j\273\217\237\217<\2251\335=\227\366\336\274\033\274;=)\023\243<\364t\212<\226\326\260\274\210P\313\275\001\343\301\275B\003\005=\\7G=B7<=\034\341\333\274\267\274\201\275k\217p<+{%\275W#5=L\034\327\275Y\311\031=c\020\222\2754@\360\274M\023\270=\264-\226=\r\3317\275\017\277\352\274\370zZ\275\203-\246\2747\003\232\275\037\300\204\275k\2218\275^\177}\275\006T\352\274\266s\305\275\2315\271\275\221H\220\275\016\n\311<X\277\271=\213\030\273=a\244 \275f\2441=\023\200\307=\230\007d=I\257\242\275\211\215Z=^\275#=N\026\344;.c\263\275\020\203\242<St\250=&T\225=\244\351X\275\377\341\013=\013\325T=\213%\221=\001\251\234\275\t\262T=/}\370\274\006)Q=\002\033\262\275\231\371\255=j\221\230;/\023\305=\327\017\335=.\373\253<b\263\257\275\022\301\322<\265H\212<\301\262\260=\231{\223\274\371~D=\3022\220\275p\025\265\275\221S\253=\362\024?\275N\010\r\275\033\007\212=\247c\214\274@D\217\275\376\235\327=]#\353<|ZK=\031\264\257\274\306\212%=\304<\307\274\3063\210=!\241\330=\002;\317=\351\237\332\275H\357)\275\310\277\204\275&#\236=\343\031\370<#\326M\275\002n\275<V;\200=\323O\262<\014\311\265\274\036mI=mL\013<*\017\304=\235n\301<\317r\177=\024AE\275\202\271\235\275Yd\241\275\225M\267\274\332\361H<\344,\210\275\263\005\331\275Z\341\321=\300i\"\275\353\014W\275\306\267\261\275\272\014\t\275\200X\324=\\RX=&4\307=\014\332\245\275\0137\241=\256\243\335=\000\t\214=\177\321+\275N\256\327<Vy\327\273\200P\365\274Rg\237=\311P\207=\362f!\275?\250s=pO2=\372\264\263\275/c\222=/#\316=\250\366\232\275Y\320\031;\321v\315=\024>\234=\347\231\266=<\025n\274\201<+\273\346B\206\275\326\t\002=8z\367\274\033\r\030=|~\273=\202|\007\275\345=\226\275\306\037\230=6\265\314\275\346\266\222\275\360%\323\275\270\036\320=\324\221\330<\007\013\236\275\t\207\235\275\226\313\202<O\026\206\273\361\333\303<\021\252\234\275\216\366\326=\255\030\207\275\027\352\014=\247\'R=\271K\313=\332\250\333\275\020\305\221\275\024\314\000<\021u\262\275&\237(\274\377vk\275ae\241=If\207=oZ\367;a=\016=+&\353\273\247\"\243=\n-\200=U\213\327=3\3458<{\236\'\274\034\017\300\275:&&\275\032i\016\275\312@\003\275=\322\217=\023\257\321\274\276\332:\275a\235\022=\366\234\333\275\311\345U=;\r\225\275\233H\315\273\030c\233=\301H\247;\213\3257=\317@j\275\360\213\336<UJi<O\312\235\275\033z\203=\034\365-\275d\316T\274\222\2621\275\230\013\345\274\231\026f=7\277\221\274\246\237\032=^E)\275k\006\243\275\223aB\275`)\321<a\007\236=c\225I\275\n\263\245\275\314\366\202=\207`1=\263\'\220\275\217%\301=1\251\231\275\232\310@=\332\'\304=\227\354\247=y\252v=\305\277\326\275/\3363=\367X\020\272\250K\373\273em\312\274\317[\323\274\366\275\027\275\374\273\325\272\357]\220=W\354K\275i\273\022=\030y\314=\017J\217<\304\177\324\275h\340T\274nG\033\274\023\205)\275\321\201I;47\304=mS\266\275\000\271\324<\276\334\331=\371\300\264\274\327OI\275\027\374\217\275,\025\321\275z\371\017=\211!\336;~q\326\275\017\313\301=\376/\276=\340\322/\275\217\362p=\221\360}\275\207\373\232=\257:\335\272\317\231u\275\310\252\014=\276\243\354\274\222\004(=\202L\177\275\320k\221=\323\215Z\275\250\307\335=\332l\374\274-\241\324\275\203\033\237\274\267\322R=d\020>=\217<\264;?\305\247\275 \035\360<:\336\177\274P\240\246=\237\226\240\275\021\270{\275l\333\205\274\334\212\207\275p\242\314=l\300h\2752\275\267=#\274\270\275\241:\024\275\253a\267\275\3710\225;q\210a\274\211\220\312\275\253\373\275\2757\343\314=\245\350\256\275\003\331<<\371\000;\2756\035\255<[G8=\021P\232=\226\320\213\274\344\214\004=\"\370\272\275\211\001\245=\253\222\335\275,\241\233\273o\001O\275\202_\321=Y,,=T;\262\274\355\375n\275#\264\317=\261iY\2753\324\254\275\374\230\261\275\030\030\260\275\377\262\275=\355\217\341\272\320f\263\275>\003x<\243\371\267\274q\350\245\275H$\271\275\274$\276\272b\022f\274\273\242\311\275+oj\273\031\326\335=\262\020==Y\351\261\275\356\304\237\275\370\232\204\273\'\260\244\2753\355\253\275\271\234c\274\037\254u\273\354l\320\275\231M\351\273\336\177\310=\327\266\261\274\364\025$\274\252l\314\275\304\326\251=\345E\321\275\033\203;=\237\375H\275c\260\242\275\222\342@\275\257\001v=\227|0\275\314\367u\275e\352P\275\212<\212\275\376I)\275\r\377\212\274\310=\227\275\037\037\245=\351L\233\275=\001\301\275\2234\211=\304\255\271=D\225\262\275b\001\030<\374\326\367:.\354\300<\217F\224=\t/\270\275\357*9<\001A\235\275qE9\274S\266\0229\346i\311\274\212L\301\274a\276p<\264\314\230\275\253\361\000\275\350V\330=\354\216\277\2759\246\177=\rH\307<\255\373j\275\204\260\221\275\001E\303\275\037\312\013\275l\372\310\275\224k\t=M&\335;\014\262\003=\004\3240\275\241\214&<X\213\310\275\234\343\246\275\007r;=d\340\262\275%\353L\275\274\010@\275\250\350\263\274\370@\002\275\346O\374<{\204\343\274\022U\315=\221\367\310\274\304\021[=\212ky=7\034\222=\036\224\210\275L\014\005=\003O\317=@Hm=\210\333\024=>\314]\275\371Ux=0\001\222\275\007\2245=\270\002\320=\370O\270\275o\344\310<6\344\335\275\315\322\261\275\003ae\275\201A\204\275=Ks\2752\240B=\"\245v=7\177\313:\3743q\274\266\364\233=\217\005J\274<l\302\275\206\327\315\275\031\243N\275\315\002\010\275\022\226\025\275pK\226=\177\374\311\275\312o)\275P\337)=_+\327=>m\243=\"\211\205\275{\370\313\275\022|\273\275\014\235$=\264\363\254=\254p\246=\336\n\245\273K\026\257<\370\257\025=\343\021\014\275\024?\013\275\205\376!\275\240\247\315=c\220G<(8\004<\203u\315=\220\000\235\275x\335\245=.\315\264={\034\237\275\262\276\254\274\332>\246=^\365\250=\352\322\241<\273O\301<\317\237r\275\031\374\332=\321\025\347\274R\323N\275\366\335\217=\377\221\260\274\202\002r\274\303\002\003\275\252U3<\275t\217=8\236\224\275,LD=\2010\r\274\322Y\270\275Vz\237=\034\261\332=\027c==\305t\350<\207ch\275\333\245\317=\375P\336\275>\323\177=b\277V:v\371\343<[\212\311=V\013(<\032\343\267=\336\306\224=l\317\260=+\377!\275\334\0013=\026O\277\275\237\377\206=K\246\003\275\321\272\016=?\267\014\275f\013\245\275d\325\274\275\235\024b=\004dc\274&\207\301\275\027\315\"\275\371\0245=7\370\267=\030\357\373<!\\\301\274\210r\200\275\275\273\370\274\n\207\006\274%\365\207=\217\325\205\272\252\272\224\274x\254\354\274S!\252\273`\210~=\354\364\001\275.\324*=\337\001\310=\257\271\\=\370\211\313<\213$\244=\375\331t\275\2332I;\022\303\300\274\014\004\305\275\252\235C=(\225+\275z\216u\275\351\324w=\201l\234=(oU<6\305 \274\374r\301\275[\021\334\275\216q\266\275\262\362\263=\025\n\313=#\033\261\274\016\304\243\275\273Ys=\276\320 \275\315R\267\274UL\316=\354\223\377\273\343\210\207=}]\275\275\006R\264=\2677i=A\373k\275\347f\272=b\344\377<~G\335\275\241\265L\274\031\023\240=\202:\267\275XVc=\036|\023=\357\335\302=\260\317\201\275:E\254<\"8\224\275\353\220\017=\356\304\215=s\367\344\274\350 /=B\201\245<\364Y\244=\322\325\302\275d\234 \275m\315\334=f\243\223\274\237\227\214=zU\325\275\201#\036<\2419\204=\300X\273\274\307(3\274\224V\327=1\022\360\274\261+\311=Q\274\334\275\245\234z\275X8\003<h\217t=\004\310\242\275U\354\251\275SDI=Ru\236=3F\332=\206\032\255=\267\027\234\275\255\250L=\270\007~=\340\231*=\337\220K=aP\223\275)\360\276=\372\226\236=\250\266\276=C9\212=N\205\022=\277\234\302;\235\217D=\317\230q=)\203\300<\205\236\254\275\2602\310=\"\220@\275\343\2461=\257\344\213\275`\267\212=\204\035\334=\217F\312\274\251\243\271\275w\372j\275\370\367\230=\2564\347\274^\014\035=1|v=\224=\262=G\020a\275\233&\030\275\274\036?\275\203*8<\367~\247\275),\200<9Y\365<\251\222\276;F.\203\2756 7\275\017\325\246<_\375\324<\373=\246\275\003\177L=\002p6\275\331\264e=\273\253v\274*v\"\274e\373\311\275\353\001#\275f&d;G\203$\275(\001\302\273\2315\310\273@\026\244=\'\t\234\275\367\320\254=\005W\227=\272\374)\275\266\272\331\275^\230D\275\203k\211\275\313\016\273\274\243\273\023\275\271\0023=\rZ\264\274\312\021\036=\321j+\275gO5<\363\014j\275+\220\270\274:\346\310=\360L\226=\343\304\233=\237v\243\275\303\305q=\002\034\255=\265\032\305\274\314\361\234\275P\001\225=\377Eb\275j\023G\274\337\002\232=?\335\337;\275\331\022=\315\023\257\273\333\315}\274o\364G=\304\223\215=4\313W=\032\002\205=\211\232\272\275\254\272\322=\262%\254\275\363\350\374:?\301\225=n\244\177:\202\262\324=\241u =\215r\257\274\337\024+=I\243\315\275\203\262\245\275/\205\247\275pl\243\275\360\317\223\275\272\304\303=\330Q\261\275\24468<\274QO=\345$\211=\354\330\242=\375\002\246<\304\247\246=XW\272=\005\376\311\275\256\037\244\274\376\272\021=T\2415\273\321\264\212=\232vG=\200=\366\274:D]\274\207\315\203\275\321&\202\274.cm\274\033\364{<\276\354G\275S\364\232<\326\"\017=$(\202<\207\243\314\275\330\342&=\321\361`\274\352\001\236\275\351\227\314=\030\017-\274\3503\327\274\273z\313=\243\203\263\275\225a\342\274Z\237\276=\016\\#\275\021\360\233=7\325\025=R\230\242=\267\252\314\275}f\240=\321\003\206\275\017\r\341<Gg2=\306>\261\275t\366<=\270]\030\275U\213\311=%\007`\275\307\023\247\275\'D\333\275\261b\267=\270\341\336=\204(0\275\306n\324\275?jK\275hu\264\274i\rP=6\370\232\275\230=\261<\351\032\262<%{V\275\342\244\343<\342G\314=b\254\207\275\243!E=7#\314=6\225\250=\370\342\326\275_\032\316=\225s\343\274\\\267\300<\233\247\004\275\207F\335\274\023\252&\274cx\317=\310r\263=Xs\330=\231\000\272<\346`\336;\006\270b\275=\241\250=\200\271\206\274\333]b=hF\027\274:t)=c\252\276=W\231\n\275#\330\023\275(#\273=\311\223\241:\354\337\270=\374!\253<\331\225W\274\361x\272\275\n\276\013\274P\301\267\275\017\373\275\275\321\273\314=\366Ab;%\036!=U3\263\275\206\237%\275\331k\322\275\314x\354\274Ue\264\275Cn\253\273\225wB\275\255\017\\=\307\261\244;(R\365\274\267\3534<A\327\227=\334\250\007\275k\350\251\273`\365I=j\020\214=\375.\200\275b\203K\275\027E\t=\271h\331\27539K\275K\020\212\275\t\230\325\273\0138\275=/\253c\275\353!R\275e\211v\272\364Y\365\274\037\363\350\273\315p\206=\226g\244=\3156\311=\312\350\321<\333]\310;oX;\275\263\352b=\276\360U=\245\023y\275,zB\275\204\017\301\275\356\346\326\274]S\314\2744*\377<\353\337\034\275+\256\263=`k\365<\377\000\364\274?i\217\275\276\361e\275\274\317\300\275\324\313\331=\342\261\266=U\024\"=<\365\206=w\265d=\351@\275\273\2504\247\275\375X\236\2748n\310=%\226\270\2751,\245\274\202\201b\275\370\371\"\274\277+)\275\332X\233\275u\233\"=\'6s\273\357\234B\275\037T\271\275de\254=\370pe\275\246\227H=W\212\233\275\233\262\342\273{\335\226=\345\002\246<\334\251\303\275\235\275\021\275\260\302\252=\032\366\007=\247k\343;\326\r\335=\306\223\234\275\230\306\220\275\213\217\270\275\313v3=\316\300\036\275\037B\375\274\334\004\312=\213K\003;\250{\212<\234\203U\275\352\326h<\206\2618=[\030\336=\204!\201\274\261\001\331=\215\214\276=[\014\201\275\316\035\032=\367\255\223=\r+\357\274\n\331\244\274\262\rn\275\236\024\333<r\267\260\274b\367\236\275JM\277\275\r\260\305\274h\337\211=\036\307\225\275ry:\275#=\257\275\350x\251=\234\243\266\275\377\254u\275\3475\201\275\315\014\205=]jt\275+}f=\267`\315=\227\370g=\252\001\220\275,\013B=\261\373\202\274%\244\221\275\257\304\240\275\361\266d<\307\370r\274g\272\305=\2339\302\275\326\252b\274up\215\274\"v\216\275\202\315\320=S\340v=\320e\261\275\333\231/=L\346H\275\275\027\214=\315\370>=C\326\254=\026\225\204\275\325\231\212\275\3153\327\275\320\314\211\275\247\371\202\275o\353\234\275\037I \275\356\240K=\357\277\233<\271\204\335<\351g\335\275\350Xu=\262A\304=\022Y\242\274\322\225\266\274yI\301=VC\177\275\276\021\352\274\323\267\273:x&\316=\366n\232=|\304\311\274\274\251\256=g\000\201=x\304\246=\353\2506\275\366i\216\275\327\354\243\275\017\256\333=\207Z\367\274\277m\235\275|\317@=\024\272\302=\035W\211<\366\337\356<\264F\265=\256\305\325;\376k\271=n\026\371<\242\202\242\2720\252\r\275\200\371\037;\335\322\332=!\217Q<\245\344\323;:\240\201=\266\347\274\275\035\307;\2751\025\331=\371UJ\275}5\261=\344\035\313=\370zh\274-s\264\275\320\016\224<\r\034\312<^\021\271=\311\037\243<\200\254\203\274\264\033\215\275\377\240\274\275\212\243X=|=\314=|*\306<\002\215\353<\224\322\206;4a^\275\226\356\035\274\311\312\264\275\201\375\263<\336\016\031;\010z\350;\377>]=\252Jk=@\310\373\273\250\346+\275I\t\227=v\3315\274U`\201=/x\363\274p\222\320=\325_E=4k9\275\"\030\226<\021=\270\275\270\306\316\274=\2346=\374\213\n;\202JN=\007\314\260<UY]=\313\300\364\274\274\341\271<.\215\253=\221\244\270\275\224\377>\275\343\376\261<\205n#\274\256W\235\274\352Q\017\275\330y\315\275\244\035|=\177\002\006<\261\225\243=\354\227~\275\216|w\2753s\310=\036\243!\274\r\273\276=\370Ag\275\247\n\256\274\310#\020\273\025\325@=q\n\224\275\365\225_:$*\315\275c\2554=l\2049\275\330:k;\353]\273\275.:g=\247\013\242=}\254\317\275w$\272=\333\027\225<q\317\241=\257_\242\275B*\276=\211\271\237\274\223\334(\274\231ht\275\256\365\000=CO\275<\'0\311\275*\306\303\275KX\223=\243\006\304\275\252~\250=K\007?\273$3Y=\327w\322\274)C\254=\221\330\304=\364\266s=<U}\275FR:<\001\025{=\203I\214=Os\331=\251v\341<o\031\246=\226\202\323=SB\246=\260a\223;h\327\233=\351f\322\274\037\335\265\275~\001\242\2752\265\330\275v\210\333\275\3557\251<\210\343\247=\005\277\314\275\204\264\363<+\267\\=\204\"\326\275\253\202B\275\333&G\275{\246\214=:\311o=\205d;=\t\312\031\275G >\275\316~\307\275\363b\032\275\345\177J=[&~=4G\313=\347_\252\275\311\325\202=\267g\n=ES\310\275\026\257\311=\023\314Z\2754\264\240=\371\300]\274\250\327\005\275w\350\216=\267<\265=\310W\302\274J\327\203\275\321\'\257\2758\025\232=\336\247\316\275 uk\274Z\035%\275\356\211\331=X@I;\235\247\271\272~G\200\275\2063\241= \363\033<q%\037\275\276d\271=\021 n\275d\252\246<\364\333A\275t\363\266=\220\355\233\275\204\324h\275j\237|\275\356d;=\353\231\317=p\204\316=x\233\022\275\362\3052\275!\242\246\275v\033D\275\223\272\'\275\223`L\275\250,l\275K\354<\2752[\030=\037\304f\275\262m\251=\210\"$\274^I\204=\030\203\260\275\213q\256\273\372\211\021\275\236\206\270=8\242\256<^\303\300:p\\\236\275\316\031)=\025\364\272=\003\025\'\275\267\362\212<\300\302\241\274\254\017\225=\000\222\333=\321zU=-\216Q=Pv\261\275JI\200\275\317\257\223\275R\327x\275b\213\332\274|\367\273=\336\215\322\275Mz\335=\313x\272\274\341v\311=J\257\257=p\250\267<P\026D\275\256g\275<\024P\330\275\232\326\223\274Y\360o\273)\312$;\275\274\010\275\363!\337=\020\252:=\271\031\256\275r\332\242=\353\215\240=\363\321\215=\330\025\261;(\253~\275w2\314=\001f\240\275W\003\224\274>\342\242\275Y\370\320<\372\301\215=\321\246\240\275\023\230\302\275\362M^\275\036\017m=\264]\255\273\311\315\205=\315V\207=\212+\032\274r\340\342<\241\212S=\273_\227\275?b\322\275\213\222n=NL\324=\353\341\301=!#w=W\225\371;\371\n\312\275\024M\326\275\r\200\312=\211\260/\275\033\3222=g\261\021<b\021(\274\221u\247=\'\264\253=\277c\314\273\350/\250\274\003\373\306==FX=f4\247=%\335J\275\360r8=\233\346\305=I\316\200=\030\037\241\273\267-\246\275\242\010\203\275\177I\253=<\032?<\255\236\312<\t,\321\275\254\203\210=\307\340\310=\211:7;!\227\330=\033\347\021\275L^\214\275G\254\333\275\023l\211=\337\311\231=`\331\200\275sfO\275\007\t\272\275\017\343\302<\235d\205=\375\221\306=\252\220\301=\202w\010\275X\207\304\275\005\257M=\2718\325\275ij\302\275(\323$=|\203\252=\njR\275Q\344\242<\345\216\320=\361\360f=\370\216\210\274\224\205I\275\306\240\211\275%\330\316=M\263\241\275Z\357\222\274\341e\037=\204A\212=\370\251k\273]9\223\275\005\377t<#\033\200\275\320\313\222\275S\200\255\274\376ms=\206_#\274\025\207\016\275~k\201\274\222\321\014\274p\013\222=\263WZ<\235R\243\273\223\262\337\274D=\266=\335Y\214\275\347\013\243\275<3\216=\301\377\313\275\311\216\342;c`\230\275\027y/<\347z\317=\304T\276\275\231Fc\274k\014\235\275[&l\274\375\220\233\2757q\016\275;\303\333=r\360,\274a5]\275k\211\330=SQ\325=,\355*\275GM\260\275I\302\325\274\222Z\006=\272\307\346<\306\360\307<P\'\322</#\270\274\021\327\375<\315;B\275A5\327=t\022X\275t],\275\215M\331<\303\325m=%\306A\275\242F\276=\205\025\257=\221\376\332=\253\317\341<\214\345\376\274\334W\360\274\252\335\235\275\300q\203=\316/e=D\002[=\247\206\334\274\231\251\236==$\321=\236\235\331=\315\340@=\000\177\354<\001\241\006\274\261\360\273\275\223n\361\274\301\343\312\275\'\313Q={\3135\274\361\366\345<\223\352\226\275z\267\247=F\352\342<(\310\326=\324dq=c\263\235\275\314p\000\275\254uP=\200+\200\274\336\263\315\275\226\254\326\275\177e\266\275\322\035\314=^E\213=Z\360P\275>\323\302<\021\033C\275E\356\325\275n\237G=\337\221\306\275\242\237\321\275\036R\324\275\221\372\207=m\214\317\275\316\325\253\275_\0357\275\026\"\241\275\314\273C\275\033/P\275 \211\260==\373\267=\013\362\017=\254\030B\274\231r\203=\223\265w=\024n\265=\2667\244\275u\275\302\275\022\034\027=~\324\305<F\274\223\275\317\263\237\275\276\323~\275y\275\323<\'\2511<:\007\201\275\005\0009=\2759\214\275\216\335\236=\330Ci=\355\227N=H \023\275M\234\335=\274\305\301\275\321@\226\275 \365\301=j\365]\275\341*\307=\350s\307\275\023\005\307=\302\353\002<u\372\272\275\3155\262=7\016\221\274\327h\274=\363\370M\275\3031\322=\276\'\242=\\\304\334\275Q\304-=\267lt;\026\"x\274\355:\341\274\346\270\203\275\305\275\200=1X\206=~A\207\275\023\234\310<\257\204\343\274`\022\223<\354`\'\275\336\310\274\275UL\314<=y\212\274\304 \255=\232\260\261\275\301\034\242\275$H\260\275\205\265L=\035\214\272\275\317\234*\275\003:4=H\215\215=6\002\202=\030_Y\275=u\'=8\355\207=\"1D\275w\264\"\275\337k\321=\355\031N\275\026F\225<[\020\244\275\032\357\342\274O%1\273\026Ip\273\022\322::\324\373b\275\303\377\252\275]6F=2~\262=O\346\202\275\034\215\252=\227\024\n\275\212D\304\275\265\346G=?\347\\\275\322t\206=R\223\270\274\001\202\210=\020\237\252\275h\302I<L\301$\275\n9\323=#\262%\275\233\r\232=\324]\302=\275\312\262=z\273}=\251\367C<x\036\001<\235,\257<\010\311\237\2755\220\223\275\272\251\030\275\274\246\245\2751\340\036<\324\3619=$6\303\274\033\261`\275j\360\037=Q\234t;\2061\203\275\rl\312\275\250\254,\273\364\247\026\273\030\362)=\333\301\227\275Kw\372<\320\345\335<Q\004\330\275\311\250^:\320\207\312=\235\204\222=\214\371\220\275\202\303\006\275\005 \221=\325\334$\275\022{.\275\005\275\037\275\212\346\275\2754\364\260\274v\253\235\275\330\277]=\254P\334\275e\020\214\274\202\3257=\346\274j=\t\214\202=\255\212!=\213\365\336\273\267\t\037\275\035\336\256\274\371\202\316\275\315\237$\275\311\033\006\273J\n\232=\315<\206\275\261\214\226<\332\375\035<\033/\241\274\252p\022\275Kx0=\274\214\237\2755\2542\275I\020\231=\324\025<\275\013Bl=\226\241/=\351\312\273<\312\324\307\275\254\244\242=\353\303*=\211=\177\275\315\352\310\275\274\002\246=\336\256@\275t\340F\275\276\270\033=\231\201\223\275\373\243\334\274\017\243\223\275AA\036<\002\357\240\275 \227\330=\242\233\375;\211\377B\275v3\242\275\025\373#\275I\010\326\275*\325\236<\304\033(=>\344\27594\311\002\275\253\201A<R\272O=\000u\371\273\356\323\021<-\242i=\346U\263\273\306Vu=\267\367m\275:\016\025\275\313\t\330=\2130\270\275\350\231\316=w6\214\275Mg\221=\355C\227\275\223k\210<\375\354\336\274\210\312#\275\2410@\2754N\272\275@\225\262=$\345\274\273\320\001\346<W\233\223\275\357o\205=\201\362\334=\264M\0059\2122B\274\362\334\014=3\275Z=\241\230\323=\023\206\033=HU3=\365\306;=\202\245U\275\321\377\200\272\225\025\234=\225\275\261\275\2040[\275\211eC=5\\\230=\311q\210=z\352\373;\307\201\251=\253M\022=M0\022=\342\360:\274\332\226%=\006Ia\275\034}\006=\230\316\347\274\272\252\313\275\037\337\321\275\223\277\225\275\r\302G\2736\210\235<\340\376\230\275\354\214\202\275\346z\234=\363J\247<+&\010\275;D\271\275\341/\274\275\366C\321\275\300\272\312=\262\355?=\335\315\303\274\314\205\026=\335\232l\275\250\035\215<D\214\301;\325E\236\275\211\216\200=\276\232|=\205\346\316=\3440\274=\255qo\275\357<\377;\216\324\331=\000`(\275\013\007\207\2751\212\231<\373\017/=\211\305\317\275\3566-\275\206l\303\275\223\236\236\275\363@\207\275\2410U\275\320\226\036\275\367\006\331<z_\203\275\2028\276\275\347\235\n=\227\000\207=\241\230\262\275\255&F=\367[\177\275\217\352\264\275\36554\275L\273\233=\315\216\331\275\267g#\275\236!\250=\t\267\267=\031\t;=\2465\305\275%7\236={q\341\274\363O\332=\231\010\203\275\312\001\253=\324\201\255=\277\224i=\"\027\244\275\250n\320\275\374\265\235;Aq\273=\020\007\236\275\232\267j\275\027\177a\275\253\370\253\274\370YT\275\201\232\230=\372\356\342<\256\200e\275\245\261C\275:\230\223\275; \014=Y\260\206=\3130\303\275I\007\323=\212\363$=\237\374*=\232 M<\265\364\263=\033V\312\275\375Z\035\275\277\346\221\275\375W\234\275\220\242\255\275\n\"D=\213\346\335\274\236\205N=\0202\365<\267F<=\253\200k=\002\314\271\274\t\250\271=\241\307\340;~[{\275\000,\250\275Z\273\347\274\214\233\227\275\0064\243=\215\335N\274\330\336\270\275\2163\201<\304\270G\275\206\336\350\274SVL=\260Ef=9\330\377\274\031\034\253;\262\021\324=\252\326\273=\257\025O=\023\275\024=\032j\303\275\315\321\263\275\260\'k=\025/U<\263Z\325=\375\315\256<\250\003r=Ay\301=Y\355\026=\002{\243\275#\360\271\275=\026\206\275$[\265\275M3,\275\355\216\255=\214Le\275\315\t#\275\220\017\264=\353Wx=\374\212\010=\213\231\036\275ek\220\274\272\332\322\275\277p\004\274kP\302=d\250T\275E\200,=\001\271\271\275F\220\315<-(\260\274l\341\t<\252\305\257=\246\241\241\275b\301\273=\373R\023\275j\212\023\275\333\304L\275\264\343\210\275_\327\214=\010P\237\2756\213-\275+]~=4,\225\275\224\355O;gP\211=\243\326\320\275\2220\270=\036\024\212=<\2248\275j\3437=\325a\302\275\377\235\243=\264y\002\275\242\346\225=\023`\213\275*\261\274\274P\322\335=rk\217<\035\302\017\275S\351\323\275\017\222\200=\215g-=\310\347c\273w\366(\275\314\245\316\275hz\271=\275\016\257<.\274\260=\241\330 =\022^\317\275cw4=\240\214\272\275rW\244=\354\241\231=Dd\233\275\256\352\336\275\373\020q\2758vs=$\030\316\275\232\027\257=-\252I\275\025\270\213=TYx\274\366,\021=\245\372\304=|\2742\275\256\306\246\274\007\006\217\275\025\2746\274E\273\222\275\205~\200\275\306s\372<WH\220=\336\353@\273X\340\235\275\233\235\213=\017\374\256\274\013\301\346\274\316\226\207=\276\252\036\275M\363\277<\344\210}\275m\202r;n\367\241\274\331\377\024\275u\370\276\274\2678\271\275\275%\204=\264\365\307=\233a\220\275\275\347h=\361{:=\317;J;\315\320\216=\352?{\274\322\312\017=\022\332J\275\327\265\315\275\213\014\361\274\213\014x\275\373\232\355\274C{\350\274\273ls=u\276\246=(\361k=\300c\265=\250\316^<\203\'-=\355\033\312=\252\331\303\275\007\325\324\275C{\231<\224\3500=\001G\270\275 \247\207=8^\326\275\016\203\214\275\366\017\324=\363R\236;\024\256l=0\025X\275@\257\300=\341\305\312=y\026?\275\235\330\220=\310\324\236=\265\265\212<\372\322\257=v\205\242\275\241\007\245<LX\251\275>2\036<f.\303=\313\020 \274:p\211\275\233\322~=gbR=],\262=\024/\277\275\347\023\314\275\375(\210\275AZ1\275C\214\204\275\351Z\234=\010\356Y=v2\233=\027t\316=\365\3179\275\017!\310\275]AB=\235Y\200\273R\342/<\236\230\005\275$_\016=\304\327V<i4\236<\362\324\272\275\002\350\003\275\377QY\274\207_\247\275\234\004\227<tY\266\275JX\254\275\205)\307\275\275\347\334\275\031\224\377<\233\361\316\275\252\230\326\275\265;K=g\362\330\275W*q\2751>\274=\303\355\306=\237\021\300\274\253\255\212\275!\377\311\275\357\312\237\275p\025\216\274J\275\n\274Om\212=\240\350\014=\214\345i\275\232\263==Dp\214=2Ws\275\226\306\267=\237I\000=\030\244F=\000\371\223=S\356\035=c\335\315<\0337\241\274>O\320\275\343\326;<Yo\022\275>\034\225\273\n#\233=\237\373\206=\377x}=\264\207\231\275}%\271=X\0346=\177\277\324\2754\241D\275\337\260b\275\312\003\270:\240\223\234\274\265|Q=\232Q\205=8\270\244=mV\301\275`\271\213\275\227\214\r\275\230P\370:\256\253\204=\203\t\324\274\274=\334\274\261l\201=\2127g=\017\267i=\277\360v=E\274H<,J\321;\351\211\017\275.8J=\211\271a\275\225\354\272=\3446[\274\327\304i\2752\331\312\275J\003\323=\322\"\013\273\\\255\251=\273&\245=\201\233\266=z\022\235=^\025\017= \224\016\275\034\330\210\275\326\n1;\225y\203\275\324\233\332\275\207@\300\272d\364\276=\366W\227=\031\304\325=\270\006\224=\344\'\274\275\260\351\302=\0353\212<)d\302\274\307\232\274\275\351\377\307\275\024E\216=P(+\275\022\270\243=5\201&=\316\366\273\275\277A\276=\267\027\266\275\013\307V\274;\031\250=\202\274\232\273m\334\207\275\nO\322\275\336\276\332<\362\\\317\275\232\354q<\211\237\027=\033\267\223\275\2767Z\275\212\337\003=\007d\270\275\276\314-;\000:\212\275\034O\253\274-zx=\304\337\324\275\300\204i\274T\273\232=\027\014\260\2752\336\313<\341\307:=$\272\230<s\237\222\275OIG\275\353>\007\274\355U\333=\373\025s=\353X\363<\224w\325=\353\014[=1\\\177\275\013QA=\255Vn\274F\221\325<~\320\007=}\210\267=l9\022\271\264\245\215=\3564i\274=\317$=0\240\262<\005C3<\201=\316\274\031\371S=\321\302\272\275HA\273=~\233\022=q\226\020<_\310\231=\357\241\233\275\260\241\313=7\364u\275\364\2771\275y\315\303=\363\036\031\275k \326<\335\005\255\275\303w\361\274\270\306\263=\343\267\035\275\356\'\021=\252\353\252=f\351\356\274\214R\252<\032\370\212<\307\207\036\271?\302\222\275\305\313\321\273\356^0=\243\322K\275D\306\017=\351\317\215=\3747\234<\251\353@\275\337\206\204\273\027\270B=\217T\336=A\215\336=L\266E=q\275,<\376\310X=\372\274\010\275\251G\"=X\371\262\273y\\\006\274:\344\305=7\2406\275\364\216\010=]\007\331\273t\316\034=\032O =b\"\035\275\322-\330=\300\232\036<\306\305\203=\207 \231\2742\365\002<\271)\222\275,\366\013\275\277\207\200\2751n\255=$3\334\275r\333\025\275\267Z\206\275j\316h\275\031\274\220=\220\311\202\275\366\256\243=\024\221\254\275\334\305\312\274\225(\310\275\223Z\265=\373\345@\274\255k\324=\'o)=\260\373\224\274\342\340\300=\230w\243\274K\034k\275\002t\252=\314>\323=\r\334Y=\212\217\237=R@x=\245\311\251\275r\245\275\2748\271~\275\374\226\276=\210i\240=\225\177\243=\300=;\275\277\347x\275bb\257\274\323\232\327\275\2513\275\275=4\210<\234$\225=K\251L\275A\350\227=\367\371\213\275\317>\002\275B\274\221\275\370\242\234\275$X\205\275zb\'\275\263jQ\275\360\376\327\274C!\216=U\253\313\275]\244*\272\"\317X<\345(\035=\024\305\313=\225B{=J\247\213=,C\317\275\266\273{=Wu1<\214VG=\357\310\355\274U\377r\275\237\027\246\275\0057x\275\223\311L\275\267\341\346\274j\324\336=\234\371+=.H\214=\230I\226=\211\r\332=sd\336\274!\361\241<\215\373\263=|F\356\274j\275\317\275\353\3623\274\000$w:\331I\254=\200\006\324=i\026\334=\374\255\276=q\245\354<\201\213\311<\265\005\260\2753)(\275jg\226\275\002\215\310=\305\353\273=R\253\t\275w\332\355\274\335\377\207\273[\266\201=E\313\375<\034o\375\274\216\277\310\275\354l\272\275\344h\323=x\022\030=K\213\256=\332\000\214\275w\"\315\2724\262)=\336\220\224<\002\270\266=\327\306\365<\362\311+=c\001\267=\364bb<\201\245\267\275\203\314\n=\330L_\273\375\336\234=n\017&\275|\271\024=7,\300\275\230\255\204\275\225\206\316\273\223\243\263\274/4\247=\3456\177<\206|\310=\207\315J=\342L7=D\234\303\275\301\355\273\275\243Z\256\275\336\302\221\275\263\300\225\275\317\260a=\205\356\315\274\240\202\033<M\321\325=\374\267\236=\024\213\274\273K\371\206\275\261\207j\275\n&\343<=\363O\274y\032\201<\245\016\365\274> \325\275\213\336\t\275\335\003\244=7\013\031\273\215\000\247=\034\322%\275~k\301\273\2346\353<+w=\275Q\330\344<\331\211\256\275m\271.<\247*\311=\2462\216=O\006\234=\257j<\275\024\266\242=\273\203\257=\250\203u\275)\016\201=\202z\264=\267\332Y\275x|\271=8\215\270\275\335a\203=k\006\337=\267b@=D\344\241=8\375d=\036\020Z\275\273\\\266\275J\255\372\274\277:\234\274\377\361\245\275\241\277\004=\021\325\247=\354_\266<\337\255\314=\325\234V\275z\335\334=\301@\225<&Q\206\275\365F\241\274\326\375`=PX\331\275\350\210-\274\006\266\336=\021+\231=\1770>\275\324\201\207;\000\372\220=-\264\210=\334\322\301\275\232\357\266=hq\235=\335\013\242\275T\305\276=<\330:\274\262@x=:<\340\274r\274\236=\221e\310=\343\037\353;\270h\325<\350w0=\005\226\275\273\266{o={\202E=\243\037\203\274\203\243$\272SmL=\202|\021=i\007\024=h\227\031=b\271\303\275\037\307\265<\354\262\200=\254\302\026\273\002\026\030\27597X\2751Iq;\206\317E=3f\263=~\014\001<S\235\245\275\'M\273\275\037\311\333\275\271\211\262\275\001\220K\275\300*\272\275\267\026\300\275\332\274\024\275\0365d\274]%(\275\034\305)=\037\353\216\274\247\364\247\275l\374\177\275Y\323\266=\203\320\020=\310\214\262=\026\376h\274i\363[=[S\262=\247\002\311\275\014\204\223\275\361d-<\007\324g<fE\203<d\025\223=\264o\235=X^\241\275\274\350\030\2756|t=\317G\246\273>f1=\250\316h=\023\311\220=<\014\r=\311\274\327<4\306\334\275\260\345\204=BO\352\273\220\tA<\257\354G\274!\373\266\274\016{r\275v\324m=\220\322\276=\264\205\312;z\014\017=\221\001\016;\026\254Q\275@\315\372<\217\004\016\2735\200(\275\316\301\264\275(V\234=\261\301F=\244C\223=\321\320\'\273\346_\010\275K\261\301\275xm\226=\316!\310<0\270\200\275o\0366=\216\254\227=\317\037n=F\273\224\275\362W\376\274Ju\013=\302T\\\273\305\0178<\303.\020\2743f\276=\337\362\304=\320+\351<\276\225f=f\243\252\275\225\222%=3\020\032=\314Z\326\2723\207\327\272\224\340\256\275HI\273<\n\036\306\273Wx\\\275\207\235I=\313\014\016=\304\377q\275v\370\246\275E\003\035=\351\351\264=\316[\323;88\335\275-\033E</\027\200\275\203\217\230\275\266\244\273=Z\333\271=\030\310\347\273MZ\205\274&\307\030\275\005U\024<\365M\274<\225\320\200\275\354\346V\275\017|p\275\217\321\013\274\225\335\222<\376\321\210\273-\246\336\2751\335\237=\215b\201\274\233\223\030\275\027;\255<\305n\336=bn\211\273\210\037\321\275m\025-\275:\244\230\275\362\230\034\275-a\235=5es\275p\317r<\013_\360\274s\277\333\275\242\372\216\275{\221H<\tm\246=,7R=\245MJ<D\323\274=\ndc=\276\215\212=\365\206\211=#c\226=\026\344v\275\303\233\206=?u\036\275t\325.=n\245\257=,\237\267<\342\353\312=p2_\275T\376\037:\'\004\341\273r\207I\275\351\332\233=m\254V<\316L\223\275\334\261\212=\307c\021\275_\032\225=\256\250\255\275t|\263=\360\365\242\275\374\213\262=G\327%\274[\267|\2758\307\314<\241e4=Z\301\237=\245@\311\275Z\010\275;\350c\277=\311\246\217\275+\355\221\273H?k\274\0054x\274\235\326\220\275\025\014\301<*\324P;\263z\334\275\r\300\321=r\253\252\275\207\'\246=\210Iu<\243\211v=\\\362\312={\213=\2750\302\'\275\225\366\357\274\332\315\331\275I\261\241\275,\"\005<$\210\253=\332\223\031=\tC\315<\001+\303=\316\013\264=\030\023\037=\277\020\333=lxR\275zD\244=\344\364\335=5\323\305=\364\353\323=\002\215v=+\231\312\273\346E\t=\256\333\007=\374\257\240\275m\216\225\274\2546\023\275\303\340\232\275\204Z\261\275\357}X\275\274\232}=\317\310z\275O\234W=<?><|k\033\2758\257-=\tc\322\275\322\013\027=\346I\216=s_\331=\013\365\177=\374\033{\274\221\253\212<\024,\330=\311h\210\274\310\247\261\275q\245\031\275\261y\026<\271\230\353<\202\005\312=RpQ<\030\367\007\275I\364\333\275\305\005\260\275\3472\264\275-\252\265<\037\265\306\275\242\311\260=\342t\311<j\325\223<L7\315\274?&J=qs\233\275\206\372\312=\300\n\326\275\315\351\254\274\025\365\236\275\235\243\030\275Qm\275<\312\'D\275\370\010\n\275%S\331\275\265R\032\275\036\311\025=\240:\252=\222\276\025=\336\242\265\274\324\363\311\2751[\264\274>\334\210\274.\330I\275\275\001\306<\375}^\275\321(\035=I\375\305;j\177\275\273bp\324\275H\223\004=\377b\270\274\273\\\224=\323\026\303=\270\237\201\275\001\222j<\026V\214\275\226F\305=\252\247\226=\335~\005=\014=\226=X\206\027=\326\347\224\275=\271\372<\004d\336\275#\256\334=wH\206=\r\362\373\274\201\207h=\3413\315=D\337O=0\235\306=S\344\207=*T\177=\355\256\030\274\326\370\262=\211D\277\274\300e\231=\257J\353\274\034\214\322=\230\177s\275n|\274=\355\343\264:\230\250\214=\252Im\274\355x\220=\3656\320=\364LU\275\263u\212\275\001\3304=\032\256\225<\365\215\237=\024\204\321=a\234\221\275\304W\323\275\324\247\216=\265N\255=\311\244\236\274\210e\205=\251\370O=\177K\032<\346\322\367\274\037G\213=1\250f\275\311\000\325<\234\227o=%\254^\275\027C\230\275\355q\333\275\267\2607=Z\201;\275\204Y\324\275I:}=\030\372\240=\241\241t\275]=_\275t\300\230=\362\350\215=\210\0174\274A\375\205\275\010\362)\275\225M%\275\322\366\303=q\343z=\215BK\275)\313\"\275jW\"=\236\212<\273G\360>\274#\310\217\275\273q\264\275>B%=3z\013\275\021}\256=\373jS=\217\372\"=\275Q2\274\n\272\257=\331\264X\273/QO=08\225\275\255q\305\275\304\3409\273|\'\312\274\020\014\273\275>\305\336=\210\263\230\275>\272%=\254\276m\274\221\355\2049\032\273\'=\315\314\261=,{\242<\277c\346\274\306\233\222=]\320V=\217\366e\275\027:\036\275\251D8\274\366\346\240\275aX\207=\355\366\242=\025\203\217=\256\211\332<\343\310\265=e\323r<&j\365;\024(K\274Ga \274h\305\263=\036\357\214=\333#S=K\314\005\275\250\031\345<,\222\204\275\260\001\032\274\341\213l\274\204n\250\274+\0147=\266z\306=\255R\241\275\254\2154\275\353\2249\274h\347\252\275\036{\317\274\371D\246\274\306\203<=#\317V\275*\220\245\275i%\324=N\212\323=\363\006\206\275[.\270;\261\211\316=F\327\312\275/M.\275\307\362\377<\343\014\242\275\r#\307\275s\r8=,\223\322=\347\313\210\275>\372\352<\365\275J\275\267\360\321=3\214\204=cx\336\275d8\271=<q\307=$@\270\275\014\365\201\274\270\334\326=*\274\271=u\322z=\211Z|\275\360NX\275\"\003\246<\353a\322\275\377\361\211=.\253\274\275m[\307\275\242Fp=\"\244d=\310\224\320\275\003LC\275\220C0\275c`\307\273|\t\323\275\362\030*=E>\000\274\211\004\006\274Or+<\215{\322\275\334\321\226=6d\374<\303\023\212\275\261\013`<\260C\324\274\312\226\274\275\036\026\333\275\226p\316=gU\302\275}\306\227\275\270\305\n=E\323\316\275\r\333\246<\247\301\255={\353\221=  \301\275\265\004\263=rY\260\274\"%\301=|\014\214=\337\256\357<\023\014\302<\006\275\325\275\300a\242\275q\243m\275\353\035\304\275~\347\276\272\301D\014<\207\360\237=\312\361\271\274;\233\230=[\262\252=c\324\253=b(\337<\004\353\235\275\363c\237;\346e\241\275\021.\227=p\360\372<W\372e=\021\245\270=\022j\206<\327.x\275\255R-\273\335\025\330;$,\262<\347\316\330\275^W\305\275\261\330@\275\362\332k=N\307\270\275s\001\256\274h\220:\275\345,\242\274\207\216\236<*\021|<\347\201\331=\006\256\";R\371\322\275\234=\316<\223\346\210\272#@v=p\236h;R\264\340\273\220&v\275\032>\375\274\344\030}=1\310\247=D&\203<\231m\335=w\324O\275\203\243\370\274Y\265\\\275#\226\224\274v\207\332=,\254\314=\325\016\205\273\256\366\242\2756\242\335=m\022\223\275F\021j==\307\236<aA\270=c\337+\275\302o\334:\253\356\315=d\317\251\275^\250\313=\2432\263\275\333)v=\304\345K\275\252\343\217={3\263\275ca\227\275Z\'\034=P\265\016\274r\325\312\275_I\225\275\377tP=\253\260\210=\3058\233=\371\236(\275 \245;<\031\213\302\275t\331\256\275uIh=\337\310\333=^K\027=\332ai=\263|%<\307c\336\274\022Zv=\357f\220=\214\020\215=\334\354\006=[\332B=\321y\224\275\3258$\275\032\3675\274\352\211?\275C\212\232=\360a\206<\3139\325\275\023^\231\272\035\244\"=\207\321-;5\303\245<\303\242\276\275\240\014\232<\315\215/=\005\355\250\275\354\350\246\273#\354\301\275B\210K=\334lO=\024\036B\275\273\307\030\274\000\241\313\275.8\244\275\334hx\275[\202,\275u\024\220=\250\246\322\274\363\267\324\275\212\005\020=\246X\273\275\244\364h\275\330\030E=\237\002\242=XY\230\275\216wu=\213P\210\275\"\225T<\254\367#=q\231\260=,.\241=l\020\202={Sb\275F\022\262=\266o\202<H2a\275\301\r;\275#f\266<p\346\274=S\263\277=\360hK<\373\216%\275Oh\247=\313\201\235\274\350=\235\275\361\253\213=9V\363\274 \305\260=&\214y=\343\025\236\275\220\324\234=\260\031\316=_I\251=a#(\275\255\032@=\324\020\006\275]\262\360<E\276\375\274\226\276a\275\017S\320=B\366\265<\274\226\303=\002\355c:\271\342\246;\256\373R<S\323\257\275\\\307\212=\216\316\335\275\373\227\307=\323\350`\275#\247\002=~\010F=\256:\253\275\345,\331\275\230\206\246\2757\0016\274Z\036\346;\314\014\255=q\016n=\n\213\301<\277 \303\275\315\357\234=8\267\333\274\356\342\262=js\037\275\221\263m=\265\326}=xX\366<d\031\216\273\323\271<\273f\027\016\275\025\\G=\346\033\335\275\261\315:\275\303OX=`\323\322=\340\350-=\300\242\025\275\271\036\257\275\017\3373=\247$\273=\271_\235=\245\253\206=\245\005\301\275j\035\231\271\253\234\210=\267`~<\223\370\265\275\n:\315\275\320-\325=e\267\373\274\245u6\274\234\376\252=3\205\256=Y\3121=&\n!\275r\016\321<\035\244T=\'\277\317<\022\207\023\275\343\227\304=\365\377\221=~\325\221=|\244]\275Z\264\256=\017\241\235=\014v\213\274_sG=\351\237?\275hhw\275\313v\222=\226\030\314=\232K\336;}\275\247=x\230\260=\032\242\222=\343|\262\275\230\214f\273\274b\225=(\323\254\275\324\n\303=l_%=\024\354\233\275\354H\246=w0\210\275\352BH\275\215\312\262=2\231;\275e\367^=\247Hh=g\263\222\275>~\211=\327\366\265=B\007\360\274\213\374\366:\343\037\010=\000\003\241\272R\020\036\275\377\271\207\274x;\315=^\272\201\274\275d\245=\323P%=\267\311\n=\034\207\213\275\026\331\340\274\264\277\277=\221r-=\333`\271\275\333l\272=\367\341\223<\366\252n\275\336k\233\275\204\261\177\274\345\221\333=\202#\205=\323\212\260\275\240^M\274\rvv=\250\347\306=\037\233\333\275I\310\245=\230o\325\274N\246\027\275\254\337g<\242\004\244<i\320\010=\375\254\n\275\356a\204=\307\200\232=M^\362\274ek\203=r\020\336<,\332\327=\247\232\231=\220\251\246=g,G\275\024I=\274\353\305\305=\203\326\273\274\\\000 \275\331\363^=\3431\307\275\024\300\273=\334\026\260;;\020&=\211\035\241\275\014G0\275\320\347%=\241\341\321=\3274\256=\0371+=j\031\337\273\0327\236\274D\334\321=\222\334h<\033A+\274\321\212\322\275\2744\330\273\301/\202\275\330\026\244\275\353\016\303<X$\r\275l\316\266=\332\371\222=\002\252\243\273\217\221\273=a\014\363\274l\240U=\233\r\307\275\357\234\255\273/\021\334=\034\316R\275\332\233\217=Ew\203=\226+U=&\226\273\275\202\000k=\200\t\303\275q\364\337<U\343\211\275\354l\256\275\237\246\234=\251\033\261\274*\221%\275\315\316\276\275r\272E=2\205G=\307,\260=\347#\313<ew\034\275.\221\225\275]\306\261\274:\234\303\275v:\217\274\227\276\014\275\257\026\204=\361\257\272\275\325\0353<\265#\242<\377,\272;l\"Z=\314\242|\270+\350\323\275t\261\200\2756\321a=\275D\361\274\025h\263:\2752\022\274\'\"M=\201J\227\275\250\316\312\275&\320\3037\014\313\034\274\256\215\230\274\001\023\237\275\367\331\203=s\267\377<\332E\261\275\244\372\310\275\312\333\316<T\274\207<\036\"T=\222\220:<K\326a\275\221^\327=\273\262j<\354\223\302\275\001\326\334=1\002\035<E?\201=\023Eb\275\263\300A<}\345l;>\2544\272\374\t\200\274\353\026\240\275\302r\251\274\242 \267\275\204\222\240\275\351D\021=\366\357\264\275 A\303\275\231\224\202\274\036b6=\316s\276\274[Dk\275\027\030\031<\207\304\351<\207h\300\275\344\241\025=i\324\237\2756m\276\275\247H\320\275\003C\246\274\276=\232=\271\262\030=\014\306\307\275\345\355\313\2738\177\263\275\302\205\"\275\373\265\232\275_\206\247\275\344[\010<\205u\223\275\244\237\203\2754\332\330<0\323\016\272O\322\256\275\224:\324\275l}\251\2751l\204\275\376\370\014\274dq\032=\257P\225=\314\010x=r\277\317=\324\223p\2759\301\312\275;\314\214\275\263\234\323<\251\262\246\275\211a\333\275+\255\023=\272\006\255\275;\020\244=t\214\037\275\334l\301\275hz\275=QY\337<\312\301\260\275QJy\275Y\364%\274\231#\020<-i\\=\255\213\251\275\237\2244\275I\'\233\275\177\317\"\275\0203\322=B_\017=c\215\276\275B_\233=\253\313T\275\275\243\237=\242\014\234=\344\273\r\275\370\363\252=\210\232\027=:\3552\273\213\006S=\037\341-<\261\216o<TD\303=\367\360)=\352%+=r(\306<\212\302\365<\253DI=~\203\201=c\021\032\275\"wd\275\250Z\242\275#Iw=\226\254\322\275B\326\314=!2\002<\351\212\227\275w\210\312=\305\335\354\274\032\006]\275*e\263\275\352\221\205\275\203\333\207\274 FM=\334gc=2\017\320=\240_\331\275\027\251|\275>\214\217\274`\262[=\266\336S=\310\033\370:(!\227\275\265T\260<\300\214\336\274U\204\246=\351\377\305=]\347a\275\370:\014\275\340Y\241=Z\216\266\273bV\201\275\202\007k=\307c\306\275\257\262\276=1\035\335\275\262\317\263=\323y\276=@\251\001\275D\306\244=\336!H\275\305\263C\275#\362\022\275\3559\231\274\016\356s\275\367;\275=\037\010?\275!\306o=\014\242\032\275E\217\326=\250\n\326\273?`\202=\\\203\222<\331\207@\273z\324|=K\n\233\275\002\034K=\353qb\275\227\311\244\275\236\\\226=A|\265\275\270\013\307=\355\261\270<\222\032\263\274]C\177<\223\202\336\273\257\220S\274\257@\250\274M\340k\275\220;r=\244/\232<\311\237\003=\360\360.=8\246\226\275\020h\020\275\022\276\210\274\352R\210=a\213\277=c\343-\271\\\253\301=\304\252\323\275\2004\277\275-\317n=\221\230u\275\206\316\246=\024\322\275=[\205\376<\304\344&\275\332}\235\275\267F\270\273\241>\014\275\210\202\213=N\3464=\307\027l=L4\245\271\024\354\350\272\370\202\311\274\265\201Q\275\236\271\262\275\244\021\231=$N\254=\242\325\302=\0351b:\220\224A\275\317\203\301=\240\377\216\271\242\277\316\275+\021\277\275K\312\211:W\355\235=\357\026\021=\r\306\231=\"\241\210=\241\027\033=\237\251\257=\215\374#\274\342\313\276=L\361\217\2754\032\216=86r\273\306L\255=\255\352\315\275 O3\275\310~G\275K\375\206=\347s\222<\264\230\305=\235)\357<\31253=\353m\004<p\267{<\321\314\216\275H#\243\275\201i\272\275\302U\246\275\255\267\324=\353\345Y=\251\213\330\273\321\307q\275 sf\275\332\'\'=\177zB=\365E\354\272\352\342@=\222$\232=\316*M<+\362\235\275\025\311\177\274\322\032\265=\024\316_\274\223\\\205\275B\320\253=\010\024\313=\031Sa=Hcf=\005\332\233\274\263+\037\275,q\354\274\210\373\270\275\325\352\306\274\220\257)\275\211Si\275_\350\216\275\361O\222=p\026\211=6#J=\373\035\212=\234JW=eb\231=\261\032\313=06H\275\254\004H=&\372{=\263$\237=\014\361\216;\323\034\250\275\036r\303\273T\210u\275\273\016\214=\306/\204\275?\312\334=\r\331\221\275\330\010\007\275\270~\312\275\206\343\273;\220\340P\275r\203\214=\002$\337\274K\2469\275\345\003\246\275\214\266\254\275\344\201\310=\257\201\214\275\214\r\211=\337x\261<\233K\344\273\3444\273<\264Q\302=\252\306\270;\364\035\236\275(\324o=\272\3510=\374BE=\031\242\210=\n\004e=\212<8=\366\211,<j\017\337\275\374\327\270\274\3024r=\356\025\336=m$C=\206hE\275\231\241\320\275\343\205f=\375\350r\275\204\331p=n\027\021=@\277T=\344W\277\275\242~\223=?z\255\2754#Y=\217\026\211\275%+o=\316zA:x4\336=O%\001\275x\266\240<r\252\332<\332Cd\275\003`\014\2753.\034=\244\333\254\275\367\032\025\275\026i\317\274\235\314\336\274\033U\246<\022\241\320\275\377c\221\275\030,\221=\277\233\263;Y\266A=\367\341\276\273\300\302\330=1\234\031\274\336i~<w\361\333;\351\212\205=Z1\270\275\212\232\231<\315\355\271\273\344WS\275\351\304\270\273eV\307=\3618\231\275.\336\236\275\354H\226\274\267\002\316<>\375\215<\037\362B\275\006\235\274\275vS\251=.\325\201\275\327\205\266=\342\242\330\275\223\231\313\275\033+\314\273\230\020\330=\340h\314\275\310g#=LZ\016=\224\222\315\275`\265\357;f\256\307\2746\353F\275\2667+\275\010\324\276=L\277;\275\270\346\016\275\320\220\322\275\225\364\332<\321\r\327=\333.\223=NH\225\274k\231\306=\013`c= \2213\275\321\037\225\274\322=w<\304\303I\273\373\'\261\275\277\341;=\307\361\246=\203\213\300\275_\321k\275\007\326\213\275\372\002\307\275[\326\227=\360S\267=\203`z<\316\202\254=\023\035\302\275\213\332p=\242\327\262=Ue:\275LH\021\275\301\373\037=\202\232\267\275\364u\001\275\363n\036\275\3407\200\2748j\250\275\006)\207=\377T\373\274\202\330x\2753i<\273>\355\310=;T@=\231-\036=^\321a\274\257\344\256:\263\364\252<\n*H=\025\'\224\275km\215\274\372\035\277=\000\372\322:S5%=\237\272V\274\364^@\275m\235b=\024\035\300=\006k\204=\3537o\275=\270\310\275\340\016e\275go0\275\372_\025=@\n\337<\336\307\026=\230\232\272=\033\t\237\275\247\263\305\275~\361\203<#E\203\275(\226\217\272\223\333\200=.\252\327\273\302\250\310\275M\033\334=\267\021\036\275\337\010x=\214\0064=d\333\302<\001BC\275\275i\331=\234b\303=\363_\277\275\274\321v=\256c\231=\222cu;\267#\267\275\220f\315\275\313\250\274\273\226\311\242<\372\005\273\275d0f=\'\351|=\255\231G\275\251\'\265\274\340\004\302=^\274f=\315k\027=\'\325A\274\240\031\261\275Q\340\306<7\350\212<\247D\301\275\217\007\236\274hB\252;\247\205\253;\340\240>;\226\276\311\275\277\r\203\275\3046\233\275 7\317\274c\3168;O\022-=z\014\250=\263\010\010\273\374F\256=\214\263l=m\376\256\274%\342A=@\252\350\274\325\274\335\275\256\373\312=\027n\324\275\215\343P<<\254\261<\021jj:\257\302\315=\314\262\217=\3721\247\274\306\237\026\275\255\201\256=i\256\226\275\337\261\002\275\206+\243<\002\2540\274\255\251\2679E\261\250\274\267\302\334=\325j\332\273\323i\201\2753\252.\275\331e\214\275\\\241:<\327V\222=%\035\317\275\2111\252=\3261\315\274qA\273=\025\247\245\275\321\300~\275\254p\261=L\377\201\274\360\325\0209F\270Q<\003\355\234=G\351\246=\020Z\033\275wKm=\227\332\205=\001c\004=\177\214\234=\302\267\206=NQ\213=E\324\024\275\300$\224=G\315\177\275\211\355N\275\253k\226\275#\232A=\354\005\322\275\276\200\322=\254\350\370<x\024\342<\013a\314\274\327%\234\275\302\333\352<o\316\233=\315\240r\275\3503\241\275\366Qk\275\300Y\242\273\233\374\234\275\324:\327=\350\355\216=\366\023\201\273Q0\276=\032\333\215<R\276==\n\322\032=\302\205\312\275N\035\214\275\026\034\006<\017\350A\273\305\307\224=\345\205g;\257w3={\256\271=\003\310\344<W\361\320\275\267\204\r;M\346\177=\266^\017<y\304m\275\241\261\224=N\034f=\262f\322\275\230t\271=\333\013&=\031!;\275\022l\210;\341\\\366\274\252\177\322=\317\036\205=\277\204?=\030\327\307=\2130\252=\237k\234=\034\335\303\275\253\037\227=7_\001=n\261\243=\026\300\307=\026\314\256\275=t!\275\017y5=~ \264=\226\353^=\3011\335\275\367\372n<p@l\275u}p\275!^\210\275S|7=<\223\261=\270g1\275\276L\302=q\310\322\275\\J\316\275\363\211\230=\225;\264\275o\020\335\274\023rK=\2438\362<\336\360\212<pw\"=#\215#\275\202Z\236\275\241IR<\362\205O\275\214\252\221=C\2506=i`\266\275\0316\026=P\357\233\275\356\321\215=\0014\306\275\314\200i\275\366aR=\377\032\307\275\016u\220<\237s\263\275s\304\314\275?\260\222=\206#\001=\300 ?=2\252\030\275\331\000#\275\224 \237=g\227\365\273sM\313=~\014\277=\361\216\274<\010\306\272=\022\035\363<\ti_\2746!7\274dQ\324<>\366\323;\022\367\201\274\2165\023\275\352\257;=\353\230\001=\203\267\230<`\367\371\274x\3728=\016\227\335\274\024\251\2358%\333Q=\346\000\237\275\246\274A\275\311G,\273\353Z\256\275\350O\255\275\364\224\204\275@\314G=\343\217\005=8#0=\231\201)=\004\264\252=\223\330?\275@\235-\275\206\370U\275yd\316\2751\254m=\007\250\244=\376\231\277\275\344\202\304<\323iD\274\203\216\272\275\225\367L\275*\264\237<\013-\272\275\n\337\315\275\373\247D\275\033\313\210=\364\301\320\275\200\"\025\275\311F\354<\n\3263=\n{\220\275TL\005\275\336\206\027=-\270\306\274\313\353}=\364m\r=\246\223a\275\322\300\245=,\223\231=\363\206\314=l\357\"\275\022K\211=(\343\200\275\363\305c\275\257[\377\274\335\305\010\275\346o\204:o<\323<\300se=P\032\000\273\315\245\004\275W\334\266\275\017\034Y\2751\317#<\352\n\273=q\325\252=\363\244Y=Y\311\264\274\221m\321\275Nu\220=\235\021U<\334j~\275\352\374\210=\276\005\226\275\2648\243\274\256C\306;%\223\274\275\265O\313=\336~\271\274\332\005\205<\263\302I\275r\234\221<gl\250\274\237\0362=\370\351\264\275\311Q\245\275\252\365\276=,\n\316<Z\341\333=\300\370\224=\304\014\217=+i\346\274=\234\322=>\262\302\273b\301\246\275\033\362\255\274\344Z\240\275}\'\370<m\277\231<\360e\032\275\312\337\320=.\254\360<\323B\360<\342FF\274I\223x\275\213\200&\273S\320\210\274\270\227\256\275\346\3220=\273z\271=]X\221\2750\220\353<\242U\207=7\205\270=\001\264\345\274N\203\007\275\362\304\327\275~\2570\275\333\207]\275\364\025\304\275<\237\307\274D\"\247\275\017\343\200\274\231\n\250=a\025Z=\3401y=5\007?=\017\352\215\275E\264\207;\301t\302<\213Y\234=\201\200\232=bH\310<\274vs\275\005\355\215\275Fk\261\274\356\223\275\273\r\300g<\250x\327\275\342\353b;Q\376\314=\350W\313=\030\325(=\007\304\261\274R\213\025\275\223\267\255\275\354\263\312\275\225\014\245=y\311R\274Aw\203\275\023\216\267=!\210w=ox\265\275n\211\324\275\225F\223\274\367m\247\275\037\357\003=\002\024\302=\232\253V:\234\021\006\274\214\213T\275\342.\376;\263n\326\275D\274\241<\314\310K=\027\037\224=\365\214D\275/\371\002<\036\321A\275ko\240\274\337\371P\275$\017$\274\006\335\213=~\200\014==o\334=\003d\014=\230f\223=-\236\304\275\346Pw=s\306\032\275\353T\223\275\367\244\206=\242\025O\275\245T\205\2757\217\236\275B\377&=WAe=k6\225\275PN\230\275!\310\277<\246n\331=z\312=\275fj\357\273#v\'<\377\233\020\275\256\253\312=\274\376\214=\321\'\013=\252\006\203\275\033\253\227=\270g\332<\003\025t\275gu\217=\320`&<\000\305^<\032\312\331=\026\323\320\275>S\244=`\035n\274\216j\231\274\326Na\273Wz\024\274QJj\275\3377<\275\267\232m=\272E~\275\r:\251=\375\232\201\275\031\254\204\275\244^\007=\n\267~\275\3104s\275\037\214\317=\215\230\242<\336\\!\275t\271\034=W}C\273\005\236\247<\220\253\026\275t\234x<\312\037\023\275\313\206\220\275\t\020\010\275\317\255^\275\204\276{=\316\374\324\275xi!=\264\301\020\275\375~\250\275G\357\221\275\367\232\034<\364\r\362;4\315\335<\000n\177\275F>\036\275\232r\037=\210\022\243\274 g\222\275yLY=\300\261\332=\216dG=\016\355\331\275=\035\365;bd\225\275\306\245\025\275*D\200;\370x\331=Ou\t<\344\240\036<\251\262\026\275\3633\276=a\374\236\275\353W;\274\2574\321\274\331\300\320\275\315\230\253=\260(\330=7\365\224\275\300J\024=\237\330G=H\356\227\275\277\022H\273\346dQ\275a\236{\275\366\315\013\274\3550\3158+\205\037\2747A\322;\237Y\230\275)T\247\275\365\351\306=\025jU=\220%\320\275)Yh\2759\010x\275\265&G<\233\250\242<(\341?\275\327\333\314<\306T\327\274\330%\177\275\332[?=o\205\236\275Dp\251\273y\024H\272C\020\207\275\241\265\312=&\375\306=[\030\230\273\035\323\211=\270\365\340\274\177\303\034<\n\204\277\273r\236\021=\350e\354<Z\237\255=gtQ\275\263\025\255=X2\277\275\367\367\266=\261&\030\275n\372D<9\325\275<\004o\r\275\304\3726\275~\355\311=\2179\236=\366V\305=_\225\216\275\374\204\311=\347\275\334<.j\370<XZ\227\275\242\240\002\275\330\314\255=\270\242\331=\244\372\260=\211\375\314\275\252\356\334=\2472\226:\0135H=\254\264y\275[J\022\275\235\344\301\275\257\305a\275\263U\007=\010!\261=\234\324\247\275(\315\234\275\003\330\017\273\201\276\225=\310=\311<E\007\335=\201\222\262\275I\256\236\273\335\300s\275\021fo<\251\r\215\275j\374\315\2732\236\274<D\221\250=#dA=<|\025=k[D\275 \013:=\244\n\273<\340\3727<qG\225=C\203\214=\030\201\272\274\214\036t\275cA\365\274\271\313\263\2759\253\223:\330cw=\311oX=\202\'\031\275\263rG=\244\330\336=\177\203\310=\216\242\205=\374:\226\275\245\314\242\275-\014,\275{\237s\275\341q\303\275\201\262a=$%v<\310\306\234\275\220\342\243=/\343\210\275\241\270\355\274L7\236=\252|\217=\201\200\216\274\203(\317\275\215n\312=\r\246\201\275\270\226\252\275\327\254h\273E\326\023\272\27508=&(\370\274 \322~=\372\022y\275\316Q\313\275\0309\275\273q\307\262\275\036\250\307\275\330\332N=\200\273\324\275\265\323\252\275\264\263o=\001\261\236\273\363S\231=\272\251\377<&\020B\274\272=\322\274\001[U=#\335%\275\302\']=p\307\223\275&N\3149\314\000\330\275\017\373l\275\226\0143=9\222\000\275{\364\305\274A\365[\275\365\225\254\274U@\264;\201l\272\275\350\034\353<\312\232@\275\030\213\003\274/cP\275\353\266\233=\027\233\202\275\206\362\031\275n\260\311\275\273\360T\275\275D\274\275\001\206G=E\217\217=Q%\332=;\341\202\275\202\200\277\275:>\026=G+\272\275a\032\266\275\354R\030=\314G\237\275\241w\211=\306\206\222=\343\223C=\211\344e\2757\333\212=C\320\315\275M\\X\275\360A\324=\004_\034;\020$\226\275\337\271t=\257c\026<\325r\033\275s\252\327\272lLA\275R\031\327=\221\245\303\275\260\362\217\271YS\254<(FH\274&i\231=\376\037\226=y|k;\363\354D=\214\032\211<\331\036\317=\003`\021\275\202\200\303\275\\\274\326<\1773\263\275[\2419\275\254M\232=\304t\246=\331>\230=\361\274\245=z\262a=\204\277\313\275\306\210&\274s\322\252=n\261\224=+\246T\275B\363\260=L\'\334\275\340\326\036\275\330\"\222=\373\371\313=\247Qw<\372\217\207\275\031\327W=\030\227\210=\250\204\262\275\240L\221=\336H\001\275\257\263\235\272\360\035\034=\003k\226\275H\200\266\275\\V\037=d\036\273=\204\331\242:\275\310\337\274\365yi\275K\362\222=\021\\~\274\003\237[\275\351\035\036\275\367\214\304\2756!\307\275\207\350-\275k\021\360\274\200$d=\2639\033\275T\344-\275OhM=\324\375\300\274%\023\217=\253\364\246\275\006\266G:(\364\201\275\315<\331\275\007\340\255\274\034\221\363\274\226\372\250<\262\211\327\275\374\356\351\274#c\005\275\342\017\225\275\260/\212\274\200\205\336\275\201\022\277<\313\277+\275\2517\241\274\032\260\333=\025\264\203\275\217\355\037\275$\251\271\275\256\253\256=\270\271.<4Q\367\273\205K\207=qXL\275\377S\222\275\005-\300=\224\024\224\275\324\301\303=\210\200\264=$\2153=\335\250\210\275\177\223}\275\360\013^\274\252V\276\275d\322\246=J\033L\273\267m\270=\333\204}=\327\305\277=\277\023\375\274]\275\030\275\212z\246;\241\223\376\274?B\217\275U\357\221\275g\210 \275\023b\260=\320\274\323=7RD=\211\361\313\275\357\362\236=\321o\244\275\270\316\325=\314f\332=Q\004\220=\007\242\235\274\3118\005\275\rn=\2759\272\364\274\'\2173=\273I\270=qE/\275\330\254v\275\327\373V\275\003\004\362;\035\341\034=\326\002\256=lP\323\275\005Kb<\363\347g=;\014d<\177_6\275\246v\030=\006\000\210\273\3725\303=Y\023\311\2753\245\311=\344\372-\275wN\206\275\211}?\275\370?\254\275\275\226\231\275\240\006\354\273/\256L\274\223\210\007=G2\230=\352\022f\274|p \275v\\\274\274\353}s\275R\223\305=\334\363\016\275\0075\350<\244\235\034\275r\\\363\274\250\323q\274X\021\230=wP\203=y\304\001\275\374\273\300\275\352\0315<\345\224c\275\357H\202\275\241\325\240<\030\177\217=\244\376\n=\261\t\333=\364\232\307\275\327)c=(\215\250\275\207\326\330\275i\306U\274(\022\223\275]\023\306\275\233\323\305\273\230\3079=\204Gk\274\374\'\256=[h\214\272\004\020H=\034\n\236=\256\014\355\274c\215P<!\321\231\274\370\222]\275\351\240\305\275\263\217\302=4?\335\275\337\211\332\275\257\225\234\275\221\2343\275r\333\315\274\037\276\032\273\312\241\321\275\027\204\326\275\321\177\351\274s\r\242:]\347+=E\243>\274\334\"\332=\023a\273<\037h\231\274\263\227\316=7\306\032\275\241~y\275E[@=\325\001\231\275\245A\326=V\213\206\275H\200==k\200\020=~\351\377<\372\022\321=\306)Y=\312\267@=\207^\247=\\\270W<\233vq=\270c\303\275\254\247\301\275\327g\374\274\244\323\354\274\243\256\247=K\354\203=\312\366\376\274\261.g=\"{\237=\230\315\325<\n\314V<=4s\275yJ\035=\271\016\214\275\013\210\267\274z\344\333=\351\333\212\275H\332\217\275\242\250\244<\230\035\005=\262\306\332<\2555\301\274\001[\020\275~\211\317=r\337\211\275\377s\227;]\351f\275\345I\210=f\326\236=\313T\227\275A\327\001=\204h\r=\216\320\r\275\'\247l=\221\021\177\275l~\212\274\233%\312\2750\325\367\273\256\215\214\274\330\253?\275\222v\326=\r\337\224=K\265\322=t\271\276\275\037\304\202<\032\341h=Rf\220=\340\227\210=\303/\242=\325\242X\275\2106\265=\200\"\302\275\237\026\235=D(\020\275\362\266\375\2741\357\360<]\251Y\275\360\312\317;m\303\313=\"&\304=\307\347\215=\271\335O\275!8\001=G\304\323\2758\002\227\275\321\3353\275;)o\274`q\225\273z\021\261<KX\r\275\026Dc\275\315\357\334=D\374B=\031\212\237\274\023\360a=\216H\300<\313B\243\275\022s\232\275\202\006\334\274\325\200\235=/\332\272=(\317\352\274K|\014\273u\033,\275\276Z=\274o\034\310\275J\005\240=\352\206|\2750\220\217\274e\372\272=\347\256\331\275k\031\227\274\340?\236=\002\\\220=\224<\247\275L\215\275=|\007%=3O\276\274\274\230e\275f \202=\2773\305\274\201\220\274<1cY\274\337\202\267\275\372}\247=m2\352\273z\007\203=\037\355\251=\203\031\322<\213\320\335=O}\246\275\030!\230=<\0078\274\216\276\327=\353W\036=\2216+\274\253\221\t\275\307\034e\275\271#\335:3\233\270\275\tS\356<\"i\314<\206\352<=l\203\220\275\204i\005<Te\351<m\263\035<\262\266*\275\254X\243\275F\253\321\273\353\253N\274\323\246\005;\230\267\013\274\340\2324=t\263?=n\325\270\275\376\010\341\273\307\"\330\275\031\020\215=p\264;\275\036t\335\275\256\376E\275%({=\227-\266=\00136=\206!\014\2750\302\224=xN\244=\2319\310=\312\t\211\275A\225\266=XO\236=\265\337\316=$\214\225\275\377H\273=$\204\200\275\3210\250=\002\253\363;i\362\225=\203#\275=\365\274\316=\371\325\264=\250,1\274?\005{;\233\001\223\275 \205Q=\277O\000=r!\337<\022o\234=\316\0347<o\347\244\275\007\301\234\275\023\363:<\277\341_\275\314?\214\274\305{\261\275-\310\302=\362D\242=\210\035\212\275%\226K<\207\225C\275\221\006\233\275\347\020r\275\370P\210=*\255\276\275-\344\t\275%\251O\274L\300f<&u\313\275L\374\275\275w\026\n\275\321\333\272=\214f\261\275\215\367\021\274\010\032\244=$\362(\275\306\3320\274J%\306=\371\254\235\275\2103x=\r\2222<\030\252\265\273F\315\324\275\265\315\321\275Ef\240\273\025\355\242=H\236\211\275\263W\266\273\2745b\274\224\026\266\275?\200\346;I\240r=\252\220\223=\333\350F\275\323\t\233\275\202\357\227\274\377]\326\275\235\307\252\275$<\307\275\026\300\207\2751\253\224\275\336T/==\345G:\033}\300\274\302\236+\273\"\200\315=6R:\274\337\214\247=\261\214\226=D\365s\275\274\324\332<\235\313\366\274\273\346\370\273\216\364\344\273\246\t\237\275@\250\303<m{\263=_\235\225\275O\177\362\274\367p\354\272 \371\271=\304\231A=\352K\276\274]\002\037\274U\020\231=\tx\305\275\272W\307=}*\272\275\325S\240=%h\241\274g\315\303\275\214\024\250=\004e(=\322\321O\275\370B\265;\2619\237=\272\346K=\370\354C=\325\374\251\275\222\\;\275\366\314\274\275\323\035\252=?p\314\275K\377\254\275\202\211\216\274][\210\275\034\241\312\274[2\235\275?\311d<#h\273=\035&H\275I4\201<\0321\324\275\240\030\010=\336\327\313\271\230ZL=\253\037\373\274\355\361\242\275\351\361\214\272\255\204r\271\335\266\325=\373\363\226\273\016z)\275G\271\352;\230\336D=;8O<\206\221P=,sG\274qB\323\274\233L\304=\216?\210\275\'\305\232=\200\177\n\275#\330q\274N\251\276=\266=D=\017;,=\210\375\313\275\263\370K=p\275\261=\3455\226<\022\003\311=\323\236\306=\227\2002=\024z\265<k\304\222<\234\221\252\274\344^\217\275\3073}=\215\030r\275\223w\231\275\251q\000\275\002\256\310\275n\346\267\275\024,\363;\334\305\330\273\031\246\300\274\"0\232\275\2731l\275\177\272\244=\3024\334=\r\263\260=\320\261\033=\321\241\312=-\311\252=\252\351\220\275u\266\034\275s\204Z<\256\254\233;m\350\321\275bt\303=\270\270g\275\351\213\225<c}\263\275\321\275-<\312N\033<\365\371v\273\001\014\325=Q\214\360\274\334~\234\275\221\226s=\001\230+=\246\3441\275`\246\255\275\320\247x=\006$\314\2751F,\275\264\356\214=\335\264\260:\232\350M\274\271\243\200\275\313q\330\275?\337a\275D\237F\275\246\240a\275\275i\254=\344\202\323=\270\242\235\274Lv&=\\\334\217\275?f\322\275\035\230\213=\224\t\331\275\341L\201=\306Y\335\275\374\373\260\275^9\363<\223\200\313\275\350\243M<\242\341\212=huG<\210\305`<q\3637<\236\260\262\275\361\321\205\275q\277\014=\203\252\007=x\355\010<\203,\273\275\311\337\242\275#\035\022<\213\024\321\275\373>\246=\030l\374<\276#\325=\207\200C=\024\334\276\275\\\220Z\275\204\024\214<\247Rv;\261m\317=\353\224\2249\346\277\377\274\367c\255\275Y\343\034=\022\370\t:\230x\276=F\261\245\274\352\353`\275\'\000\014=\305*A<=\341*<\255\313\270=\202\010\316=\201.y\275\201\373w=`\233\250=\231C\242\2750\371_\275C\244\226\275\026\037\262<\317\272\031\274(\027\322\275\331\004\211\275-\320\304<K\232\332=\260\3278\275\225\307\247=h\256\336\275P\300?\275\005y5\275$t\326<7\214\276<\224$\200<%\000\246=\2239m=\024\332J=\2519\215\275\003\235\310=\257\345\236=x\001\224<\260\325\333=\200\350x\275.?\243=i]\302\275\220\275\304\274\342d\306=\221\357\262=\320\023\246\275}\217\333\275Qi\211\275\235\251\243\275\013{3\275P\243\306\275\330\243T\275]\245\262=\177\314\231\275\224l\235\275\354;\210\274W\345\225=g\273\202\273\344\261w<4ol<\247\010\333\275\221\332\374\274\346/\270<$\324\202=\"%\033\275\327\2740=\323\221\364;\024~\321\275\375a\271\275;\226\223<\2601\316;\230?\244\275\2149^=SD\261\275\207?\202=\337v\225=\203l\322\275\361\313k\275\367k\346<\236\246\017\275]\321\236=93!<1\313\252\275(\336\313\275\256\206\257=\036=\335<C\277e\275\305|\277\275I\035h=f\300\203=~\276\003<\036R\303=;y\020=\270\273\017=\013,\237\275\303v\006\275\004\255)\275\032\210Y\275\305\351\345\274\313f\253\275c\\\327=A\203\310\274\303Ul<\277\3257\275\r\202\r\275\313I\365\274V3R=\330H\255;3\201\222=6\031\305\275\245\006\367<\'\3340=aL\215=\374\"\317\274\236U\265\273\260E\222<h>g\275\363OB=0\364*<@\234\030\275\377\300j\275\366\214A=\230.\307\275\2438\270=\221o\264=6\314q=\267\203V=\256;\260\275>\010\241=\221\206\030<\r_\260\275O\347\375\274n\303\240=\262\301\322\275j\271\200\275\210\r\227\274>U/=Q1\222=\204\341\002=\202\213\207=\024\325\250\275S\025^\275d\313\250;umr=q\010?\2750\343\312<Qa\260=&p\226=\014\241\365;\246z\344;.n\270\275\033\ns;\270\346\212=\301\315\013<\247(`=\003%j\275\270\2331\275\371c\325<\340\r\257\275\204GH\275b4B\275\262\341\031=\321\221\277=+\331\304\274\270\261\017\275o\024\226<\3571\326\275\332\007\r\275\320\177\314\275\347\307\336<\031W\211=J;\207=\014\323\355;Jw7\275\366z\301=\214 \245=\333\357\336=e\014h\275T:.\275\375\355\250\273\252j\325<\342\250\231=A=\212</3\210=ma\235\275\242\353\330\274\265(\316=\334\352y\2733\351W=(\313\236<F\322{\275\022\356\030=\344\277\264\275\246\263\225<\036\276\036=\323\347\325=\243\304\266\273\331\350\355\274\016\377B\275\036\257l\274\205\362\203\275d8?\275bO\200=f(\355;.\327@\274/\264\222\275i\211\206;\362\242@=\006%\242\275\327\340\314=\374m\255\275\211\347\222\275\353\276\227<\375a\006= \311\335\275ufv<+cx=9v\325=@!s=\260b\223\275\215J3:\372k\345<\312\371\322\275\300,<=\013:\332;\324f\220=\250\307\211\275N\014\024<\354;*=~G\223=\n\362\001\274L\220\027\275}\223:=\337\303y=($\306<I%\030=\236\206\252=\360\376\205\275\226H\321=\247U\254\275\262\350e=\3512\250<\nO\324=\377\323\004=\2438\r:S(\020=3\033\310=\204~\335\275t\266\306\274T\271\320\2747\337 \274\225\237\316<\022\355\231\275IE\300=e\260\034=j\225\250\275\332\353\225\275%S\313=\310\003\220\2752T\256=\255\343\266<}b\264\274p\026\351\273\311\031\247\275\002\033\202\275\357N\226\275+:\017\274zw\036=\376\215\376\274\255\206\241=\003\n\311\273g\357\233<\022\353\305=\376\372\315=\352Y\330\275\254\337\326\275\244\265\312=\2031\332\275L\\L\273\342\344\244\273\206\031\204\271~\323\252\275o\243\216=\"_\370;\273]\272\275\010q\242=\275zU\274iZ\327\275\277g\325\275#\325\240\275:\333\314=V\243\'=\032o\257\275D\312\267=\217\340g\274vC\331\271\264*\232\275\216\030\230=\214\374\261<Y\220\246<\031\377\025=7_\275\275 6\177\274\006w\230\275\232\"\246\275\037\344\177=\315M\031=\n\3635<X\337\247\275\025Gc=\340\020\212\275b\352\"\275!\014x\272\211\265\t\275\317\211\002=)\327\220=\002.\314=u:\307=0\031\014\275\343\311\326:\220\020\364\272\315F\302<5KA=\030]\301\275\252\2735\274\373\313\322=\252\234\247\275\2613\306;\"\325\334<8-f\275N\361\267\2759\216\274\275U\204\330=xm\272\275X\232\226;\306\375O\275\323\222f\274\202\366\262\275\031\022\316\274{\230\326\274+h)\274A\276\335\275v\027g\275!t\324;\377\205\331=H\366\021=\006\016\252<\001\037E=\3762\021\275\3242\232\275<\250\266\275\351F\335=\245\326?; \000\006\275\214\252}\275B\217\007=\017\025x\275\306\273\244=\305C\262=\343\241>\275\000[\204=Pe\256=!e\014=g\335\215=\356\t\005=\356C\320\274\217\264\245\275e\250\251=I\030x:q\316#\275S\313\216\275\306\240\363<>y\316=\255\021\270=\003\030\335=H\242\241=\322;\267\275\rk\265\275-\353\320\275T\244\273=\004h\355<>\000\223\273\'\343\242<\252\205\243\275\020\273\250\275\355;G=\245\207U=\373!\004=\007\347\304\275 \272\240=W\217\251=:O\330=\374\246\220\275\002\336r\275\241~\224\274x\2130\275\327\371\217=g9\241;#,\303=J\005\312=\372\262\231<\246\240\022=0\224\313\275\033\2426=\240\227\216\274\272\024\300\275\334\370p=\243\002\034=\215\260\335<uZ\367\274g\260\306\275R\001\020\273\340cu=)\275\266\275\n:\257\275M\364\177\275\027i\246=\343e\260\275b\254\263\275y\177\271=$x\233\275+k\234\274]=z=\014C\214<\365\356\245=r\312]=gg|\275\302\352\204\275\002~{=\343k\226\275\346\010\201\2756LK=\215\030,\275\316\\x=\304\350\256=?\266\232<ih\317<P\234\332\2752m\203\275%FZ=\242V\261\275S\037==2\026\206;)\324\257=\006\266\251\275\0204\201;\r\200\202=\n\254\254\275Gf\214=U&\326=b\205\034\275P\227\272=\260\254\230<[\247\271\275\0226\205=Bb\271\275L\362b\274{\271\372<\377v\306=\233\206o<\330\313\237\275H\247\227=\336.C=p\314\221\275\261X\302=b\370\304\275\300tz\275\350\244\211=\247\024u\275\026q%=\330\371\217\275\246\372\330=\314\362C=1\261\232<;\304\230\275.C\204=\341\247\267<\315a-\274\251a\220=\010>3=\252\375\005\275\023\037J<b\020\034\274\251\331\331\275op\305\275\230_\324\275\305\310\306<5\247\261\275n\205\242=\'\347\213\274\225\314\312\2746\334\355<0s\223= \354\324<\232;\316=\373\234\216=\250\351\334\274V\005l\275\356\357W\275\033T\006\275\355\277\021\275\036!\315=\342\341{\275\300\016\226\275>W!\275j\230\374<\207(:<\217g\227=\342{\333=\022\246=\275\331\2151\275\220\227v=\264\302\365<\363\032\225=\003\357\326\274\204\220q=\030*+\275\372fI=\364Z\217\275\373\351s=^\367\361\274\267\331\244\275\331\312\236=J>1<\350\252\260\275\247\201\301={E\206<yh;\2736\277\263\275V\353}=|\334\375\274L\367\037\275\214\257\n\272\327kC\275\230\325\207\275bi&=\276\0012\274\200\363\"=T]F<Z&\323:P\250\201=\202P\202=\371\236\236\273\257[\210=|\025\262\274\3775\214=\377\026\262\275\264\234\322=\374\204>\275\275\371\312=k\322\243\275[\221\304\273\351x\327=\'\206\312\275\025\334\243=K\023\222\275\274\337\215<<j\233\275\205\305\021\274\237\025\307<\333\343\304\275\014\316\307\275\325\276\332=\207L\022=\020W\315\275\344\374\031=-DA\275|\341\243=\226\030`=\350\035\333\275=\347G\275\233\033i=\3463\273=\t\010\272\275B\241\355<\232\036\245=\224\016,=f@4\275T\314\321\275\025\021\300=\311\203\246<\017\330\376<\236\220\213\275\365\335\312\2750-\346<\200E\241;<i\3159\332i\203\275\207\251\253=[\307\240\275-O\306\275\321\374\005=\263\225\212\275}Y\231\2744\232\007=\360e\246=\312\211i<h\322\264=\031\343\267\275`r\236\275\005m\267\274\223\022c\275\200\312\273=\1775-\275m?\373\274(&O=\3138\006=\016\236\254\274\315\225\030\275\005\306Z\275j\t\332=\t\322\314\275\372j~=a\374\320=\205\216b=\251\177\2658B\227\274\275r\020c=#i\362<\350R\333=\375\323\301=\360\275\234\275=>N\275\243@G\275%\310r=\032\035\361\274\021\364\226=\276\266\201\275\005\215\244=@ ;=\262\254G;KB\277\275\3324B\275RS\252=\373\001A=\377rt\275\303\315\215=\200a\265=\300!\207\275\347\032\204<\367\303\'\274\367y\333=grb<j\240\216\275E\213\267\275\242\210\242:\032\337\034=\374sb\275\021 \327\275h`\364\273#\320\206\275\350<\251\2735\234\270:\271\231\273\275\361\374\306\272\306>\r\275\312\377\207\274\027\313\243\275\337\263\247\275\272\275\236\275&B\216=\345*O=\256j3=(\253\330\275p,D\275|\\5=\247|>\275\317\373#\275\311Q\207<\267y]\2754\337\245=w\240\340\274\204\362\352<\322\013\231\275i\021\274\275\003\275\027\274T\346\263=\375\212O=\036\262\264=\005=\r<Y[\252\274\241P\300\275)\206\303\275\002T9\275J\235\304=\210\242\255\275\204\243\307\274\204b4=\252\225\271<\252\177M\275\032\215\263=\350R\335=H\233\322\275]]\301=\351\367Y\274\033\343\265=S\243\324=>\t\221=\203k\007=V\334\224=\t\205\226<\363\034x\275&\342y=\260C\226=F\352\216\275Z\020\"\275\215\255%<in\336<\212B\271=\301\362+=\374\023\205\275!\333\271\274W\261\270;p\032\207\275\203\302\350;I\314\200<\356\231x\273\321\370W\275\004\364\206=\tp\224\274zr\033<\353X\334\274\324\0330\272\312T=\275\365\230\251=\327z\036=]N,\272AV\226\2754\032\031\275q\314\237=\317\264\320=\305\364\004=[\356\277\275g\031\n\275_0c\275\002e\227=\022-\275\275Y\n\203==\363-=\331\254\326\275z\343Q\273_\330\024\275\352\017\025;k\234\253\275\010\034S\275^\343T\274\210K\\\275F^\254\275\334@\324\273\005\267\204;\275\017\016=\277\356\313\275\321\353D\275\305i\254\275U\214\225=\376\366j\275\220\270\225\275\327\226\326\275m\313\263\275i\361\"=\374\321\233<@$\366\274r\323,\275#\343,<\273\371!<\337\274\331\274\305\322I<\010\367\010\275\324\365\330\2745\374\231\275sx\233=\272<b\275e\265m\275\032-W\273\303CN\274\313\304\325\274!\035R=e\332\304=\253\020\332=\340\227\313\275\204x\205\274\374\302\301=4\323\026=a\216B\273@\240\316\275u\300\310\273\2670j\274\205\301\314=\036\001\332=\331\245\334\274\320;\3629\357\026A=<\223\206\273\037\356\250<\300E\304=\213E\324<\333\243@=tk\315=\315\316\313=0\345\303=\267E\226=\345\2359=q\022\235<\300\237#=\227\306\244=\224\262\231=cRx=\n\243\246<\202?\302\275\201\025\306\274\245\243\230=\014\270\324<AT\331\273\231\254\354<9sc\275K9\200\274-kz\275v}\211=]c?\275_f\264=\260\006d=*\353\362\272\024\277\014=\014}\221=\345^]\275\350\024\350;\021\304\313\273\267\rV<J-\200=\374EU\275\006e\204=Q\311\326<\245j\243\275@\202\240=\243\323\271\274\035y\204=\265\323\253<\333f\2358\005F\264=\306\006\206\2753\007\333\275c\n\252=\213\331\332=\214\t\322=\311\322\255\275\374^?\275\002\032\264<:\227\311\275\326.\357\274\024\202\3669\361\330\317\275j\017\002\275d\262\334\275=7\237=\232M\322<\204\016A=\346|\256=\205\255\253\275d\000\t<\260\377\231\274\275\'\267<\222\206\257=\212C\317\275(\246\363<4\220S\272\371\313\234\274\032\332\223\274s/\305<D\010D<\33087;\325\374\341\271J%\034\275\363$\312<\230\325T\275.\247\230\275\263\233\357\274\023__\2754\370\267\275{Y\315\275\027\021\220=c\334\242\272\242.\336\275\253\252\234\273\337\337\372<z\202\246=\207\262\203\275*N\257\275ut\242\274\264\0268=\266\341\240;\305\177\310=\225:F=\361\322N=\214V\2619\240\2276=)Y>=\271\373s\275\324X5\274\254\010{\275\206\330\347<\260\246\007=\347\211\352\273p6\226=\216_\263\275Gd\246=s\326\024\2755\323~<\330P\304<\254\310\021\275;\260\304=\327\031\227=\333\225\001<\257e\263\275\3157\314=/eH\275Vj\034\274\\4A\275\271\214\341\273w,?=\343S\350<\226\022\022\2749)\367;\212\204\302;$m\315\275\273K\t<\261\034\325=\001k\251=ib\227;\213\3602=\251\026\255\274\314,0\275\003\270\"\274D\326\230\274\235\005n=mB\233=W\2645\275\266\345\311\275\356\263\313=T\273\363\274\306\301m=\267\215\231\275!\222\333<J\367\214\274]\243q\275\322\201 <2lO\275\327O\264=<\210h\275\356jW\275\207de\271F\277\274\275\022\211O\273\335[\262\275N\034\264\275r\r\\\274\334\376\336\275\212\217\245\275\341\333\320=\227Y\010\275\025\320\327\275\323b\300=\037\332\224\272W.\263\275\026\242\343\273\343\354\207<\007@\346\274D+\321\275>\372\253\275\276\367\217\275\001\211\307\275\270\206\013=T\265\305\275\004\237\335=\335\346\242==\254\270<\2702\177=\000\270\000\267\216)\217=m\350\240\275\025TN\275\036\350n=b\337H\275\321x!\275\257\271\306\275\030m\212=O3\245\275\265\276I\275\302\242\223=\366\300\036\274\034\035\243=\331\t\330\275\206K\202\275\201\265\201=\220\342\202\273\t\003\244\275h\001[=\276\237>=\351\252\324=\2674\255=1\317_\275\273\305\365<\026\357\n\275\032\301\272\275\273~ \275\340\370\361<v_4<\344\2566\274\017a\014=\341j\024\275*^\213=\270\365\261\275*\376\230\275\362\242S\275}\346M=[\210z=\365\227\270\275\377K\231=)\330\356\274\223\341\027=\021|\n\2759\034\305\275\351v\275=\204F\301\275\010\3227=\321\277\236\275\233\304*\275\254\254\271\275\237\354g\274w\000\372<\010\362\341;T\345\201=Q\261\336=\245\276o\2757\323\246;:^\214\275\242[`=\326W\016\275Z\332Z\275\215\327\253\274J\237\213\275\372\336x\265\"\323\023\275\022C\223=\335F\277<\272\250\212\275/\353\266\275\347\364\260\275F\207\225\275=\332\005=\367\365L=t&W\2742\004\326;\033d\204<\210\226\224;~\2749\275\277x\232=C\240==\362P\235=\304\231\201\275\332]\203\275\004\353\302=\013Qm\275\334\253\264\275\177\242\276;\240\2610\275\202c\234=J\257\307\2751K\324=\251&\232\275$-J\275P\360\214<\313\317\013\273A\277\250\274t\334\302\275\341\314\264\275\331.\216\275\210\206<\275\2258\001\275\251C\n\275\024\032\211\274\2573\275\275l\274\226=\001\250\220=\220G\006=\327\321\276\275\275\302`\275\337fR=\330bZ\273\265\220>\275\26423=\265\225\255=\352\010\201=\335\036\235\275~\013\224=8\374\345\273J!\242\275\220\217o=\313|<\274\364\034|\275!\337\037\274\357\353*\275\244\347\221<2\246n=\035\205\010=\330\332\335=c0\216=j\236\215=\202\"\254\275\004\225|\275\325/\320;\214\315\246\275\312\366\200\275V\362g\273\364\234\n\274&\241\244<\360\363\327=\231\324\212\271\346\016\265<w\341\344<\003!\327=\205X\254=\371\334\224\275Z\356\277\275\007\202\240\275\322\307{=5\265\211\275\375\344\300\275\366\357\246=!q\263\275X{\307\275\204G\310={F\301\275\345`U=\356c\356:\252\333\277=r\264\335\275;4\265=\013\022\273\275\3506\305=\241\257<\275~\t\217\275\025\215\274<(\363\375\273!bf=\335/S=\256A\261\275c4\216\2741\275\032\275A\3719\275^\010\277\275\253\266%=\235\215\254<\260G\261\275\002\0022\275\267<\255\274\020U\013=Y\n\310<c\002\020=\007\002\326=\177.\333\274\354*}\274\371\"\017<j\023P=\226$~;n\260\357;|J\311\275\031\014\"=\236\001\271\275\361\034\242;m\245\265\275\351BR\272\232I\312\275W\"\311=\n\002\264=\364\341\026\275\343\240\225=\3268\335\275\322\253^=\2424\302\275S\034\235\275Kt\314\275\250\344\311\275\212\004\305\274\316\357M;K\210\"\275\351\273\032=t5(<\265W\221\275\233l\354<u;\002=\326j\217=\031\210w<\010\206?\275\003\023n\275p.\204=\227\352\007=79\206=\304o\247=d\022\262\275\2458\336\275_\241\317<y\363\330<{\340H=\221\325\203\275\230\362\r\275\310\324\260<\215\227\237\275|(5\275\230\227\212=\212\237>\274\335\272\311\275\013PU\274\371\242&\275NZ\207=\\\002\321=]f5\275\373\202\241=\366\031\261\273\t\315\252=/\275j=\374\371\213\275M68=w\221\250\275\262l\314<\024\345-=\271K$=\342$\277=\032\363M\275x\\\354<&F\334=s\366\016\275\353\250\326\275\212\307\302<\362L\023<|\035\336\275!dG\275\265\372<\275:z\254\274\227k\204=Tj\301=_Y\311\275\023\300\266\274\306Q\320\275.\343>=\2324P={\"\234\275\340\007\277=\362\010\266;\346\001\203\273V!\257\275ip\330\275\275\260\215\273\241\373\207\275hO\257=d\227\177=\027Z\362<y\215\315=^/m\275E\307\306\275\202h\215\275(1\242=\3078n\275\231\005\222\275\024>\266=\206\203\202<V\261\332\275`\250\246\275s\212H=\204!\014=G\340<=\342\324\\<\356tZ\275|1\020=\377\341\033=\312\303\336\275R\210\206\275\352\371\006<\350\010H\275\323#\244=I\236\265:\324\020\"\275|\314\276\275\307\325\304=\337\252\272=d\325\320=l\272Z\275\024\217\224\275K\322\211=D\240\215\275\033\306\221=\021F\002\275XF\243=\372\265\022\275\030\007\334\275)\266\224\275\036\2257=\243z\265=iY\276\275o\311\230\275`\n\225=\250\335\035\275F\345\277<\273\362\267\275{\263\235=\304=A=R\305\270=\2465m\275\375\314\226\275\212\326,=\215\032\254=\365\302#=\323J\313\275\216\016\210\275WR\241=\035\361\303\275#\277{\274Q\301\335;-\272\300=\253\255K=\217f\n\273\351\255\210\275\026\306\365<\034\257S\275\336\272\241\275\224\266\314=\324\020\332=\220\022\004<\221Y\213<\374S\270=\311A\326=\2462\375<\007\000\321\275s\2100\275\031\036\325=Mc\t=\033#\263\275\351\006\204\275\351\035\240\275\274gV=\320\374\335=\350\177\202\274F\210\332\275C\232\214\275\"e\302=\307\267\311<\t\2050\275o\270\315<[\360{\273\003\304\312=\240D\001\275\340;v<\367Bp\274\033\320R\274\212\365\335\275\\\034\300=\031\216[=\346{\333\275 %\311<U+\337=$\010J=_\0231=By\216<\026\003\306=\024\256\340\274d\014\013=g\376\323\275\027\373\326=:\333\255=d\364\241=L\262t=\023-\225=\351\312\207=\301b\273=\'\361\251\275l\005 <\352\314\\;uMu=\256\013\233\274\001\201\257\274q\221\271\275\017\270\272\275\276\005\343\274\317\215\242\275\343\220\266<\t\306\330\275\246\374%\275I\\\241\275\261_]\275\350\010\265\275\340\307\356<*|\324=\205W\204\275\021\345\224\275\023\"r\275\314\344\252=\177/\362\274j\350\204=,\252\224<6\262\311\275\212\246\263=\252 \006\274\016\001\257\273\357\360\211\275\277\227\252=\016\222\224=\352\353\216\275P\274\201\275\215}\317\275\373\016\260\275\364\353c=ef\214\275\2144n<\212\014\240\275>\363]=\212h\236=tP\n\274=\007\212\275\331\243[=\253s\013\275\371R\033\275\031^\032\275\371\220\361<$\247v<X?`=\253D\325\275M.\263\275\313W\215=\326\264\213\275l]\315\275\213\247\361<(e\332\275\241e\335=\316\026\230\275[\254\252\275\373\303\200\275\331\366\201=\266b\014\275\000[\361\273\027\305\325\275\220\254W=\273\221\362\270\370\337\242<\027O+=5\202\336\275k-\005=\362\310,<i\206\252=%@\313=\302px=?L\313<,\200\203=\355k\003<\026}\231<\017\312\362<=\362\337\274UTg=\214H\324<+*\254\275Z \273<\351;\225\275 \372f=a\221\201\275\031r\206\275\016\237\206\274\023g\271=\254a9\275.:\324\275y\334\277<\037\327\\=\236\001p<\244\376\206\275\026\007\246\274\256\337\243\274\n\352%\274\343\035\336\275\337U~=\347%\240=\245\204\241=\240\244\007=\233\020\013=I\375\222\275\0327(\274ty\254=\300\262y=\251^\253\273)\341\272=\367P$\275\344\334\261\275\303/o\275\306\203\234\275\020\341\226=P\326E\274\026\024\253=D\377\202\275\322>\226<\'\004\220\275\022\021i;!\351\301\275U2\215=+D*\275\355f\242=\017\337H=Gq\314=xS\261=;w\232\273\007\003=\274\226\201@\275\340C\335\275\215\341\240=\364t\310=4\304\233=\026)\205=\202\225\267<\225P\227<\251\370\215=)\225X=\322hc=c|#=\013\272\255=!\235\206\274c8\271=f\317c\274M+\231\274b\014\r=M\244\'\275\371\372\302\275rf\274=\226\"\377\274\257/\231\274\257x\204=`z\257\274Ma]\275?\037\330\2751\304$=\234\313\013\274\223o\332\275\025N\256\275\236h\233=\nI\252\275\372M\205<:\260\252\274\247\257\014\275D\314\243\275\327=\303\275\034\203\351<\301\034\352:\375\310\001=\3401\262\275\306\026B\275\224l\254\275\220\210\314=a\277\277;\347@\250<#\255y\274p\222\227\275\023\351\020\275ttF< \265-\275\311\332G\275V\347q\275|\204m\275#\251c:\263\314\326;u\254\334=\026s\231\275\355\205E=\273\006\251\275\313\362\277\275=\314N=\016wK\275\210o\003<\261\323\261=\271\025\261=\216\304M=\020\030\216\275\374*\253=:*\376<\303\035$;\3427\324\275w;\274=\336\367\r=v\026&\274\364\264\237\275\202\366\256\275~;\"=\325\224\203=\340\273\301=\304\366\316=\350\306\375\273]B\202=u`5=\3046\026\275q;6\274V\365g\275)\211\337\274xJ\255=\271\244b;\357\227\240\273x:\245;\370\335\302<H\374\315=\237\324\322\275\3379\264\275\323\'\206\275\326\275\203;\020U\240=\350\035\335=l\230\032=\257\035\253<1`\225<|\220\007\275\276yz=\261\311\200\275\233$+9\014\036\260=7b\325=\254\224\216\275\367\341\215\275\315t\004\274Z\r\331\273\242\273\325<\023\333\377\274O\256\234\275-\254\337<\232\256\321=\302\356\246<\016\265?;\34795=\206\215\000<\027$\026\274\33210=\260\036#=\251\023\310=\037\257\002=\227\177\340<\313 \006=\350\227\264\275\'\341==\241\255\213\275\266 V=\324\343 \275\311FN\275!\266\216\274t\350\312=W\301:\274\240\031\317\275\335h\220=8\367\275\273\336\030\203\274\316\274\305\275co+\274\343rY\275h\020\240\275E\242\330=N\317&\275\234\346\310=W~\000\274>Uo\2755\316\310\275t\366q\2744\302\333=\376\323\024\275\217\357R\275\234\367\240\274\227\207\210=\275\211\264=\354OA\274\241\232\256=T\0066\274T\034|=p\254\035<AZg\275&\345\254=\330X\210\2757g\332\275\276\025\204\273P,\213\275\303R7\274\\\214\245<\023\246\224=\266\031\252=t\375\200=\235\010v<\216/\205\275\270\226\323\274\264\341\243=T\214Z=rm\222\274\336\235\017\275\004\377N=h\360\335\275\203\304\244=)\214T<\345\3412\275\350\215\275\2732\312\313\275+\210\330\275\272\243\373\274F@B\274]Y\216;\345\2402=\261\240\262\275\273p\276=Wg\310\275\236\340\216\275\033\327\245=\321\030\210\274%\020r\275\315\014\276=\237\311\247=\216\371g\275\243\032\347<\316O\373\274}E\332\275\013\325\345<mn]=7{\333=/N\260=\315[z=\367\035\271\275\2556\207\2759\004\327=\024\374&<\363\272\232\275\006-\353\274\003\034\256=\256\233\305\275\270F\212=\317\366\377:\325\033\333<\256\215a=\2350\305\275\003\321\010=\006\364h=h\027\315=\352$&\275nt_<2\322\003=\016f\"\275o\320\\\272\324\364\323\275\344\321\232=\037Vo=q\324a:H\215^\275\254v\323\275\325W\237</\376u\274\313\006\256\275\306\265\231\275P\205\242=\311\353\006=R\r\207\275\2775\206\275\034\320\215\273\347J\267=%\361v=\014\324\262\275\233\217h<\317v\214=NZ\334\275\344\251%\275\345\250}\273\032\\A\275\357\367\016\275\206V\243=\372\217I\275>[\271=\275\352\210<2\203#\274\013\3665\275\352\377\335\275\331\t\031\275\021\342\324=\026\350\254\275\325\200u\275\203<\275\275\227\304\304\275\036\277\177\275\221v\243<\351\211\206\275^\320\247<B\244\253=\223#\213\275\001so\275\312\326\370\271\335\030\234=Q\254O\274\374\005\231\2749\260\352<\014\tw\275c\034\373\274\217\360V<[`\247<X\347\220\275\317`\225=\374\365\241<\257eX=q\010\242=y\247\246\274\261Q\317=r3\250\275\263F\332=lG\237=\034\356\232<h$\323=\215\247\312:\346\321\257<\033g\006=iP\277=^\327\\\275\260c=\275\353\217\221=&\333\030=f\354\211\275\255\214\300;\242\326\314=H\213\035=\253\222)\275\262\252\224=\362\263k\275\273P\210<\303\220\255\274\360\333h\275}\034\275\274\273\000\271<\243\024G=\212\333\315</\364T=|\373\327=\003\350A<\"\2046=\217l\206\275\205/\267=\344\231=\2756\222\313=\022C\271=\004\013\271\275*vx\274G\252\367<\217\333E\275\022\356\000<2e\273\275_\264\342<\370\021\207=B\242\302\275\231\214\354\274\351\352&=\021T{\275|h\231=\340t\244\275\0357\301\275\271\234\n\275\0241\300=Z;\212=r=\303=\330\300\005=\351\2360:\313(\214\275\235\237L\274=?\320\274\307\356\005\275B\366\217<b\217{\275\230q\275\274> 9=5\232\032\275\315\376\322\275\214Ph;:Wj\275!\357\272\273:\000\256\275\316m\035=\250\262\220:t2\241\275\334&\246=\327\372\247\275z\342\255=\365rJ=\337\206\261\271\330@L\275\272\020N\275\022\247\313\275\022\267\003<G\360\274\275\220\352\305=C\251\333\275\315#!\274\311\212\241\275\336`n\275\337BK\274\351\205\277\275aa\237=\347\305\367<|\236\211=xz\177=cv\300\274c\336\324<\036\272\344\274\277\025\264=\312\330X\275\345g\270\275S:\025\275\253\244\323\273r\221|\275f2\204:\003d\264\275Y\225\241\275\\\025\343<\226>\213\274\276\016R\275G\362\337\2744v\260=\266\362\236=\302\217\226=W\322\331=Yh\216\275\262\312\242=O\261\254;A\321\333\275\327\253\007\275kV\221\274H\223]:\356;\212\274\263\r!<\222A\321=\335>Y\275\233\222g=\002\024J\275\024@\370<\360\221\201=\344?\334\275\302\035\251=T\325\322=Ed\203=T\001\225=$%)=d\330\255=\303\\\306=\372\034\317=)(\317\275\313~;\275\333<\255\275jp\305\275\265q\253\275\220\330y\275r\362&\275]\210\213=\367\021\275<\242\215\310;\3100\212=\373\n\202=\313\303\331\2753\345\326<\274\n\203=\204\272\020\275mN\333=\267-\334\274\347\033\034=]\305\303\274|\305\276\275\235x\263=E\213d=%\350\263\273\321\017\324\275$>\224\274ne\335\274E\253\302<\357[K=U\372\004=\337C\354\274\243\314(=\326\032$:\244\306\254=D\353|=\002\346\322\275\2764\207=r\322\271=[\025\356\273\210\275\246\2730\251\023=\256\231\310=\220\003\204;\370x+\2740L\265<\346\227\221\275x\367+\275\354 (=d+\323\275\3063\222\275\332O\206=\320\304\204\2745\340U\272\300Z\241=\ty\013\275ON\352;\244(\336<\231a\240\275N \201\275\264T\206=\203\255\332\275\236\0214<\347\277\316=\316\034^=\3521\331=\330\253\\\275O\346\321=/v\252\275\227\261\022\275\372Y\320\275r5\277=`y\321\275\273\243\331\275\307\260P\274\263M\307=\014\326\202=\213b-=\366\0045\275\225g\202<\203a\032\275\372w\301=\347R\302=\023a.\275a\006\230\274\374\265\307\275\001\213\007\274w\366\306\275\326\016W<\2725\275=\302\313m\275\364D\307=R\201[\275\002\275\202\275\260\234\201\275\232*\027\275\331\217V\274\314\232+\274\372\035\227=\214\313\232\275\003\225\310\275\226v\246;\301\257[=\363\021\217=m\236\244=WU\301=\245k\277\273>\362,=!\337\3209C\201\364\274\224\235|<\362=L=\003\270\221\275p\304\255\275GD\244\274\2777\301<\013\006\224\275\027;\245=\233\310\250\274\013\321$=b\354\322\275\357\253\333\275o+\305\274\363o\313=b\261@\275\001\200\274\275\3225\177=\261\263\237\274\363\"\006\275\022\233\253\2750\340\270=\301\227D\275mkI\275\221\367\265\275\031\003(\275re\206<\203m\277\275\244k\232<\241\271&=Y\327\340<\035\236\207=4\256\274;\357\031\241\274\304[C<\315\227\276=\t\251a=\336\335\202\274\236\334\222\274\262\036\216=D_b\275\346\356\251<Bj@\275\313\026w\271\302Rv=,\301\333\275\377@\267<n\033\337=\254\222s\275\371-\240\274Y\026\367<\0347\207=\205r\245\275!\323\023<\356\274\367\274l\322\216\275:\355X=\272\203\333\275\017\2430=\347\3037=W\264]\275\344\211\250\275\361<\211\275\313/9\274\216\377\024=\201\3558=Y\361\320\275oN\304=\270>]<\347\330\206=o\213\247\275r\265\332==>\321\2748m\316\275\036\373\246\275\305\035x\275\242}\204\275\334\2518=\314\243\336\275\333\255\326\275\\uX\275_\317\214=B\025\330=\303\010\253\275\221\361\325=2v\\=\255\267\233=\362Q\347\274\004\236\265=\202\264\320=\225.:\275\3213\210\274\251\332\024;\006f\002=yL\220<\270\370\333\275Nz\275=\357\321I\275\'\001\304=\362\337\333=\016rx=_9\326=\353\274\214\275,\334\220<\251\002T=5(u\275\321_\'=\177\'&<\006i{\275\261\277k<%i\331=\007\313\232=\221kx\275\243\372\341\274\311\332\337<\001%\024\275\2412\004=\037G\034<\270W\332\275\177\343\257=\264\024\237=r\231\260\275\346\333\007\275q\r\204=\304\241\225\275[|J=\240\214\264\275\216e\250=\253\014Y<\217\230&\275E\"\325=D\214`\275\207e\271\275@j\277\275\373\314u\2753f\342<\264\332\305\273\265\317D\275m\270\364\274J\361\013\275\256\312\320<\350\025H<\201+\267=g\320\233<c\261\323\274.e(=\007\366\336=6\252\241;p\251\226=\264\356\227<1\005J\275a\322\222\275\313\366M=\036]\226=(\241\253=\'\n\022=bav=\262\265\353\274B\224J<\331N\273=\035k\201=\330H\263=\334@\254\275\322\014\273=\304\245b\275\206\334\254\274\276{\014\275\311\013j=:~v=p\036s\275\312\306\332;\241\253\224\271\356\224\270=\364k\000\275\242\231\304\275\300\\\217=\272\'\207=K\205\323\275\265 \310=\271[D\275\024\014{=\207\250\217=\317jy=\210\320\203;\335R\001=m\221\310=\350\213\201\274\267<\254=\025\330\241=E\242\260\274_\221\330=\366\212\217;n\304k=\360\305h\275W\204\261<\314\0037=I\220U\275\264>\211\275\255\355\365\274/L};\217O\333=c\023\313=+\310\336\274-$\327\275\007I\370<\'\016\256=\023\275,\275\211\2133=\253\304\230=@\230e=-\227j\275_\222Y\274\326>\334\275\242\025t\275\370X\325\275\2264y\274\264\202\350\2732g\332\275\234\341\267\275\013&\312\275\213\230%=J\305@\274b\204\235=\322A\306\274\242yI=,\326\313<\003;\257\275\232\333\020\275R)4\275\265p\266<\032\233\273<\267\177|\275\263\334\331=\3645\335=\355r\010\275\322\353\224\274n\3115\273\272\332\247\274y\272\303\275\355\230%\2740\024\311\275\322\212F=\376\345\251=\341\'\251=XSg\275\362X\205=\\R\232=7\205_\275\t-\317\275a\324\266=\366\204\022=K\225Y=\032aD\275\036i\243=\014&\303=\305u\202=`\"(<\032\227@=#\203\204=\323}\315=\375\373)\275\273\243m\275z\322\225\275V#\241=\355N\367\272\002\027\r\275\004\215\234\275\333+\032\275\371\337\335\275p\004j=Z\210F\274F\3534=#\211\230=\314\270j:\037~\235=\316\"X<\224Ue\2733\304\335\275b\270\260\275>.\267\275M[\212=\026\247\270=:5n<\035\373i\275\236n0=P\236o\275E\026\335=\356\303.=\370\207n=\212TV;JT@=\256\330\317<a\226/\275\206\007\201=\311\307s=\226\363\275=\t\372\234\275\212\t\244\275UV\022=\313\360D\275\230\372<=k\267$=\374\372\204\275\030\211\033\275\030.\215\275Sh\261<fz\243\274\243\322\275\274*@\327=\271\345\245=\241\002%\275#~L\275V\327\235=3\302\253\275\000z\310\2759R}\275\356\374\302<>\311\265\275\021\257\234=\030l\266\275%\247\036<\345\256\206=\26137\275\303\215\246\275[\022\206\275\352p\240\275\t/m\273\333\356\307=\361d\312\274\361j\335\275=\232\246=\340\0057\275\245(s<Zy\264<_\260r=\207\244\315\275\271\024]<\217n\022=\217\304\201=\361\254k\275\342\350\005\275=\201\264\275\330\002\233\275\321\312\227=\377\350\314=\315\320\000\275\205\t\334=,\r\221=\364r\017\275ja\324\275\306\323k=2@\241=\320\200\245=Hi\275<\205\3705\273B\254\241=\274\331Q:;^g\275\247\313\r=PW\022\275\\\260\300\275\207\225\326<<\326\220=\350%\004=x\230&\274\226{1=\307\212\270\275\311\330\276\275\006\022\267=\360\337\302=\223(\232=\030i\021\275g+\017\274\306p\347<\336\320\331\275\353\210\243\275\037\233\203\275Pk\325<Ro\243\2755(C\275\r=\311\275D\232\300<\330\335\230=(\345\372<\3353\235\275F\253]=GM\266<\030s\304\275\324\365\022=\226\370,=\307o\035\273\204\223\345\274&@\340<o\342Z=\031\342%=%\300\024\275F\036p\275li\262<V\323\220\275\346\"\204\275\256\r}=N\261\234\275\337\323t=\202s\323<\340\261A\275#\270\376<7\272\n\274k\235\036<y~\216\274\235\024\343<\364\005\031=k\236\260<\325!\252\275o\3559\275\354\240\314\275\215~\334=^\325h\275P7\213;\204\035z=\276\n\036=\025\031\214=/\023\335\274\336\367\215:\362\362\332<\326,\306=\322\275\275=\242\270\215\275)\026W=\023a\235=\021\025m;\222\331\277\275\000\014\301=D\336\366;@l}\275;|\246\275C\n\204=9\244\312\275\375)\264\275L\203\177=\225\260\251\275\337\347\335\275\032,\006<\235\320[\275\014\353Y\274U\200\323=\265\375\232\275\376Q)=s\276\001\275\303)\277\275\307)\254<e\273\253=C\326\317\274\245r\202=\025\273\252\274kf\017=\272\233\222\274\2612U<~l\274=\207\240\277=\325\366\262\275S\360\020<\233s\307\275\306<3<\010\376\313=\201\357\017\274\022\233\312\275x\227\016<\024\r\312<\231\n\314<[\306\331=\324e%=*a+=\333\353\276\275\364\347\273=S-\264\275x\363\336\274\216m\022\275\3370\267\274\213\254\024\275\263\265}\275\226\253n=9\t\314\275\213\221\222<\336\240\204;q[f<\377Y\325\275\023T\243\275\025\375\003\274\261\256\231=\260\001\033<\3302\206=\226\242\001=\245s\034\275\200\0246\275\230\350\335=v\004\331<\036[\255=\333\024\250\275*}\204=H\025@\274\261\366\230\275\320(@<\372J\246=\356\331\010=\370\271:=&\274Y\275\241\362\023=\371\262\277=\005h\263<\254Tv\275\376\376\210=\377P\202=\234X\220\275.\210B\275\217x\236\275\035\027x<\373\244\367\274V\217\325=/{\225=\217\030\035\273`$x\273\220A\214=P~\000=\026\006\334\2758\224\320=\357,\335\274\241\201\350\273&\256t=\3448\n=\324\337\311\275nyy\275\214:\217\275\"\372\207=\2029Y\2752Z4=6\n\242=\254\341\325\275;\201\262\275c&~=\210\205\"<q\242\005=\2439,\275k\020J=m\001:\275+OE<q\360\244\273\\ \303\275\226\232\270\275\225=\262\275\242\320\034=\360_<<.Qa\275\3635\261<\017\226\001\275Hj\247<\211\330`:N\261\225\275D\r7=W_@\275\217;|=&)\303\275\271\330\007\275|2\034=\2442g\275K\240\316=~\270\245=?\367\255=\354\224Z\275\313j\216;[K\321\275\331V\241<\036\356\032=\224c<\274\r\033\257\275\341\217X\275\rW\275\274{\306\244<$\260\214<\355\253\237=\223\200\'\275\356\226f\275\325\206\255\275\225\023\200\275\364\316^\275\347\rT\275v=[=GO\226=\242\017\304=\207\206\340<\356\322\321\275\240\031\352\274{v\303\275#\321z=\240g+=\177\341\202;\303\341\331=\375W\324=>{\223\275%\2128\272\261\273\260=X\002\n\275\\\345F;\022&\237\275,\270\236=sv\250\275k \032=\354\211\225\275\303og=\271\026\300=WF\013\275h\360\213\274j\363t<\200\366z\275Z\226u\275\2621\211\274\231dX=\212o\213=\216\r\326<f\346(\275\007\373\032=\211\367\331\275I\253\201\275|\2442=\2720\237=\027\026\002\274\'\261\244\275\335WA\274\255\333\024=gT\r=\321f\254\275\260Q5<\220C#<7mc=\214\212w<\231\305\227=O0\312<\360\355\306\275\313\206\327\274\235\257\017\275P\253=\275\022B\334\274\334\312\334=\313\303\243\275s\215\237\275\301\235\307<\342\373\271=\335\243\217=\207\241\211\274\251\240!=\264\335\333\275-\330\216<\351\030\033\274\215S)\275\236\001\233\275e{\231=\272\2464=;\250$=scg=\223\t\264<e\261\316=\340\203\232;\245\325!=\236\"\250\275\366\274\274=\246\370\215=\0245\177=\332\013\250=\333\n\237=p\274S\275\'d\206=\377\377\200\274\241\375}=\343H\216=\211H\t=/\271(=\274\201\334\275\254\375E=\0316\316\275\233\024\005\273\326Q\177\275.)\225\275UM\345\274\032\301\005=p\2751=I\307\217=mj\'\275\'_\'=\263\225\330=<+\335\275A|\025=\374\312\275\275?\304b\275\231\024\217\275\231+\216=\364\372\301\273\024\256.=3\205\247\275\372\271\265=\311\236\271\275s0\231\275O\364\212=\350\334\265\274y<i\273\013N\305=r\200\227=\345\004\244=\335\362K\275\360\340\000\275\333w\024\275\256\356\202=D=\267=^\334\206\274\205uw\275?D<\273\236{\245\274 \314\205=\207Y%\275\302\360s=\027\263\202=\337\217\351\2747\343\326\274\375\177\351\2746\255\330\274\252\247\304\275\250\000\305=\227;b=\325iN<:\362.\275\237<\320==D\327\275K[\234\275\3658(\275cF\212\275\020\262q\275\021d\013=\261\275\225\275\351\342\255=\310P\310;\001\337&\275\021\277\225=\273av=P2\317\275\3327\255=\260x\317\275\331\300\334\275\226O\010\275\267\027\023\275\035\250\221=\302kM=\234\\\306=\227\334\245=f\234\324=\\\3442=\325\022\300\275\0307\334\275gf\026\275z1\220\275\177*\320;\014\321\020=:^\335\275\330\342\010<k\032\207<Nt$=b\027M=h6\022=l$\267\275i\211b\275\236 \363<\345&\237\275\343\311\231:R\234\271=\237w\315=l\334R\275\234Q\323=\271Wo=r\302\227=\000\004\375<A\343\266=\246O\226<\034\211E=*\334\t\275{\234\313\275\031/\322\275pv\275\275\360\247\376<u\353\236\2753S2\275r\203\036\275\034\006o=.\201\275\275\262v\266=]\255\334\274\013(V\274Of\243=\004\2547\275\207\313\312=;\337\242=\tM\277\275\316\317\267=>\250\346\274T\350a=\256\0373\275\005X\203\275\377\035\306\274\021\225Y;\377wc\273\255\216\265\275\336\251A\275\360\355\247\275\314\3455\274\213\356\215=\002P\010\275I\342\2358\363[?=$\201\272\272\342\037\277\275xl\030\275y\245\305<\332\253\315=\3551\332=?\025s=e\363t\275\326U\036\275F\021e\275M\003\223==\371\010=\257u\033<X\311\230<\326\237\313=\274\364\000\275\201\376\303\274i\327F\274\003\202\356\274&>\206=\225V\334\275\212\373\026\275\343f\370\274\336\207\265\275\211V+\275Rs\234=V\023\002=\372\325\275=\rV\310\275\363\234\017\274#\331\262\275Xc\363\274\247\200\271\275\231\373\303\275m\033\367;\036jm=f\252{=M\006\324=\2067\322\275\'\253\324\275gJ\206\274\036T\200:\263\202\246=\243\356\026\274\222\275&=%n\037\275vz\335=\344\017\267=y\330\336=\213k\237<v\307\270\275\264\242\273;\225]u\275\nq\331=~^\327\275\013,\303;\3422\272=k\211\213\275\312T\316<y\262\232\275+|\021\275\"\246\331\274\203m\240\275\031\311]=l5\001=\354\024\333=d\242G\275~g\227\275\230R\253=1\361\263\275\236\206\316=\031\034;\2759\022o=^Y\204\275\013\254\225<\263\036\303\275\034I\217\275\233J\304=\255\364\260\275\376\237a=<#\026=I\300\244\275\'\223^\275\204i\005\275sB4=\247\"\001=\201OQ=\\\215+<!\270\251\275\300\rJ=Ox\251=\036AX\275l\177\275=\255\331%=U\263\311=\241\340\321\275\310\364\246=\036\225\230\275\221\314\272\275\220\244\220<\312Y\247=\020&a\275\374k%\274\335\362\315\273\350G\235=G(,\275\036\362\014\2759\251w\275o\330\252\275\036\270\374<\232\r\337\275\252\345\311\275h\233g\274\031x\211\275/\367\t\275\262\006\252=\206\356\220=\274\316\227\275\034\375H;\303W\332\275\036\331\304\275\310\247\313\275\277\371\327<\312\351~=\344q\323\275\2460\037\273\336\307\324\275\350?\270<\303\260\251\275\327d\215=\032\360\220\274\205\203\257\275x\273\314=\300\330P<\252.\253=}H\025;\353t\242=bd\316<^\311\211\275\305\265\223=\222k\214=\313\037\307\275\3720e\275\302$s\275\234\251\317<\005\342:\274\201Aa=$-4\274\204\020k\275\310\245\301\275\336Y6=\240A\016\275\031\217\267=\345\344\272<\211\326\231=l\220\275=\241\'\307<aR\272\275\247M\342\274\300\310\016=|\350p\274\254nX=l\333\347<\211 \316\275K\253]<\363\030C\275\255\277\237\275\333\241\231\274\037\311\225=\324\340\263=\214\037f=~\321\326=\217\315\344\274\\\203#\274\252\313\266=\037\311\310\274k\037\217\275\231\361\303\273G\006\260\274\356\341\325=\360\312\247\275\034\301\t<\270\267\272\2759P\315\274Re5=\335\205\223=\324v\332=\022Dm<\343\334\330=\324_\310\275\026\210X\273J?\263=\334\013\274=Q\223\243=\031\321e\275\353Bv\275\3209h\275ca\234=\226\206\n=\007\311\230\274\247zf;7h\320=G\247\032\275\035\314\223\275\264\"&\275\345\366\263\275\314\030h<\340\357%<\000-\320=I\032V\272\231\'u<*w\215=+@\240\275B\222\277=oc\240=\217cs\275\344\320^\275\314\007\322\275\273\t\376<=\346\326;\023\340\321\275\347\013\275\273\357P\314<=\205\001\275\003U\212=\305\321\037<8\013\235\275\335iV=\252\027L<\242\311\202=\270e\242\273\375\347a\275r\250\216\275\301\312<\275\027\320\203=[R.\274\262Y\036\275q\305\211=\344\342\344<\321\200\357\274\367\200\252\273\333T\365<:\274\267<\215\304\326\274\316\230\n\274\340\323\005\2750i,<\232\255!=\325\226H\275\273B\277=En\266\273\002\303h\275\037\2266=\336\367@\275+\3604=G\210f\274\343O\275\275\360\361\274\275\365h5\275\031\271O\275A\nz\275\353HL\275\252\374\017\274\347\324\205;h4w\275\240i\005\275\221\255\303\275\374\244r=O\3758=\311Aw\273r30=\341^\211\275\250\202\243\275\204\306\254=\311A\026=4\034\007\275\324\315\241=Dx\261=\252#\245;\201v+\275\003\336\333=\002R\244\274)p\271=\230\330\235\275\315\302\310=\002\302\211\275\272_\206=\002\"\357\274f\2774=\355\252q=Cd|\275\'\233\250\2757k\262=TcS\275O/{=\314x\335\274(s \274\217\214\267\275\311\214\314=\225\337\266<\036\233\255\275\317\034i\275r0\321\275\\[\032=\210\246\310=_\226\205=\016\235\245\275\243+C=\375j0\275nI\307:\300\256\200\274\204<\311\275\2173\242\275\207\340S\275\224\004\272\274\344R\252=u\362\254=\327]8<\267\037\203=\346\006\231\270W\253/\275)\023\266\275\346\333\245\275\317\3340=\323\305\217<(\235[=\235\377\270\275\217?\003\275\345\2650<v\024W=\303\013A<\376p@=x\213L\274n\343\256=\277k\366<)\td=\224\304\002=\234\247\240<\366\262\261<%Y\274=Z%\316\275=c\272=\242\\\312<\374Lp\275\262\351\273\275\2709\306;oz\201<\020\3361\275GL7\275\361\020\247<\325\241\302=\034\353\325=\242\007\216\271|\007\212\275\345\2613=\001,\027\275\344\331`\275\250\314\252=\334\036l\275\277\037\020\274j`\213\275?\017\342;}r\236=\017V\203=\'\233\005\275\2237\271\275\017-\302=F@\224\275K \237=c\207\203\275\344\232\232\275E4\262;\253\3552\275i\0224=O\263\005=6\027\221=IcU=\273\035\022\274,|\313\274\314\217~<\205\247\001=\3156\317\275\257\036\033=\002\010\252\275\317\347T\274%!\230\275\347\333\001=\317\032\255\275\362\357\004\275V&q<t\345W\275a\337_\275\320\030\252\275M\232r\275\327\316\326=\256\2205\275\231b\353\274H\n\254\275\357\210L<b}\202=\230o\023\274\244\257\376<b?C<\036\345s\274HOu=\360\267\010\272\271\317\334=D\322\000=\275\313\177;\013C\027;ZI\276\273\206s\277\2756k\215=\343]\261=\212\005\220\275{L\271\274\256\254\223=\355\006\205=i\357\245<k\320\263=\326\226\313\275\324T\321\275\031\035*\274\355\232\027=\225\240\027\275\033\027[=;\320m\274!\351s\275\r\225\200=\340r+=\"\337y=\332\232\023=\030#\304\275`\257b\274/\t\304\275\360<\263=mWV\275\312A\274=\003\002\207=\367\003{\273\246\\2=\321\313\025=\031\211\275\273\241\320\251=\025\363\330\275\362;c=\315S)\272\351Xe=1B\253\272\261\344\245\275ED\315\274N\022\306;\370\213\366\2746\324?=\306\211\276\275\330{\227=\332\007[=\2537D<\020\036\351\274Ps\276=Yo\347\273H\303\274\275Et>=\360\246Z=\225L\330\275W\374\313=1\356\264\275\306\373\321\275w3\355;r\007\236=SX\017\275\344\265\013=\004\025\320=\207\342\304\273\321`\222\275<\367\232\275\267\013\270\274\036\240\323\275\300Fv\275bU=\275R\263\270\273G\334\241=\324\261\266\275a&\331\273\255\226a=\010BY=\t\262\216\275\322\022\245\275w\357m=\2430\264\275\010\253\007<~\372\324=\365\342k\274E\327\017<$\345\263:\373\n\332\275:\354\272=\022\\\262=P\244\256\275A5\235=\354\\\327\274\245b\314\275\027\301\302<K\253\214\275\261\000\027\275\360=\035\275[\246\030=\313\341 =\177\320\267\275\341t\330=\030\001\331\274\230O\373<\034}\317\275\013\3005\275\302\332\226;v\217\273=\032w\032\274\366S\177=\241S\264\275\263\305e<\251\376\300=PH\027=C\236Y=;,t\275kJD\273\0060A<\014\230\362\271\301{\300=\340R\237\274y\264\300=\353\034\323=\272\037\017=Pp\330=\212\202\216\275\217\223O\275\226\353J=\304\007o=b\t\357\274\241\342\003=\026\316\245\274\024\255\214\274\356\023\334\275\212\313\306=\360\241\254=7\202|\274\335\244\234=Iy3\275\315\350\273\273\0215\301=IL\204\275\024\225\226=\305\">=\n\0055\275`\323\260=v6\330\275f66=\242\303\223\275E\233\276=\007\032\032\275\177\317\251=\277\373c\275+\261\263=\017\207\030\275A\\\267=\206*\332=n8\005=\277\250%=)\314\312\274\313\237\025\273\200\033\346\274|U\267\275~6\220=\371\024\224\275\334\312\335=\342\016\273\2733\317\221\275\177;w=\335\341\267\275Q\237\034=\231\034\254\275\316\314\257<\253\255\333=\217\254V=\025\264\355<\271:\260=\317\3744\275\374=\237=\371n\242;\232\353\013\274\3314\220\274O|\334=\t\227\344;ya(<3=\325=\364\342%=\247\317\006=\300|\334\275\273\022P=\325<W\275\375\350\277=\214\231\247\275_,\325=\263\037\243=\234\362 <\240g\264\275\026\262\307\274\305\032\343\273:\033\323=W\010\244\275\344\014\267=\324b\267\275s\251\024=k\312\362<\247\377\344<\242\2326\275\214\351\310\275\274\0344\275\030\351];\350f!=\260+[\275 \355\207=\017\310\214=\314\232\274<2U)\275\333\350\247\273\027u\207=\336\253\323=\377\330\374;\305\202\300\275\363\256\306=\t/)=\014I\360<Z\225k\275\210\023\264<^\007>=\270\001\263<\206G\227\275~B\243\275\002\0043=,s{\275\340nv=\027\227\252\275%(\372<b\304\246\274\216.\026=\366\"\251<\031%2\275\351\340\250\275\243\260\264\275r \000\275\331\306\206\275Vk\247=\031\003\326=\2533#\274\216\364\302<\304!\203\275\217\207e\275q\255\223\275V\'\365<\261\017\332\275+\3479\275\351\344\315\275A\356\276=w\206\274:\230\270\202=\266dU\274\341je\2750\257\327=u\031\024\275\'\267O\275\350\234\310=\223\254\311=.\312\014\275\034\347\300=\315h\275=f\020p\275D5\305=\302\016\277\274\210\363\216=\206Z\332=P\007\333=o\000\232=\033\236\252\274_\211\206\275Hk\252\275\352!\345<\257\224\013=\342w\226=\343\303\330\275\207Vk\275\263\350\256=\256\033\270\275\346:\322=\033\341\256\275\307\303\206=}\322\r\274W\237\234<\370\361\t\275V\"\304\275\007^\204\275\307lP=\330\247\310\2750\217n=\277m\262=\257\235i=R+ ;\345\326\2059(iv=\315y:<X\376\255<ap3:\000\376?\275\272z(<X*\3549y\213\210\275\3736K\274\253\242\201\275D\275\325\274\276\371\217\275\023o\037\275\346E\304\275&:\261=\213\2363\275\325c\211\275\264h\301\275\007Q\203=\367T^\275gW\327<\273o\312=\036a\246;\022\261d\275\320K\255=v\201c;\n\355\334\275\302\267\274=\315\3009=\037\275\213=\377\177#<\tzU\274h-\330\273\323O\254\275\306G\376\273*6\211=_?\340<k\223;=\004\321z=\373\n\312\275%\037\364<\356\243\242=\322\321\302\274\017\t\022\275\233$\231\275Qs\230\275\212j\314\275#\344U=\213\350N\274\200\300\254\275\207\342\216\275\366\302\231=\342\304^=\200\222\376<\353\222\212\275m\235\t=l\021\267\275\376@\000=\257tF=2\312\013\274\035/n=\255\243\213=\242-\333=\201F\217\275\265i\216\274\352V\242<\326\273\215\275\345V\201=\333\"\321\275\242\263\252\271\323\202\240\275\334\305\356\274\220\016\274\275\266\030\242\275\r*z<h`\002\275;?\032\275\\a9=\225\352\307=T\353\302=\214\257\233\275|R\247\275\366Pg\275\022\217\213=\016^E=\304W\225=\360m\201;\223\264\263\274\316\207\307=\001\225\216\275\026\357\266=\256\234n;oK\223=\213\003\234\275\330cR\275\027i\016<NP\334=\224\277\271=_\345\274=\257\201>\2759\323\204=O\201\224\275\205l.\275FD\343<\rA\322\275\223Q\305\275\347=j\275\306\306a;\031\376C=\367\025\036=I\230\207=\244\236g\274q\256\240\275\221\360X\274\257W\242=c\250b=Wk\272=\257\334Y=vT\237\275\000\333<\275\036D\250=\377i\212=\325\304\271<e\337\322\275MS\250\275I\000\037=\220\304\223\275\022Bo\275\006\3376=D\332M;\206\230G\273z\336\340<\350\307i\275\367\3423=\367}\033;X\301\203\275\016z\263;\361\364S\274\367\255\255=\000\214T<\000\025\246=w$\335\275\376\020\337<\032\316\032\275\336k{=\353\372\223=.Y\253\275\236\010\274=\215X\262<\200\362a\275\301f\300\275Q\017\234=\224\227*=!\355\335\274\002Lx=\303\315\272<;\255t\275O\252\264=H\336\253\274B!\221\275\033K\323<:z\216=\372\342V:-\023T\275<Y\260\275&r\244=\260\026u=Ay\304\273\215\263\271=xH#=\034\020\322\275\025\346w=\333\020\327\275ts#=\027\021\303\275\211n\000\274`\030\372\274E!\325=\325\014 =\333H\264\275B\313\206\275\226\367J\275\306{Y=\362\3108\275Z8\177=\333\027%\275\220\360-=>_\325=\242\374\273\275\324\177l\275i\200\030\274\264\330\314<\327;\357\274\363\200\302\275\005\256\201= \013\233<\376d\031<\264>\303=\204e\255\275W\366\313=V\254\325<\367\030\215=\\f\230=\201\304\010=\202D\241=(\326\246=i\275\217\275\342v\266\275\214a]<5\237\226=\214f\306\275\351\235{=\032H^=\326\177\304\275\373)\337=u\355W=\307&\224<\304\226\254\275\361\210\313\275\364i\277\274H\355~\275r\362\264=\221F\t\275\254\315[\275\r\006\207\275\312_x\275\233\200\334=Z\026\311\275?\'\211=0\207\276=(/G\274!\336\365\274KW!\275\261j\177\275\330\206\023=\n\351\213\275\371^\255\275\010\022L<lq\231\274\267\024\313=)\264\304=\273+\274\274:\265\272=\376\377:<\223\305\271\2744C\254\275\316T\242=\267\261\254<\223D\032=\376e\230\275\243kH=\317\003\336=\352\203%<\251\3570=`\232S;\335n\336\275\304.\371<\304;\003\275\343\261G\275\275\201\235\275T-\236=\213\361\221=\207L\256\275*\276\342\270<\023l=\301 }<\303n\022\274\014a\215\274}\"u=\030.8=\320\360\240=I.D=l\330r=\010C\302<\372\0216\275v\2532\275Oiu\275&\t\360\273\264\262\006\274\274 !\275i+\276\275\271L=\275\376\316\220=\314\202\335\275D\331\225=XC.\274\025\372\274\275V\377\277\275\217&\256=%\026\235\275\307\216\263=\336\232\004\275\004\257/=\023m\250\275\251)\312=\302a\305\275\021\370\240\275\246\t$=MT\332=\006\235\250=\212\331\317\274.,\274=\010\210\014=w\264Y<4\025\252\275(\t\261\275.\306a=\271\351\371;\321\370\222=r.\317=W\242Y\275\271`\026=l\372\336=,:\355\274;\024\000<\001jV\275T\026]\275@\253\307\272\222tS=V6V<\214\030\301\275\331GK\275\371\035\303=\036\211\216=\313\227\215\275\027.\321\275hs\345;\235\361\214\275[\327\343<\270\325\007\275Tt[8\250\037\272=#{\243=`\326\210=hbf<\324a\263\275\353\3007=\201\216\250\275eF\020\275\361\315\255\275)\350\225\275J\"\241=\271l\262=\244\201\244\275Gv\251\275\303\360\311\273\232\305\314\275\2003\335=\020\274\212<v\346H=\004\323\274\275l\345\207\2755G^\275\010\220\215=\363m\220\275=7\261=\301\2616=\226\277\217;\231\270k\272\0324\246<1Q\020\2750\212\'\275L\271\234=\225!\327\275\030\000\222\275gY\035\275\246\212@=*~\317<\221\014\031\275\337\247\210<\373\377\230=\334SK\272\006wl\275`K\266=\335?\302<\315\232\327\275C\366\225=\313 \030\275.,w\2748\270\235=Hb3=\222\027\335\275\357\302*\275\034P#\275Uh\217\275\177Q2=\333\"2\275\332\307\317=L`F=a\013\336\274.\024\001\275&z\234=\266\021\307\275\r\300Y\274\317V\024<@M\224\275\0249\007=\374^\177\2741*\3049Z\014\003\275=\330\\\275\n\324\327\275\n\265\203=\353L\264\275|\027\025=\243\310\321\275\033\255\215\275\314r.\275\257\022]=\0038\201=\370\236+\275\3738\324\275\245\0140\275\201I\256\274\227\332\313<,$\346\274@W\251\275W/\235=\324\317\210\275\211,\326=w\326\356<\024j.=\177s\245=)\356t=o]\227\275\025\273\205=C\002K\275\034N\322\275\304\301\250=\310\302\265=F\361\205<\322\024\271\274\205\031d\275\376B\333\275\375\320/\275\265\227g\275\372\205\001\275\334\211\312\274\033\266C\275\006\024\223\275\231I\216=\177\034\303\275q\207N\275\204\241\206\275\\\334N\272g\221\235\275\336E/\275\360|\210=n\243p=8\262\236\275b\356\014=\373\264\007=q\343g=Z(Y\275l\227{=WO\036<~w\310\275R\247\205=\032)$=\203\211\246\275u\326\234\274\314\2336\275\215\217\306\275\030\014\001\275\375F$=n\362\305\275\312\263\325\275\254\344C=\210H\322\275\301\270\370\274\223\317n<\235]\310<`H\273=\241\261.\275\007\0017=\215`}=\036m-=\244V\216=t&`\274\347S\302=\\/\372\273\0054\272=G\351\336=\351/3\274\247u\354;\244\340N\275\270\276~\274>j\303\275\364\333\265\275D\245\313=\370\223\t=Jo\n\275o\324\223=j\242\216\267\376\3504=\307\251\231;f\305\344\271\333y\263<\020\337\364;\350OA=\367w=\275.\236\263\275\333l\305<BX\373\273\022\255l=B\026\222=\001\037\022\275\200\276\216\275u~\213\275\t\212p\275_\026\322<\271\201\330\274Yfh=\027\202g\275t\262;\275\274\333v=\216\305\252\275`\361\025<?\013\243=\2361\232=\0343\244\275~:\037=\216\003M=\301\271!\275\235\023\237\275\277\262c;\211b\014\275b\366\204\274;8\256=\336D\307=\333j\243\274\316\031\215=#\2301=2\026\255\275\215\305\321\275\365\264\222<\230\251\210=\237\374\243\275\201g\332=\334\276\032=F-\331<B\376\316\275\037\363\337<\335Q\250<d\032\220\275\036L\243=\320\352\334=\r\233\311=)\016\016\275?\214\326\275\235\226\241\274:\202F=\341n\202;\021q\023=\016/u=\3449\225=4V\017\273\275\254\302=\377k\330\274V\026\032\274r\373l=\333\014N=\n1\022=\377[\215\275?L@\275\376V\307=ya\020\275Xk\n<j/\027=\274\250\272=\371\007\214\275\320\213\017=\370\031\251<\360I\017\274i\213\230\275D\337\025=\361\343\231\275\223,\246\275w\004\003\275^\357\324=;\361\264\275\033\032\r\275Hr\310\274\266,\271\274\350\327h=|v#=\033\311P=`\227\207<\203\272\320=_\324\326=\027=?\275\370-\341\274r\307G\275o\273J\275\262c\253<\377U\252\275\270\220\235=[Y\220\274\227\001q\2736k\032\275\276;\321\2751\207\260<\351\346\240;T\205\250<\313\022\327=#\027N=\267T9=I=\004<\230\364\250\275^\230\303\274\260\326p\275\204\362\246=\202\\C=$@\322=\215\366Y\2746Q\332<\305\241\274=\363\322\233\27577\304\275\222h\204=\tF\217\275\341\006T=EmW\274\202^\275\275\'\273\237\275)\367f=\230x\250=\220t\345;\273QO\275\266\"\323\274\013V\315\275k\026\210=+\302\336\275\276\353\211=\247\024\255=\364\224\256\274\210\346K\275h\202\271\275Q\210\352<\362h\322\273y*\266\275\342B\311=\201\267<=T\243\264=`\340R=\246\217\305\2753\323\335=\311\210\204=2\213D=\275\306\303=\257\264}\275\263w\320;Q=\240\275\353\032\204\275\022\377\370\274\337\360#\275\323\351=\2731\007\226=\376\362q=l>8\275\362\\G\275\014\211\213<\262a[;!%\241<CT\344\274\267\357\300=\204\0130\275\330\301\274=\206\270O\275\224\233\213\275\013f\276=\376*K\274Ig\273=\230\003\217\275y\003\340\274\032\304\026\2752\364\354:.\305\213\274R) =\023\303\026\274\252\317z\275\313\023\221\275\331=\345<\343qc\275\257M\252\273\242\024!=\033\322\r=\035;\217=\267CB\273Z\363\010=\202zq\275\027\212\277=\331\240\022=\005\211\253<0\303\326<\266I]\275\373yj;\177\345\227=\245\270\234\275n\2003=r\']<\031\221G=]\217k=\003h\\=S\201\217=Y\331@\275\343wq\275\2371\222=\003\323B=\324\232\002<6\306j<*&\300=\355\017\301\275\376\314\276\275\177\033\303=\362\212w=\315)\237;\231u\227\274)\2345=\326\331\322\275\347L\327\273\316\315\261<i\207\376\273f\273/\275\262\215\321\275\346b\232\275\245g\267\275]qC=\035\355\236\275P\343\351\274\232@\272\275u2\306=\257\352\233=\256\227\261\2730\351\241=q=\220\275\361\202\267\275\353R\217=\345|\250=\217\205\225=E\\==\031%\223=W\263\313<\3635\272\275\313K\210\273Qm{<\246\211J\274\003\336\255\274\250\324\242\275\370\354\372;\361!\316=\377\204\321=\273\243\213=\363[z<\261\331\225<yU\231<\303\213\367<\026\326\210\275H\301\341\274\343`/\275\210b\034=\352\236\355\274oV\316\275I\226!=\013\337\324=Q$j<\301\243\326=+\316\004:\201\217\226\275\361\017\335=>T\244=\036\312\307=g\255F\275\201\'\322\275h#|\275u\245\255\275\237\265t\275\025Y\305=iR\377\274g\362\216=\242\235\"\275\016\331\024\275\022\344\257\274\337\341\212\275W\020\"<8\301\025\275y\206\265\274D\225\241\272\373\355u\274\312\216\330=gg\217=\266\000J;\213\230)=B\323\356\274\263*b\274\310?\241\275\326\261\201=\226\334\226\274\332\373\t\275\316@\000\275\273^I\275\237\350\320=\003/\217<\236\005\275\275F(\031\275\224\263X={\010\006\275\035w2=\000\2134\275\242O\322<\342q3<\254\212\005\275\373\343[\273!\033\306\274\024\362\222=\210oC;\017\303G\273\217\256\307\275i\022,<\210bx\275\315h\205\274+\026\307\275.u\305=;\262\351;\022\303\233\275\356\324:\274j7I=\231\"\210=\177\322N\275\260[\324=\"K\322<Z\325\273\275\205\177\321=\314\273\316=\220C\017\275K\223\266\275\225\323\273;\360R\275=\347\023\236=\244<\305\275\212:\177=\"\007\220<\364\266\263\275s\025\327=\243\022]\275\267uo\2757\202\243\275\035\231P\2759\016\r=L\363\315:8DJ=\024\334\022=\366\267\226\275\202\016\276=~\245\233\275\240\355%\274\205Z\272\275\224K\264\275[FX;K\247\004=\300H\310\274\266\301\334\2757\374\357<\252\214\032\275\020\377\306=j\220u=\215\273C\275[jC\275\0028\253=\343\210\321\275\"\026\371<\352\025\270=cb8\275\270R\201\275\037\311\320\275\215\205D\275\334WN=\367r\313\275\002|\303\2759y\221\272\356h{=>Z\266\274\354r\241=\261\260\r\275\276H\234<mq\314=\177#\233=1mS\274\241\004\324=\0142?=\215\257\203\274\323\356\007\275\020\340_=Q5\317:Z\032M=\360\263\030=\310\354/=\337\'\240<\306J\265=\250\362\004\275\364\014\233=S\372\303<p\376\257\275\301\245\234<\262\310\251<\231 \256=\0349X:\2121\351\274 4\246\275(j\256<\375\232\243\275#%\327\275Qm\306=\231\265\320=\351iw=U\256X\275=\006\300=H\354\301=e\034%\274\272\375\301=\001x\023\275\245\205;\275R\227\203<\236\030Q=5\206\201;\257G\332\275\337S\010<\227\214\274=\343\352\376<\253\344\320=\240\376\234\273\360\021\322\2750\345\244=\261\275\236=\000\336\366\273\354\272f\275\362l|\273.K\277\275YMY=J\245\310=:\335~=\"V\361\274\033\337\316=3\267\327\274\304\333\300<\263\231\202;<\201\260\275\255\2112\275\322\327\303\273\330\326\243\275Z\357\227;\213\202#\267\340\237\374;\237P\203=\024x\223\274\037O\247=\335\205\021=\001\310\356<\372\177\264\274}O\327\275E\304}=\340\353\333=cN\216=\252\233l\275\027\2318<\333\337\030\275\014J}\275\245\351_\274\251\214\211\275FVb=^\344\335=\271\000O=v\310\242\274\216Y\273\275\253\305a;\316$\024=\360\263I\274\223|u=\277 g\275\\\007\275<\177[\223=\005\022\264\275s\341\024=\201\262\222\275s\274_=\r&\035\275\366O\204:q\"\025=\36291\2755wQ\275\247\220o\275\226\2406\275\260e\n\275\234\202r=M\226\270=\301\255u\275%\310\372\273\256\307\177\272\332\255\311=6}\262\274\202,\202\275\246\242\005\274\334\313\316=bQ\234=c\204\206<E\347\036\275\227\232\247\275\352\312\234\275\245\006\263\275\007\243\303\275\243\335\342\274\351\275\306=u:o\274]\250\342<\351\'\372\274\267y\267\275\024\317-\274\231s\242;/d&\275\366\347\251\275g]Z\275o\004\317\275\206\264\215\275\302\0056\275aQ\205\275\332\027\244=)\247\214\274\223\250\233\275\352(\022\274,8\264\275\257o\261\275\035\035`=\275=\255\275\036z\356\2749\3164<d\344 ;X\235;\275\307\335\240\275\005+n=\230\220\216=\201\211\304=\313d\013\2734\034\223<\242E\271\275\270>M\2755d\035=\251\263R\275\030b\210\275\232A)\275\264\223\365\274\351\346k\275\351\253\226=A\t\204\275\233_\205=\277\020\311\275\353\037\332\275\3123\267\275\344\275\300\275EQ\253\275\310K\221=A\361\250\275\n\024\307=\376\321i:\033\265\350\274\325\241b\275}\271\346\274\366\360s=\274z\201=\245\277\220\275\016\264\211\275\262J\316=\345\224\311=)\330\235\275\335\035\262=\014\203\324\274\246\342+=\20246=\016v\323\275\'\215*=R\037\245;\355\233\264\275\0247\277<T\304\211\275\302\276\306=\327\334\032\273\311(u\275|X%\274\331\247\331=\2257c=!\270\222\274Gi\310\275wbP\2740\357\313<C2T=SG8\275\377Q\205\2740\252\321<\364\271\316\2757\207\336<\345\234-=\234S\003<\345\272\333=\036(\333\275\344\313\314=\275\005\212=\253\372\325\275{\032\214\275\3078\337\275\255VU\275B\276\245\275\003\026\246\275\277_\031\275\3774\240\275\267|\275\275\231K\332;\210\263\211=\243\010\024\274\256\343\332<g\007\310\275\241\320\316\275*\251\321<\023\235\304\275x\006?\275ZM\204\275\014=\227=\235W\302\275\016\310\250\274\306\254z;\261\317\240=+tU=\371\256\316\275\007\234\243=&\003\314<\031\263D=\034,\355\274\034U*\275,\257_=\306H\214\275\'\275\336\275\2266\273\275K\022o=9\266\224\275k~\321\275`\024\271<\034\3363\274p\217\211\275$\330\235\273\240\250\251\275\373\376\225<[|\220\275O%\035\275\306\241\263=\252g\025\273\377*\334\275\206\277P=\327\224V\274\240/\235:\273r{=9y\321;\377dz\274G\205\250=r\350Z\275\357\017\252\273\033\033\254\275%\034\241=\007\276\014=\006\025\226\275\225\271O\275\240\226\016\275(B$=q\350\320<y\033\315=\343\347\206\275\177\022_<\225\300<<\302\"\033\274\\c\316=Y\311\226\275\227\310\306<\'3\240\275\367/J=\222\307\031\272G\316s=/\375N\275w\010\251\275Ji\330\274r\365\251=\240\362\222\274\022\301\211\272\231\200O;\001\001\336=\274%\226\275\300Q\266\275\360\370e\274h\002W\275\226\035\237\275\356E(=4S\260=a\002\037<\246\324\250=+\303\242\275\205\276\217=M\267\212\275\353q\214\275\315\341\331\274\210Sn=OA\262<(\013\270\275\3730\230;\327|\177<*+\243=\244\346\272\274{\276\327=\300\306\212=\202\322\331=={\274\275Fd\266<\341&o<F\320E\274\324\320\342\274X\243\215=\350C\227\275\215\000\260\275\211H\224=\217\263\352<s\302\224\2757\340\016<*\036\257\275\343\3528<\264B\003\275\207\217q\274\030P\267\275\\\251Y<O\023\263=a+\217\2752c\\\274;\345\265\275\0333\304\275\303\226\211\274g\210\251\274\366\235\300\275\032\3441<\203\302\255=&~F=\212\216\005\274\324+\215\274h\222\265\273\025\364\255=\376d\313\275\344\177\240=\335\362B\275m\014\214=e\024\225\275\007\247\323\274G\276\325=H\r\377\274\n\242\327\275\214\363\341\274Y\034\241<X\336\334\275\350\371\242\2756\315-=`\371\332\273\363\247\204\274\355\304s<\360\370\323\275\216%\222=)\031\001=\312v\302\275\233;\014\275A\352\234\275\033\345]<\270\014\330\275\021\202\036\275\r\377\207=\027\342\271\274^?\263\275\302\220}=\021\217\033=G\220S=\220\303\261=/\037\266\274U\276\272\275\333\364M\273\214\303\020\275\0077\003\274\340{y\275\270\375P=E\207\216=2<}\274\310\345\376<\236\0160=yzy=HE\255=G\005\017=\253\030\324=\263\376\276\275@\'\216\272$K%\275<\254\227\275#\327\371<wo\013\275\367t\003\275\364u\226=5X\243\275\202\300n=k\325\334\274\376\322\224=I\370\202\275\247\334\277\275\222~\240=\356\303\256=\016@\"\275e|\305<7\"\327=\"^\212<>\344+\275\226^\332=H\374_=\226\026\246=\005\030\307=\361~\304\275\201\334\223\275\016\253e\275h\371\363<A(e=\261\233\320\275}b\320=?\335\240\275v\3761\275)\000\'<\373;\302\275\177\305;\274\266\314N=\214!\213\274ya\213\2752&\204\274\262\033T=\274\020\246=\360N\327=\300\307\317=+\261\323<\204\206\206<\231\006\231=\007L\014\274T=G=\336\244G<\342\301\r=\242\243\332\275\246\241B\275\222\013\257=\237B\226=\320\357c<A.\315=\365\257 \2733c\306=td\r=\231p\260\275\302\346J;<\227g\275\246$\353<9\375\252\275:|\230<\261\371C=\020}\352;!\304\242=eq\304=#j\235=4\177\247\2751\375\262\274\366\232\266=a\207\277\274^H\332\275\226r\255\273_\366\033<C_\334\274\177\027M=D=\360<n\001^\274I\013\257\275K*\244\275)\224\266:\013\344u\275\010\273\243=\324\226\013\273+\227\'\275m\300\322<\304s\231\275jn\331\274\221(\242\275\310\215c<Sx\010\275\367\3260\275\336\345\014\274\341\242\377\274\312H1=\351\006\271=H\367\234\275\017i\357<\310)\244\271\267\347\202=g7a\275\357\220\005=\033\006\337\275\326k\314\275\244\327\217=\322^\226=\207\230\220\275\206\235w\275\370X\221=\027i\217\275\227\230z<\366R\035\2759#\323\274\321\364\256\275A\353O\275\341\230\254=\0252\200<A\013\342\274\nQ\332\275\311}\r;\217\3736\2751\016\303=u\216\247=\274\261\316\273\303\360\245=y\246\323\275Uc\216\275n\351\032=\202i@\274\3710\214<F\332\275=y\255\242=\244\310d=GiT=\366Z\205=U\343\237\275\274\372\263=\375\254\203=\230O\332\275\272\024\215=\220\010\355\274,\304\240=\232_\310=\216\001l=u1!\275\375l\333=\213\375\311\274\340\342\254=\355\tw=\320q\310=[\005\016=Z$p=\266\214\016=\337\227\205\274$\212\257=2e)\275Q\"\246\274.\310\310=\3128\201;9\236H<\2311G\274\236\236p=\307\372\273=\272\271\315\275\327\337\324\275\264\036M\274\330\200\241=\344\005&\275\360v\307=L\227\201=\365\013\302\275J:\215=P,\324<[\307\n=\362\223\207\274\013\257\224=Q\302\263=\252\214\245\275\225\331\324\274\343l\225<\312\tS<6\037\216=\023d\321\275\343\233\277=\257dR<+\031<;v\023\317\2755$\023\275\316z\2309@\n1<\306\006\377\274\305J\371\274\203t\233=w$\271\274\275\354\377;\261\177\200\275n\343\362\273\355\363/=-\371\250=\276\254\245=\373\036\005\275Y\024\235\275T\354t<\377\031j=\311\213\200\275q\203\314\273Se\324<Q0\211=u.3\274L\340p\275\3231\301\273\337<\315=\036\313\032=\262\372\210\275\204\343\032=r,\004=\252\376\177\275\037\203\320=cyw\275\204\247\244<\210\020\326=\214\334\262=a\177\364;#@n\275\277\277\223=\017\316\302<\262\336q=\001<\001=\337\307\267=J\214Y=\203\203\'\275\001\332\277\275vyu=\256\326\211\2757\207\233\275\354\363\325;\301\0060\275y\344\017\275\002\313\023=\033!\231\275\346y\311<:\264\212<4`c=u\367g\275\320\306C=\315\215\302=c\346l=\332\010+\275\026_\220\275\265\365r\275\371\346\013\275E\016\202=<\026\260\274\276\217\302=Y\222}=\233\223\205\275\374\277q\274\'\227\224=\307_0\275f$\304\275\264I\205\273\\F\207\275\007\311\323\275\213\337\346\274i\335\205=\027z\013=\0167T<\306A\017=\371>\241=\267`~\275\013s\221=\212x\026\275G\234\304=\240\251\320=\237gf\272?\277\267=\030\265\026\275\010\034\257\275\332\t\261=\212\272x\273\320VK\271r\205\t\274\225\376\226=\'\005K<\320\301\336\275q/6=\3771 =Bf\200\274\240\355\217\275\215\371\324=\234\337j:\275\273Z\275\"\003\257\275\236\377\225=KnM\275\035\321z\274|F\325<\346\006\244\275)e\235=\362\336\200=\231<B\275\350}\270<\270O\306=g\226\341\274`\235\005\275\"\215I<5\031\310\275oX\201<\255\336\205=\004\201\010\275\316X\270=\376\227\257\275\351\270\201<Z\367\303\275\203\204\273\275vy\251\275\261\325\271\275\216\341\325=\277S\235=SV-\274qp\303<ij\313=\253#^=J\024`<\315\007\260\275\301\202]=\372U\313\274\233\r\332=\373\364\010=sIF\275\351`\221=21\271\275\0337{=>mx\275\321\233\212\275\306\036\304\274N$\223=\334>\224;`\220\236\274\274\367P\273 \230\241=\025\336\314<\234_\201=\317\377\277\275\341\307r\275\373E\220=\355\263\024=3\006\316\274>z\305=z\264\"\273\265\262\275\275\327\177\327<\njM\274\316x\217\275mg!\275\023\327N=)#\306\275\310\022\321<\375:\307\275xb\277=\243\353\317\275\221\223\253<\370t\213\275r\357\021\274\014f\027=>g\352\274D=\302=\010\375[\275\207,@=\026V\203=[&\360\274@\004E=^o\207\273%\343\311\272Bga=(-\234\275\300\212u\275J\222r<\"\307\327\274c:[;.M(\272\2234t=\350L|\274()\024=\010\374%\275\277\252d\275\"\371\036\275\016g\232\275\345)\313=ou\273;F\273\032=\003_\244\274\207\233\037=\337\371\273=\310\266\300\2743q\254\275\360B\237=b\361\t=r\306\017\275\364\230\234=\374\355L=\340\262\37191\227g=,\316h=&\021\335<e4\007\275\311uA\275f\021\304<2n\303\275\221Z\226\275c\007#;\027\352l<\026!\037\274Z\355\025\275\311\231H;\223\377[\275\224\017\036=u?\202\275\005\362><\000\354:<\273=\247<\223\252\201=Kp\250=2\007\325=\220\347\272\275\351\313\211=\325B\324=\350.d=\177\005\254\274\207\212X\275~\205\303\275\002\337\202=\366\243\221=\302\243t\275\252\233`7\245;F<\366\262\224\275Z\262\246=[\230\261\2753\200\255\275\263\035\243\275\370\032#\275#%B=\256Pa\275\226\3521=Wh\335\274\315\304\320=\264\t\211\275\217\342\262=\231\231S=\243%a=(7\262=\014\356\251;\260o\267=z6\203=\271\037H\275\213\037\200=\263\257\273=\262F\260=\213\277\266\275m\003\261\275=\306\315\275\354\205\204\275{\013\236;\230\251A\274K\242t\275\360T\230=\230d\014;\025\361\245\275\324\003\260\274(\340\267\274\234.\272<\276\310\302=\307\266\216\275g!\211=\357\233\306=\277\036\273=$s\222<\022\2407=T\336\260\275\321\330\247\275\216.\270\27484V=j\001\372\274\037\246\303\275\367\241z\275-\205\255=\214,\371\274\273a\314=\315ED=\026p$\275\375Y\202=\222\344.<\364.\207=\250w\233\275\255]\t<\247\270l;\004\264\222=\372\222\225=\310\017%\275@\345\265<}C%\275\207\315h=S\306\306=\327{\225<\375\341\271\275,\004Y<w\024\316\275\235f\257\275W\213\027=\325\212d\275\215\274E\275\312\326f\274h\240\310\275X\300b=V\020\223=\344G\243\275L\202\236=8\370\310=\203jt;\202\027\350\274W\316\315\275K^\220\275\324\006\341;\256\375\316\275\243\016x\275\247\361\207=\235\367\313\274\260\226\225=\034\006\207=G\233\304=\322\210#;\025.\310\274\344t\245=abx\275\257\362\275\275&\373\253=\336\232\331\274\217\241\024=\315\277n=\3414\266=\270\372\304=o=\204=\367\273\222\275\335h\257\275\256]\205=\026\264\252<\215\210J=\335R\301=\t\204-\275${\307\275\022N7=K\340\273\275\204\310\243\275\367\230\261\275j>\214<\256\002\254<(\345\304=\356$\330\275\363\354\372\274\304\010\276\275\343\277\303\274\004 \212\2753\302R=\320\214\336=\202\214_\274T>\320=\375\355\316=\261\261\323\275.\005\271\275\" \301\275 KD\275m~-=m\014\310<\2516\315\275\0135\300\275o*\277<\322\313\276\275\357\336\254=\326\205;=\007\333/\275-\327\337\274\263\002\246\274L\037\334=\0223\324=\021\220\232=\307\363\264=}\373\264\273\236nY\275\207\006.;\t#\327\275\360\217\t\272\231\022\241=\024Tf\275u\325\315=E\307\221=P\220\260=E\230p\275\'\207R=v\301\024\275\244?\271\274\026\350\314<\274\002\267\273f\351\200\274\251\320\303\274{\343k\274}\345\237\274\223\020!<a\023\231<\261\352\005\275P\023\324=Q\315\341<\233\020\266=\244\200\351\274\013O\333\274\320\206\336\275\270sb\275\352\361c=\211Wp=\217G\017=w\3675\274\314b{<7/\306\271\0019\035=Qy\306=\035$\301\275\t\251\210\275\324|\273=t\272\300=\237\005D\273\035\317\244=]\273,\275\0059:=\377|?\275-\010@=\200\223\020=ZS\034<G\251\202;\006\224\210<D\023U\275\331\032\335\274\304\246.\274\"\217$\275\373;\217=\361\025[<2L\335;\006\371n\275\306\2179=D\000\226=\272G\211;\262\006z=\260}F\275A\036$=\342\221\215\275\246E\036=XTL=z\240\226\274=\017M<\241@j\275S\324\347<6\024\r\274\207\256l=qdG=\206\037\250\275Z\035\257<m\313\260=\004\357\241=\273F\017\2753\010\252\275\205\227\014=\253\336\263\272qy(=\010\245\322\275\241N\256=\371!\244<\341\031\303=\201:\217\273\252\215\263\275\305\000\317\275\232%\207;.\363\321=Y\214\223=\251j\334\275k\003@\275\007x\234=\211\245\027=\311_\204=?\332\207=\233B>=\200F\025\274\375\0334=\244\257\021\274\026X\277<\347\330\205=\366\034d=\316\233\227=\201\266x\275L%\206<z\037\271=z\337\302\275\371J)=u\214\226=\327\320\315<\326\335\257\275\311\362\360<,\234n\273<\300;\275\225o\307=\245\"\224<\245\330\t\275\236\254\241\2750[\331\275\374n\215\275!\226\013=\262J\332<\024\020\254=\367\200\031:<\351\224\275\344\203\035=\\\216\277\2742Dh<i\"B\275x9\315\275(\"n\275\312.\244\274{Mw=$\372\327=\271\373\343<\325!\254= y\251\275\306D\241\275\030\376\375<\031K\332\275nV\021\274a\376r=\222\347{=\327[\312\275\263O\023=\2404O=? ?\274\207AS\275\027\323\203<\313&$\275\033a\212=\256\256\306<\034\1771\275\237\271 <\213\024\024\274v\362~=h9\211=\353\247\307\275O\341\036\275H\235\336\275E`Q\275\300\341\177\275J.\217<\370\020\313\275\233\227<=\205D\242=#}6=6\300\325\2756C\212=F\352,\275P\341\327=b\333\000\273\330\203`\275\002\337\334=\324A\350<\264G\215=\007B\252=\022\222\217\275{6\271\274R_\367<\217\343\373<\001\335\025\275\037\224\243<\211\220\306\274\033\342\200=\020\312\217;\207S\260<R\244\344<J\202M=\034\222\202<q\302\232\275=O\276\275h\356\202=pt3\275Z\311=\274s\177\256=\261\265\236<\230\030,\275\240w\036\275<CQ=\377\301\240;^s\300\275\220\270\236=\311\005$\275\314\371\346<\243)\306\275E\304^\2756\367\246<i\245\324=\023\225\334<\347\213\304\275|\000\322\275\232\361}\274|\363\266=\"`\200=\324?\232<|\354g:@\357\322\275_*\231=\265\206\322=\2725\t<\224\223\001<\230\207\344<\014\274\320\275\274\334-<\377\010\327\274\010\303E\274\027\305\335<\373\006\252=\215\305H\275V \253=\253\000\005\275M3\251\275n\335\213\275\322\035Y\275\020\372\027\274e\345\220<\247$\017=\227\376\267\274\203\270\201=\313\356L=\303\345B=\207\337D\275\037\363\272<\354k\001;\274~\261\275\321\263\204\275 y]\275\321\030\307\275\261\2108=\325\370Q<I\374\232=\220\321\325\275S\266\275\275J\257\252=\271[\334\275\002\341u<\356>\361\274\212dN=\225\217\302=B\363e\272\224tW\275\246\336k=_`\316=?@\257=\333\242\245=\023h\300\275?/\332\275\263Q%=\247V\205<I\2221\275J\222\240\274\004\252e<\362M\315=\021\372\262=\246T\320\274\260\205>\275\365s\241\275\000\216\206=\277\010\254<\025O\327\275\226\035z=]\300V\274\362\031\233\274\016\357\r\275\345B\273=b\321\245\275\202u\246=\027\304\263=|\007\313\2752\316\303\275\311\235\272\275\177:f<\317\232P\275\340\231\236\275\325K\327=\033\267\242\2750\261i<0\262\t<\305\"\"=;\302\367\274\316\001O\275\"\n\201\275\205\212\267=\014O\217\273\201\263\255<\017\264\310\274\202,\320\275\0020\025=\221\234w=\313\252\"\274\204\327\025\275\224\3275\274\005\334*=\275/\307=\202[\327=mH\234\275@\243\276\275N\304\347<\3722u\272\255/\345\274\3250\277=\346\336,\275%\274(\274[\226\240\274\343\006F=\207\276h=\217;\244\275[\363b<\001\366\257<S\013\224=\200\312\273\275rK\327\274\262\227\316\273\307\244A=c\317\301\275\\\201J\275\211h\230<\036@\254=\343\335s=\274\211*\275\r\017\265=\353\'\377;V\317\205\275\216\"\302=\366\215\250\274D\223\211=\253\025\336\274\356\202\203\275\213\014\242=\377\200\310=\375\317\236=\316\306\274\275\004\266\201\273\235W\014=_f\221\275\262J*\275\253\021f\275\272\245/\275\'\336\177\275\376<n=\202\340\352<\234n\320\274Y\364\317=\266\233\274=\326\235h\275N<\202\275\211\006\314\275\234\261\330\275\262r\264=\230D\267=\030\013\304\275\342^\013\275\335\371\207\275\231\214\014=\242\024\302<\264Z\207=\022\232\331={\013Q=\034\342q=\211\257\317\275|\353\022=\353\345\310\2758\313,\275\322\314j=\246\210\311=\267\325\244\275z\261\350<\n!\332\275\021\230\334\272\203\230=\274{\3254=1\313\303=I\351\247<\034\235\016=2u\267\274\340\215\212\275\244\307\354<\301\035\356;i\264\215\274,\353p\275\014\3563\275\273\242V<\246\347\311\275D\250&\275\201m\225=S*\212=\030\243\276\275\370-\256\275\200*\311\275y|\260=\003\206\325=\313}\274\274\234N\340<{(\013\275\030\351\303<Vl\312<PE\203\275\030\366f\275\246\303\345:\222\277\241\275A\305\243\275\357\207\217<\264\246\244\275t\036\376\274\270^\020=\324\374\314\275\211\2455=\337\366k=c\234\247\275\210\276m=\2536y\275j\265\"=\312\251\232;|D\252\275\3260\304=\365(;\275\237\340\211=\335\266\240\275Iy\246=\342\214\356\274F{\335<\211\021\226\2752\271\237\275\201\250\354\274\210\341\307\274-TR=weq=\323\203\203<\341\301\334=T\264\020=yMh\271v\345Q=T\367\t=\226A\327= \"\276=\233)\337<&\3765<\034\\\214<\376\335R=\276\217\260<q\346\261=\312\024\326=:\243\235<iq\200=\363\320\323;E\311\235=>8\222=\224B\234\275\212\340\247=\352\021\320\274\031\221p=\336\235\234\274\207\347G\275\256\213\303=c\304\245=Pg\036=$I\303=67-<\254\256\310\274\335\377h<\346\321\213=pBQ<3g\303=\002\"\313\275\323\366\275\275\r\345\252\2753S\306=~\237\201=\223\330\365\274\216!:=l\233\331=L+\346<\2127\201\274\335\026\310\275\"\377\224\275Oh\204=\270\222x\275)#\224\275 \236\242\274Vv\r\273\020\270\227\275\3310\230<\215\305\211\275\330C\336\275&7\210<a9\201=\341\006v\275+\205r\275y p<\335\233\025\275\233\224\014\275\353\363\273\275\251\032[=\213F\221=\036\271\206\275\270(\353\274\236Y\235\275t,q\275\013\271\275=\024x\017\275\"\345{<\037\253\024\275\034\001\321\275C>\211=h}\010\275\354\271\311=0\335]\275\273\371&\274w\030\250\275M\310\220=~\321\210\275\032\r\315=\347\213n=\357\335h\274\346=p:\t\217\230\275\267/\223<\3527\326=\277\344\321\275q\003O=\273>(=\t1\346\274\033\nb\275c\307\276=\300sA\275\006v\245=G\r\324;S\343(\275\2612\206=w\007H\275\306\035\255\274\240\350\267<6\356\272=\303\263\227\275D)\314=\001\240W\275E\333\320:+\036m\275>\'\264=m\204\\\273\364<\302=\312\371\237\275\251,\343\273y\222\203\275s\211\312\275\232\373C<?tw\275\0206\265\275d\326\372\274\326\177\270\275,\002\321\275\350\273\251=\350\036\242=%\250\023\274B%E<\350\360\201=\201\227\004=:\240\270=\271*g=\257=\274<\257\270\010=\022\373/\275M8\235\273\263z|<\276\031`\275\257\305\307=u/K=\330\343\003\275,\336\246;.\221\321\275\nv:\274\374\'\005\275B\234i\272>\301/\2757\303\232\275\313\021h\275@\231\3349\340l\372\273QE\r\275\221K\'\274\200\360F=y\263\325=\241y(=(\272?=*q\314\275f\247\325=\321\014\273\275\333Z\217\275\\E\267=\261\273\305=M\307\231=O\370\033<\307\322O\2754I\000=\315\317P\275\2625\337<c \032<P\211Q\274-\224\007<a\302\262<\202\275\307\275\362\3221\275\324g\235\274(\225\032=\310z\330=\265\340\234={\352~=7xv=C\222s=\200=\222\275\tp\001=\017\221\236=kg\344\274Bw\177\274|^#<\003\340\013=\371Hw<x\014\205\275\234\243&\275\214\365\320=\370Y\304=\371\210\000\275\373\014\201<\227]\215=\036_%=\372eU<\202\221\274\275\026\232\255\274S\332/=V\331\313\275\027\177(=\274\325/=\241\007^<jvH<\375e\266\275\317Zs=\275)\037=cG\313=\377\227\005<\330\376\350\273\271\247\311\275O)\020=\373\247c=\302\322\315=\303\367\211\275\301\341~=?/D<h\202\'=\357\221c<\311\335\204=\311\302\315=\337k\352\274|\364j\274\242\202\265\274\032 s=\210\\\213\275ZfE\274\035\337S\275r\nJ=\n\370U=?\007\327=9\"\343<e$\237=\001\214\241\274\272\354\271=\307JX=\350!W\275\241\325\230:+T\262\274\305B\312<\257#\324\275\257a\373:A\264\251=\2328\336\275\275\232\243<%\366\213\275\262\013\177=\363G\212\275\356\347\230=\035\354\322=\371I:<m\201\035\275=K\211\275\342\007\371\271\362\312\264\275\332\263\217\275<\236\334\275\245\351\037\275\305A\365\274\270\320q=(\316\226\275.H\321=\336\313\010\275\346\354\277\275\216_\036\275\354\027\203\275Z4\'\272\375*N={\006\251\275N\271\201\275\335\205E\273\242w\213\275F\250p\275\355\333\262=\266i\350\274\227\374\256=\215$\r=s\330\230\274\241\371\245\275M\014f=\342Y\023\275\004^\244\275\022\r\204\275\312\233\217=\026+\004\273\347)\217=\r\014\252\2759\201W;w\307\372<\332d\004=\204\3429\275\'\'\276\275\331o\214\275\010\201;=E\2472\274\320\353\020=Q?\232=\231?\005=\260\343\315\274\207\0050=\016\334\226\275\335\030\253\273\277\037\300=$\356\255=\317\242j\275\205_\021=\327\033\260\275(S\342\274\236r\212\274\354A\215\275\016\226\330=n:\006\275J\330\256\275*\333j\275\2442\337=\376\377\352\274\311\t\334\274\023v\243=x\2112=o\273`=\200\010\315\275\373\241\301=\003\010\335=~ 3\273?H\357<\2039\271=\264\0167\275\237G>\275@\256\003=r;\225\275\212\356\230=u\226W\275.\220\272<>\212\242=\360\272\r\274K\315,=)9$\275N 8\275\177\\\206=U\301\304\275\366\3064\274\267{\246=\330P\244=\250z\241\275.\315Q=X\227\227=\317h\262\275\300\223&=\335\244\245\275\333\307N\275=,P=\351}\213=\n\306\322\274\373\303\217=<\255\210=\357\223 =\331W\261=\323\351*<(b\241=?\035\214=\332\207k\275\370\304!=\334\237]=\362\207\230=j\317\240\275hE\024=\250\255\362\274y\352\223<\246\352\361\274~\351s\275\000\367\226=/\270Q=C\351\274\275\321\202\335\274uk(=4\360g\275f@&\273Q^\273;\223\205\320\275\251|\375\273\224{r<\037\333\241=\030;\227=\347\317\313\275\266v\321=\207\244\227=\177\"\006\274Dv\277\275^p;=\'\354\316=\322\026\222\275\276\214\017\275P\022\202\275A\323\204=\215\234\372<\033y\034=J\327\261<U\313\024\275\005!\244=\325\2237<\206\377L=\300\232\211\275&\216\360<.\341\034=\031\277\020\275O\303\265\275\326\226\304<e\017\320<\264\331`\275\274\362\326=\243\343\264=\377\\\245\275\205\215\273\274\"W\312\275\253\240\304\275\\;\251\2745I\325\275;\214b\275\352e\265\271\344\036\223\275\006\035\312\275(\240\"=\265\225\320\275\230\301\227=\241!\234;/\337K=\321b~\274z\177\312;F(\330=\025\n\203\275\276A\264\275\360\322\367;\256\373\253\275\'\376F<A\304\317\275t\331\241\275r\\\306\275\256\322\037=\356G\366<\323%\036\275$T\241\275O\241\330=\365C>\275A\213\345<Q_\242\275\3526\273;\226\204C\273\322\261\223=\261\022\300=.t\030=\226E\233\275V\325Q=s@;<yj\304<\344\330\265=\274\362\274\275A\205\215=\205l\031=z\257\030=\335\362_\275q\032\007=\252\031\002=\357*\252=\027\337\300<\323\324\210\274X9\256\274\204\2153=:\210\233\274\305\201\275=\007\025\004<p\222\254=\345\206\257\275S\213u\275hW\232=e\315\000\275\234^\224=\rR\027=\250\205<\275\263%\216\274\325\331u\273f7\301=\350\306\003\275\213\027w<\343\035\256\275&\221\211\274\310Re=\'R\252\275\273E\326\275\270c\277\275\371v\327<\017\236\306=]\303]\275\316\324\024=\372\022\333=/\320\255\275v\267\302;\351\321\315=\020\231\241\272\244\227\310=\036\353?\275G#T\275jCU<\005D\266=0\203V=\216\336\257\275\272*\350<\235q\345<_\006\\\275\322\255x\2756\343(\275z`o\274~\276\005= j\035\274\361\236\244=\332\n\363<\036Y\277\275\356aq<\246\324T\275~DQ;>\246i\275\3303\t=\243\202s=\360\223\303\275=\230^=yF\317\275\t\363X\275!\364\222;Tr\017\275\233K\304=G\344\256=\033G\305\275c\031\003\275\207U\344;\333#\270\275\235\003h=\305g\317\275\022+\212\275a9\255\273\0024_\275.\214\215=\334\266\252;~\006\023\275\014\303r\275\354\214\302=t\232n=VT!\275h\213\223=D\037><\333\222u<]E\321\272-\256\345\274\027\236\321;\210(\2669j\372\272\275\266\245\300\275>6\201=&\004$\275\004\013\206\275\016\317\220<L\204\212=\374\223D\275\253c\027\274\215p\246\275\342U\221\275\030<s=\270\016\020\275\242\316\177\2754\277\262=z\000\316\275v\030\215\274\2445x\274\256\323\210\2752\317\201=\205\005\217=2I\037<\032\n\326\275\216j\257\275\217\212\225=/7M\275\351\261\007\274Pke\275E\200\301\274\267V\211\275\351\237\221\275\032u\232=\317r\254=e\237\236\274\031\226\024=\311\215\026\275\014W\320<\177u\226=r\314\327=\255\230\302\275+\207\370;\326\315\326\275\272\350\325=f}\252=\r\240\304=\232$\331\275\240R\330\274\207\027b\275QL\022<\240\303\224\274\376\341\324\275\025KM\275dR\025\275D\005\336<\007#\303\275\363H\306=\307\022\312\275s\020_\274\035\035z\274\320\335\216\273~\210\324\275\222\367\334\273Y\025\307=\344\2417=\270\016\235=M\227\255=n\\\224<v\024\310=z\031\273=<\210\310\275\377|\205=\337\327e\275\331r-<\310\277|\275\036\237\250=\032\225\234=\212\n\302=X\354Y=\017\336\252=\311T\200<rz\234<`\033\004=\253\303\325<\257\334\321\275\rVX\275\017\365\230<C\217\251=\035H\255=f?\221\275.~\243\275\\^R\275\274\007&=(\357\261\275xy=;\n\302\331\275\030\312\224\274\234\031B=\"\212.=\324\323p=&\301\211\275o\320\251\275\221\014\230\275\3221\262<k8\377<8\247\272\275J\037\344\274\273b\316\274\345\222\267\275\030Q[;\326*!\275E\030\222=\003\323B\275qz\260\275\346\363\263=][\014\275\222 \032\275\311\211f\275\324/\324\2740\207\256=A\021\274\275\271\010\027\273\210l\262;\346\371x\275\275]\'<\307\353\255\275\213Z4=\005Ya<\376ao\274\337=\257\275\025\305\202=9\333_\275\334Lw\275\261a\255=\226\303\313\275\215\375\037\274\226\377\222\275\253\325\302\267\251\\\027<[\341\016\275\022\271t=Q\261\226\274\313\223\312=\241\217L<\r\013s\275\n\177\234\273\242\r\205=\213_#=A)\361\274-\347\260=\376\276\'\275\275\243\332\275\341\373\035\275\00618\274\340\020\347\274y\300\242\274\016M\240=\265r\220<\000\315z\275\200\207\216=\360&V<3\365[=\225<T=B\321\261=!\233\200\2743\234\370<i\371K=,\315\261=e\251\306=.\245\240=\222\017z={\030b=\373\316\276=\275\021i\275*E\250=\316[\332\274\370\203\312\275;\010\222=T/=\274\220\226\233\275\212(\316\275\310\274\240\275\177YK\275A\207\327<\000E\247=\203k\325=\0354\250=\325\230\245=\222u\203\275\213l\312=3Y2\2752z\006=\327\375?=\263\215t=\304\332p=\372\352\007\275\257\256#=s\t\207\274@\234\003\275\003\231w\275,\315\265\275\017\367A\275\362\320\331\275\004\224\t\275\360\276\321<Z&`\275\023Q6<\221\342\211\2746Jb\275\236\236\223=\317\032Q=\337L\270=7Az\273\225o\246\275P\300\204\274i\357\201;X#X\275!\237\252\275H\230\371\274\203\252\210=4d8<\244,A=\341\t\364;R\177\034<RQF\275\337J\322=\270$\241=l>\326=\3313\237\271a~\227=\036p\215\275=\005Z\275\244O\031\275\021\231\250\275k\207\223<\354j\273<v\234-=\320\322\242\274r\240\245\275\362\002q\275[,\206\275:\275,=\354\256i=\220\231\220\275e\204\200\275\200\201\311\273\351\356l:\366\367$=\206E6=e\206\315\275\235\351\302=]l]=H\340\303\275\340\352\202\275\333\223J\274Z\032\336=\333`\303<^A\346< )\357<\257lo\275\354w\225=]5\227\274\316O\334\275\353\360\216\275\254\352\357;\207\230\201\275\333\340\300\275U\017\257\275\201py=\017\360K\274\205`0\275\266\355J=-\332f\275!\356g=3|\330=\243\016\372:\325\211\274\275V\036\261\275OG0\274gA\320=\3403\265=f\304\322;\353?\r\275\346\233\237=\032\007\304\275\347\255\227\275=\332\262;\010\313\216<\036\236\201<==\202;\357v\206\275\023\002\307=\220\256\272=\203a\007\275,Gn=\361\220\324=\200\231\212\275\261\241\035=\233\302H=ia\301\275\376\336\270\272\216\374\000=A\217\276\275\240\205J\274\367\313\257\275>u\351\274\255\201\241=\306\252\306\275\246\321\352<\321\021\304<\276\330\264\275\354\'\220=\326\241O\275\"\ri\275\273\351\373\274\3774S<\234\027\247\275\251\221\275\275\262Z\024;\"\236C\275\023\2222\2755qO=\032n/<\001<\273=\036A\202\275\354\347\360\274(\257v=w\'\323\275\002\253\005\275\225\r8=\233G\240=@\324\213\275\032\225\245\275\204\0332\275\371z\274\275\367vZ\2759\344x\275]c1\275y\276\221\275\236\351\213\275\261(;=\263\321\204=\235E\331<\375\016\277\275\2357\266\275\346\010,=`\320/\275y\242\320\272\312\'\337=\347\374\254\273M\374\326\274\252\234\256\273\220\220o=o\031U=\325u-:\"\253\334=2\273\002\275\037\317\227=\304=\260=\"\\\321\275\023\312g\275[\'\221=\312\223\301\274z\031\273\275B\\\261\275w\274\243\275\321\331\014\275F\265\267<\303\3026\275\007\032\213=\222\315/\275\271Y\003<\307\'M\275CN\277\275\270\332\246=\220L/=\323\271\264<\025\215\216\275\331\247\355:I\313_\275\323it\275\t\032\025=bd\234\2751\003\227\275W73=\\EE=rr^\275\262x\233\275\233\347;=?\303$;\204\004\261<O\342/\275\031\t\234\274\242\035\353<\262i\002=\301@9\275c\275\\=\231Q\212\275\346\262\225=k\357\320=\335e\205=`v\264=\315\252\336=\355q\255\275S\364\232<Bu\020<\351\301\276=\212c\307=\257_\\\275\221\\\276\274\2749\002=\331I\241\273:s\245\275\216\t\241\274\331\026\265\2757\256\260\275\243\002A\275\376\252\221<\231[\260:\200\350\354<9\r\330=C1\363<W\310\333=\336\253\223\275\302*\312\273\\\265\257<\276\322\225\275#u\020\2757,\003<&^\330\274:z\026\275\034l\231=\271\320\207=\314s\277=b5:=ir\336;\024U\302\275B\361v\275\'\371c=C\253\220\274\216l@=\343\'\272=\307\220\317<\335I\224=\302\226`=p-==\322\340\325\275\205~F\275b4\032\275\304\013\261=\316\356\332=\234\032\272\275\303R\311=\341\242\200<\257Z\325\275\325K\254\275Zs\222\275\252\315b=\216\250/\275\204(\324\275Xa\224\275\362\371\363\274\256b\210=\320\334\213=\353c\343;r\251\013\2754\361h\275i,\207=\022\210\334<t\014\247=\201\333\332\274\216-\325\274a5\027\274\316\316 <BV\314\275\203\243U\275\016G\223=\341\225\247\275\270B\211<\244\017D\275B%\265=\251\032\001\275Q\304\326=`\213\202\275]C\322\273\367m\226=D\330\202=\234\325\322=\022S\306\275\307?\207\275\336\211y9\340)>=\222\363\307=\261\277\321<\230\353\230=Gh\037=\273\262V=+\027c<\014\033V=\r\022\205=\234F\214\275\322\202\253=\255To\275\342\344R=\266\273\261=A\347\275=C/\252=X\357\222=9,\241=\345g\274<\344Z~\275.M\036\275(\267;\274\274\220*\275\261Dw=\326\371\336=\024\336|=\342\007\237=\007H\212=%\337\017\275\304\232\260\275\243\335\221\275-\235c\275\276\2311\275\343D\017\275\352\257\031\273\314\325\006\274\310\0224\275p0\245\275X\034\334\275~)c\275\325r\275\275h.\203\275]U\304\274\264\027h<\\\216^\275o;\227=\001\312\247\273\370@\252<\303\234~==\261\250\274\031\326\262=- ^=\377\2503=L\265\276\274\200\227\020=\306\251\263=\216\266}=\004\345\313<Qb$=5&\'\273~\254\241<\215\211H<\031\376&\275\306\013\350<n\266\276\275\033\016\361\274\237\2173\275^~\334\274\363\367;\275\352\300\256=Co$\274\243\027\263\275\321\004\374<\301M\304\275\237\226\206\275\310|\330\274>W\313\275d\247\271;\221$\264\275\277\241\364;\340\241\315=$\216\315=\320\220\304\275\264;\017=j\321\025=\351?\273=\311\315\234\275\251\235\203\275\355\020\340<\202j\316<\316\037\246=^\314\307=\226\220\322=\0033T=\343\367\026\275\010\207\310=\226ek=\242\327\242:O\257\333<z=\206=\024\345\223=\316\242\264\275.Eo\275g\356\200=\017\232T\274S@\301=[\322\225=\362OZ<\347\237\232\275\033\314\241<\375\273\210\275\001ne=\275\306R=DL\230<>P\031\274p\361\024=_\217\265\275\332\210\026=\376\377V=c\275\356\274Z\022\016\275\240O\376\274\267\0202=\216\255\217\275\206\336\347\2720\020\317=\r\244\207\275\014\260\206\275\211\215\352\274\013>\323=\277\315\302\275J\022\210=\332\030\272<t\301\350\2745U\213\275\240A\304=\371\207\036\275k3M=\325\003\247\275m\027\315\275\221!\000<\300\021\364\274\2233\354\273\032/\335;\376\254\021=1\241\334<1\374\356<\036\312\236\275\351\215-\275B(1\275\304<\271=.\332\305\275\030&\017<\273}\311\275L\013\255=\377K\240=$#\006=\201~\262\275\205N\203=i\354\262\275\002\023\t\275\367L\334\275\377\237\304\275o\327\246<\2366+<\257\231\227=\213\225\253=\330S\026=]x7\275k\006H\273\003A\217\274\242\306\034\275\370\332\311=8c\242\275\247\371\031={\320\220\275/\362|=,\263\253=\002y\314\274\001y\266\275\360\376^;#\313\321=\022)\001\275\206\260\317=\037G\213\275\342 G\275\031d\214=\257\017><\020\377\022\275\031Wr<\007 j\275\275\243\035;\2666\036=\005\024\267\273\232\363\254=\365\023\237\275\322\225\334\275\233\225\230\274f\017\215\274\022\007A\275\246\377!=\355\262\273\275\n\225\205;l\362\301;T\005\274;\\\\\243=\201\321\201\275r\220\252\275\220>l\274>\177\267=u\337\254\275\2344\331=\210R\213\272}q\246\275\033\201\250\275\024\322\r\273.\025\323<>\361\234=\023\004\216\273\"\2400<\262\325m\272\001\304\241\275\247\304\305<6v$\2753\3245\275\242b\022;M \240=\03410=\002\037{\275\310%I=\274=]\2757=\236=&2\247=\227\247\332\275\337\226>\273/\211\300=\222\213\311\275gb\211=\255\2455=\235\375\256\275\022^\203=\202\241\n=\317\310q\272F\2504=\352\377\230\275\226\226\351\274M\347\223=(\002\230\272\253e\272<{\030\301\274\351\034\201=Y\014\220\275\231\235\251=4\014\006=.y\342<\335=Y\275\342\034`\275\336\210\240<\270.\301\275\372<q=Jv@<\273W\365\274\237a\320=\353B\212<\"\212)=4J\241<R\0162=-%r=j\335J\274\255p\275=\216vA\274mD\300<$D\235\275\3621p\275)\350\\=D\225\264=\313;\210=\337\315x=\207\262\220=_\206\206\275\303QW\275\302\303)\274\271\005\206\275A\231?\275\371\3631\275\276\231\346<T=\006\275\014\260\375\274\260\241\266\275#\035\334:\027c\323\274\304\214\215\274\221\255\211=H\000\302\275rL\332\275u.v=\000\326\321\275CN\030\272\266\335W<N\002c=]\357f=Ci\336\274\317(\261\275\014\373\177=g\037\337=8=\244\275@ F\274\034f\235=\273lj=\036\325S\274\027\310\223=\326y\270\275\010\361\217\274\313\r\303=f\265\271\275B\222e;\247z\267=qu\214\273\\\245\336\275  \237=\200\\\321\275\320\261\271\275\244-\325\274\313/\005=\222\024\235\275U4s\274\325\313@\275\363\245\271=w&\217\274\224\232R<\320\206\266=M\343\220\275\331\264\325=\231\375\261=U\006\237=\020\276Y\275\340u\242\275\365\2241\274}\014\231=b\020\231\275~\016\257=Y\267\325\273\376H\306=\244^\231\275\246=W\275\342\347\221\275\315\242\332\275]\205\277\275\006%\177=:\372\205=\371\306 = \'\214\275r=\312=\341>\230=\0208\221=bL\377\274OM\207<P\216\245=\264\000\320\273 \261\r\273\243U3=\301q}=\363\367\236\275_\006\270:\345\240\320\275\344\202\225\275\372\214\266<\375~\246\274\003}\243\275Yd\215\275\221\240v\275\305g\251=\205N\232=\036\345\014\275\3458\017=*9\331\275n8\005\275\300\211A=\036\024\265\275\242\271|=V\261\025\275\350\013\323\275\271\365\032<\007\251\025\274g\202\n=HC\261=H\006\324=4V\203\274i\2135\273\233h\'\275A\256\364<\350I#\275@<[\275q\327\300<S a\275\217\035\261\275\\:\222<\200\272\266\275y\205\023\274b\215\243=;\332\275=\027\\^=\2624%\274\354\217?\274\253\tH\275\026\212\013=u\343_\274\315q\205=bSK\275\275e\300\275\234\363\222\275\375 \252;2%\213=:\253\330<\013\3206=iK\001<\310\226\333\2751\302q=\177\344\373\274-S*\274F\257\214\273J\003\374\274\033\321\'=\364\301\336\274\007\033[=Hz\315\275]\376\272<.~\310=?b\214\275\277~\020=:\331\330=\345\370\177;U\\\227\275\375\252\271<\361\274\247;\354\256\327<n\331\007\273\020\337C\275bp7=\232m\217=#\036\350\271r\273\313=\313\365\342\274\303\262\325\275\\0H<\212Pw=\303\205\306\275\376\223\232=-\264=\275\016\002\201=\375\313\223\275\237\312\203<}\\\020\275\242\215\313=\342\222\372\274\263{\333=\244\307\362<{\024\177\275A&\260=\377y\202=\366\372\302\274WEN=\001\236\327\275\r\220\020<\2143\225=\305\371\306\275\003\264\216\275\023\234\346\274#\350k=\371\254{\275\312\364\007\275\021/\365<\310\270|\275\377\227h\274\t\303J=\020\205\016\275L\271\320;1\027\224\275\025R\006\274\305\240\327\275\026L9=\237p\271=\001\036D\275\036\357\311;\036\362\252\275,?\320\275n\341\030\275\221\260_=4\261C=\236\037\326\275\276\200\307\275+\265\257\275\313\353\357<\254\341~=\035\242\222\275\372\241\211=nB\331;\250\261\303=\312pj=\346WK\275\345F\016\275\370q\201\274\202\034\266<)5\036=\244\277\030\275\317\324\313\275\'K\3229\220\036\245\275\370\343[=\006\2339=\t\346\232=\224\241\305=4\206\326<\304\n1=,\3229\275\362\376\326=\336\327\206=+)K=\r\313E=I\323\314\275CVL\274{\362\210=\3778+\274\367\262\226\273\261\014\301\274\367\203\303\275\230\034\316\275/&C\2750\326_=\021!_\275\211\010\266=\001jE\275\262\222\031=\245\267\346\274D\366\200\275\2473\322=\320\236\322=7\345\311;\266m\263\274\240\311\260\275H\376\226\274a_\\=\344K-\275\372M\246<\364\242\324=\322\005K=\340\331/\275p\303\217\2740\300\211\275Y\032\305<\302\\\t=\312\336\346\273O\032\333\275\271U\276\275b\212\320\275\346M\320\275IzW=G\255\314=Y\267\215=#\021\310=2\304\223;\340\275\267=\310yf\275\371>\022\275z<\232=\3042\002\275\213\330\277\272u\'\225\275\307\000\312<\031H\016<J\031\014=\305\007\'\275\232\323\005\275\243\242\247\275Ah\264<\254o\270\275\321\255\335\275\345y\324\273\323\210\315\275\357\271\255\274-\3139\275P\330\252\275\376\320\n=]\343e=\000\275\250<\226\023\260=\304\255\256\275L\361\304\275\262\355\241=\373\\>=\027)^\275\235\206\213=?\277\352\274\323uj\275\375\231+\275\330\206\034\274ja>\275I\375\320\275p\337m=\355\013K=$\0269=o\224\243\275\320\001\300\275\263D0\273\261\325\275\275s\032\177\275\354\005\336<\246\340\356\273\204CX\275\322\361\226\275\221\251}\275Y\311\254\275-\213A\275]&N=\263\211Y\274\354X%\275\031\231F=\021\236\261={%\277=\352\005\254<_/\325<]t\305\274x\274\305=\301\334+\2757z\246\275Ci{\275\004f\024=j\347\270\274q\320G\275\315b\216<\205\260\302\275\213\210\014<\272\030\202\275>\n\032\274Y3\214=\"J\350\2740L\t=B{\325=\253\re<r\027\201=^,\215=K\'\245\274E\267m=\233\020\223\275\273\r,\273\016\025z\275\2164\306\275\224_\304\275V\212\254<\345\352A=h\206\300=E\234N=.WU=\3548c\275p>4\275\t\317\324=\334\321\217<iO\360<\300\313\237\274\375\323\213=`I\027;\222\351\211\275\226_\374\274BM\252\275_\022\276\274\205\265\240<\005\316\223\275(.*\275\325\234\271\275\366R\036=\235\363\240\275Z&\264\275\204\274\256<\n\352z=\021\273M<z\276\270\275\212O>\274\203{\214\275 \227\211=\375!\355\274\302~w=\207n\254=\351\311\226=\016\231\277=7\217i\274M\017~\275\t$\206\274\247|\"\275\243\365\344\274^h\207=\360\314\201\275\267\031\201\273^\\\250\275\0012\035\275`\223\033\273?\243\013=\304G\370\274oW(\274\215&\223\275\177-;\275ES\003=\036\312\036\275B\336f\274\333\274\311=,DN\275\3621L=\021\001\275=\374\253(<\211\215E\2753q)\275Q\005F\273\206n\317=\273\215\232<z\271\245\274\333\013\270\275\372Y\002=\335\006\351\274\2479-=\320\034\002=\217\214\233\2754\263==g\352\301\274;A\322\274\200(\016\274N\306\326<\370\223\253\275\320\324\346<\227I\004\275\314!2\275Z\351\202=!ns=\013\002\342; \2632=\302(\312\275N\205#=TNl\274\216\355\261<b\033\333\274\372\027#;\226\312\324=\226\215\304=\002\255O\274B\313\266\275B\"\037=\226\224\222=am\224;Wt\204\275\312\326\251\275\266\025\r<N\376\255=\203<\215\275\261\264\225\275\022\223k=\263A\336\274Z\242\033\274\016\233\334\275\327)\337\275\275\'\207\275\031_\204;\303\376m=Wm\333\275\332\241v=\215\006G\275\010\344\036\275\027O\261\274\2554\205=@\322g\275\351\242L\275k\202\230=\347\271\025\275\241\233\306\275\n\273\337\2743\004\216=\213\026S=\231\250\202\275\031\255F=\026\256\275\275\035\022\302\275\366\311\276\275\340\023X<\362C~=\247\177p\275|Nd\275\324\376H\274\256\r4<y\177_\2724\021\236\275\3258\326<$\361\207\275sT@\275\232\214o<n\350\230=z\237\007;\256\t\010\275\345\260\254=\220\'i=\300\370\334<\213\005\342<\260\000o\275\'\'\333\275)\371\251:\226\275$\273\276\013\223\274Ar6=\371Y\202=\341\240-;\317\224\272\272\370./\275\236\257\255\274\237,\334\275%\221Q\275\337\262\215<J%+=\312Y\266=\354W\224=\320a\213\275V\nL\275Up\236<@\377\344<\033.\023;*\016\357\274x\302==C~\263\275~I,<Nij=\264\203]=\325\216\213=R\203S=\013\306\200<\017N\224;\266K)\275_\275\266\275\313\257\014=\270\335\236=\004\3225=p\315\265\275\252\353\212=\274\030\307\275N?\273<{\222\245=|\244\266\2759\332A\274\000\361\177=5e\250\275\311>\313=\255\304|\2755\020\346<\274\255\201<v\271\024\275-\350|\274\306\0130=}f\241=\305A\207\275\372|\233=\272\224c=\312\323\036=\357\303\257=46\007\275*\273\210\275\313\220\327\275\263}\210\275\343h\311\273\003\326\303\275[/\261\275i\033\031<@%w=\376\267m\274:\211\360;\352v\271\275\204\367[=\"\350\006=x\344\027=\357\031\301=\223\270\344\274@\346\371\273J\'P;\363:\300=\023\331\321;Nq\300\274\005\235K\275\335\214\257=\034\227K\275\025\013n=YI\266\275\274\035\240\275H\037\031\275=\206\222\274\006\251g\275(\314\275\275\313A)\274\223\225\316<\177\245j\274\277\215$\275f\033\"\275\377\346\367\274R\302\305\274\230b,=W\023_=Gm%\275`?\307\275b\245\304=\336H\234=\\=\230=1\302\210<\020\177\323=\300\333\220<\230\262#\275J\302\244<X7\n\2750\342\272\274\006\305==!\225\365\273\017\023\005=3\242\236\275/\237\202\275\362\370\224<\204N\265\275\273\344\216\273m\021B\275*\227\227\275-\244\311\275\371m\263<L9w:\201\270\335\274\215\321\304\2752\347W=\013\002\206=Vt\325\275\007\332\206\275\367\215|<!\302\217=t\230\271\275\314\230\255\275\371\342\302\275\352>\036\275W\205\242=\221\370+\274\323W\277=87\246\275\320\275\\\275B\272\036;\310I\270\275\301#p<|u\333=\334\233\272<\276C\233=\347\323%=\343\337w\275\331\365\264\274C\373%<F\201\226<\237\211-\274\325.\270=N\207\304\275\200\231\300\275\266\315R<s\026(=\266\250\245=\274\005\236<8f\'\274U\226\307=\223\243\331\275\266`0=\202\307\253\271\"\251C=Q\r\004=\356@$\275{\264\212=\020|\271\275E#\023=\032\217\277\274\371\262\360<\305F\251<|\334\324\275\321\205\201=\244\234\232=2\344\230\274\243(\025=gs\334\275!#\240\275\366\">=Sl\022=\013\342\205\275}r\026\275[Z\317=\317\314\332=m\307\020\274=\264\261=\302cH\275\315\262~=\232\022\321\275Y\237)\275\240\323N<[\244\256\275`\222q\275c\211\245=\350\310\315=\257\304\206\275\254\t\207\275\207\276`\275\371\023:<\177G9\273\335S\267=\332\234\261=\0063\200=`\206\201=\201\251\330<\325\236\310=*\262\324=]i\221=Ge\273=\240q\354\273~\203B\275d\037\200=\220\234\346\274\352|\201<e\333\304=\370)\301\275671<\256\375G=\177\010\027<>\251\235\274\237\003\353<\257\225\310\275\212\362\200=\221\263\270\275\026j\325\275\371\335\262\275\001\300!\275\300\302\202=\256\026X\274\004\266\204\275S\273\236=\267\3210=\343\304\333\274\344F\250=\330\370\347\274H\022\275\275q\331\312\274f\236/\275\225\2639:\222\336\262=J\033\222=\370O\330\275\036\t\312=0m\253=#7\037=\373\251\317=\376\231\250=\006\253j=\025\032\251\275*\364\307\275\027\233d=\254\216\367\274\276]\307\275\222Km=oU\201=\024\372\255=\032\364\262<\220\303\240\275o\'\202\274Xg\200;\335\003\316=\257\255\224=\260\255\246\273\250J\267=\013\306\245\275\272\226\205=\026|\265=)\277.=o\330P\274\366\023T\274\313T\331\275`;\206=\027\265\030\275n\024\020\275\210\317\217\274\023\265\212\275\350O\243<\3374t<\254\356\232\275\300ao\275@tm=\370\304n\274T%p\275\0009\022;\346\377\334\275\267\034\251=\277\021\003=\201\353\242\275Q^?=\206k\242\274\240fL\275z-}\275\231\260\336;\203^\265=)\352\360;\205\202\220=\225\000\332\274\266\\\305=\377w\277=\021\t\344<\330=\215\275\2011\251\274o\232\202=\027\213M\273-qL=\331\331\214\275\334K\314\275)\3471<\251\261\022=6\276\247=\236\023L<\211\022N=H\217\232\275\262\001\202=\006\220\256=@-\345\274\207\014\330\275\362Yh=$-3\275\333\234\253\275\315\001y\275\003\256\003=\334\273\251\275\023HX\275\203\310\225=\352\230d\275\263\266M\275\232\032K=\251n,<Q\250P\275\335;\261\275\232\215\300:\311\366\021\275\214w\266=L[\255=\315\311\260\274\322\335\202<\"&\r\274o\275\306\275U\316\203=\270E\030\275\004x\247=\311\213s;\274\312r=\036\017\332=\245\005/\275,\032\242\275\225\031P\275~\220H=\300\323\331=r\351\232<\315K\027\275\265\344\273\274{\252\356\274\316\204\255\275\2345b<\320B\224\275A=K\275\212x\355<\322\317\306;*\357\254\275\021Z\270<\216\002\034\274\305\222Z\275 \034\314<#\375\016=E\261\333=\226\3504=\271\343\257\275Vv\253=5\002\327\275\337!\275=\373N\231\275\214\'\212\275x\r,=]\364j\275I6e\274\340\021\251=,\217\000\275gp\275<\354\375\256\275\323\342u\274H\217\201\274J\301\"\275\370e\026=\353\306\264\274/\366\353\274\207\364\322=\216\361\230\275M\272\232=\376l%=\303\240f\275\272>\264\275\313\363K\275\356\377\216\275F\204\257==\257I=N\236H=\001\023\267=\347\313\217=,\337\273\275\213\323\277\275s\361\206\274\226-\247\275\273V\035\275\376?\242<\310w\244=h\362\323\275\204\032\226\275\231k\221=\212\212\273=g\374\032=RrF\274?]\366\273\022\350\342<\276\013Y=/y\235\275\366\020\204\275\326\243\236=\'l\216\275\316\320\325\275\227,\265=i\262\353<\013\307\033=U\005*<R\375\257<\262\016\250\273Rb\302\275\031\017\251<\204\226\256=|O\334\275\250\2667\275q\251\310\275\350s\240\274\225\334x\275\314\004\253\274\203\353\204\275\001@\252\275\2043\332<v\327\371:\264\023_\275\222\'\335<\021\026\244\275\235\367H<\206\223n=\243\224\331\275M7\240\275\023]\272\272\274I\236\275\313\254\250<\"UY=\320i\002\275\215\352\221\275\2513\272=m\372\201=\335\207&\275\2665F=1\217\244=\314F\274\275(\334\334\274\240V\213\273(\r\322\273!\003\216=M\025\316=\223|l=\010u\271=\037\205\245\275\320\273\320\275Jt\343<]y\327=<\221\236\275\315\006\256=\352\020\"=\256\'\177=\360\330\345<F!\031\275\372\376Z\275\323\016\325\273b\361\013=\344\032e=Q\253\324<=,\002\275\215 \221\275\231\223\244<\211E0\274r`\"\275\3058K\275k\337\227\275\013\231D\275\321\210\220\275\324\304g\275^\253\326\275\001a\017=\373\'\344<\260Ab<\002\024\337<\313f\337\274#\300\201=b\274\330=\352,\211\275\216\263e=oO\010\275n>\036\275\000d\266=\245\001\2279k_\234\275.&\313=\177\205G\275\304i\252\275q\242\242=\031\021\330\275`0\003=\307\341?\275+v==\035*\025=\031\010\274=^\311\207\274\306\307\342<9\303\354<\243\326\205\275f\025\332\275\206\243\253\275\t\304\240\275yX\335<\332\364M\275\013\216\321=N\342/=\355\030\202<\036e\222\275\254-\252<,\026\267\275\030(|<\300\341\225<h\371\375<F\352*\275w%\267\274\324aj=!\007\244=\236\306\321=\316r\275\275)\303\253\274!e\201\275\3735\235<\307\217\252=\3255}=\323()\275\000\350\336<\204:\251\274\t\313)=P/\331=|\266\001=\255_\332\275A\202\263\275\353j\211\275\257U]\275\003V\203=\364+\313\275\376p\307\275\224\1771\273%\373\237<\022^\311\273\r\017\227=P6.=\300y\024\275\262|\320<\352[\321\275\010!z\274gd\325\274c\024\274\275\2157\206<\225I\307=kZ\215\2758A\312\275\223vE\275\311P\217<\253\334\204\273ma1\275\260>\302\272\020\030\245\273r\343\322=a\2166\275{\261\272=pa\304=?\022\005\275\346\347\325\275!\311\247\275\310\257\255=\0163\232\275V\205\367<\313\345\006:[\007\253\275\001\360\277=\240\036\225\275\275\313:\275\200\3302=\3445\335=\006m\320=\3105\312\275\246\345\271\275c&\203=C\357\224\275nq\267\273l\"\242=\234\203\314\272I\375\314=\0360\267=\243\322\013=\315\272#=\235\327\247=\267\002\t<A\250\353\272\250\254\326=\322\347\262\275\022\340[=l8\313=\361b\030=P2D=\341\222c\275\351S\274\275]\344\246\275\360k\233\275>\263\312\275%\351\264=F\273\277=\325T\246=\303\271J\275j\331\305;\274=\223<(\242\270\275\216\014\365\274\345\351X=\034\n\251\274\255\213\224\275s\216\331=\030\261\331={1e\275\013b\304\274X\272\206=:\013\026<\022\265\024=\271\\\242<\217\001\373;\371\254\250\275\000\036\243\275#s\271<\373d\255=,\254\005\275=\246\342\273^$\237\275>f\371<\2671\277<\027\3410<\266h.\272\343\313\221=\377b\250=\232\014\225\275-\276\325\275\013u\330=\275b\255\275ySM=\036\222\277=Xe\333\275l!\225=\327\243\212=H\213\210\275\003\374\037<\252F\271\275\275:\235\275J\315\310=\227yG\275K\210\372<\261m\237=\356f\215\275\364d[\275\200c\262\275,\313\324=X\036\307=\327\314\226;y6H\274\302\365\301:p\254y=\205\341E\275\314\242\227\275\237yO\274\361\245:=\275\351a=\373\364\326=\374O\277= `\355<D\223\245\275?\340\355<q\265\212\272\245K\256\2758\324\264=\213:\357\274\323\367B=*G\325\275=\344\245=\343v\271\275o\337\017<\215\377\300=X\005\271=\272.\017\274\021\014\302=W!\211<\037\331\247\274\000\236\260\274\340H\206<\026\334\234\275qm\261=WHW\275\220\217\023=p\231k=\355\347\035\275\347\315[=!U\225=\211^\312;\264\204k\274o\257\317;\nA3<k\253Y=\316\260T\275Q\002\243\275\031\267\022\273\376[\211=\366\360\247<R*Z=\017V\276=\275\323\326\275\375_E=\236\013T\275\3147\304\273<:1=\270\220\355<9\245D\275\267\203\272=#8+=:\366w\2756T\220=\241aS\275\277O\014\2759\237_=\331\357\336=\211`\217\275\277\252\305=2\010\301\274\272\240\022\274E+\276\275\316n\266=\013\331?=\223Jj\275\201\301\275\275Z\207\221\2740D8\2748\254\260=\313~\205\275Aa\010\274\231\255\240\275$\370b\274%\031;\275\245$\210\275\336\355\241\275\250-\336\2754\020(<\273,\317\274\303\004\r=\342\217\247=Q\371\326=\336u}=g9B\274\327B\326=\205]\327=\352\273\304=\225\267\332\275\320\327\244\275\235I\273<\201{\320\274\227\345\034\274\354\266i\2752\237\277=6Hg=K\374@=L\335j=\321\253\330=\244E\303<\274=\237\274\375\013\257\275\274!q\272\013\221\335\275\225\340\232<\224\024@<\031\276L=~}\213\275D)\225\274\326F\233\274]\030\334=\361\232v\275\0010\252\275\2055\277\275\3451\377;\253\337$\275\001\214\317\274\357\303\203=KIF\275\036\034|=\233:6\275\004\300\254\275Z\031\016\275\002\312\t=[\321c\275\364\\\255=\271\331\217\275ce\312\274\314k\035=\306 ]= \350\'=\202e\221<\356\020l\275\273\rg<{\205\225=\312\232\013\275\253\336\037=\023!f=,\276\225\275.\030\255=K\230\010\275\260:%\2756\'\314\275}\275\344\274Q\024\312\275M\244\252==v\251<\200\033\216:\234\347#\275\301T\316\275L\340\032=q\007\\=)\226j=\\\353\221\275k\363\255=>\233\245\275\336w\320=\274=\222\275\346Yo=\321\323B=\320i\256=c\243\332\275:\037o\274\224\210|=b\237{\275\332x;<\334i\003\274\366\007}\275}\364\240=\327}\244\275F\177\277\275\032\234\315;\313lc\274\276l\226=\315\203Z=\375(\216\275\225$T\275\365\272\331<\370\216\241=\201\3646\275H6\337\275\241\357\241=\034\025\303\273\271\013\264\274\213\275>\275\231\213\252\273\275Pj=I\300\235=\232Y\304=F\032\267\274O\354J<\335\300\257\275 \230\016\275\257\201{\275\030_\374<@\214\306<\010\206p\274\355G8\275B#.<\256\362\237<\231>\\\275\336b`=\341\364C=\334-\252\275g\362Q\274\030\022\347;\206\362\246=\221\217&\275l1\220\275\035hQ=\311\263\261=<\352\236\27401\267\275\010\230d\275j\227=\275$\237C\274\333\203\255\275G\216\325;\273\025E\273\365\250\037\275\262\2703\273\036\026\270\275N\177\275=\252\330\340<P\351\326=\344}T\275\371\376\201=\316\026\311;\\\304?=E\262\327\275\370,\004\274\273\315\316=$\222\230\275\311\325\376\273^V\034<\207\373\242\273\023\026\205\275\270\362\236\275\354\331\003\275\263+\347;\003\324\332=\027\377\307=\377\357\214=\245\007\255\275\227\226\252=W\332g\275\234q,\275\004\276\314=h\203\353\274<\242\214\275e\272\240=\361(\016\275\320I\314<\356\267K\275A\300\305=[\277\210=\\/\254=\227l\320=\263\206\000=\362\266\034\275-\014\310\275\005\231\265;\315(\270<\253\006\215=n\323\200\275\3208\306\274\216\344\022<\254\331\332\275\224\027\032\274\201\n\266\275-X\324=\021r\231\275L\007h\275\\\\\267=\305=\214=\326+G\274R\304\350<\254f\303\275#\200\022==\242\243=\017\271\237\275\337\304\252\275\313\272\364\274\305\343Q=\272\207F\275\312\353\255=BhZ\275\266F\303=y:\311;\354%\246\275{\227\230=-\345\255:\256\265)\275\326\300\201=\376\032\202=\226\325\225\275nN\306=\267\353\262<\270a\004\275^\"\n\274\320\332\242\275\241\355\301\275\355\363*\275\243\236\n=\266\035\r\275\250\337v\275Y>-=\216\227h\275u\013\323=\344je\275a\217\222=\203l\317\275\001\250\305\275}\261\347\274)\202)<Qn\326=\013\273\223\275\354Wm=\355\'\t\275\016\365\231\275\330\344\207=[\200\274\275@\017\337;\"\222\242=\275\260\226\274\342/\232\275\300\010\004=\'\006\232\274s\033\261\275\316q\206\275\260\224\232=*Y\013\275\203\204%\275H\372\261<\211\353\200=\217\221\326=\315\215\273\275\252\337\230=`\325\215\275j\231\307=\200R\222=\336\270\007=( \300=-\nq=5!\023=+y\261\275\373*\250\275\201\233c\274d\n\332=\242\236|=\326\244\334\275Dd\317=\316\323\273<\017\246B\274\034\254\035\2710\331\330\275\010O\210\275\026\244l=|Qv=0\202j=\023I\002=\326\224\272\275\"\347\310\275\334\014`\274\324\373\202=\031\027B;\020\276\241\275Gr\330\274#\246W=\366R\217\274\373\307\230<\245|?<L\020\t\275\270X6\275\212\350\212=`\337\"\275\022\233\334=^%\204\275\242\347Y\275\0267\203\275I\346\215=\245\005\334\275\374\356\222=\313\245\335\275\222lf\275o\031\013\275\026\352<\275\307\3279=\332\303\231=^\357\224=\346\231\315\275\246LE=q\272\210\275C<\227=R\027%<L\273\223\275\276SM=M\013\237\275q\034\202=\366r\305\275JM\200=\303\253\035=\202\263x=w\254\220\274y\211\320\274\317\254\237=\304\265\314=\332\005`\275\313\330\274=\367\\\025\275\336h<\275\220_\226;\030s\203=\241L\'\275\202\246\231;\3118\'\274\324\021\277\275\371\337\334={\333\201=\246\t\340\274\263\273~\275\310]\325\275\n@\332\275\rQ\214\275[z\200\275\251\375i=\204l\221=e\225\244=QNm<\037$\265=\030h\203\275\034\313\302=\233\276g=\361\000O=\"\274\033=\270\310\272=4\233\217\273G>\274\275\337\365k\275\205\304%\2744A\006\2749Z\003=sY0<oo\242<\2758S<\200[\327\275\251D2\275I)\311=7\372\340;\232\270)\275^7\235\275T\265\262=\263~\316\275\316\010\265=\372\005\275\274\210ZD\274v\001\315\275\313%S=\"\2369=q\002\301=\tP9\275\226\006\313\275\227U\320=-\337p\274WDH<\256\206\205=\301; =\347`\031=B\030\257=\330\233=;\213@(\274\016P\n=K;\305=\242\021\036<\031\354\333=\210\337l=\316\260\325\275*I\271<\273z\202\275\223b\272\274iS\257\274\2733\240\273pF\212\275\344\373\361\274vp\206\274\030\225\324\274\312\213\316<h#\037\2754\241\336=[\246v=H@\354\274\230JU;\334\273\220=Xf\231\275\330f\236\275\241\276\364\272\366\032G=n\273U=\271\251\214=I\276\022=W}\206=)N\314=\254\346?<\211\246#\275\367\016K\274\263iI=,\266[\275\363!\250\274\276\"3\275\014\213!\275\020\274\243\275O\005\321\275\302*\274=B\345\201< \013\203\274\006_m\275\264<\245=6C\265=\372i\247\2753\253@\274\r\301\204=\325\374N<7W\325=\267`\331\275W\037\325\275\254{\254\274\314w?=\363\232\265\27561\335=\002\311\323=N\235B\275T\226\266\273\220`@<8&2<w\375\027\274);\235=\270\240t\275TII\275G\217F=\246\010\274\275M\246\250=T3\201=\304\320\243;? \220<\235\233\327\275A\264\211\2758;\311\274oV\265\275\276\014\277\275\374\333l\275A=\346<WI\314\275\267<\246=MI\221\275\030v\034\275\'\374S\275\032\233\277\2750\024?\275\345\241\r=\353/4=\352\374\267\275SQ\252\275\217\311Q=\201F@<;\254:\275\260\246\317=@\234\245<\020p#=w\327\265\275\016\266\344<1\255\313\2742\217\207<\240\244\242<\336\306\370\273\027\213\314\274F\312\374<_\"E\275\276)\207<Q\250\026\275\315\341\200=\344\333\220\275\005\n\227=25\271=\232c\223=\353Xl<\t\017Q\274\300&\332=E{\030\2755\276\277<\217W`=\217\246^\273!\262\275\274\007l\243=\375\005Q\275\310b\252\274\2326(=[\350\326=\024\030\266\275\037\355\245\275\201\232S;\242\206\264=\004n\221;\r\231\342<\252\355\320\275\247\373#\274\250\304\026<\355=|\2742\2705\275\314\233J\275\365\330\037\2750\236\232\275\343m\247=\017{(\275\362)\300=Q\200\303=vaa\275\003\342w=}C\217\274(Y\265\274\361E\327=\267\255\354\274d^\"\275\010\033.\275\326H\026\275\260\364\334<O\2162\275Jo\313=\245\204\020\275!\332\254\275z\324\324\275\033\\\330\275\007&\366\273\037\360\250\275\366\366\n\275\017\232\265\275\355\262\315\275\003\203\235\272si\233\274\332\021\212\275\341\020\225\274\021s\013\275AZj=\360\330h\275\365\322\375\273\010M\255<\211\304\261<\201\232\201=]\306e\275o\027\264=\210\267\031\275\223\305\364\274\214\242\025\275\337\222\223\2742\373\305\275h\032h=\017\026\320=\337\013\310<\366\330z\275\356\300Q\275\262\216\266\274!h\004\275\326<\261=\332?\217=\257\375\010\275A\263\306\275\320r\227\275\312\302\323\275\013Z\234=\244\305\t<z,\230\2757\334\326;@\022\\=\200n\335<\034\240\323=\253\311W=nn\340\274\336\317\t\275\035\036\\<!\006\207\2758\000\263=\315\243\201\274-\263\235\275p\267\275=\215t\236<\314\207\211=\356\332\200=\337\261\232\275\034x\001\275\374\274\317=}\265\250\275\027\231\217<\231i\240<\025]\271\275\327:\352<~\222\\\274I\326\226=\353\351\253=9\001\307=\332$\314\274\261\266\274=\352C\307=\355:\271\27591\274=\212\303\240\274\351Mt\275\331\372\216=U\337\245\275/\214\231\274^\204\235\2751\317\025=\n8\221=:d\205=*:?={\324w=E8s=\"q\356<\334\032\352\274B$\272\275m\362\332\275\375\014\232=\232uQ\275\324R\013=\013nc=%_\332\274t \335\275,%\034\275\270\202\025=\034\222\323=\017\001e=\017F\020\274\224\333\330\275\027\353\254=;\355`\274\233\'\037=\014&\261=\'m\275\274\007\202\232\275\216\273\335\274_\263\'\275\256\315f=\251\230+=x-:=.\334U=\355\254\241\275K+J=\207\374\210<\340\220X\275\031\005{<\267\306o=\256pZ=\035\334\t\275\304\273\310=\313\204|\275e\256\272\275\272_\221=@\320\234\275\24706=\211T\266;\260:\245=\210=\316=\226n\267\275\200nl=\332n\213\2754\321\241;\236};\270\200\224g\2740\215\020\275\372\315\273\275\275\352]<=\252p=\301\026Y\275\341\006)=\324+\260\275\265\030\332\275\021:\221\275\310\033\345\274\310U\240\275;\027\022\275;\251\270\275LXQ\275\315q\260<ba\260\275h\030\320\274\273\335\244\275\001\214\331\275l7\270=$\230\227\275\253K\024<j4\t\274I\024\204\275C\260c=\363\264\230\274\321Z\372\274]\325\307\275_\377\322=\204}\t\274\326\355\250\274\001\217\260\275\1779K\275\306B\264=\026)\306=\210\365\305=\023E\310\275\370\340G\275\205\253\212\274o=\224=Q\030\211;5\024\311\275\364Za\274#\'\266\274\330\226X=\023D\243\275\374\365\263<:\271\226=c\223\253;\204\213\261\275\342\243\313=\332\274\232=_-\332\275\263\302<\275\371\n\225\275\000o\264\275\211\224\206=(b\212\275\264\000N<\215\314\233\275\037\272\000=g\033\337=V\207\263=\342\246\326<\260v\216\275\203\002\201=\204l\221\2723!\312\275\230\311\213=\202\317+\275\276\375\315\274m8\254\275#B\305\275\\`\224\274D\202x\275\323\035\270=\275\"\316=N[\317=}\"\307=\327!v=\345`L=\231\342\277=\267P\201\275>\220\021\275k\364\211<\305\232\325\275m\317\301=\353\177_=Uvv=\003\\#\275\001M|\275\244!\323=,\245\225\274\nfs=\242~\372<\213$K\274\3646\242\275W\313`\275\364\316\263\275\221\240\227\275\355\266r=\177\0218\275\354\354N\275j\272\334=\251?\245<\346\323\252<\032ZN\274\325\232\245=\251$\310\275\360\037\244=\375\256w\275u\336\244<\366\001\277<\034;s=\303@\264\275*kD\275\250.\264=\307\t\337=\376{\326\275\222\227\347\273\270t\377\274\325.h\274\356\212\"\274\307*\310=`8\306\275\024\214\251=\336\266\210\275o\334\212=\315\"\342<\207\314U\275\237\346\307<\246.\256=H\262\211\274\217o\020=\332\304\307=%\210\214\275\272K=\275\361\\\336=b\366j=\316\307J=\236x\256\274\310\307y:\274\027\256\274\020\352\023=K\336.=\024\331\"=\301\230\024\275\315]_=\266\246@\275\033\205\273=>\013\253\275\t.Z:)nS=l\303\207=\252]\211=\216+\224=\274\315\221\274\364\247n\275\371\361z=\320\0174\275\304\376\025\2749\223\200=v\343:=\246T,=\177l\020=L\304\340<\"\031\325\275\332\362\333=]\375\211\274\211x\300<\354.\256\274\340\267\311\275\274pA\275\t\214\325\274\030\2221=\330\241\274\275Y\000\252=\361\321E\275\013u.=\253J\220\275a_\250\275z\354~\275\305\242D\275\351.\342\272^\tH\275\253\010\261<\362\301\255=\261\355\314\275\023\2673=\356\204D\274\362|\021=\360t\021\275\323\332\264\274]%\201\275\261\302Q<F\325\242\275Sb\310\274\371\357\326=8\301\034\274\222\343\247\2755V\177=\312\202\253<\363;I\275nh\203=\363\035z\275\350\306\024\275k\323\272\275x\251\276\275?\013\263\2759\362\373\273\267\273\023\274H\256\010\274\341\371|\275\'\300\026\275\346\360\305=\250P\265=\035\003\275=H\222\213\275\0201\265=n\250\253\275\033\n\310\274\n\377\245=q\2674\275\205/s={u+<U\207\310=3T\355\274k\362\264=\274\037\204\275N\212\023=n\324\r=\330\352\335=\322\352\310<e\340\327=\321yL=\3754\236\275\n\240\300\2752d\\=\214\356C=\204\274\005\275\365\021\271<\251\017\002\275D~\257\275p\256,=`\330o=8\017\322<\212j\033\275\203\025n\275HS\342;\031\nc=z\307\270\274<\217\231<h\t\270\275\363\304\253=\260J$\275\220\221\253=\2730\220<\024\017\324\275\374g\315=\002\204w=g\"1<\006\260m\275x\320\327\275\210\312\221\274\350\350(\275(\371\003=\210C\203=.w\230\275\230j\006=\r[\220=\247\214p\273G\370\027=(,\n=\250\345\233=\010\251\242\275_\3102=\371\263\214=(\026]\275\340\"\375\274_\236\317\275\225&y\275\033\321:=\242Lk=\277:\227=\252\352\202\275bl1\275\223\014\377\273g\030\225\274\362\233!\275N\036\333\275\271\230B\275!\361X\274\336\312~=\021\261\235\275\347\314\312<\276\007\013\275,0\261=b\332k\274\\\316\272=Q \263=<{1=W\026\247=h\341s\275\346\277\251\275l;\332<eh\225\275\302\227\367<\327[\373\273\300\343L=(V\221\274\341\327S\274S\336\311\275U\260l=\004\316\236=%a\026=\227f\261=Y\005\004\275=\361\016\275\307m\026=\327\244;\275\014RU=\325\014X=\370:u\274F\236\305< \027\"\274\347\230u\275\247\306\263\274U\236d\275\336l\222\275^\217\216\275\3004\266=\262\314\215=\236v%\275\203\033z;\307A}\275s\t\201\274\226\303n\275\371/{=\337\023\247\275(\322\021<w6\205=\356\200\307\275H\014\'<B\242\327\275\275\032\221=\005\031M\275K2\204\275`\203\203<q:*\275}\300\302=\"A%=\270\264\375\274X\363d\275\200\372\025\273\230\032\306\275[,q\275*\311\203\275=\202\006\275.[\252=\331\275o\275\266\347^\275\201\241\232\275\356/\251\275\376\241\321\275,d\227=|\303\303\2750\207P=*W\202=q\235p<\231\347\310=\273\307L<m\304\243\274?k\033\275\260\277\361\274\224\341:\275\352\301\257\274$?\320\275\266\3128=\350\340\312=\376\320j\275.Uj\275\300\033\223<\317\202\265=~\373\253\274\251g\177\274\275\222C:\021\010B=\004\014\315\2750\313`=\266\324$\275g\365\313;a\016(=\312#\274=\321\206\270=\264XV=r\030\004=A\252\231\275\220\324\336\2759$\200\275\257\002\274=n\034\177<\207\016o<\307.M\274v\324\210\275\313J\222=L!\"=\035\310.;ZO\326=\0027\213=\017\003\303=\0273\336\275\242\211\327=\271\313\r<t\254\315\275\261(\200\275\34152=>\243\017;\220\034\321\274\235\237\243=\337O/\275H\260+\275\201\365}\275\361*6\275\216\303\233=\372Qb<\357\357\221=\261nk=\315\354I\275.\000\300\275\031\376d\274I\241\010<\356\334\223\275~\207;\274\260\353\177\2722\216\272\274\336\203O\274\352kx\275\234\375\221\275\305L\240\274!:\240=\345\264\207\2754\250#=\311\250\223\275\300\006\261\275\177xb\275e\014\324=(\310\224\275T\332\223\275\2371\233\275\223\t\336=f\005c=\245\025\242=y#N=\026\364\275\275\200\366\316\275\333\273}\272]\013W\275\220\367\235\275\362@\307<Qy\324=\312l\353<\243\303\301\274\263\2068\275\'\323\337<\314\232\326=\334?t\272xi\356\273\361\337R=\340IG=\343\006b=\331x\227=\253\204\007=\211b\021\274\256/\\\275\250v\264\275\267$\003\274\r\217:\274\\\362K=J_\272\275\367\345\207=\346\365c\275\014#g=\256/\317\275$\250O=\242\255\256=X,W=\333\252\222\275\326\005\002=\304\336\211\275\335x\300=\254\343{\275j\360\232=Z]\320=\201\230\313;\244\001\270<\357\276\347:j\036\234=\245\035!\275\001re=\373X =\235\220\313\273\317\025\270\275\366\\\262<\211\344\217=\217\014\311:\352]q=?\265\202;\265\271\265\272\354\321(\275\254\270\221\274\365\2429\275\264\023\324\275\351\031?\275\216/5=\004\202\277\274\017$\033=\210\227\032\275\024\300\236\274\026\316\265\275\360\3618\274I\342W\275]\021\276<\312-\245\275\345*\221\275\316\330\303<\336B\321<\005I`\275gs\256=\2642\230=\336G\322=\333\214d\275\215 \020<\002\020\214\2750\027p=\033\363\004\274\371\026\345\274\331z\324\275W\204\024\275Q\016\205\273\230D\324=\0353\262\274\275\303\272=\305`\033\275\276\302w\275\260\334\256<\335\366\254\275B\363\365<\222\365s<\340\031\255\275\315\277&=\323\025\231<\257\344\007=\351\022\202\275\324\300\030<\367\345\353<C\237\372<%`\273\275\353S\375\274\232c6\275\344Ov\275P\307\314=>\361\310\275]F~=8\023\320\274S\323f\275\r\326\203\275\1778\270\275A\263\303\274\035\014\322\275K\241\337;\204\337\001=\256\371\262\275\333j\311\274\215\305\234<\001M\002=\033\002\036<;\364V\273\207m-=\366\355\336=\016\357\302<\023\275\204:\264v\265=)\374\"\275\2021\202\275.\260\246\275\005B\211\275\206A\217=\3647r=\205i\220=\301\342\225\275i\350\210\2755u\332=V\n\341<\302\tv=\250w\216=\230\206\335\274\210<\212\275\2130d\2754\023\375<Y\024\311\275\234t\265\275L\276\226\275\2733\271=9\013\224\275W\224\304=\313\t\245=\301u\263\275?\307\277\275\354z&=\265\037\253\2755\305\223\275\247\252G\275\226\201\221<\203H\351\274\013O\213=\222\204\035=<c\247=CN\274=\206\215\265=\024\265\363;\311j\357\274\006\325\267=j\331\253=\233\274x=\251R.=\311\231\232<\361\342\233\275+\022\001=\250\376\226=\342\201\264=K\272\371\2749\277\326={\334\344<\010[\\\275o\351\233\275\343\373\221\272O(o<\210g\261=\220\010\316=?Xz\275\344\033{\275\005MP=eq\253\275\271\310\037<#\304\272=?/\001\274\224\005q\275\033\340\325\274\007-_\275\346\357\003=0\n\304=y\225\312=Q\336\242\275\373[\245=\241X\306=\027\277\360<J]a\275\213x\230\275\332\353\327=\375\234\315\275\300\274\305\275\273\366\201\275\333\245\216\275\330k\237\275\245\237R=\017\340\367<a\024!=Wr\272=\2316\332=\366\356\222\275G\314\202=\300l_\275\212g\275=\372\332n\274\235\354\002\275L\0261;j\222\227\275\032\210\016=\354\254\302=\372*_\275\030xR\273\337\224\235=0|\260\275\242.;=\024\016\334=\311<\313\274\216ZL=4hv<\016O\032<\237\027f\275\204\262\\=\341\021c=t\230\321\275)!\332\275\300E`\275\341\345\310\275\177J\332=\316]H\274\336o3<D\001\310=\257\272\227\275\007\233\245\275\246\231&\275~\215\370\273\007y\205\275e\362s=\03303\275\257D&\275\270_9\275\230\002d\275H\030\234=)\"\202=K\250Y\274\022l\325=\227L\277<\231\300\\<\377\307\375<\335\276%=\323\014m\275\251\227\225=\364\031\203=ODo=\024\255\313\275\022\222U\274B\221\363\273\233\265\234\275\331Xo\275\003\225\025<E\312\266=K\364F=\007\353\214\275\353\341\221=\032\241V\275]\237@\275\237\275s=\037\273/\275\025\340\243\275pDG\274\003\373d=\010\3546\275\000\331\375<U\300\324\274uP\010\275m\367\334\275\236\367\233<"
      }
    }
  }
}
node {
  name: "fully_connected/weights/Assign"
  op: "Assign"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/read"
  op: "Identity"
  input: "fully_connected/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "fully_connected/MatMul"
  op: "MatMul"
  input: "input"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected/bias/Assign"
  op: "Assign"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/read"
  op: "Identity"
  input: "fully_connected/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected/MatMul"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "fully_connected/Relu"
  op: "Relu"
  input: "fully_connected/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "fully_connected_1/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        tensor_content: "\303\0308>Z\301\324=-s\352\275\263\014m:$\246=>ie\257\274\016\330\365=Br\017\276H\276Y\2762\270\222\2758\037\323\274!\355\014=7\315\254\275S\377\217\274\201\005\037\276\336\373\202\275\245\355\241;\245\010\247=&\332\242\2741F$>\371\254\035\276\233\241=>\350zW>\220W\250\2756_!\276<\221I\274BM5\276Je \274~\367\006\276\373\322D\276\031\254t<{.\366=9j\326=\2626\237\275\332\220\330\27555\216\275\023\210+>\261\277Q>\032\345\036=\267\256\007\276\332\271\027\276\346\211\017\276\366\247\253\275s\215M=\361\227y\2757\276\254\275\322\'\025=\215\265\340\275\230G\262=\021\337\002\276v\036\334=O\177H\275\216IK\275\353\033\353=\213\350K\274\271\004\031=\217[,=\206\311:\276\340\007D\276]\271&\276\037QU\2761\201\353\274dQc<\253\003\030=\37415=7\363\260\275(r\370\275\241iA\276@,)>\375\0229\276\220x\020>\024}\274\275\250.\345=\236\350\033>?6l\274_\345\243\275\347`\024>D\260\332\275\330\301\035\276\201 \"\276\026\361\216\275(d\314=\216B\225\275\360g\374\274E^\314\275t\241\250\275\266\323(\276W\2655>`\005\032>%\240\364\275e\034A>\017>\036=%?\231\275\033\325E<\277\350\260\275\373\nH\276\354=\273\275\321\017\325\275\324\\;\276\210>\355\275\021R\177=x\306-\276c\330 >\327/\030\276y\301#>\327\353\026>O\350\263=\372\263\356\274\243\2615\276\356\322G\275?F\261<\254\3746\276t~\300=\31588>\201\373Q\276\304;\006>\255^-\276\365N\350=\303A`\275\307\256\334\275\230\350\340=\334\340\276=\215\331\300=(\362\253=e\337\315\275t\241*>\373\252\250\275]\021l=&DA\276\331\211\342\270Jz\262=~iP>\366\334\312=\346\n\340=\036Q\014=\252F\211\275\332NX\276G\232S>e\005\245\273\220=S>\220F_=\307\232\361\275\336\205\365\275\314\322\211=\216\275\013\276k\2573\274+\264c\275:>\310=8f@>\t\004\264\275\322\"\355<\353\367\035>\362\007\363=\305\211\035=\223\305\020>R9\001\276\220{\214=\335\212\352\274\271C\253\274\276\304<\276:G\342\275m\346\017\276!\227\215=\234\365\002\276w\376`\274rD\302\275\206w\363=\266\206\025>=#Q=\036\233\346\275(+\362\275l\226:>T\275\340\274%\236\240;K\245U\275y\217\351<\261\227\334==\2442>\024\2601>\3708\233=\326\333L\276\373\030A\275\364\245y\275\365\341D\276[\305w=\264&C\275\326\226\236;\257\353\022=X\230\033\276W\0012\276r\000T>\310\272\266\275\356\370\336<B\343\307\275\221\223G\276\277\324\032>\243\202\017\276_\346\327=W\3617>\36038>\331\275\001\276\363!\274<V]T>F\'\277\275\313\246\363=Up0>\327\331\317\275\022\355\005>\347G\356<\241\246\032\276\363t\323\275\365\341\245\275\321\026\312\275.\322\333=`,\276=3,\243=\325\363\350=y\336\275\275z:S\2756\363O\276\204\234\306\275\265\206j\275\316\321.\275l{\275\275UJ\376\275\252u3\274\215l\201=\200\032\375\267\234\214)\276\223\357\304=\362t\256\273\331\353\314\273\273Y(>_\361R\276\036\231\301\275\033\016%\276\224e\237\275\026\030\r\276\221\233\361\275)\000.\276\273\t\t>~\r\r=\372)\250\275\r\347.=\305\241-\273\230\376d\274\230<1\276U\314\314=\"\300Q\276\223\376\013\275h4R\276\334\264\036\276C\r\276\274*W\262\275\336\237L>\216\262T\276J\363Y\2763\027B>\277\211@\276j\000o=\364\370\360=\342\"\363=\322U\033\276P\306\244=\264\233R\275{\327\376\274`\0041\276\360\207-\276\236\326M>\225\260\203=\261\313\265=Zw\027\276K~\263\275;\241\364\275\332\022\323=\362W\220\275\300\026\251:X\2767>\242\034M\276\373\270c\275\331\214r\275\316\014\256\275\2519\220:\335!\022\275\250\306R\275\"\321\"\276\254\270\021>\331@_\275\247(\320=\001\323\017\275\216\372\017\276\002\271\033\276\025;\303=>\231\'>5Eb:,\252\023\273\241\007\233\275ij\207=\303\002\367\275\203\016.>Qu&\274\001\342\331=\023\003\205=yNA>\030\013<=\377\031s=P\304o\274\036j4\275\243\036\r\276\214/u=\026H\370=[\'\\\274_O >5~O>N^\032>\343\351\010\275\263\327\"\276Ccc=\361\232\022>F\363\233\275\347\306R\276\03785\275\373\203W>\032\207\203<\006\213\031=\251\323D>\036|R\276\033\224\352\2750\231\027>\221,\007>p\272(\274@\033\330\275\254\210\211\274>^\314;\271^l\275\314\275\002\270\376\274E\276\354!\237=\250\016W>3l7\276d\354\002\276=~.>\355{r=zb\367=\310\376L>\301>7>\232g7\276\213\007F\276\307\344U\276\206VD\276e\3210>?\332\004\276\206\037\036>B\313\322\275m\3422=\275@$=\307-J=\r\0017>\243p\002>)\032\014<~\237\255\275\316\327\255=I\n\254=7y\r\275j\212 \276\201\247r\275\261\223\277<\354\026-\275\264y\321=\207\177)\276\204\247\301=\273\3470\276\305\1776>zu9\2760\230`<\247\273\036>\342\'\\=\222~f\275\"\273\003\276\322\0020>\n\360\017\276\255bP\276\030\376\033>\236\270\323<\327/\014\276\022\266\276=l\304\251=\250l\242=\375\323\346=L\345\201=\207\202\020\276\177\370\033<\350w\027>\350\215\313=\220i\215\275\365\313&>\326\346\274\274z\202\002>@u\366=\254\335\317=1\224\270\274\303\206O=-\370\360=\334L\027\276\343\226\375=`\273\037\276\251\376\227=KZ\246\275\334:\211\2750\237U;\217\272\245=%\013!>598\276\306\327#>\315X \275\225f\032>j+\340=\205\256\230\274B\351\004\276\034=\265<\274Eo;*\024&\274\310\301\207\275\301&\036>\0374\321=x\372\343=\376\312\327\275u\301\327\274T\325\316=<\3566>\370L$\275\346\006\263\275LLe\272\347L\026>\230\353\327=\016.->\377\240\277<\302\037I>\326\240Y>\265\360\315\275?\257\377\275\270a\t\276\024\022Z=\246<\206\275\257\373G>\021\361:>w\226/=\034S\210;\014\333\250=\236DH\276j\3179\276W\310\325=\264\003\350<\001\257\311=2\236G>\207\326\225\275\325\265C\276@\366E\276\224\226e\274\004:\304=\010.\200\275\264\027\031>-\312w\275a\nP\274)\034s\275n\005\001>\324\232\216\275R4\363=eS\035\276\327E$<+b\205\2742\316:\276e`N>#\257\320=\267z%\276\365\360 >\231\333\270=A\217\377=h\336\306=\257}\356=H\316\211=\276\327M>\nSC\276\001V\017\276r\210E>\325\352\212<\262\0328=<\250\347=\203V\026\276\261F\013>\027\362\367<Ky\313=\211&\232\275H\242<\2761lV=q\271\240\275\213\360)>\252\264\351=o\302\036>\306\215Y\275)U\207=\rqE>\024\357I=@\204\367\274n\333\316;0?#\276\263zH\276\373\\\306\275\240\354B>\006\376\313=\016\333\253=p,\311=Q\260d\273\214\3523\272\344\3228\275\022\207g=\331\254\331<Y\221\030>\344R8\276\205\027\301<u\267|=\300DD>\224\362\322\275\257\220\003>8H\355\273\037\207\200\275\312@\332=\313\345v\275\221\307\371\275\375\364\'\276\345\205<>c\312\252\274\257Ms<\377\365H\276\250^X\276\215\274\205\274\204\277Q>_@n=\302\326-\276n\0349>9\322m=\220U\363<\341\335s<\3032\312\275\030\352\223\275\2577\360\274\255\347\371\275\2706\241;\205l\231;\236\316I\276^!+\275r\2259\276\231\241M\275\212O\262=S\374\026\276\355I\307;O\373\347\275-\371\325\275\305\207[>\241\361\220=\367\267\315\275\372\221\346=\2420C\276MV>>1E\251\275\261\351\220\275\2760\r=f9\023\276+v\001>\2053\017<-\207\036\276q|\017\275\324)\316\274\030q\276;\364\273\266=\007\310\'\275\2602\000=>\302\201\275\247\273\327\275x\242H\276\3312T<\024\tC>\301\270\t\276Q\346\010\276\274\036Q\275\375\320H>\251\312\326\274\252\024\335\273>\325\020>\234P$\276\260RB>\267C\227\275\243\3426>\224\217(<x\032N>@\234\346=f\266T>\325J^=+\r\340\274~\370\355\275\\\220\316=\216F\002=+\264\004\276\302\r\010>\236\334X\276\002S\017\276\332\033&\276\005j\t=Ln\034>\032\2270>INc\274&$\334=MJ\216<\201\030\253=D\023\035=\275N\257<\204\200X\276Xs\210=\356\260\265\275x\353\354\275\032\305\027>3Z;\276\221\006\030\274\222\310\004\275!\020\033\276\335M\217=\005C\223\275\200i\277\275\246 \241;\343\347\">\247W\251=5>\256=(\021\375=q\266-\275#\023\264=\032p\350<\255U\037\275\315\305\335\271_\312\347=\212\213\024\276N3\340\275&\320\274=c1\355=\261\267B>R\3506\276{\367\364:\354\220\365\275\376h\370<|\341@>\320(\236\275*\253Z\276\2300X>\232 \255\275\305\320\243\275\210dD>\r\026\305=\006\267\254\275\221\024\n<\323\372\201=(\363N>\031\0316>\014f\306=\263\315&<\206E\363\275\250J\362=\362G\277;\002?\245\275\222\351e\275X{(\275\253V\303\275\035\331\252\275\350\375\302=)\272\034\276\335\004\332\275e\350\003=:\245w=2^L>\210\004\312=\240\240\363=-5\025>\363\242\306=\343\037,\276\021\226\376=X\036\301=\263\027\346\274\313\205\002>q\022$>\003f\034\276&<\247=\305\265.\275M\376\003\275K\347;>\201;\030\276\251\265!\276w\225\252\275\361\273\023>\006\223\325=V\376\317\275\231\270\341<a\324k\274\234\215\031>\314\344\370\275\357\370h\275Q\\f\275\004\251@\276?s:>p\033M>\243\245\274\275&8(=4\274\266=\223@\371=\272H\363\275\237oP\27614\342=\013\252\267=\217M0>j\361\033\276\026\347\253=\363\277;>\336S,\275.KL\276d\253>\274\t,\207\274\270\270\362=\322\253\342\275\222\016\340=\302\214E\274\001\237(\276\302k\020\276\263\221\023=\347h.>GIB\276\006\226\351\275\217\2179=\346N\'\275\004nP\276I\261\215;\271\374\375\275\346\371\277\275\2157:;js\035\275nS\302<u>\242<Ai7\274\360\217):?,\n=\254\303/\274\247\312\262=\022G\223=:\235\226<\\\305\n\275\300\377!>1\310\020\276Z\235\357\275\331\344F>\376\032?>\232{T\276\215\001\254=\223\"\270=cvO>\220Pc\275\262\221\027>*\212*\276~~\276=`Q\227\275||\247\275`\252\022\276F\004\016>\321\337\214={\313\260<K<j=~\311)=\030U \276\325\302Y>\027\316N\276c\1771>e\347\305\275\361Y\353<U\014D\276\'\177\036>\272-V\276\267a\r\276\260\330\320\275y^\276\275=\005\252\275\222}/>\304\264$\276\214P\316<^\002V>\027\343\277=\227\357\302=\2233\010\274C\'\253=?\367\274\275&\371\211=\243k\365<\277\222\001=\3779I\276ug\"\275\366\210V\2763\356P\276fxN\276t\204O\2762\3522>\340\242\245=\227\203\r\276\211\3433>\264\326\273=\320\221h\274!\274\242\274\310kV\276\227\303\263\274\317c\r\275~\305\206=\265\227y=W\277\272<D\320\311\275\244q\315=\351\301\240\275\3011J>v\207j\275EF\010>\321\227\272\275\035N\303\275\230\344x=wJ\377\2746\273z=.\201\236=\360@\277=\267\356\014\276\367Q]=?\345\177\275&9\002>\346s\004>\n\3660>\340Z\225\273\331=\363\275\344\375\332=\t(\343\275\243\262\036>\013\351=>w\215\345\275\203 B>\3334:\275P\207\r>\215\231\367\274\344\220F>\343[\375\275n\202\305=\230\222\\\275\311\233\262\274z\365\002=\370s(=\276e;<\205\245)=\342H\311=J\261)>\246q\021\275(n\220\275\201\";\275*\362\204=\225]\240\275jK\237=\304\212C>|P9>\356\222\034>\303\306\367;\232\247\r>\\\033\376\2753\0234\275\372~\274\275\202J\306<\022\263\276<\310|J>\242Z\205\275\036k\317\275\363`\310=\246G\027:Y\324&=\227\0242>\225\241D<\240\004|;\245\2574>\372%\036\276YP\262<\014\034.=\336\006\337\275]f&>\253\023A\276\312\005\006\275w\010\276\275;\t\t\275\021\317=>1\315<\276\377\233W\275\016\022\003\276\000\206\247=\311\277\312=\224\335\023>\373\350M>#\007\036\276BJ1\276\206\004->\360gD\276\366\237\265\275\365k\026>\304W\036=\204\241\305=\362\3162\276F%I>i\326,\276\000\000\351\275\335\241\004\276\263\306\266;\304C?\276B\233\241=\014\340\345\272\332[\036\276\232\320h\275rv\303=a\346Q\275R\325P\275\2402\214\274\345\304>\2745 Y>\350F \275@x*=\344=X>\244\351\262=o\304U>\342\304\235\275|tB\276\221\243\346\2752\036\035>\rn\336\275\022\003M>|{\373\2737f%>\257\370\266\275fCA\275\353\356\007\274\20647\276q\261\366\274xM\222\275\201&\013=\364\2150>\211U\360\275p;\217\275t\245\036\276\344&\264=IP.\276\234\261o=\327\2332>\371`\353=\312\215\004\276}\235\031\276W\017\006>\025\260b=\020\303W\275\027\317t\2752\236[\276\020\0021\276U3\342;t\210b\274V\374v=S_\003>|\264A=\3175(\276m o=\374\301\356=R\t\206;\352\245(>3:P\276\254\346?\275\272\376;\276\224\232\352\275\177\301)>\326\326I=\302Y0\2762\256\262=\355\2342\276\347\001+\276\031\364]\275\303g\033\276\235\275\275\275\350\010l\274A\000\232=M[)\2765\\\n\275b\277\332:\344\301M\275\306\250\255\275\\\373Z\276E\217\312\274\211\306\217\275)^\010\275\224i\t>Fc\213\274\257\244\235\274Z\006\276<\021[)>\254EW<\235@P>8\037\347\275Y`8>znr\273\235wO\276\'\035\234=\306\230\016\276\315\257M>\330\006\335<1D\233<X\237A\276\316q\">L\2238\276\213\024Z\276\343\310\027>S\3666>\231\347B=\255$\020>\030.U>\002\223\322\275\035WF\276\027f\244=)\327\002\276}Z\212\275\2348$\276\251\363\240<\363>G>\201\2677>\307F\323\275U\223C>5\262.\275\336\2567\276\352X)>|\241=\275\333d\360\275~\246\000>\021\005\n\276M\315S\275\204\344\'>Z\242\030>;\212\t\276YiN>X\277\233\274\232k!\276Y\273\326<\004\205,\276\325/\004>W\251D>\013\321\216\275\010\211\236=\307\313\037\276|S?\275\337\254\347=\362J\276\275\332\0371\276\260Xr\275\267\225\256\275\017\223\003\276\217[[\276\311\270(\276\035{\r\275\322UW>\305\203\301=\346\344P\275;\024;=-\257Y\276\357\264C>\313\367\036=\256P5\275/U.\275\033X\301\275\260\337O\273\014\234&\276\231\346\250\275\305J%>\242\001\227\275(\020\265\275v@\022>\367/\244\275\010\340\345\275\330\250\263=!\273\032>\312BX=\010\330B<~hV>\364\244\203<E8$\274\343\250\361=\301\244\000>+PT\276\204M\271\274E`\247=\037\2254>\322\330\006<\373\373\247\275\350\267\002\276:\341\274\275\331\216\001>*\355\023>\222\340\227\274\321 F\276amH\274$\304\277\275\"y\"\276\25784>jMh;\211#\275=D*\277\275cmL\276\221j\206<zT\242=\n\037\365\275\033\357\327=\234\275\035=&\325\243;\370\212\362\275\355iA>c\3272\276M\265\242\275 /b=\335\024\031>3T\034>\305H\211\275f N\275\316\306f\275\377&\'\276I_\007=N\014\224=\004\031\241=\351\342\372=F\027r\275\233L\023>L\3570>\371\220\275\2759\226\226\275\030\207\026=\203\353\020=\232\007\210\275\327\023?\276B\346/>\234\004\243;\273\215\016\276\277c\274\275\260\371\352=.&\227<]\237C=|\230\236<\"\204\224\274Ua\231\273\370\350\'\276=U\224\275\006p\362\275e\266\356<\316\335\032\275\024n\263:gs\177<\210\3213\276W\242\206=\333\263\223=\213Y4\276\363\033\032\276\005\320\010>N_\316<|t0\273\210\035\037=-vN>p\3778>\314K/\275+\3779\276\t\177\034>o\351\320\275\202v\341\2757 \003><\235\305=\262?\234;Y\277Q>\310\354\014>\231\010\032<q\272\272\275\341\254 >\222\320N>\207\200\263=\273\200#>\005\277\023>\t\334|=\352I%\275\332\236P\276\020\337/\276\276\010\210\275W\201)<`\n)\2744_\372\272\333]\343\275\336\232\333=\006\334\024>\240\313\023\276\347\360\r>!\031P=\230P \2758\001\010\274Zp\r\276/_\005\276\023\271<\276\335-D\276j\344\003>N\372\271=\002\323Y>_\323g\275!\316\t\276\333\265\010\276\370\222\376\275\222\016\235=6<\212\275\212=J\275\360\361\200<\236\014H>\354\036G=\205\210\357=5\336\204<\331VT\2764]\013=\216\307\017<&\356<\276\224\313\023\275og*>\216W>>\0146\247=\'c\353=\236\253\356<\314-\362\275\026+\000\275&\222O\276\322K\354=,\336\336=\002Pr<\276\025M>\334}<>|\372n\275\273zJ\276;\0036\276h\242[\275\241\226\221=\371\231\020\276\357;\247\274\324E\266=[\026\317=Q)\354<En\357\275\361\302.\276\257\r\344=?\033\266\275\224\330\333\275\223\302\027\276\035Z\301<s\271\251\275\033N\332\272A\r\223;\025\202\365=\354\031\335<#\324\372\275t:\251\274\t\303\013>\352_c;\250(\031\276\3146\205=*SS=\345\377\372\275\333Y\"\273\210\023\321=f\343\315=\345f\272=j\371C\276\031\372\346\275\207?\246=\222?\003\276p\206\377\275\033q[\275\314\340\276\275\002\216\332=\010\227%>\017\213\035\275\352\217Q\276\304\313;<\337\021\255<\025\025\027>+g\013>\354\200B\276\264\336Y\276I4\210\275\253,\260<\327C\362=Z\275\037>a\250\256\274\207\255\244<\016\265\200\275\274q\013\276\t\225\360<\277\304\006\276\253\306\345\275l5\022\276\362\t\016=Ya\264\275\233k/\276i\355.=\200 \370\274\202hN>\337\233\017>x.\227=\030\026\031>exN>~\267\031>\263\243\202=:7\002>\250\303\017>\307\317\372<\376B\340\274\230\362\032>;\271Q\276AD\377=\214\354u\275\326\207\312\275\036\014T\276\354\341\t\274a\363\020\276\032N->Az\023=2\342\r\276\347}v\275\335\315\n>\324T\322\275\317\231\310\275\034\372\261=h\017\371\275\311BR\276\3720S\276\206\275)\276 1-\275\307\233K>B,J=0\022+<5\317*;\370a\315\275\225\274\203=\225\026\206<\263\201\r>\302_\t=Aq\365=\240>\306\275\211\325\242\274\210\010\372=\014\021\264\275x8\013\273\016\334\204\275{\002J>\336\260\350<d\237\236=\250\366&>7\263\311=#\016\346\275~\034\303\275YK\013>\350\200\334;\353\320P>\027\243P\276\251<\001\276\250\346&>\233J\204\275\330\271\021\276\312\377\014\276\374\272m\275S\303\224\275\010+~\275-\214\203\273 \351\001\276\035#$=v\313x\275\002\007\n>!\001\014\276Fz)\275\345\2728\276\020\325\325<\245G#<\243\005\267=\353\304\020\276\016M\300\275\363\326\303;\237\036=;\255\315\002\276\260\342\270\275\006\356\305\275\206\273#>J.1\276\026\235\021\276,\003#\276\200\001\031>\033-\256\275Q,\014>\010\372\216\274\244\277\006>\000L\301\274\361\177\201\275\230nY\276\2258\356=A\240F\276\307\026q\275\316x7\276\351\217@=;\214\'\276\277&O>\'\032\276=P\206\203\275\254E\003\276\234\255 >\215#\036\275/ZU\2766M1>\273?\340<6\341\335\275\334,/\275\233\201\023>(\365\220\274LLD>Y\345e=S\021\021=\370\001\361<\343\032\013>\241\202\250\275\354\335+>\260\324\327=\022~!>SU\263<\365\306*=\273\022K\276\241\271Q\276\203 A\275\347\206j\274\330\236\270=\215\021S>\022\362\r>\333\0051=|\256\000\276:\304*\276\266M\366<\rx\225=s\322H\275\215.\315\275\301l\257=\341\3346>Gc)\276\020\373)\276\026\352\256\275\321\t,>\224B\213;\335s\276\274\r\240I>1\0225\273\274BH>\3708&>A\263\010\275\344K\255;\217\013S>\363w\207=\017\266l\272\256n=<\326\361\200\274\330\362%>\026\226\032\276\230\316%>\332\213o\275D\003\"=\356p\">@8\356\274Z/4\276\226\347\030>\331Q(\275-HE<\301\360\033\276X\3769>\327r\203\275\226gH>r\261\025>/$*\276\273J\277<\227\337\271<\306PD\275&?\021\276\215\314&>\211\004\017\276\260\2637\276\326\020>>\261e\361\275\232\263;\276\326>\203=\325\240\367=\205\224\232<0\332B=\213\242\311=|\302\252=q\334\023\276\036\270t<\332\251\016\276\027b\212<\\-\352=\342\257\203\274^\315\253=Q\3367>\363\356Q\276\213\004\002>\223\265\331=\250^\004\276hn1\276\034\231\014\276\326X/\276@\324K>\307\351\002>Fw*>\325\035\252\2752\322\003=\224\355\315\275\277.\006>w\242P\276\357AB\276\017\2746\275\024\232Y>\200\320K\275\266\203\003>@*\004\276\200sG>\031\332q\275\346\366\000\276\007\234\031>J\371/>d\374\260\275\330T\020\275\366\371\022\275\212l\035\276\245;\324=IW\n>\277y\037>\376\2615\275{U)\275\263@)\275}\300D>~\361;\276Z[\230=!pB\276;\214\322\273\025\273\365<\224\204\227\275\252`\367\273\251\225k<J\271\261\2753rc\274\340\236\022<\270\006\317<\277\242M=E\247\211=\367?P>}\2569>d\230\025\276\353M\266<=$Y>\252\327\">\247\331\302\275l\005\277\275\004\347/>\300^\031>\310\236\335=\255\2627>\330\225\033<\342\034N\276\022\031Z\276\373,*>\236\224\260=\202\034\311=~\303\302\275\242\260Y>\244\033\005>d\364\360=~4\027>\226\370\032={(*\276z=\342;\273\\\335;>\005\333\275\250\310\253\275\330\316\004\2757\211\001>\352i\274\274\342.\004>tv\202=\374\312\037\276\377\256\023>\022\312\r>\276\245\270=Cd\241\274\240S\002>\315\206\302=\013)N\2761\212\005=\316\002\202=\372\026\244=3\3256\276]\347\245=f\227\252=L&\030\276v\212i\275\336\245T\276c\362Z\276-NU\274\300\005\'\275\001v>>`0-\275\201\217\277\274\013\320+\276\354\033\264\275\373I\351=\323\366D>N\016\365\275(\014E\2763`\266\275\2717\307\275\354z[\276\302T\016>*\236\r>FZ\326=\252o\312;K\243\320=\352\233\020>\377\237U>\370\256\231\2754\354A\276\260\334\216=\2329V>\201\320b\275\322\367\320\2755\033\273\275We\032\276Af\020\276\336p\354=\270\002\257\275_\236\331\274@[\326=\214?G\276\007\207\000=\303\035\032\276\016\325\212\275\314;\312\275\300\240\354=\311R\247=XT\017\276\003\304\373=-\370\211\275\365\320\220=!u\327\275z\331\027\276\230\272\374=\365/\341=\333=\352\275\0032\007\276\273\204\345=0M7>*7\021\275\211<\004>\340i\010>z\031\006\275\256\343A\276M\304\265\275\327X^\275:N)>\274\223\270=\374~3\276r}/>\027\014\323\275)\356\217=( h<\331R\246=\301!.\275#\337\255\275\327\3709<\240g\342=\265\037\247\275s\364\242<\021\352\206=\236,9\276\014\327S\276#\035W=6|\226\275k/\234\275\344l\006\273%\210,\276\3256\030\276\231\224\367\275\211\364\324<\\B\271=;\334\021>>\207<\275\2557:\275\363\260\302=\337\315\017>O\341O>\331C\344=\016\325\034\276OD\321=\230\3615\276a$M>\256\247P\276g%V>A\3328>\220w\340=\201\376\301\275\t\322\221\275\224\301\376=y\031G>\t\033/=\307\220\356=F\225\017>\264\276\014\275\307p\223\275\365JG\275+,K\275I\024;>\316\222\331=\227i!\275SIY>z\203\031\276TP\016>\303\334\373\275\004\275\375=\236\211G=\335]F\275 \330\331\275\336)\031>\303\232\305=\220\236,\276\3661R\276\350\231\220<(Q\265\275\263\375\025=\023\t/>&\026:>P:.\276\2237`\274\000VR\276E\372Y>\326i,>\224\363m=\304&\001\276\010\260R>\253\243*\276\373\024\n\275\235z(\276\\\364\215\275b#\177<\204\363\024\276\241\301\256\275<Q\200=\n,K>\031\232\203=\357\305\305\275\r\257Y\275\340\247\243=\342\372X=\006\220\232=\207\211\333\275\273\rJ>\345N\316=\372\251\262=\312+I\276Y\255\330=\037\323C>X\023\205\275\361t\004\275\351\'U\276_Y\315=U\t\000\276\217\2732\275\212\320\014\276\366\n\307=\025\367\000>Pc\326=x\202\240\275\235t\366=DJ\021=Og+\276\242\000\367=m\221J\276\301\367\n>\371\245\006\275D\332\243\275$\264\260=\357D\037\276V\202?>\315n\314\2759\317W>e\252\225=\205\223\314=A\224\327=P\331\000>\316\021\343\275\301\240\322=:\337$\276\020Y\310=\334T\237\275Z\224!\276|s\320=CP\273=\370\3468=\"[\221\275\010X\353=g8\353\275.\035\224=a\2724>%\353\353<\303\313\004\275\357\363\362\272\317\0373\276\373\321\376=\021\212\275<{J%\276\252K\267\275\233\235\350\274&\230@=Pl\213=]Z\252\274\336L\330\275!\307\326<\267zQ\276\024\031-\276\225\227\321\275\331*L\2762m\356\274\336\243P\273<\361P\276\334\035/\274\265[/=CW\n>\332O\332\275C\2514\275#\236\025\276;f\312\275\376\356S\276\231\025\213\2750(\204\275\026\311;>\313\000\233\275A\270\235\275 \020\017\276\003\233X\276\344C\337<-\226\351=e\307\326\275\275\211\247\275\201\2112\273\020\304\024\276\362-/\276n^\365\274\240\033\022\275\355[\005>\r>\007\276~\301\345\275\316\024\240:\251n]\274Zv\211\275\366\336\010>\270\323>\275\213PI:\032\364F\274\262n\275\274\025\300\304\275\014\014A\276%%\347\275\002\"~=\334R\342\274\231\323\375==;:\276J\331\340\275\276~\352\274\244\036\352=@\276\353\275W\310L\271\375\214\273=x\215\375\275\006`\233\275wK\331\275rn\211<\223\232\371\275\314\231\313<\205\342F>\r=\352\275\345\215\330=\033\216\373\275\373X\"=\004\027\333\2757\017\253\275$\361\232=\360q\307\274\260\030\036\276G\334\025\276\272a\362\275\311\255.\275\301\032\311\274z\'\242;\001\374\304=z\231P=\004\236$\276\337\016\223;\267\243\204=\201\227\001\275,\265\002\275\334\236\r\275I\3412>\350UZ\276-\204\006=h\227A\275G\273\316=va8>\3720\t\276\t\230;>qw\005>bvq<\322\301\241<+(\001\275m8\244\275\241\314\022\276\323\361\027>\2730\221\273\220kS\276\233H\230\275*\001\233\273\235\361\235\275\353\210C\276w\027\236=d\377\007\276\215\315\324=>\230;>\374\004M=\252\032\314\275\"\007M=%\326\'\2769\251\372\275\276\310P\276G^)\276\274\237\'\276\226\273\235=+S\351=0\000\016\276\204\202\030>u\201\357=\260UI>\307\345\'>\353\307\371\2752\013\024\276\316\241\357<S\253T\276F\362\323<\352LW\274!\301\246\275\202\230\225<]\001[\276\254JL>M`I\276\326\331\235=\374\324\260\275G.\357\275\343\377\267\275\nj6>\255\013\014>nt\366\275H\324u\273\277G\211\275&9\027\275$\331V\276\212\365\027\276-\324Z\276\346\356\n\273\376\022\005>\367/\014>5\227\363=\325\021H<p\024\253\274\030M[=1\303\021\272\320\323:=\223\304\003>8\215\233\275d\376\341=\0071\334\275W\202\231<[\375\320=!\346\355\273\272\232K>\r!E>\234\344\034\276\323\201\266=B\342\001\274}\234\">\214\334\306;Bl\316<3c=\276\177\234\337=\310p\r\275\204\223<>\301\321N>U\2370\275V\335`\272,\301\215=\214\350=>\205l\211\274\214I\027> \037\270=\274*\326:6\230\007\276\250\313[>\366\253\276\275m\357\030>H\224\367\273\372/Q\276\010\002\021\276\335\375\352\275\000\027Z>:\233\033=\246\326:>\331+\034\275SsX\276\262\320:\276>\205J=\237\334X\276g\237\335=\217\013x=Yc\010>\276\266_\275\374\257&=/\005\005\275F\024\337\275J\335\224=o\033\371=\304\203&\275_k\347\275v\026\202;\336Y\021>\350\001\003=\nO\r\276\364v[=\310\316\027>[\020\222\2750m`\275\224#\344=X\3260>e.\021> \353\241=\177\374p=\201X\267=\331eM\276s>\025\275\243\004\215=\236r\372=Q\254N\276^g\002\276:\3627>\t\264\265=\031\257i=\355\233\004>\270\027\021>6\321\255\2756,\004\276\026N\333\275\242\362\261\275ji\216\275\r11<\250a\333=\230\343\025\276\223\367\014\276\'\253\022\276\264\352\206=n\001\364=\333\230\315\275\206Jh\274\236{\027\276\351\327\">\200\242\016<\312zD\276\335\357\320<\003\372\212;\337\352L>}L?\276\352\360K>\245\300\350<\275|\026\276\272F\226\275\322\372V>\303\215\304=\370\275*\276\343/\242\275\321G\333<\233a\212=\330\352\325\275b\224\n\276\013O@\276\022\264H\276\354\241A>|h\333\275H\013\031>\177\310\032\275\255\306\000<\200\265\022\275G(\231=\305\343\004\276\347\312\320=\t\324\210<>\217\252\274L`\311=C\252\254\275Q\025\226\2752\215\016\275\032T\210=##\361=\356\355L>7\"+>\203\276F\276Oq\260\275o\332\033>\030M\234\275rRh\275xH\315=\345\2443\276\240b\301\275\270\211\005>\367\2572=\034\276\023\276\'U\302=\232\021J\276R$\356=\302\317\241=n\370A\27564\004>(Mk=a0\325<\376\361\027>\321f\371\275\270rL\276\354ne\275+\373E\276lh\334=F\353\311\275Xs0\276\272\200\365=\300p3\275\317&\003\2764R%\276\303\265X>\260\257q=\3117\006\276+gI\276\375s\013\276Gz\031\276x\':\276\212\255\335=\377F}=-t\003\275s\206\026>8w)>\374\213\324\275\266\037,\275\272\330\343\2750\223\242=B\023\332=\030\207@>^\007\275<\374dX\276\017\330Z>L\031->q\371W=\355\0132\275\234\003A<\253\346#<\341<\024>\010_\007>\345\372\200\274\303\013<\276U\177\000\276\276\304R\275\245\335\006\276 *\244\275\3721O\276\027\341E\274\373\034\252=\334\001+\276\263\236\036>\336mB\275GgR>,\362\007\276\242X\207<\202cA=\003\270)\276=\274\344\275\233r%>P\3628\276\373\016D\276\240\177\261\2757\020\247=(\340Z>mZ\207\275\215\032\351\275\272\340\305<\232;Q=\007>\035>\260\263\013>\30001\276\370\273\030\276\326b\036\276\037\014H\276\232\022\020<R4G\276=\001\237\272\213\217\033\276\021\316\337\275\033\350\016\276q\241\203=\202I\324=\305\225\336\275\314\220\222\274\306] >R\003\274=u\317q\275%Z=>\2014\244\275\340\247S>C\221\200\275\222\344l<=\262=>\272\006v\275MV >\245k\">\01793>\363\331\022\276\n%\216\274\260\356Z>&S%>\025\306S\275\204\367\001\275l\251%\276\347\336\365=\273\030Y>O*\342=\346\250\036\275\364j\205\275\252\001\014>\256\006\370=4\327A>\205\246\361\275\314\203\262\275e\347\r>\t\311\027>`\365J>57\300=\3366\360\275\362@\004\276\253\t8>\000\243\275=*K\343;x\201j\275\3231y=}\346\256\275h\204\023>1\2768\275-\332&>F\301\377=\016E\324=\2056K>\266\214T=14\232\274De\215=e\354\034\276\277C\311\275\245\236\'>iR8\276]Z\276=/\314B> l\342\275\246\370\002\2765\003\306\275U)Z=\323uM\276\271E\007>\202\315X>\274a\007\276\212\003\316\275\344s2\275h\312[>\356\257\013\276\370\345\'\275}n\311=\221\004\345\275r!L>\3628\353=\267\3219=k0\363=\307\275 \276\010>\217=\373\023I=y\221\373\274\030\330+>\010wO<\2376 \276\367\017\n\275\214\027\220\275,\363\332=\200\247\340\275V\352\235\275\207\311F\276K}h\275\370\004\330\274\351F\177\275\335\306\033>\334\032\344=jh\r\276\253\'\026\2759\\\305=n\302\311\275\220\036\307:\365\300n=r\"\033=\035\373\033=\274z\273={RV>d\317#=_)\324=\310M\245=\031\275W>\367\353<>\306M\026\276\365S\316\275h\205\r>Et\246=\0351<>r\327\034\276\\\220\026>\250\226*\276LEq<\273\027\316=+\343C\276M>\005\276h\'+\276\204\314<>W~\272;o\264\\=\236 \310\2756,\n\2761hA\276e^A=\352\361M\275x\2341>[@\220\275\323\014\033\276\253\244\035>\333\357\221\274\203\260@\275]\332[\276\222\016*=\000\361i\275\017\306Y\276lv\345\275k\301\222=\016Y^=\262\206E=pU\024=\277\2743>\330<\211\275E\324\204;\277`3\276\323k\360=\027e\314=\243\034\263\275\324:T>1\303\276\275\265\313\\\275\255\031]<ak >\321k\022\276\006\305g\275\007\027\n>-\264\025>\351\223Z\2758\t5\276\354\364\323<\323%\r=\032=\265\274xE\262<\241\330h;\330\347\033=1\033\250\272\205xO\276\305\347\'\276\037uH\276\2010\030>\267\363\202=\341.2<W\245\321\275\3416O\276\343\377\210<\227 K\2760\353 >\362\266\375=O4U>\370\264\230=\271\371\277\275\006\360\202<]\036+>S\001\032\276\374\364\225\275^`\241\275\314\255\002>\334\025\346\275\\I\266\275\377e8\275\353x\306;FB\301=\214)\026=\255\200-\276O\304!<\334\270\023>\271uA\276\226kE>\226wI>~1\273\274]B\r\275c\357\216=\014\243[>\271\352V\276\322\014C>C\266\034>\007\020/\276\356d\352\275\001h\321\275\340d\340\275v\331o<\227\262$\276}Dd\275NJ]\275\237\365O\276\323 \"=\371\321\232\275\233\311s=\007\020J>\032\272\004>\023K%\276\352yF>\211\332\323\2752I!<\376\3604>\'\023\350\275QM\245=f\316#>7\303\025>\255\367M>\020\242\206=\030\370\205\275\2218%\276\032\371N>_\323\266\275l\303\277\274\000\\,>~\254\r\276}\016\'<\212*!>\327\2215\275@qc=U6|=\245\357\201\274\227Y\245\274\031~\254=\252K\026>\243\025\265<\265\246\375=\321\252\013\275>\332!>\021\"B\276Q-\005\276oAT>\371\270I>\216\254)=<fK>\255Q\273\275D\210\016\2760G\207\275c\016\270\275l\222V\276>\324\322<\277r\233<$7D=\310\304\220\275\036C\013\276\341-\025\275K\3355\276:qZ>bC\364<\220\304\016>h\255[\276A&D\276\2647D\276\232\363\234\275\275\022,\275\276b\243<\232\363S\274\362-\'>v\205=\276eX\031\275\354\014\261\275s5w=\224\343\270=\357\025\004\275BS\001\275\026\r|=1M\226=\232.Z\276O\002>\276\355q-\276\333\303\004=_p\014\276\3118\277\274r\345a=\310\360\363\275)@\275\275\256\202\341<\322i\220=\225\027\022\276\211\202\377\275\240\014e=\343!\304\275D\367Z>\326>\207=\212\307\260=\371\267R>D7\024>n\301?\274\253\213\302=\313\334E\275\302\033\"\276O\352\017\276\2118K\276*\333 >A\275\027>1e\357<Rx&\276\267\006\340=\301\312\230=Z\331\202\275\365\006\212\274r\301\t\274P5q\275#\376Z\275\300\254$\275w\302\356\275\346\023[\276\237\001k=7\232\223\275\204\343\007\276\367\307\253<4\330\005=\300\230\\\275\3720\374=l\326\211\275\322}%<\221\367\372=\004|E\276\3605\360;\036#_=\237\016\341\275\t\345.>x\013\005>|\305d\275m0\215<\354\263\226=c\307\'>\317\235R\276\026\"\316\275\351GF\276\360z\362<\206r0\276 \321\014\276\357\005M>H\376\200\275J-8\275\273\376\026>\033H8\276VNK\276\366:\017>\347\226\024<\267\233\007>\234AM\275\212!\027\2769:\265=\26335\276\245\250\317\275\236\321*>\245\370\030>\010\240?>\347\004\262=\375\265}<\260\311\227\275\2021\t\276|w\234=\307\301\300=\220\3030>c\016\226=z\346\025>\214K}=tZ\r\276S\tD\275.P>\2743\304\230=\230\303J\275\264\356\037>\352\300\242=\261\267G>i\335=>\216\020\t=g\243\365\275\023\2258\275\032Y\001\276\337<\n>\255\326\312\273Yp\211=})\211\275\351\223\277=\355\2409\276\303zV\276,\242N\276\2239=>>\234\203<\232E\030>\355\300\316\272\303\014H=\006\030Q\276^\'\330\274?/\351\274,\354\375<\255\016\000;5\344\261\275\277\264\247\2754YW>*hX\276{\347\033>\235\037\332\275\036\t\236=\004\251\030>|\300\016\276H\241\265\275\340\221\222=m\n\370=J8\213\275\344\245\010>\243\261\332\275\377\260\247\275\260r[\275\220\365{=\031\364\351\275\r\r\345\274e\376\'\275\231\0131>\324\010^\275\006Ca\275/\025\354=\r\331\020\2764em=\203+\016>057>\304\373w= c]=\021\226\323\275IfI>N\2005\276\306\377\260\275(\307\351=5\366\272\275P\330\347=X\031O\276WK\037\276]\214\000\276\031\001\331=/\263\377\275\360\256M>\030Z4\276X\"\007=H\"&\276:\277\354<\214\211\251=\005\216.>.\361\362\2754\000\244\275W\341\241<$\231S=\331Y9>$\242*=\236<L>\271[\004\276hkL\275F\334\217=\307oV\276\256\262\312\274\300R;\274\312\356m\274\330\310\243\274\225BC\275K\3553>\273\204\356\275?hW\276]\246\300\274\302\256\220=k\301\030\276\2122\024>\275\346\022\276\212\014=;\264KA\276i\3326=\211x\026;\253\220\024>\n/\365\274\365%\232\275v\275U>\246\306P\276\354;\003>4C\010\276\205o<\276\214b\r>\017F\351=\214\2635>2,\300=\341\002\310=\304\237D\275\246= >\251*\\=`\247#>\271\217\230=\311cG>\037\206\257\275\227\300G>\355\r\027\276\223\233\361\275\275\306\213<\264Q\020\275xr\322=uV\n\276]\340\324\274\030\343\210\274\246/3\276\233\020^=%\035\255\275N^\371\275\345\0048>\216\277\237\275\201\252&<\221\256\032>\033\340\n>\217\351y\275\r\366j\275\336\243\203\274\252\n\274=\025 \033=\037\253\301=\374+N\276CC\t>\276\225\003\275\220\037\246\275\3256\300<}\205N=\226\255b=(\376n\275#\177N\2768\321\336=Ng\225\275\337)\363\273\343h\344<7\345J\276%D-=\200\245\027=\251X\"\276\376\263C>\203\207o\275\000\271\254=I\357\'>\241o\377\275\271\214\016; \356\335=]9\271\275\016\031S\275IH\226=B5P<\236\212\274=+3\317\275\200j\350=J\240\005>\332|\026=\205\201X>tl&\276\214\272I\276-F\n\276\323\226\032>(\354S\276:\326\'\276\250\n\311\275\276\267\232\274\235m(>UI4\275`\221>>mk4\276;KX\275\222(\325\275\320q&\276\024g\377=\336f\336\275\232\217\030\276rf3\276\025\201&\276\"(N=V\n\005\276^A\206=4\274\'>B\223s=\006C\214\275\272\353 \276\324\004\325\274p\377<\276\355\275\020\276\254\233Y\276\003ZU>\212\267D\276\004\316\210\275`\313H\276\307\354\365\275\307\317\200;\314\231\373\275\253)F\276\202\200\223=\206Ve=@\202\220\275\375YZ>\277\320\376\275r\320\036>X\2705\276-L6\275 !\321\275\372i)>;\317\230;W\263\001=?\032-\276\204{Y\276U\260\014\276Z\244A=\267\250v<z\216\316\275s-J=,s;>|i\021>\252:\304\275\357I\021>\313\220\236=\205\310\013=\327`\237\275\255\033\212\274\327a\372=\240\247\236\2757Xr=ne\356=,\343*\276}i\031\276\345\022\306=\200P\303=\235FA>-\322\031\276av\351\275OW\356=\263BI>\301\2631>\360\311\037=MG\371=\032Gc\275\3241\267\275`R\333\274.)5>\242\370G\276\255\0253\276\222\237\003\276\310\3566>\233\311\213=k\260\005\276\004\377F>\036\363\210\275oH\201=\356wt\275\374|\035\276w9J\275^\224\023\276\217~\002<\222w\030>\365\266\347\275S\274\365\275\353\003,>\177SG=\223\236j=\355\265<\276\365\3341>@&p;\271^\025>\377\225\347\275\017b\345=|B\222=\231rT\276\277I\354\275cE\000\276\032\351\347\274W\255\037\276\374Q!\276\204x#>8{\001>\333V\364=\233\2574=Wn\210=.\003\364=>@=<y\333X\276,GE=\037\225\366\275\306\230\320=\342<\253=_S\324\275\014\335\267\275\257kA\275\374\334\326\275\310.\373\275\373\234\316=v\017B>\233\206>\276<\210C\276 \225\033\275\325\374o=B\272\233\275S\346&>\215\363\034\276\201\325\020\276\225\323\005\276k3\020\276$\204\r\276\202\036\203=>P>\275X\202\310\275{4c;\315\037\225\275>\021\002=\037K\021>\'\265\026=#\024\242\275\246\306\223\275\372\273\000>\0374M\275\206\213\022\276\261,J=\316\367x\275\200\357\311<\327\231\'>X\360G>\214\351E>\276>K>\225\264/\276\300\307\032\276\246Vu\275\216N\\\275\362\323C\276\006q\332\275\341\301M>\333\037.>\341\t0=\376\247M=\242_O>,d);\253\277D>\221\203\"\276&\322\207\275{\034W\276\242\360\030<\027\033!\276r\361?\276\263\\\014\276S(9>Wq\233=\201\303F\276\212\246)\276{\017V\276\325\277$>\324\332)\276?\\Z\276\367\030n\275\233\361\334\274\263e\337\274\315\023\372\275Y\324\216\274R\345R>\375\023B>\324\031\007\276\301\001\356\275\363bF>\354X\013\276m\313\022\276\3212=>\001\306m=\014\"\305\275\312d\341=6\341\031\276\266b8\276\241\002\242\274\000\257C<\3129^\274R\322v\275\037\002\203=\330\0168\275\'aZ=\230~\340;\337XX\276S\256A>Ri\366\275Hr\t>\013\021\"\276\215b\347\274\312\344\360=\223\363X>r\271\361<\037\270\027\276\t\3133=\307\004x=G6\022\276\243\261\365\274D\346\026\276\273\'o<\362\361\262=Kd;\2769Q\343\275\227\257S\276\302\014\217=\374Cf=\203(9\276\353\353H>\036\341\037\275\347\365D>\271&\245\275\233\277\032\276\022Ck\275\271nW\276\362?\t>)\016C>\036\221\265\275\324\274\311=\277\034\264=\360\024\243\275]\004\212=\231\031\014\2769d?\276\301\024\276=\226\251\264\275\020\255\235=\330\215\013\276\004\255@\276G\337\025\276\2227H\276\230\327\024\276\230ON>\t\002\246;u\247&\276\307-1\275J\332\314\275\304\227\003\275\2261B\275b;<>\347\241d=\260y\020\275\027\316\032>\234\370\312\2732\2715>\346\306\r>\205\'\243\275\245/G>\314C6\276\301\312T\276\361\324?\276\334\002\230\275 44\276\261\242\024>k\226\023>\036\032\325\275\207q\033>\2750\233\275\030\203\256\275\030i6>[\2568\276\300\024\234=\376\234\035\276\345\014\"\275\310\022\313=\035[\000\276\274kO\275-]M>\023\365\217\275d\322)>\374\236\r\276\276RV\276\221\233\t\2767\221>\275\271\237/\274\222\213\322\275\312\276\202\271~\303\226\275fdZ\276\216Y\003\276\271\243/\276s_9:\206\342]\275\256%\253=v=\'\2768\025\037\2755\370s\273\275\001)\276\202\310m<\344\204;\276\n\027\303\274\314\n9\275\310P\304=@\3452\276\372\266\273=fbP>\211\327)>\360\t\263\275\014\013\036>\0203\357<\303\t;\276tQ@=\3031,>\346\232\373\274\201\255%>\005f\211\272a\025\276\273-\346\033\276\273\'\037>\016p\001>\214\204#=\n\003\026>\357&\370=2\312$\276[\305\370=J\3470\276\264\267/\276\241\321\314=\246\014\222=\227\033+=\000\013\372=?\217F>\214\305\246\275\3233(=\255\327\233=\016\021G\276\004\032\274<g]\013>\272\362\363=4\370\n\275\305\232\006<\251Z\033>\301\030\017\275:\022\037\275\004\031z\275\327Ba\275\234`!\276x# >2~*>\2108\t\276\224\265v\275U\255\324\275\3322\331\275y\374E>\367\0315=f\030\346=\247\354\r>\321\217(>\304\204\271=k\002B\275\210\307\230\275\n\304\277;\233\361\223\275\315hk\275k7\262\274\355q\332\273\216:\202=\371\357\315=L%\031>C\256w=\371\035;>\222\375*\275!\322\240=\303\226:\276\340\n\026>__\307=_\214\200=\375\313\230\272\254]C<\017&\221=<_&=\2715\366\274z\344;>I\321 \276\026\372\">\346\203\036\276\315\262I>\222\326J>\342\274\352=RO\266\275\010T\244\275\330\352\303\273\253\0058>\270*\336=\232\274\354=0Z)>\375\362\235\274\267\357\367\273\202\324U\274\360c\016>>\013\355=q5\001\276\356\305\004<\375_>>\177=\307\275 \327j<3\244\351=\337hK\276\220\320F==6W\276\035\306B\274!\264\306\274A\305\222\273\242\315C<\217a\020=M\241D\276\214\3215\276+\355\361=\340NX\276\177*\275=90\367=\376D\250=\337\3147\276j\344\016\276|w\314=\352a\353=x\3652\276\024\337\030=\202 k\275\330\035\363=\321\237\302<HG\017>DK\004>\301P\235\275\227\'\314=\024Un=\367\204\363=%\244X<\020\317\005>An\347<\253`\366\274\333\271\366=j\247\200=\356z,\276<a\214\275\233\202\340\275\3226\252\275\024\302.\276\354<@>\317\367F>\337\277T>\037\355\316=\240\014\371=\025\3758\276\202$O\276,+\271\275S\200\307=h\001X\276\334\2561>\rp<\276Q\215\370\275\371^\375<\373\273\033>d_\365\275\357_/>\377\363\033=\201\354N>(\3711>\331\200a=\360^\034>\026\030\037=J\007\362\275\222\n\306\274\311\032>\276N\377$\276/^\352\275\227>F>^\324\031\275\345\242\014\276Wz3>Y6\330\274be\324\275\177\340\273\275L!\031\276\2551\332\275\331t==\242D,\275\352\212 >\367qX\276>^5\275\222\3014>6f\313\271\225\245!\275$\220\003\276\240\035\221<G\333\310=>\000\346\275\354p1\276X\264\363=\035\331\211\275\257\342\024\276\340\276Z\276\221%\003\274J\2217=\253\t;>,p\000=)\252\217=\234\343.\276\214\336\332=\344\323\204\275\300\'M\2732\030\350=}\303;\276\367\253\023\276\343\324\375=-\004\305\274\0164y=\251\344&>\010\201j=&/\211\275\213)\001\276&(\362;\263\207\301<K9A\276\232\032\001<\223#\016\276\261il=\306\344\307=\317\3270\276k\344\334<\226\027\306\274T\245K>H\234H>\0064\022\276\372\275+>\242V\342\275\000\r\232=o\362\024;\266\362\361<\226\231\272=\177\007X>H\374\222=QFU>\376JB>\312\200\335=/\037\277=\206\354W\276D\260\">?g$\275TnH\276\360\350\004>\214}\245=\300\346\016>\'\010Q=\036\252\004>Y8\200\275\347\367\013\276\034\312J\274lI\003>\004\230f\275W\375:\276\261\261\315\275\257\262\250\275\305\267\034\275\205B\032>\312\031\027\275\355\215W>\031\327\004>\332\327E>L\330&>\036\356!\276}\267\271\275\223p\370\275\003\236\204\275:0\262\273\001\211\361<O(v\274C\363\"\275\346\027\315=%\311,\276\014+\255\275\267D/\276[\243\370\275\324\366\026\275e\254\251\273\"\244,\276\245`\200=\221\301\200=\231=\213\274A\221\010>\364p.\276\377\244\374=g?\003=\321\322M>C\242Q\275i\217\002>\021\342B>\241Tx\275\334\272\037>\017\362\026\275+F\376\275+\263\336\2757\216-\274P\037\257=\210\222}\275h0\006:\024g\341<8\354P>]X9\276n\314\331\275CaP\276\351UU>\270\315\341\273\210p\005\276\016[\266=\304\354i=G{\367\275\016\350}\275\236\261\356\275:E<>y\260\231=\210\"F\276H\374(>\034\252\272=\314\010&=#\344:>\316\030X\276\266\037\323\275!k6\275\215\342\006\275\321\211P=6\262\255\275U8:>\350\027T>v\312\335\274\t\303\207\274\261d\273=\036\375\251:/\244)\276\016\317\301\274+l\343\270B\004>=\340\205)>\252\365\313\275\336\325\026\276Q\227\240\275k|\230;K\\\221<\351Z\250\274\206\270\376=\007\313N=\205\2476=I\310\000\2769\024\\=\216\225%>V\207^\275V\252&>\347\000\265\275\003\001X\275dl\314\275\027\277.\276=\351\037\276\035a\354\275{Y\274=\230\3159<\325a&\276\343\205\024<\250X\032>\345G\333=\005Lu\274u%/\276\234\035%\276\207\025\251<\360+1\276\262R\361\275\234\204\270=\257\274S>\311\037\n>\354w\026>\354\376.\276\006z\341\274\007\034\234=\0068@<\220i\330\275\2054\220<\017\343e\275\013\006\314\275\2276m;!\2212\276\272j\025\275\356H\341\275\260\245<\276\034~\034>\360\227%\275\203\202\241\275?Q{=h:\302\275\377\247\233=^\374q\275K\333\310=\014t==\330\335\325\275P\223\263=V31\275\315\302\024>c\350\001>6\263\343=\324\260L\276-o\350=$\212=>\212\337\252=\r%\201\275\204\227P\275\300\264K\276\341l\232=\321jj\275\246G\n\276\025\\%\276\216W\024>_\213V=@h\014\276\264a@\276\360\204 \276\275\222t=\304\341v\275 \220\325\275=D0\276\313\373F\276\276\245\337\274\252eM>h5<\275\20253><>\314=J\376-=\322(\235\275Qb\020\276\t\274f=\276\277M\275\222:\254\275C\313\212=\363\266\005\276\214#3\275\221\324\352=\245\377\206\275\331\270\271=\233\177\371\275\354\253\032\276\203\266\211\274*\244J>3\250U\276\314\222\212\275\220:\236\275\204\273\035\276k\\\346\274zz:> \023\366\275\337\030\261=\334\376\035>8\347P\276qi\010=Se.\275OD\342\274Z\276Q<@\343\327\275\203n>>\306l \276=\242r=d\033K\276\372xD\276h\026>>\320/B\276\310i4\275\\\322\033\276#G\003>?B\252\275\202*I>%W\370\274,\217B>\033w\306\275uP;>\245\243a\275\250\213\274\275R\264%\276\240\202\036\276X\3237\276D\250\016\276\223\373\235<\014<[\276D\367\034\276 \261:\276h\245G\276\244t\177\274.xu=H\221\037\276\317\231->`k\257\275\017\350(>9\315\023>!\232q\274\031\020\350\275\350\035\227\275c\206\033>\223\"2\276\313\266F\275\342V\265=Tm7\276\021\220\275=i\002\325\275\262\206v\274V\321\362\275\265\032\241=\310U\321=B\203\021\276\320\303f\275|\347\004\276\017\334G\275\335\234^\275\220\273\256\275b\326D>\244.\030=K\224v\275i\240\221\275\305je\275\234\271\020\276\340:\221=4W\224\275\311U\325<\357\255\250\275\223\016\313=*\363\027=\253\275\037\276\027\300X\275\221\215\035\276\311\240\360\275\203(\017\276\267`3\276\245\2405>#\330\314\275\337}y=\227\340J<\341\333\t\276\333\360Y\276SQ\345=*T\254\275\006\257\006>r\367\004\276\331\022\226=\256\3260=E\035\321\275\235`\032\276p$\022>\306\365,>\376\354\323<z)V>]\013z\274\363$B=\206~\020>\300\022\312\275\220m\213\275\333\360\r>\327)D>~\317\330\275\343\314\245=\217\313I\276\233\213=>\013\216\240={r\021\276\312\335$>\206\223\361=\020\232V\276\305\215(>\201X!>\375>V>\250\260(\275\340\200-\276Q\315\003>\003\'(\276(\300J>\\\330\035\276\341\312x=}\356:\276\274\304 >a~\270\274p\311:\276\224\346\273\275\326]\367=\311X\253<\227\211y\275\265\233\367=;\233\247\275\234*\211\275\030\203\204=\006|&\276J\007\332<\204\210b;r1b=\216\322)>EH\r>;\326[\275\'\024\337\275\353I\355\274\026\307\244\275\253)B>h\032@\276\244\371\311\275g2\375=I\'F\276\006\347\034>eE\037\276\345Ln\275\365\372\022\276/\234\275=4 >\276\2568\033\276\363<\307=Qu7>\307\313\t>\035\233:\276\256\036\324\275\321;\240\273\263\222\200\275r\365\004>1\331\217=\311\325 \276\211\351S=~_C\276M!\223\275\027\322|\275\370T\003\276\226\253\226\274\334\335\377=\220\262$>\366\222P\275\365\227\322\275\356\326\213=\341\326\035\276\320\300L>\016\363\362\275\377I\266\275\\\206<\274\213\017\014>~\032\206;[\271\311=\"\200:>R\204\341=q^)\276b\307\023=bnP\274q\205\214=\351Y\300=\013\004\026>\003\277\302=\nC*=\007\343\033>\250\261\222<\220\211\322=\234\020\221;\335\360S>\237\'\265=.b\253=\267\007\005>\253\031I\276`7.\276\352a\320<\331\034\331=\224\002\262\275\315V\230\274\251O\245=\304P\337=\031\374\334\275\3223\010\276\263\'@\276\300\306W>?\212\327\275\336\222U\276\347b#>6\216\251\275M:\336\275\224\265\241<\025h8>R\234&\276\215\301\255=X\030,\276Y\2454\276QT\367\275\254<0=\036\303\007\275\364\367O\276\034\267P>+\245\375=\200\030\365=\362\2423\276\310l\275\275\255}\000\276Q\326\024\276 \216\316\275\226\333\207=\271\303\n\276\327\361Z\276\334`\326=\360;\004\276\207\272D=]\345\255\275\212\302\360\275\255xQ\275\303\341P\276\375\316!>\306\236O\276\232\330\262\275|w\307=\365{\365\274w\016Z<,\014I\275P[\214=E\241\304=;\302\006\276\306[G>+\321V>j\351\261=\021\345\226\274\010FZ\276\030\351\315=C\2229=\244\276\320=,\rM\2767\206\215\275o\332\013>\2509Z>\2727Z\276\007#\361<\241\352D>*:4\276nv1\276\374QJ>Sa\310=\t\317\324=\321\017i<\202R\307\275\321\251\236=\247\346:>mZ\332=\371\302\266=\202\331*<?)\371=\346\376\031\276\367u\007>\266\023*>\217./>\331\232I>\226z\315=\230\034@>\222HQ\2762\221\013\276D%\372\274\334\375\370<z\002M\276\231\245C>.1D=\210\263\341=\221\tj\274!\003\334\274?7\377=\330\276V>-\n\021\276\005?T>3\3479\275\017\311\037>.\225 \276j,\206\275O<\314\275H$\">\212\005\260=d\361\"\276\247\001E\276E\313\021\276\241\347\004>\253?)=\366\333\006\276\341VL=h9\334<\221\204!\276^\024\366=V\351\312\272\205%\311;*\375F\274\227\002\'\276x\277\027<\\\027u<\024\362+\276\263\3770\275\355\340[>\016\212C>@\243\313=>X\037>\366\000\302;\256\021\035>q\355\337\275\355\036#>\327\004U>\271o\000=)\273\277\275\263\263\247=\357\311\221=,\031\361=\250\321\212=D\025\245\275\236\232\022\276%\200\237=%I\032>\265\224\002\276\021_;\276\241:=>=\277\335=\341\035T\276x\373\377\274d\2756\276\014\226\271\275Q\357\006\275\263\217\r>\215-\320\275=\352\321=\022\370/>\265{\033>\276\230T=\221\214O>\r\"\324:\321\215W=Rd\307=`~\234={\n\275\274u\2114\276bQ\257\275\037\n/>\315\356g\2748\234-=\022`{\275H\t\373;\346\3079\276/<N>\\\303\324=\037v4>\341\235S>\334:3=\215\344\312=\025\250D\276m\006\013\276\010\250\r>\3000\032\275\311q!>J[\035\276\354\261\276\275\027?H\276\025|\212;\215\014\006>\354\215\001>#\3210\276GL{<~\367\260<5HJ\276\331\216\201\275\345\370\335\275LQ\377\275\026\005\235\2758\3158\275M\263\241=KX\327=Z\'F>\361\347F\276\243\272\024=\361\030\351\275e\"\030\276\2613\212=r\346I=\344\310\250\275\347\225\223<\004_\003>\274\177I\276\337\242[=\323\244G\275\330,\025\2763\017D>\037\010\030\275\366(\256\275=\n\004\276\244\241\027>\302[\224\275\013\344\343\275|IZ>\363CA\276\372\240\321=\230T\'\276\215\021\007>\304\330\024>\255}\017\276)\201\361\274z\337\253\275 &\255\274\332\215\373\275\211\240.>\023\250 >\333Ld\274H\210\232;\224t\022\275O\376>>\216\200K\276\337 \312;i\307\265\275Qr3\275\316c\343\275\025v2>\320\275m\275\346\213\221\272\367\354`\275up!>QP@>\225\234\023\276\250\211E\276\372{\223=\351\032\177<\252\343\033\276{\312O>\321\373v\273\006\261G>p\2201>\033\256\341<\353\037V<O\323\355\275\326G\263=l_\273\2757lU\276\246\214J>\264\016\347<{\327\002\276\\\326\352=j\361\006=\322\341\326=4ry=\035\273!\276 )\351=\314\364T\276\033\0373>\325\243X\276^&f<\340\375\036\275\354\256B>\227\254\244\275l\274G>\tE\311\275\263\202\354\275\305\254M>!\307@>:[\342\275\335\0178\276\310\2423\2763\226?\276\036U\311<\304R\310\275\354\271\036>\032\366\255=\214\246T=\253\210*>\022\230;\276\345\265X\276\330[\007\276\2371A\276\305\322*>l\327\270\275\321\262\024\276]rP\275\206)\006>\221\'\353\275[\370M>\355\274\240<\311x\010\276B;\013\276\223\3336\276\341\2048>&\t >\257\024\177\275\2736\227=\"\347/\276\031\201\024>\213\257\331=@\227\276=\304(\356\275W1\002\275\244_?>\244M\346=O\243^\274\006FE\275\335\0226>>#\277\275\276$I>\360\035,\276$;\374\275\362\230G>CU\206\275\347\266\201\273\304\006A>+\346\216="
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Assign"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/read"
  op: "Identity"
  input: "fully_connected_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "fully_connected_1/MatMul"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "fully_connected_1/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Assign"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/read"
  op: "Identity"
  input: "fully_connected_1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "fully_connected_1/BiasAdd"
  op: "BiasAdd"
  input: "fully_connected_1/MatMul"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/HistogramSummary/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.X"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary/tag"
  input: "fully_connected_1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.y"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_1"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_1/tag"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/weights"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "K\000\000\000K\000\000\000"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.20000000298
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 39
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/weights/Initializer/random_uniform/max"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/weights/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/weights/Initializer/random_uniform/mul"
  input: "linear_regression/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/weights/Assign"
  op: "Assign"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/read"
  op: "Identity"
  input: "linear_regression/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "linear_regression/bias"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 75
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.73205077648
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 42
    }
  }
  attr {
    key: "seed2"
    value {
      i: 49
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/sub"
  op: "Sub"
  input: "linear_regression/bias/Initializer/random_uniform/max"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform/mul"
  op: "Mul"
  input: "linear_regression/bias/Initializer/random_uniform/RandomUniform"
  input: "linear_regression/bias/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Initializer/random_uniform"
  op: "Add"
  input: "linear_regression/bias/Initializer/random_uniform/mul"
  input: "linear_regression/bias/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/bias/Assign"
  op: "Assign"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/read"
  op: "Identity"
  input: "linear_regression/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.weights"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_2"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_2/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression.bias"
      }
    }
  }
}
node {
  name: "linear_regression/HistogramSummary_3"
  op: "HistogramSummary"
  input: "linear_regression/HistogramSummary_3/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  op: "BiasAdd"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  op: "Sub"
  input: "output"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  op: "Div"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/limit"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  op: "Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  op: "Range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/start"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range/delta"
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss"
  op: "Mean"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "MergeSummary/MergeSummary"
  op: "MergeSummary"
  input: "HistogramSummary"
  input: "HistogramSummary_1"
  input: "linear_regression/HistogramSummary"
  input: "linear_regression/HistogramSummary_1"
  input: "linear_regression/HistogramSummary_2"
  input: "linear_regression/HistogramSummary_3"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
}
node {
  name: "zeros"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/decay"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub"
  op: "Sub"
  input: "avg/AssignMovingAvg/sub/x"
  input: "avg/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/sub_1"
  op: "Sub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg/mul"
  op: "Mul"
  input: "avg/AssignMovingAvg/sub_1"
  input: "avg/AssignMovingAvg/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "avg/AssignMovingAvg"
  op: "AssignSub"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "avg/AssignMovingAvg/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "avg"
  op: "NoOp"
  input: "^avg/AssignMovingAvg"
}
node {
  name: "ScalarSummary/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss/mean"
      }
    }
  }
}
node {
  name: "ScalarSummary"
  op: "ScalarSummary"
  input: "ScalarSummary/tags"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "control_dependency"
  op: "Identity"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  input: "^avg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "Variable"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "learning_rate/Assign"
  op: "Assign"
  input: "learning_rate"
  input: "learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "learning_rate/read"
  op: "Identity"
  input: "learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Shape"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  op: "Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Rank_2"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  op: "Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Shape_3"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/range_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Prod_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  op: "Cast"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  op: "Rank"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  op: "Range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/start"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Rank"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range/delta"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  op: "Fill"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/range"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/range"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  op: "Neg"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  op: "Square"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  op: "Div"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/reduce_batch/Sum_grad/Tile"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Sum_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  op: "Const"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul/x"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss_grad/tuple/control_dependency"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  op: "Shape"
  input: "output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  op: "Shape"
  input: "linear_regression/mean_squared_error_regressor/xw_plus_b"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  op: "Sum"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/Square_grad/mul_1"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  op: "Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Neg"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/tuple/control_dependency_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/squared_loss/squared_loss/sub_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected_1/BiasAdd"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected_1/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "fully_connected/Relu"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected_1/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency"
  input: "fully_connected/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/Relu_grad/ReluGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/Relu_grad/ReluGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^gradients/fully_connected/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/fully_connected/MatMul_grad/MatMul_1"
  input: "^gradients/fully_connected/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss"
  op: "L2Loss"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_1"
  op: "L2Loss"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_2"
  op: "L2Loss"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_3"
  op: "L2Loss"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_4"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm/L2Loss_5"
  op: "L2Loss"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm/pack"
  op: "Pack"
  input: "global_norm/L2Loss"
  input: "global_norm/L2Loss_1"
  input: "global_norm/L2Loss_2"
  input: "global_norm/L2Loss_3"
  input: "global_norm/L2Loss_4"
  input: "global_norm/L2Loss_5"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/Rank"
  op: "Rank"
  input: "global_norm/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm/range"
  op: "Range"
  input: "global_norm/range/start"
  input: "global_norm/Rank"
  input: "global_norm/range/delta"
}
node {
  name: "global_norm/Sum"
  op: "Sum"
  input: "global_norm/pack"
  input: "global_norm/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm/mul"
  op: "Mul"
  input: "global_norm/Sum"
  input: "global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm/global_norm"
  op: "Sqrt"
  input: "global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/truediv"
  op: "Div"
  input: "clip_by_global_norm/truediv/x"
  input: "global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.20000000298
      }
    }
  }
}
node {
  name: "clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "clip_by_global_norm/truediv"
  input: "clip_by_global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul"
  op: "Mul"
  input: "clip_by_global_norm/mul/x"
  input: "clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "clip_by_global_norm/mul_1"
  op: "Mul"
  input: "gradients/fully_connected/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_0"
  op: "Identity"
  input: "clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_2"
  op: "Mul"
  input: "gradients/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_1"
  op: "Identity"
  input: "clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_3"
  op: "Mul"
  input: "gradients/fully_connected_1/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_2"
  op: "Identity"
  input: "clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_4"
  op: "Mul"
  input: "gradients/fully_connected_1/BiasAdd_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_3"
  op: "Identity"
  input: "clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_5"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_4"
  op: "Identity"
  input: "clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/mul_6"
  op: "Mul"
  input: "gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/tuple/control_dependency_1"
  input: "clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "clip_by_global_norm/clip_by_global_norm/_5"
  op: "Identity"
  input: "clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "ScalarSummary_1/tags"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "ScalarSummary_1"
  op: "ScalarSummary"
  input: "ScalarSummary_1/tags"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_2/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_2"
  op: "HistogramSummary"
  input: "HistogramSummary_2/tag"
  input: "fully_connected/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_3/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_3"
  op: "HistogramSummary"
  input: "HistogramSummary_3/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_1/pack"
  op: "Pack"
  input: "global_norm_1/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/Rank"
  op: "Rank"
  input: "global_norm_1/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_1/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_1/range"
  op: "Range"
  input: "global_norm_1/range/start"
  input: "global_norm_1/Rank"
  input: "global_norm_1/range/delta"
}
node {
  name: "global_norm_1/Sum"
  op: "Sum"
  input: "global_norm_1/pack"
  input: "global_norm_1/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_1/mul"
  op: "Mul"
  input: "global_norm_1/Sum"
  input: "global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_1/global_norm"
  op: "Sqrt"
  input: "global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_4/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_4"
  op: "HistogramSummary"
  input: "HistogramSummary_4/tag"
  input: "global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_5/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_5"
  op: "HistogramSummary"
  input: "HistogramSummary_5/tag"
  input: "fully_connected/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_6/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_6"
  op: "HistogramSummary"
  input: "HistogramSummary_6/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_2/pack"
  op: "Pack"
  input: "global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/Rank"
  op: "Rank"
  input: "global_norm_2/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_2/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_2/range"
  op: "Range"
  input: "global_norm_2/range/start"
  input: "global_norm_2/Rank"
  input: "global_norm_2/range/delta"
}
node {
  name: "global_norm_2/Sum"
  op: "Sum"
  input: "global_norm_2/pack"
  input: "global_norm_2/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_2/mul"
  op: "Mul"
  input: "global_norm_2/Sum"
  input: "global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_2/global_norm"
  op: "Sqrt"
  input: "global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_7/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_7"
  op: "HistogramSummary"
  input: "HistogramSummary_7/tag"
  input: "global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_8/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_8"
  op: "HistogramSummary"
  input: "HistogramSummary_8/tag"
  input: "fully_connected_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_9/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_9"
  op: "HistogramSummary"
  input: "HistogramSummary_9/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_3/pack"
  op: "Pack"
  input: "global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/Rank"
  op: "Rank"
  input: "global_norm_3/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_3/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_3/range"
  op: "Range"
  input: "global_norm_3/range/start"
  input: "global_norm_3/Rank"
  input: "global_norm_3/range/delta"
}
node {
  name: "global_norm_3/Sum"
  op: "Sum"
  input: "global_norm_3/pack"
  input: "global_norm_3/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_3/mul"
  op: "Mul"
  input: "global_norm_3/Sum"
  input: "global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_3/global_norm"
  op: "Sqrt"
  input: "global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_10/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_10"
  op: "HistogramSummary"
  input: "HistogramSummary_10/tag"
  input: "global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_11/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_11"
  op: "HistogramSummary"
  input: "HistogramSummary_11/tag"
  input: "fully_connected_1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_12/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_12"
  op: "HistogramSummary"
  input: "HistogramSummary_12/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/fully_connected_1/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_4/pack"
  op: "Pack"
  input: "global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/Rank"
  op: "Rank"
  input: "global_norm_4/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_4/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_4/range"
  op: "Range"
  input: "global_norm_4/range/start"
  input: "global_norm_4/Rank"
  input: "global_norm_4/range/delta"
}
node {
  name: "global_norm_4/Sum"
  op: "Sum"
  input: "global_norm_4/pack"
  input: "global_norm_4/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_4/mul"
  op: "Mul"
  input: "global_norm_4/Sum"
  input: "global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_4/global_norm"
  op: "Sqrt"
  input: "global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_13/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_13"
  op: "HistogramSummary"
  input: "HistogramSummary_13/tag"
  input: "global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_14/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_14"
  op: "HistogramSummary"
  input: "HistogramSummary_14/tag"
  input: "linear_regression/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_15/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_15"
  op: "HistogramSummary"
  input: "HistogramSummary_15/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "global_norm_5/pack"
  op: "Pack"
  input: "global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/Rank"
  op: "Rank"
  input: "global_norm_5/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_5/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_5/range"
  op: "Range"
  input: "global_norm_5/range/start"
  input: "global_norm_5/Rank"
  input: "global_norm_5/range/delta"
}
node {
  name: "global_norm_5/Sum"
  op: "Sum"
  input: "global_norm_5/pack"
  input: "global_norm_5/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_5/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_5/mul"
  op: "Mul"
  input: "global_norm_5/Sum"
  input: "global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_5/global_norm"
  op: "Sqrt"
  input: "global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_16/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_16"
  op: "HistogramSummary"
  input: "HistogramSummary_16/tag"
  input: "global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_17/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0"
      }
    }
  }
}
node {
  name: "HistogramSummary_17"
  op: "HistogramSummary"
  input: "HistogramSummary_17/tag"
  input: "linear_regression/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_18/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradients"
      }
    }
  }
}
node {
  name: "HistogramSummary_18"
  op: "HistogramSummary"
  input: "HistogramSummary_18/tag"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/L2Loss"
  op: "L2Loss"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/linear_regression/mean_squared_error_regressor/xw_plus_b_grad/BiasAddGrad"
      }
    }
  }
}
node {
  name: "global_norm_6/pack"
  op: "Pack"
  input: "global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/Rank"
  op: "Rank"
  input: "global_norm_6/pack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/range/start"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_norm_6/range/delta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "global_norm_6/range"
  op: "Range"
  input: "global_norm_6/range/start"
  input: "global_norm_6/Rank"
  input: "global_norm_6/range/delta"
}
node {
  name: "global_norm_6/Sum"
  op: "Sum"
  input: "global_norm_6/pack"
  input: "global_norm_6/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "global_norm_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "global_norm_6/mul"
  op: "Mul"
  input: "global_norm_6/Sum"
  input: "global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_norm_6/global_norm"
  op: "Sqrt"
  input: "global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "HistogramSummary_19/tag"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias:0/gradient_norm"
      }
    }
  }
}
node {
  name: "HistogramSummary_19"
  op: "HistogramSummary"
  input: "HistogramSummary_19/tag"
  input: "global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 450
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 450
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam/read"
  op: "Identity"
  input: "fully_connected/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 450
          }
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 450
        }
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam/read"
  op: "Identity"
  input: "fully_connected/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
}
node {
  name: "zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 55
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 55
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/weights/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/Assign"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "fully_connected_1/bias/Adam_1/read"
  op: "Identity"
  input: "fully_connected_1/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam/read"
  op: "Identity"
  input: "linear_regression/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/weights/Adam_1/read"
  op: "Identity"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
}
node {
  name: "zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam/read"
  op: "Identity"
  input: "linear_regression/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "zeros_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 75
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1"
  op: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 75
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/Assign"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "linear_regression/bias/Adam_1/read"
  op: "Identity"
  input: "linear_regression/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
}
node {
  name: "train/beta1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "train/beta2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "train/epsilon"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "train/update_fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_fully_connected_1/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/update_linear_regression/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "learning_rate/read"
  input: "train/beta1"
  input: "train/beta2"
  input: "train/epsilon"
  input: "clip_by_global_norm/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "train/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "train/beta1"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "train/beta2"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
}
node {
  name: "train/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train/update"
  op: "NoOp"
  input: "^train/update_fully_connected/weights/ApplyAdam"
  input: "^train/update_fully_connected/bias/ApplyAdam"
  input: "^train/update_fully_connected_1/weights/ApplyAdam"
  input: "^train/update_fully_connected_1/bias/ApplyAdam"
  input: "^train/update_linear_regression/weights/ApplyAdam"
  input: "^train/update_linear_regression/bias/ApplyAdam"
  input: "^train/Assign"
  input: "^train/Assign_1"
}
node {
  name: "train/value"
  op: "Const"
  input: "^train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train"
  op: "AssignAdd"
  input: "global_step"
  input: "train/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "CheckNumerics"
  op: "CheckNumerics"
  input: "control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "message"
    value {
      s: "Loss is inf or nan"
    }
  }
}
node {
  name: "control_dependency_1"
  op: "Identity"
  input: "CheckNumerics"
  input: "^train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@CheckNumerics"
      }
    }
  }
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^control_dependency_1"
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^fully_connected/weights/Assign"
  input: "^fully_connected/bias/Assign"
  input: "^fully_connected_1/weights/Assign"
  input: "^fully_connected_1/bias/Assign"
  input: "^linear_regression/weights/Assign"
  input: "^linear_regression/bias/Assign"
  input: "^linear_regression/mean_squared_error_regressor/squared_loss/avg/Assign"
  input: "^learning_rate/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^fully_connected/weights/Adam/Assign"
  input: "^fully_connected/weights/Adam_1/Assign"
  input: "^fully_connected/bias/Adam/Assign"
  input: "^fully_connected/bias/Adam_1/Assign"
  input: "^fully_connected_1/weights/Adam/Assign"
  input: "^fully_connected_1/weights/Adam_1/Assign"
  input: "^fully_connected_1/bias/Adam/Assign"
  input: "^fully_connected_1/bias/Adam_1/Assign"
  input: "^linear_regression/weights/Adam/Assign"
  input: "^linear_regression/weights/Adam_1/Assign"
  input: "^linear_regression/bias/Adam/Assign"
  input: "^linear_regression/bias/Adam_1/Assign"
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/save/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "fully_connected/bias"
        string_val: "fully_connected/bias/Adam"
        string_val: "fully_connected/bias/Adam_1"
        string_val: "fully_connected/weights"
        string_val: "fully_connected/weights/Adam"
        string_val: "fully_connected/weights/Adam_1"
        string_val: "fully_connected_1/bias"
        string_val: "fully_connected_1/bias/Adam"
        string_val: "fully_connected_1/bias/Adam_1"
        string_val: "fully_connected_1/weights"
        string_val: "fully_connected_1/weights/Adam"
        string_val: "fully_connected_1/weights/Adam_1"
        string_val: "global_step"
        string_val: "learning_rate"
        string_val: "linear_regression/bias"
        string_val: "linear_regression/bias/Adam"
        string_val: "linear_regression/bias/Adam_1"
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
        string_val: "linear_regression/weights"
        string_val: "linear_regression/weights/Adam"
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/save/shapes_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 23
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/save"
  op: "SaveSlices"
  input: "save/Const"
  input: "save/save/tensor_names"
  input: "save/save/shapes_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "fully_connected/bias"
  input: "fully_connected/bias/Adam"
  input: "fully_connected/bias/Adam_1"
  input: "fully_connected/weights"
  input: "fully_connected/weights/Adam"
  input: "fully_connected/weights/Adam_1"
  input: "fully_connected_1/bias"
  input: "fully_connected_1/bias/Adam"
  input: "fully_connected_1/bias/Adam_1"
  input: "fully_connected_1/weights"
  input: "fully_connected_1/weights/Adam"
  input: "fully_connected_1/weights/Adam_1"
  input: "global_step"
  input: "learning_rate"
  input: "linear_regression/bias"
  input: "linear_regression/bias/Adam"
  input: "linear_regression/bias/Adam_1"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "linear_regression/weights"
  input: "linear_regression/weights/Adam"
  input: "linear_regression/weights/Adam_1"
  attr {
    key: "T"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/save"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/restore_slice/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta1_power"
      }
    }
  }
}
node {
  name: "save/restore_slice/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice/tensor_name"
  input: "save/restore_slice/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/restore_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_1/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "beta2_power"
      }
    }
  }
}
node {
  name: "save/restore_slice_1/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_1"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_1/tensor_name"
  input: "save/restore_slice_1/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/restore_slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_2/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_2/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_2"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_2/tensor_name"
  input: "save/restore_slice_2/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "fully_connected/bias"
  input: "save/restore_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_3/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_3/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_3"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_3/tensor_name"
  input: "save/restore_slice_3/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "fully_connected/bias/Adam"
  input: "save/restore_slice_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_4/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_4/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_4"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_4/tensor_name"
  input: "save/restore_slice_4/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "fully_connected/bias/Adam_1"
  input: "save/restore_slice_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_5/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_5/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_5"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_5/tensor_name"
  input: "save/restore_slice_5/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "fully_connected/weights"
  input: "save/restore_slice_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_6/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_6/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_6"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_6/tensor_name"
  input: "save/restore_slice_6/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "fully_connected/weights/Adam"
  input: "save/restore_slice_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_7/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_7/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_7"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_7/tensor_name"
  input: "save/restore_slice_7/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "fully_connected/weights/Adam_1"
  input: "save/restore_slice_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_8/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_8/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_8"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_8/tensor_name"
  input: "save/restore_slice_8/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "fully_connected_1/bias"
  input: "save/restore_slice_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_9/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_9/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_9"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_9/tensor_name"
  input: "save/restore_slice_9/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "fully_connected_1/bias/Adam"
  input: "save/restore_slice_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_10/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_10/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_10"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_10/tensor_name"
  input: "save/restore_slice_10/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "fully_connected_1/bias/Adam_1"
  input: "save/restore_slice_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_11/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_11/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_11"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_11/tensor_name"
  input: "save/restore_slice_11/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "fully_connected_1/weights"
  input: "save/restore_slice_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_12/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_12/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_12"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_12/tensor_name"
  input: "save/restore_slice_12/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "fully_connected_1/weights/Adam"
  input: "save/restore_slice_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_13/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "fully_connected_1/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_13/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_13"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_13/tensor_name"
  input: "save/restore_slice_13/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "fully_connected_1/weights/Adam_1"
  input: "save/restore_slice_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@fully_connected_1/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_14/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/restore_slice_14/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_14"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_14/tensor_name"
  input: "save/restore_slice_14/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "global_step"
  input: "save/restore_slice_14"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_15/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "save/restore_slice_15/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_15"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_15/tensor_name"
  input: "save/restore_slice_15/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "learning_rate"
  input: "save/restore_slice_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@learning_rate"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_16/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias"
      }
    }
  }
}
node {
  name: "save/restore_slice_16/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_16"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_16/tensor_name"
  input: "save/restore_slice_16/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "linear_regression/bias"
  input: "save/restore_slice_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_17/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_17/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_17"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_17/tensor_name"
  input: "save/restore_slice_17/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "linear_regression/bias/Adam"
  input: "save/restore_slice_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_18/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_18/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_18"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_18/tensor_name"
  input: "save/restore_slice_18/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "linear_regression/bias/Adam_1"
  input: "save/restore_slice_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_19/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
}
node {
  name: "save/restore_slice_19/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_19"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_19/tensor_name"
  input: "save/restore_slice_19/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "linear_regression/mean_squared_error_regressor/squared_loss/avg"
  input: "save/restore_slice_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/mean_squared_error_regressor/squared_loss/avg"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_20/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights"
      }
    }
  }
}
node {
  name: "save/restore_slice_20/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_20"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_20/tensor_name"
  input: "save/restore_slice_20/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "linear_regression/weights"
  input: "save/restore_slice_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_21/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam"
      }
    }
  }
}
node {
  name: "save/restore_slice_21/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_21"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_21/tensor_name"
  input: "save/restore_slice_21/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "linear_regression/weights/Adam"
  input: "save/restore_slice_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_slice_22/tensor_name"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "linear_regression/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/restore_slice_22/shape_and_slice"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/restore_slice_22"
  op: "RestoreSlice"
  input: "save/Const"
  input: "save/restore_slice_22/tensor_name"
  input: "save/restore_slice_22/shape_and_slice"
  attr {
    key: "dt"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "preferred_shard"
    value {
      i: -1
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "linear_regression/weights/Adam_1"
  input: "save/restore_slice_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@linear_regression/weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
}
versions {
  producer: 9
}
